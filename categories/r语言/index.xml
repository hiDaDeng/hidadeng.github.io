<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>R语言 on 大邓和他的PYTHON</title>
    <link>/categories/r%E8%AF%AD%E8%A8%80/</link>
    <description>Recent content in R语言 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 Nov 2021 18:40:10 +0600</lastBuildDate><atom:link href="/categories/r%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在Rmarkdown中调用Python代码</title>
      <link>https://textdata.cn/blog/call_python_code_in_rmarkdown/</link>
      <pubDate>Tue, 23 Nov 2021 18:40:10 +0600</pubDate>
      
      <guid>/blog/call_python_code_in_rmarkdown/</guid>
      <description>左手R，右手Python！</description>
      <content:encoded><![CDATA[<h1 id="rpy2简介">rpy2简介</h1>
<h2 id="代码下载">代码下载</h2>
<p><a href="https://github.com/hidadeng/DaDengAndHisPython/blob/master/%E5%9C%A8Rmarkdown%E4%B8%AD%E8%B0%83%E7%94%A8Python%E4%BB%A3%E7%A0%81.zip">点击下载文本</a></p>
<br>
<p>Python和R是一对数据科学两大语言，在互联互通的路上，我感觉R更加的积极。还记得之前 <strong>Python中调用R的库-rpy2</strong>， 在Python使用R语言语法还是有些不自然。在R中调用Python体验十分棒，一起跟我看看吧。</p>
<p>reticulate包是可以让R语言非常流畅自然联通Python的关键。</p>
<p><strong>Rmarkdown预备知识</strong></p>
<p>Rmarkdown很像jupyter notbeook和markdown的结合。</p>
<ul>
<li>代码块</li>
<li>markdon文本</li>
</ul>
<br>
<h2 id="代码块">代码块</h2>
<p>在Rmarkdown中的代码块的开始都是以三引号、{}和语言名为标志，以三引号结尾。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">library(ggplot2)
ggplot(mpg, aes(x=displ, y=cty))+
  geom_point()
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">ggplot</span><span class="p">(</span><span class="n">mpg</span><span class="p">,</span> <span class="nf">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">displ</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="n">cty</span><span class="p">))</span><span class="o">+</span>
  <span class="nf">geom_point</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="img/unnamed-chunk-1-1.png" width="100%" />
    
    
</figure>

<p>后面设置好reticulate包后，就可以在Rmarkdown中使用python代码块，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">import pandas as pd
df = pd.read_csv(&#39;test.csv&#39;)
df.head()
</code></pre></div><br>
<h2 id="markdown文本">markdown文本</h2>
<p>文本部分全部支持markdown语法，这里不做赘述。</p>
<h2 id="安装rpy">安装rpy</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">install.packages(&#34;reticulate&#34;)
</code></pre></div><h2 id="环境设置">环境设置</h2>
<p>当我们在R代码块中设置好Python环境，就可以在Rmarkdown中跑Python代码。</p>
<br>
<h2 id="查询python">查询Python</h2>
<p>首先我们需要知道Python安装路径，可以在<strong>命令行</strong>中逐行执行下面代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">python3
import sys
sys.executable
</code></pre></div><p>我的mac电脑的Python安装路径为</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">/Library/Frameworks/Python.framework/Versions/3.7/bin/python3
</code></pre></div><br>
<h2 id="指定python">指定Python</h2>
<p>执行下方的代码(路径改为自己的Python安装路径)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">library</span><span class="p">(</span><span class="n">reticulate</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="err">##</span> <span class="nx">Warning</span><span class="p">:</span> <span class="kn">package</span> <span class="err">&#39;</span><span class="nx">reticulate</span><span class="err">&#39;</span> <span class="nx">was</span> <span class="nx">built</span> <span class="nx">under</span> <span class="nx">R</span> <span class="nx">version</span> <span class="mf">3.6.2</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">use_python</span><span class="p">(</span><span class="s">&#39;/Library/Frameworks/Python.framework/Versions/3.7/bin/python3&#39;</span><span class="p">)</span>
</code></pre></div><p>执行代码后，我们就可以愉快的使用Python代码</p>
<br>
<h1 id="运行python代码">运行Python代码</h1>
<p>在Rmarkdown中写Python代码块</p>
<h2 id="作图">作图</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span> 
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span> 
<span class="c1"># 计算正弦曲线上点的 x 和 y 坐标</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span>  <span class="mi">3</span>  <span class="o">*</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span><span class="p">,</span>  <span class="mf">0.1</span><span class="p">)</span> 
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sin</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&#34;sine wave form&#34;</span><span class="p">)</span>  
<span class="c1"># 使用 matplotlib 来绘制点</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> 
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="img/unnamed-chunk-3-1.png" width="100%" />
    
    
</figure>

<br>
<h2 id="读取csv">读取csv</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&#34;test.csv&#34;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;gbk&#34;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">##      birthday   name               text  age  gender  height  weight
## 0  1985/10/08  Alice  我很开心，每天都这么快乐，我很幸福   35  female     175      55
## 1    95.07.07   Mary               我很难过   25  female     165      50
## 2    01-11-10   Mike              唉，真难受   19    male     180      75
## 3      90/2/8  Smith          无所谓开心还是难过   30    male     175      70
## 4      93-1-5  Henry          每天赚一万，真爽！   27    male     185      80
</code></pre></div><p>返回的df是Python对象，我们可以看到表格不好看，这是R中的Python对象。</p>
<br>
<h2 id="在r代码块中调用python变量对象">在R代码块中调用Python变量(对象)</h2>
<p>刚刚讲的都是在Rmakdown中运行Python代码块，并不是在R代码块中运行Python代码或者调用Python变量。</p>
<h3 id="pypython_variable_name">py$python_variable_name</h3>
<p>R代码块中调用Python方法</p>
<p>py$python_variable_name</p>
<ul>
<li>py相当于Python中的对象</li>
<li>$ 相当于Python中的<strong>点</strong></li>
<li>python_variable_name 是Python代码块中的变量名</li>
</ul>
<p>比如在上文中Python的变量df，在R中调用</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="n">py</span><span class="o">$</span><span class="n">df</span>
</code></pre></div>
<figure >
    
        <img src="img/df.png" width="100%" />
    
    
</figure>

<p>现在调用Python对象df时，R会默认将其转为R对象，所以内容一样，样式似乎变好看了。</p>
<h3 id="r代码块中导入python库">R代码块中导入Python库</h3>
<p>使用os库的listdir函数查询当前项目文件夹内的文件列表</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">()</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">## [&#39;reticulate学习.md&#39;, &#39;test.csv&#39;, &#39;test.py&#39;, &#39;reticulate学习.html&#39;, &#39;reticulate学习_files&#39;, &#39;reticulate.pdf&#39;, &#39;reticulate学习.Rmd&#39;, &#39;data.py&#39;]
</code></pre></div><p>在R代码块中实现上方的Python功能，如下，很简单</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">library</span><span class="p">(</span><span class="n">reticulate</span><span class="p">)</span>

<span class="c1">#导入库</span>
<span class="n">os</span> <span class="o">&lt;-</span> <span class="nf">import</span><span class="p">(</span><span class="s">&#34;os&#34;</span><span class="p">)</span>

<span class="c1">#os库的listdir函数</span>
<span class="n">os</span><span class="o">$</span><span class="nf">listdir</span><span class="p">()</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">## [1] &#34;reticulate学习.md&#34;    &#34;test.csv&#34;             &#34;test.py&#34;             
## [4] &#34;reticulate学习.html&#34;  &#34;reticulate学习_files&#34; &#34;reticulate.pdf&#34;      
## [7] &#34;reticulate学习.Rmd&#34;   &#34;data.py&#34;
</code></pre></div><p>可以发现</p>
<ul>
<li><code>import(&quot;os)</code>代替了<code>import os</code></li>
<li><code>$</code>代替了<code>.</code></li>
<li><code>&lt;-</code> 代替了 <code>=</code></li>
</ul>
<p>再熟悉一下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">library</span><span class="p">(</span><span class="n">reticulate</span><span class="p">)</span>
<span class="n">pd</span> <span class="o">&lt;-</span> <span class="nf">import</span><span class="p">(</span><span class="s">&#34;pandas&#34;</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">&lt;-</span> <span class="n">pd</span><span class="o">$</span><span class="nf">read_csv</span><span class="p">(</span><span class="s">&#34;test.csv&#34;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">&#34;gbk&#34;</span><span class="p">)</span>
<span class="n">df2</span>
</code></pre></div>
<figure >
    
        <img src="img/df2.png" width="100%" />
    
    
</figure>

<p>需要注意的是，在R代码块中执行Python代码时，默认会将Python对象转为R对象。</p>
<h3 id="source_python">source_python()</h3>
<p>使用reticulate包中的source_python(&lsquo;py文件路径&rsquo;)可以导入py文件中的变量，这样就可以在R代码块中使用外部变量。例如我在data.py中准备A和B两个字符串</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">A = &#39;我是张三,&#39;
B = &#39;来自河北&#39;
</code></pre></div><p>在R代码块中运行data.py</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">library</span><span class="p">(</span><span class="n">reticulate</span><span class="p">)</span>

<span class="nf">source_python</span><span class="p">(</span><span class="s">&#34;data.py&#34;</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">A</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">## [1] &#34;我是张三,&#34;
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">print</span><span class="p">(</span><span class="n">B</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">## [1] &#34;来自河北&#34;
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">paste0</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">## [1] &#34;我是张三,来自河北&#34;
</code></pre></div><h2 id="py_run_file">py_run_file()</h2>
<p>在R代码块中运行项目文件夹中的test.py文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="nf">library</span><span class="p">(</span><span class="n">reticulate</span><span class="p">)</span>
<span class="nf">py_run_file</span><span class="p">(</span><span class="s">&#34;test.py&#34;</span><span class="p">)</span>
</code></pre></div><h1 id="数据类型对比">数据类型对比</h1>
<table>
<thead>
<tr>
<th>R</th>
<th>Python</th>
<th>Examples</th>
</tr>
</thead>
<tbody>
<tr>
<td>Single-element vector</td>
<td>Scalar</td>
<td><code>1</code>, <code>1L</code>, <code>TRUE</code>, <code>&quot;foo&quot;</code></td>
</tr>
<tr>
<td>Multi-element vector</td>
<td>List</td>
<td><code>c(1.0, 2.0, 3.0)</code>, <code>c(1L, 2L, 3L)</code></td>
</tr>
<tr>
<td>List of multiple types</td>
<td>Tuple</td>
<td><code>list(1L, TRUE, &quot;foo&quot;)</code></td>
</tr>
<tr>
<td>Named list</td>
<td>Dict</td>
<td><code>list(a = 1L, b = 2.0)</code>, <code>dict(x = x_data)</code></td>
</tr>
<tr>
<td>Matrix/Array</td>
<td>NumPy ndarray</td>
<td><code>matrix(c(1,2,3,4), nrow = 2, ncol = 2)</code></td>
</tr>
<tr>
<td>Data Frame</td>
<td>Pandas DataFrame</td>
<td><code>data.frame(x = c(1,2,3), y = c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;))</code></td>
</tr>
<tr>
<td>Function</td>
<td>Python function</td>
<td><code>function(x) x + 1</code></td>
</tr>
<tr>
<td>NULL, TRUE, FALSE</td>
<td>None, True, False</td>
<td><code>NULL</code>, <code>TRUE</code>, <code>FALSE</code></td>
</tr>
</tbody>
</table>
<p><br><br></p>
<div style="text-align: center;">
<figure >
    <a href="https://textdata.cn/blog/management_python_course/">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击了解课程详情</i></small></figcaption>
</figure>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>rpy2包 | 在Jupyter中调用R语言的代码</title>
      <link>https://textdata.cn/blog/call_r_language_code_in_jupyter/</link>
      <pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/call_r_language_code_in_jupyter/</guid>
      <description>文本数据分析利器Python和R语言！</description>
      <content:encoded><![CDATA[<h2 id="代码下载">代码下载</h2>
<p><a href="https://github.com/hidadeng/DaDengAndHisPython/blob/master/%E5%9C%A8jupyter%E4%B8%AD%E8%B0%83%E7%94%A8R%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81.zip">点击下载</a></p>
<br>
<p>在数据分析中，Python和R各有千秋，虽然Python或R都能在数据分析打通关，从采集、清洗(预处理)、分析、可视化，但是在不同的环节，不同的语言易用程度不同。Python胜在干脏活累活，诸如数据采集、数据清洗、机器学习等；而R语言胜在统计分析、可视化等。所以，如果你正好Python和R都入门了，可以考虑两者结合。那么就会遇到今天的问题-<strong>如何在jupyter中使用R语言代码？</strong></p>
<h2 id="rpy2包">rpy2包</h2>
<p>rpy2包首先是Python包，ta衔接了Python和R，通过rpy2可以运行R语言相关代码、函数、包。</p>
<p>在Jupyter notebook中主要有两种情况</p>
<ol>
<li>单元格中以Python为主，可以插入<strong>R的代码字符串</strong></li>
<li>单个的单元格要么只有<strong>R代码</strong>，要么只有<strong>Python代码</strong></li>
</ol>
<p>遇到这类问题，各位的电脑要确保</p>
<ol>
<li>电脑已经安装了Python和R</li>
<li>已安装rpy2包</li>
</ol>
<p>安装rpy2包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">rpy2</span>

</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">rpy2.robjects</span> <span class="k">as</span> <span class="nn">robjects</span>
<span class="kn">from</span> <span class="nn">rpy2.robjects</span> <span class="kn">import</span> <span class="n">pandas2ri</span>

<span class="c1">#R代码运行会尽量以DataFrame显示</span>
<span class="n">pandas2ri</span><span class="o">.</span><span class="n">activate</span><span class="p">()</span>

<span class="c1">#运行R代码</span>
<span class="n">robjects</span><span class="o">.</span><span class="n">r</span><span class="p">(</span><span class="s1">&#39;R代码字符串&#39;</span><span class="p">)</span>
</code></pre></div><h2 id="运行r代码">运行R代码</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">rpy2</span><span class="o">.</span><span class="n">robjects</span><span class="o">.</span><span class="n">r</span><span class="p">(</span><span class="s1">&#39;R代码字符串&#39;</span><span class="p">)</span>

</code></pre></div><p>rpy2.robjects.r()函数会识别 <strong>R代码字符串</strong>, 并将其执行。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">rpy2.robjects</span> <span class="k">as</span> <span class="nn">robjects</span>
<span class="kn">from</span> <span class="nn">rpy2.robjects</span> <span class="kn">import</span> <span class="n">pandas2ri</span>
<span class="kn">import</span> <span class="nn">warnings</span> 
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>

<span class="c1">#直接声明，data frame强制转为DataFrame</span>
<span class="n">pandas2ri</span><span class="o">.</span><span class="n">activate</span><span class="p">()</span>

<span class="c1">#R代码</span>
<span class="n">r_code</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span><span class="s2">library(dplyr)
</span><span class="s2">
</span><span class="s2">text &lt;- c(&#34;Because I could not stop for Death -&#34;,
</span><span class="s2">          &#34;He kindly stopped for me -&#34;,
</span><span class="s2">          &#34;The Carriage held but just Ourselves -&#34;,
</span><span class="s2">          &#34;and Immortality&#34;)
</span><span class="s2">          
</span><span class="s2">text_df &lt;- tibble(docid=1:4, text=text)
</span><span class="s2">text_df
</span><span class="s2">&#34;&#34;&#34;</span>

<span class="c1">#运行R代码</span>
<span class="n">robjects</span><span class="o">.</span><span class="n">r</span><span class="p">(</span><span class="n">r_code</span><span class="p">)</span>
</code></pre></div><table>
<thead>
<tr>
<th style="text-align:right"></th>
<th style="text-align:right">docid</th>
<th style="text-align:left">text</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:right">1</td>
<td style="text-align:left">Because I could not stop for Death -</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:right">2</td>
<td style="text-align:left">He kindly stopped for me -</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:right">3</td>
<td style="text-align:left">The Carriage held but just Ourselves -</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:right">4</td>
<td style="text-align:left">and Immortality</td>
</tr>
</tbody>
</table>
<ol>
<li>准备一个R代码r_code，该代码会生成R语言的tibble数据类型(R语言中的一种data frame)。</li>
<li>robjects.r(r_code) 运行R代码(字符串)</li>
<li>在本例中，使用pandas2ri.activate()强制声明，在Python中将变量text_df以pandas.DataFrame显示</li>
</ol>
<h2 id="调用r数据集">调用R数据集</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">rpy2.robjects.r.data(&#39;R的数据集名&#39;)
</code></pre></div><p>调用R的数据集</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">rpy2.robjects</span> <span class="k">as</span> <span class="nn">robjects</span>
</code></pre></div><ul>
<li>robjects.r.data(&lsquo;R数据集名&rsquo;) 准备R数据集，此时Python并没有显示该数据集，可以理解为准备数据</li>
<li><code>robjects.r['R数据集名']</code> 导入R的数据集</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">rpy2.robjects</span> <span class="k">as</span> <span class="nn">robjects</span>
<span class="kn">from</span> <span class="nn">rpy2.robjects</span> <span class="kn">import</span> <span class="n">pandas2ri</span>

<span class="n">pandas2ri</span><span class="o">.</span><span class="n">activate</span><span class="p">()</span>

<span class="c1">#准备iris</span>
<span class="n">robjects</span><span class="o">.</span><span class="n">r</span><span class="o">.</span><span class="n">data</span><span class="p">(</span><span class="s1">&#39;iris&#39;</span><span class="p">)</span>
<span class="c1">#导入iris</span>
<span class="n">iris</span> <span class="o">=</span> <span class="n">robjects</span><span class="o">.</span><span class="n">r</span><span class="p">[</span><span class="s1">&#39;iris&#39;</span><span class="p">]</span>
<span class="n">iris</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><table>
<thead>
<tr>
<th style="text-align:right"></th>
<th style="text-align:right">Sepal.Length</th>
<th style="text-align:right">Sepal.Width</th>
<th style="text-align:right">Petal.Length</th>
<th style="text-align:right">Petal.Width</th>
<th style="text-align:left">Species</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:right">5.1</td>
<td style="text-align:right">3.5</td>
<td style="text-align:right">1.4</td>
<td style="text-align:right">0.2</td>
<td style="text-align:left">setosa</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:right">4.9</td>
<td style="text-align:right">3</td>
<td style="text-align:right">1.4</td>
<td style="text-align:right">0.2</td>
<td style="text-align:left">setosa</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:right">4.7</td>
<td style="text-align:right">3.2</td>
<td style="text-align:right">1.3</td>
<td style="text-align:right">0.2</td>
<td style="text-align:left">setosa</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:right">4.6</td>
<td style="text-align:right">3.1</td>
<td style="text-align:right">1.5</td>
<td style="text-align:right">0.2</td>
<td style="text-align:left">setosa</td>
</tr>
<tr>
<td style="text-align:right">5</td>
<td style="text-align:right">5</td>
<td style="text-align:right">3.6</td>
<td style="text-align:right">1.4</td>
<td style="text-align:right">0.2</td>
<td style="text-align:left">setosa</td>
</tr>
</tbody>
</table>
<h2 id="调用r语言包">调用R语言包</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">rpy2</span><span class="o">.</span><span class="n">robjects</span><span class="o">.</span><span class="n">packages</span><span class="o">.</span><span class="n">importr</span><span class="p">(</span><span class="s1">&#39;R包名&#39;</span><span class="p">)</span>
</code></pre></div><p>R语言中的readr包有read_csv()函数，可以读取csv文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">rpy2.robjects.packages</span> <span class="kn">import</span> <span class="n">importr</span>
<span class="kn">from</span> <span class="nn">rpy2.robjects</span> <span class="kn">import</span> <span class="n">pandas2ri</span>

<span class="n">pandas2ri</span><span class="o">.</span><span class="n">activate</span><span class="p">()</span>

<span class="c1">#导入R语言中的readr包</span>
<span class="n">readr</span> <span class="o">=</span> <span class="n">importr</span><span class="p">(</span><span class="s2">&#34;readr&#34;</span><span class="p">)</span>
<span class="c1">#使用readr包中的read_csv()函数</span>
<span class="n">mtcars</span> <span class="o">=</span> <span class="n">readr</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&#34;mtcars.csv&#34;</span><span class="p">)</span>
<span class="n">mtcars</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><table>
<thead>
<tr>
<th style="text-align:right"></th>
<th style="text-align:left">car</th>
<th style="text-align:right">mpg</th>
<th style="text-align:right">cyl</th>
<th style="text-align:right">disp</th>
<th style="text-align:right">hp</th>
<th style="text-align:right">drat</th>
<th style="text-align:right">wt</th>
<th style="text-align:right">qsec</th>
<th style="text-align:right">vs</th>
<th style="text-align:right">am</th>
<th style="text-align:right">gear</th>
<th style="text-align:right">carb</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:left">Mazda RX4</td>
<td style="text-align:right">21</td>
<td style="text-align:right">6</td>
<td style="text-align:right">160</td>
<td style="text-align:right">110</td>
<td style="text-align:right">3.9</td>
<td style="text-align:right">2.62</td>
<td style="text-align:right">16.46</td>
<td style="text-align:right">0</td>
<td style="text-align:right">1</td>
<td style="text-align:right">4</td>
<td style="text-align:right">4</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:left">Mazda RX4 Wag</td>
<td style="text-align:right">21</td>
<td style="text-align:right">6</td>
<td style="text-align:right">160</td>
<td style="text-align:right">110</td>
<td style="text-align:right">3.9</td>
<td style="text-align:right">2.875</td>
<td style="text-align:right">17.02</td>
<td style="text-align:right">0</td>
<td style="text-align:right">1</td>
<td style="text-align:right">4</td>
<td style="text-align:right">4</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:left">Datsun 710</td>
<td style="text-align:right">22.8</td>
<td style="text-align:right">4</td>
<td style="text-align:right">108</td>
<td style="text-align:right">93</td>
<td style="text-align:right">3.85</td>
<td style="text-align:right">2.32</td>
<td style="text-align:right">18.61</td>
<td style="text-align:right">1</td>
<td style="text-align:right">1</td>
<td style="text-align:right">4</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:left">Hornet 4 Drive</td>
<td style="text-align:right">21.4</td>
<td style="text-align:right">6</td>
<td style="text-align:right">258</td>
<td style="text-align:right">110</td>
<td style="text-align:right">3.08</td>
<td style="text-align:right">3.215</td>
<td style="text-align:right">19.44</td>
<td style="text-align:right">1</td>
<td style="text-align:right">0</td>
<td style="text-align:right">3</td>
<td style="text-align:right">1</td>
</tr>
<tr>
<td style="text-align:right">5</td>
<td style="text-align:left">Hornet Sportabout</td>
<td style="text-align:right">18.7</td>
<td style="text-align:right">8</td>
<td style="text-align:right">360</td>
<td style="text-align:right">175</td>
<td style="text-align:right">3.15</td>
<td style="text-align:right">3.44</td>
<td style="text-align:right">17.02</td>
<td style="text-align:right">0</td>
<td style="text-align:right">0</td>
<td style="text-align:right">3</td>
<td style="text-align:right">2</td>
</tr>
</tbody>
</table>
<h2 id="cell只运行r代码">Cell只运行R代码</h2>
<p>上面的几个章节中，每个cell中代码均为Python和R的混用，如果在Cell中只运行R代码，</p>
<ol>
<li>可以先单独在一个cell中运行 <code>%load_ext rpy2.ipython</code>,</li>
<li>在另外一个cell中使用<code>%%R</code>声明本cell中使用的是R代码。</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%</span><span class="n">load_ext</span> <span class="n">rpy2</span><span class="o">.</span><span class="n">ipython</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="o">%%</span><span class="n">R</span>

<span class="nf">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span>

<span class="nf">ggplot</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span> <span class="nf">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">Sepal.Length</span><span class="p">,</span> 
                 <span class="n">y</span><span class="o">=</span><span class="n">Sepal.Width</span><span class="p">,</span> 
                 <span class="n">color</span><span class="o">=</span><span class="n">Species</span><span class="p">))</span><span class="o">+</span>
<span class="nf">geom_point</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="output_17_0.png" width="100%" />
    
    
</figure>

<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-r" data-lang="r"><span class="o">%%</span><span class="n">R</span> <span class="o">-</span><span class="n">h</span> <span class="m">550</span> <span class="o">-</span><span class="n">w</span> <span class="m">800</span>  <span class="c1">#设置宽、高</span>

<span class="nf">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span>

<span class="nf">ggplot</span><span class="p">(</span><span class="n">iris</span><span class="p">,</span> <span class="nf">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">Sepal.Length</span><span class="p">,</span> 
                 <span class="n">y</span><span class="o">=</span><span class="n">Sepal.Width</span><span class="p">,</span> 
                 <span class="n">color</span><span class="o">=</span><span class="n">Species</span><span class="p">))</span><span class="o">+</span>
<span class="nf">geom_point</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="output_18_0.png" width="100%" />
    
    
</figure>

<br>
<br>
<br>
<div style="text-align: center;">
<figure >
    <a href="https://textdata.cn/blog/management_python_course/">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击了解课程详情</i></small></figcaption>
</figure>
</div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
