<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>付费内容 on 大邓和他的PYTHON</title>
    <link>/tags/%E4%BB%98%E8%B4%B9%E5%86%85%E5%AE%B9/</link>
    <description>Recent content in 付费内容 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 22 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E4%BB%98%E8%B4%B9%E5%86%85%E5%AE%B9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据集 | 2010-2023年国家社会科学基金立项名单.xlsx</title>
      <link>https://textdata.cn/blog/2024-01-23-china-national-social-science-fund-projects-from-2010-to-2023/</link>
      <pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-23-china-national-social-science-fund-projects-from-2010-to-2023/</guid>
      <description>&lt;h2 id=&#34;一数据概况&#34;&gt;一、数据概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集名称: 国家社会科学基金立项名单
格式: xlsx
年份:2010~2023
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;点击下载 &lt;a href=&#34;2010-2023%E5%B9%B4%E5%9B%BD%E5%AE%B6%E7%A4%BE%E4%BC%9A%E7%A7%91%E5%AD%A6%E5%9F%BA%E9%87%91%E7%AB%8B%E9%A1%B9%E5%90%8D%E5%8D%95.xlsx&#34;&gt;2010-2023年国家社会科学基金立项名单.xlsx&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二读取数据&#34;&gt;二、读取数据&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2010-2023年国家社会科学基金立项名单.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所在学科&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所在学科&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所在学科&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;array([&amp;#39;马列·科社&amp;#39;, &amp;#39;管理学&amp;#39;, &amp;#39;政治学&amp;#39;, &amp;#39;外国文学&amp;#39;, &amp;#39;人口学&amp;#39;, &amp;#39;图书馆、情报与文献学&amp;#39;, &amp;#39;新闻学与传播学&amp;#39;,
       &amp;#39;中国文学&amp;#39;, &amp;#39;世界历史&amp;#39;, &amp;#39;语言学&amp;#39;, &amp;#39;民族问题研究&amp;#39;, &amp;#39;哲学&amp;#39;, &amp;#39;理论经济&amp;#39;, &amp;#39;体育学&amp;#39;, &amp;#39;国际问题研究&amp;#39;,
       &amp;#39;中国历史&amp;#39;, &amp;#39;党史·党建&amp;#39;, &amp;#39;法学&amp;#39;, &amp;#39;应用经济&amp;#39;, &amp;#39;社会学&amp;#39;, &amp;#39;统计学&amp;#39;, &amp;#39;宗教学&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;教育学&amp;#39;,
       &amp;#39;考古学&amp;#39;, &amp;#39;图书馆、情报与档案学&amp;#39;, &amp;#39;其他&amp;#39;, &amp;#39;图书情报&amp;#39;, &amp;#39;军事学&amp;#39;, &amp;#39;艺术学&amp;#39;, &amp;#39;党史•党建&amp;#39;, &amp;#39;马列•科社&amp;#39;,
       &amp;#39;新闻传播学&amp;#39;, &amp;#39;中国历史、&amp;#39;, &amp;#39;民族学&amp;#39;, &amp;#39;国际问题&amp;#39;, &amp;#39;法学、医学、公共卫生学&amp;#39;, &amp;#39;灾害学、社会学、管理学、系统科学&amp;#39;,
       &amp;#39;法学、医学、社会学&amp;#39;, &amp;#39;应用经济学 法学&amp;#39;, &amp;#39;宏观经济、计量经济、管理学等&amp;#39;, &amp;#39;智能技术、电子商务、人工智能、信&amp;#39;,
       &amp;#39;管理学、经济学、地理学&amp;#39;, &amp;#39;艺术学、人类学、计算机科学&amp;#39;, &amp;#39;文化人类学、非遗保护、考古学、影&amp;#39;,
       &amp;#39;文学艺术、文化人类学、计算机科学&amp;#39;, &amp;#39;计算机科学与技术、社会学、公共管&amp;#39;, &amp;#39;电气工程；产业经济学；管理学；热&amp;#39;,
       &amp;#39;城市规划学、计算机学、信息网络学&amp;#39;, &amp;#39;心理学、认知和行为科学、脑科学、&amp;#39;, &amp;#39;产业经济学、管理学、信息技术及应&amp;#39;,
       &amp;#39;法学、社会学、信息科学、计算机科&amp;#39;, &amp;#39;管理科学与工程、控制科学与工程、&amp;#39;, &amp;#39;智能技术、产业经济、经济学、管理&amp;#39;,
       &amp;#39;语言学、计算机科学、生态学、社会&amp;#39;, &amp;#39;理论经济学、应用经济学、法学、公&amp;#39;, &amp;#39;语言学、人类学、信息科学&amp;#39;,
       &amp;#39;宏观经济、计量经济、管理学、统计&amp;#39;, &amp;#39;管理学、 经济学 、环境科学、&amp;#39;, &amp;#39;语言学、计算机科学、统计学等&amp;#39;,
       &amp;#39;城乡规划学、管理学、地理学、经济&amp;#39;, &amp;#39;语言文学、心理学、教育学&amp;#39;, &amp;#39;人类学、社会心理学、认知神经科学&amp;#39;,
       &amp;#39;应用经济、管理学、资源环境科学、&amp;#39;, &amp;#39;电气工程、管理学、产业经济、能源&amp;#39;, &amp;#39;产业经济、生态学、系统科学、管理&amp;#39;, &amp;#39;马列科社&amp;#39;,
       &amp;#39;党史党建&amp;#39;, &amp;#39;综合研究&amp;#39;, &amp;#39;民族问题&amp;#39;, &amp;#39;图书·情报与文献&amp;#39;, &amp;#39;新闻学&amp;#39;, &amp;#39;跨学科&amp;#39;, &amp;#39;民族问题 研究&amp;#39;,
       &amp;#39;新闻与传播学&amp;#39;, &amp;#39;新闻学与 传播学&amp;#39;, &amp;#39;马列.科社&amp;#39;, &amp;#39;系列丛书&amp;#39;, &amp;#39;图书馆·情报与文献学&amp;#39;, &amp;#39;重点项目&amp;#39;,
       &amp;#39;一般项目&amp;#39;, &amp;#39;学术期刊&amp;#39;, &amp;#39;理论经济学&amp;#39;, &amp;#39;应用经济学&amp;#39;, &amp;#39;国际问题研\n究&amp;#39;, &amp;#39;新闻学与传\n播学&amp;#39;,
       &amp;#39;图书馆、情\n报与文献学&amp;#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;三简单分析&#34;&gt;三、简单分析&lt;/h2&gt;
&lt;h3 id=&#34;31-可视化准备&#34;&gt;3.1 可视化准备&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;32-立项数量&#34;&gt;3.2 立项数量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;df[&amp;#39;批准年份&amp;#39;].value_counts(ascending=True).plot(kind=&amp;#39;bar&amp;#39;, figsize=(8, 4))
plt.xticks(rotation=0)
plt.ylabel(&amp;#39;立项数量&amp;#39;, rotation=0)
plt.title(&amp;#39;国社科立项数量(2010-2023)&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;33-经管学科&#34;&gt;3.3 经管学科&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;management_economic_displines&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所在学科&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;经济&amp;#39;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;管理&amp;#39;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;management_economic_displines&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;管理学&amp;#39;,
 &amp;#39;理论经济&amp;#39;,
 &amp;#39;应用经济&amp;#39;,
 &amp;#39;灾害学、社会学、管理学、系统科学&amp;#39;,
 &amp;#39;应用经济学 法学&amp;#39;,
 &amp;#39;宏观经济、计量经济、管理学等&amp;#39;,
 &amp;#39;管理学、经济学、地理学&amp;#39;,
 &amp;#39;电气工程；产业经济学；管理学；热&amp;#39;,
 &amp;#39;产业经济学、管理学、信息技术及应&amp;#39;,
 &amp;#39;管理科学与工程、控制科学与工程、&amp;#39;,
 &amp;#39;智能技术、产业经济、经济学、管理&amp;#39;,
 &amp;#39;理论经济学、应用经济学、法学、公&amp;#39;,
 &amp;#39;宏观经济、计量经济、管理学、统计&amp;#39;,
 &amp;#39;管理学、 经济学 、环境科学、&amp;#39;,
 &amp;#39;城乡规划学、管理学、地理学、经济&amp;#39;,
 &amp;#39;应用经济、管理学、资源环境科学、&amp;#39;,
 &amp;#39;电气工程、管理学、产业经济、能源&amp;#39;,
 &amp;#39;产业经济、生态学、系统科学、管理&amp;#39;,
 &amp;#39;理论经济学&amp;#39;,
 &amp;#39;应用经济学&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;34-经管立项&#34;&gt;3.4 经管立项&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;eco_man_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所在学科&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;management_economic_displines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;eco_man_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;经管类国社科立项数量占比&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所在学科&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;management_economic_displines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0.18713464870187335
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;35-经管立项数量&#34;&gt;3.5 经管立项数量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;eco_man_with_ds_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eco_man_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eco_man_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;课题名称&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;大数据|数据挖掘|机器学习|人工智能|AIGC&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;eco_man_with_ds_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;批准年份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value_counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ascending&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xticks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;立项数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;国社科基金中结合数据科学的经济、管理类立项数量(2010-2023)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;36-经管立项占比&#34;&gt;3.6 经管立项占比&lt;/h3&gt;
&lt;p&gt;按年度查看， 国社科中经管类立项占比&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;year_ratios&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;批准年份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;所在学科&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;management_economic_displines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;year_ratios&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    
&lt;span class=&#34;n&#34;&gt;year_ratio_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_ratios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;year_ratio_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;year_ratio_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;year_ratio_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;立项占比&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;国社科基金中经济、管理类立项占比(2010-2023)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据概况">一、数据概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名称: 国家社会科学基金立项名单
格式: xlsx
年份:2010~2023
</code></pre></div><p>点击下载 <a href="2010-2023%E5%B9%B4%E5%9B%BD%E5%AE%B6%E7%A4%BE%E4%BC%9A%E7%A7%91%E5%AD%A6%E5%9F%BA%E9%87%91%E7%AB%8B%E9%A1%B9%E5%90%8D%E5%8D%95.xlsx">2010-2023年国家社会科学基金立项名单.xlsx</a></p>
<br>
<br>
<h2 id="二读取数据">二、读取数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;2010-2023年国家社会科学基金立项名单.xlsx&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;所在学科&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;所在学科&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;所在学科&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([&#39;马列·科社&#39;, &#39;管理学&#39;, &#39;政治学&#39;, &#39;外国文学&#39;, &#39;人口学&#39;, &#39;图书馆、情报与文献学&#39;, &#39;新闻学与传播学&#39;,
       &#39;中国文学&#39;, &#39;世界历史&#39;, &#39;语言学&#39;, &#39;民族问题研究&#39;, &#39;哲学&#39;, &#39;理论经济&#39;, &#39;体育学&#39;, &#39;国际问题研究&#39;,
       &#39;中国历史&#39;, &#39;党史·党建&#39;, &#39;法学&#39;, &#39;应用经济&#39;, &#39;社会学&#39;, &#39;统计学&#39;, &#39;宗教学&#39;, &#39;&#39;, &#39;教育学&#39;,
       &#39;考古学&#39;, &#39;图书馆、情报与档案学&#39;, &#39;其他&#39;, &#39;图书情报&#39;, &#39;军事学&#39;, &#39;艺术学&#39;, &#39;党史•党建&#39;, &#39;马列•科社&#39;,
       &#39;新闻传播学&#39;, &#39;中国历史、&#39;, &#39;民族学&#39;, &#39;国际问题&#39;, &#39;法学、医学、公共卫生学&#39;, &#39;灾害学、社会学、管理学、系统科学&#39;,
       &#39;法学、医学、社会学&#39;, &#39;应用经济学 法学&#39;, &#39;宏观经济、计量经济、管理学等&#39;, &#39;智能技术、电子商务、人工智能、信&#39;,
       &#39;管理学、经济学、地理学&#39;, &#39;艺术学、人类学、计算机科学&#39;, &#39;文化人类学、非遗保护、考古学、影&#39;,
       &#39;文学艺术、文化人类学、计算机科学&#39;, &#39;计算机科学与技术、社会学、公共管&#39;, &#39;电气工程；产业经济学；管理学；热&#39;,
       &#39;城市规划学、计算机学、信息网络学&#39;, &#39;心理学、认知和行为科学、脑科学、&#39;, &#39;产业经济学、管理学、信息技术及应&#39;,
       &#39;法学、社会学、信息科学、计算机科&#39;, &#39;管理科学与工程、控制科学与工程、&#39;, &#39;智能技术、产业经济、经济学、管理&#39;,
       &#39;语言学、计算机科学、生态学、社会&#39;, &#39;理论经济学、应用经济学、法学、公&#39;, &#39;语言学、人类学、信息科学&#39;,
       &#39;宏观经济、计量经济、管理学、统计&#39;, &#39;管理学、 经济学 、环境科学、&#39;, &#39;语言学、计算机科学、统计学等&#39;,
       &#39;城乡规划学、管理学、地理学、经济&#39;, &#39;语言文学、心理学、教育学&#39;, &#39;人类学、社会心理学、认知神经科学&#39;,
       &#39;应用经济、管理学、资源环境科学、&#39;, &#39;电气工程、管理学、产业经济、能源&#39;, &#39;产业经济、生态学、系统科学、管理&#39;, &#39;马列科社&#39;,
       &#39;党史党建&#39;, &#39;综合研究&#39;, &#39;民族问题&#39;, &#39;图书·情报与文献&#39;, &#39;新闻学&#39;, &#39;跨学科&#39;, &#39;民族问题 研究&#39;,
       &#39;新闻与传播学&#39;, &#39;新闻学与 传播学&#39;, &#39;马列.科社&#39;, &#39;系列丛书&#39;, &#39;图书馆·情报与文献学&#39;, &#39;重点项目&#39;,
       &#39;一般项目&#39;, &#39;学术期刊&#39;, &#39;理论经济学&#39;, &#39;应用经济学&#39;, &#39;国际问题研\n究&#39;, &#39;新闻学与传\n播学&#39;,
       &#39;图书馆、情\n报与文献学&#39;], dtype=object)
</code></pre></div><br>
<h2 id="三简单分析">三、简单分析</h2>
<h3 id="31-可视化准备">3.1 可视化准备</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
</code></pre></div><br>
<h3 id="32-立项数量">3.2 立项数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;批准年份&#39;].value_counts(ascending=True).plot(kind=&#39;bar&#39;, figsize=(8, 4))
plt.xticks(rotation=0)
plt.ylabel(&#39;立项数量&#39;, rotation=0)
plt.title(&#39;国社科立项数量(2010-2023)&#39;)
</code></pre></div><p><img loading="lazy" src="img/02-plot.png" alt=""  />
</p>
<br>
<h3 id="33-经管学科">3.3 经管学科</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">management_economic_displines</span> <span class="o">=</span> <span class="p">[</span><span class="n">d</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;所在学科&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">()</span> <span class="k">if</span> <span class="p">(</span><span class="s1">&#39;经济&#39;</span> <span class="ow">in</span> <span class="n">d</span><span class="p">)</span> <span class="ow">or</span>  <span class="p">(</span><span class="s1">&#39;管理&#39;</span> <span class="ow">in</span> <span class="n">d</span><span class="p">)]</span>
<span class="n">management_economic_displines</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;管理学&#39;,
 &#39;理论经济&#39;,
 &#39;应用经济&#39;,
 &#39;灾害学、社会学、管理学、系统科学&#39;,
 &#39;应用经济学 法学&#39;,
 &#39;宏观经济、计量经济、管理学等&#39;,
 &#39;管理学、经济学、地理学&#39;,
 &#39;电气工程；产业经济学；管理学；热&#39;,
 &#39;产业经济学、管理学、信息技术及应&#39;,
 &#39;管理科学与工程、控制科学与工程、&#39;,
 &#39;智能技术、产业经济、经济学、管理&#39;,
 &#39;理论经济学、应用经济学、法学、公&#39;,
 &#39;宏观经济、计量经济、管理学、统计&#39;,
 &#39;管理学、 经济学 、环境科学、&#39;,
 &#39;城乡规划学、管理学、地理学、经济&#39;,
 &#39;应用经济、管理学、资源环境科学、&#39;,
 &#39;电气工程、管理学、产业经济、能源&#39;,
 &#39;产业经济、生态学、系统科学、管理&#39;,
 &#39;理论经济学&#39;,
 &#39;应用经济学&#39;]
</code></pre></div><br>
<h3 id="34-经管立项">3.4 经管立项</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">eco_man_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;所在学科&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">(</span><span class="n">management_economic_displines</span><span class="p">)]</span>
<span class="n">eco_man_df</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<p>经管类国社科立项数量占比</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;所在学科&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">(</span><span class="n">management_economic_displines</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span> <span class="o">/</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.18713464870187335
</code></pre></div><br>
<h3 id="35-经管立项数量">3.5 经管立项数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">eco_man_with_ds_df</span> <span class="o">=</span> <span class="n">eco_man_df</span><span class="p">[</span><span class="n">eco_man_df</span><span class="p">[</span><span class="s1">&#39;课题名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;大数据|数据挖掘|机器学习|人工智能|AIGC&#39;</span><span class="p">)]</span>
<span class="n">eco_man_with_ds_df</span><span class="p">[</span><span class="s1">&#39;批准年份&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;立项数量&#39;</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;国社科基金中结合数据科学的经济、管理类立项数量(2010-2023)&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-plot.png" alt=""  />
</p>
<br>
<h3 id="36-经管立项占比">3.6 经管立项占比</h3>
<p>按年度查看， 国社科中经管类立项占比</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">year_ratios</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;批准年份&#39;</span><span class="p">):</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">year_df</span><span class="p">[</span><span class="s1">&#39;所在学科&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isin</span><span class="p">(</span><span class="n">management_economic_displines</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span> <span class="o">/</span> <span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">)</span>
    <span class="n">year_ratios</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">year</span><span class="p">,</span> <span class="n">ratio</span><span class="p">))</span>
    
<span class="n">year_ratio_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">year_ratios</span><span class="p">)</span>
<span class="n">year_ratio_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;ratio&#39;</span><span class="p">]</span>
<span class="n">year_ratio_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">year_ratio_df</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;立项占比&#39;</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;国社科基金中经济、管理类立项占比(2010-2023)&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  美股年报10-K、20-F数据(2000-2023.12)</title>
      <link>https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-14-usa-sec-10k-report-dataset/</guid>
      <description>&lt;h2 id=&#34;一数据集概况&#34;&gt;一、数据集概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据名称: 美股年报10-K、20-F报告
数据来源: SEC
报告类型: 10-K、20-F
公司数量: 33619
报告数量: 189739
覆盖日期: 2000-07-05 ~ 2024.01.05
数据类型: html、csv(csv是对所有html的汇总文件)
数据体积: 378G

美股年报数据集，500元；加微信 372335839， 备注「姓名-学校-专业」
数据是虚拟产品，一经售出，不再退还！ 请仔细阅读推文内容， 确认无误再加微信详谈购买事宜 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-size.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-file.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;美股报告是html格式(中国沪深交易所的报告是pdf格式),   可以通过爬虫批量下载所有的报告，并保存为html。&lt;/p&gt;
&lt;p&gt;以苹果公司为例，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;https://www.sec.gov/Archives/edgar/data/320193/000032019323000106/aapl-20230930.htm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-apple.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-html文件&#34;&gt;二、 html文件&lt;/h2&gt;
&lt;p&gt;美股报告数据以html格式存储， 总体积了解其命名规则和处理方式，才能更好的使用该数据集。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-2023.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;21-html命名规则&#34;&gt;2.1 html命名规则&lt;/h3&gt;
&lt;p&gt;以 &lt;code&gt;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&lt;/code&gt; 为例, html命名遵循CIK码(股票代码)、会计期末、上市公司简称、上市公司全名、Form类型、报告发布日期&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;1973368&amp;#39;,
 &amp;#39;2023-03-31&amp;#39;,
 &amp;#39;SVMH&amp;#39;,
 &amp;#39;SRIVARU Holding Ltd&amp;#39;,
 &amp;#39;20-F&amp;#39;,
 &amp;#39;2023-12-28.html&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22-提取文本&#34;&gt;2.2 提取文本&lt;/h3&gt;
&lt;p&gt;如果觉得html不方便分析，可以使用 pyquery、BeautifulSoup等html解析库，提取html中的文本内容。本文以pyquery为例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pyquery&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PyQuery&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PyQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;bazadebezolkohpepadr=&amp;#34;608506832&amp;#34;\nfalse\nFY\n0001973368\n0001973368\n2022-04-01\n2023-03-31\n0001973368\ndei:BusinessContactMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:OrdinarySharesMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:WarrantsMember\n2022-04-01\n2023-03-31\n0001973368\n2023-03-31\n0001973368\n2022-03-31\n0001973368\n2021-06-16\n2022-03-31\n0001973368\nSVMHW:PredecessorMember\n2021-04-01\n2021-06-15\n0001973368\n2021-04-01\n2021-06-15\n0001973368\nSVMHW:PredecessorMember\nus-gaap:CommonStockMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nSVMHW:SharePremiumMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nus-gaap:RetainedEarningsMember\n2021-03-
......
SVMHW:Integer\nxbrli:pure\nUNITED STATES\nSECURITIES AND EXCHANGE COMMISSION\nWASHINGTON, D.C. 20549\nFORM\n20-F\n(Mark One)\n☐\nREGISTRATION STATEMENT PURSUANT TO SECTION 12(b) OR 12(g) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☐\nANNUAL REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nFor the fiscal year ended\nMarch 31\n,\n2023\nOR\n☐\nTRANSITION REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☒\nSHELL COMPANY REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nDate of event requiring this shell company report:\nDecember 8, 2023\nCommission File Number:\n333-272717\nSRIVARU Holding Limited\n(Exact name of Registrant as specified in its charter)\nNot applicable\nCayman Islands\n(Translation of Registrant’s name into English)\n(Jurisdiction of incorporation or organization)\n2nd Floor, Regatta Office Park\n,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\n(Address of Principal Executive Offices)\nSRIVARU Holding Limited\n2nd Floor, Regatta Office Park,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\nTelephone:\n+1 (888)\n227-8066\nEmail: ir@srivarumotors.com\n(Name, Telephone, Email and/or Facsimile number and Address of Company Contact Person)\nSecurities registered or to be registered pursuant to Section 12(b) of the Act:\nTitle of each class\nTrading Symbol(s)\nName of each exchange\non which registered\nOrdinary shares\nSVMH\nThe\nNasdaq\nGlobal Market\nWarrants\nSVMHW\nThe\nNasdaq\nGlobal Market\nSecurities registered or to be registered pursuant to Section 12(g) of the Act:\nNone\n(Title of Class)\nSecurities for which there is a reporting obligation pursuant to Section 15(d) of the Act:\nNone\n(Title of Class)\nIndicate the number of outstanding shares of each of the issuer’s classes of capital or common stock as of the close of the period covered by the shell company report:\n14,946,286\nordinary shares and 10,005,000 warrants.\nIndicate by check mark if the registrant is a well-known seasoned issuer, as defined in Rule 405 of the Securities Act. Yes ☐\nNo\n☒\nIf this report is an annual or transition report, indicate by check mark if the registrant is not required to file reports pursuant to Section 13 or 15(d) of the Securities Exchange Act of 1934. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant has submitted electronically every Interactive Data File required to be submitted pursuant to Rule 405 of Regulation S-T (§232.405 of this chapter) during the preceding 12 months (or for such shorter period that the registrant was required to submit and post such files).\nYes\n☒ No ☐\nIf securities are registered pursuant to Section 12(b) of the Act, indicate by check mark whether the financial statements of the registrant included in the filing reflect the correction of an error to previously issued financial statements.\n☐\nIndicate by check mark whether any of those error corrections are restatements that required a recovery analysis of incentive-based compensation received by any of the registrant’s executive officers during the relevant recovery period pursuant to §240.10D-1(b).\u202f☐\nIndicate by check mark whether the registrant is a large accelerated filer, an accelerated filer, a non-accelerated filer, or an emerging growth company. See definition of “large accelerated filer,” “accelerated filer,” and “emerging growth company” in Rule 12b-2 of the Exchange Act.\nLarge accelerated filer\n☐\nAccelerated filer\n☐\nNon-accelerated filer\n☒\nEmerging growth company\n☒\nIf an emerging growth company that prepares its financial statements in accordance with U.S. GAAP, indicate by check mark if the registrant has elected to use the extended transition period for complying with any new or revised financial accounting standards† provided pursuant to Section 13(a) of the Exchange Act.
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三csv文件&#34;&gt;三、csv文件&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-file.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;31-读取&#34;&gt;3.1 读取&lt;/h3&gt;
&lt;p&gt;csv是对所有html的汇总文件， 如果电脑内存OK， 直接读取 &lt;code&gt;美股年报_10-K和20-F.csv.gz(14.27G，解压后大概50+G)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我使用的电内存256G， 读取时间大概17min。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;美股年报_10-K和20-F.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;converters&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cik&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;常见电脑内存一般8~16G， 可以借鉴这篇推文 &lt;a href=&#34;https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/&#34;&gt;&lt;strong&gt;代码 | 如何处理远超电脑内存的csv文件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#只读取5行&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;美股年报_10-K和20-F.csv.gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;converters&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cik&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#防止股票代码被识别为数字&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;nrows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/06-nrows5.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;32-公司数量&#34;&gt;3.2 公司数量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cik&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;33619
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;33-查看content&#34;&gt;3.3 查看content&lt;/h3&gt;
&lt;p&gt;使用df.loc方式查看content字段的内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#第一行，content字段&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;#39;10-K\n1\nw46943e10-k.txt\nANNUAL REPORT FOR FISCAL YEAR ENDED 12/30/2000\n1 SECURITIES AND EXCHANGE COMMISSION WASHINGTON, D.C. 20549 FORM 10-K (Mark One) [X] Annual report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the fiscal year ended December 30, 2000 or [ ] Transition report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the transition period from ________ to ________ COMMISSION FILE NUMBER 0-9576 ------ K-TRON INTERNATIONAL, INC. (EXACT NAME OF REGISTRANT AS SPECIFIED IN ITS CHARTER)\nNew Jersey 22-1759452 ------------ ------------\n(State or other jurisdiction of (I.R.S. Employer Identification No.) incorporation or organization)\nRoutes 55 and 553 P.O. Box 888 Pitman, New Jersey 08071-0888 -------------------- ---------- (Address of principal executive offices) (Zip Code) Registrant\&amp;#39;s telephone number, including area code: (856) 589-0500 -------------- Securities registered pursuant to Section 12(b) of the Act:\nTitle of each class Name of each exchange on which registered\nNone None ------------------- -----------------------------------------\nSecurities registered pursuant to Section 12(g) of the Act: Common Stock, par value $.01 per share -------------------------------------- (Title of class) Indicate by check mark whether the Registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the Registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes X No --- ---\n2 Indicate by check mark if disclosure of delinquent filers pursuant to Item 405 of Regulation S-K is not contained herein, and will not be contained, to the best of Registrant\&amp;#39;s knowledge, in the definitive proxy statement incorporated by reference in Part III of this annual report on Form 10-K or any amendment to this annual report on Form 10-K. |X| As of February 28, 2001, the aggregate market value of the Common Stock held by non-affiliates of the Registrant was $35,606,718. Such aggregate market value was computed by reference to the closing sale price of the Common Stock as quoted on the Nasdaq National Market on such date. For purposes of making this calculation only, the Registrant has defined affiliates as including all directors and executive ......此处略去无数字
......此处略去无数字
......此处略去无数字

Amendment No. 1 to Employment Agreement dated October 5, 1998 by and between K-Tron International, Inc. and Edward B. Cloues, II (Filed as Exhibit 10.1 to our report on Form 10-Q for the quarterly period ended October 3, 1998 and incorporated herein by reference)** 10.10 Form of Employment Agreement with certain of our employees, which are identical in all material respects except for the employee, amount of salary to be paid and date of execution (Filed as Exhibit 10.12 to our annual report on Form 10-K for the year ended January 3, 1998 and incorporated herein by reference)** 10.11 Form of Indemnification Agreement with certain of our directors and officers listed on Schedule 10.11, which are identical in all material respects except for the director or officer who is a party thereto and the date of execution (Filed as Exhibit 10.11 to the 1999 Form 10-K and incorporated herein by reference)** 10.12 Leasing Agreement dated October 30, 1990 between CS Immobilien Leasing AG, Zurich and Hasler Freres SA, with limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.1(b) to our report on Form 8-K dated October 30, 1990 and incorporated herein by reference) 10.13 Amendment, dated January 25, 1991, to Leasing Agreement, dated October 30, 1990, between CS Immobilien Leasing AG, Zurich and Hasler Freres SA and to the related limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.3.3 to our annual report on Form 10-K for the year ended December 29, 1990 and incorporated herein by reference) 10.14 Note dated February 4, 2000 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit (b)(1) on Amendment No.1 to our Tender Offer Statement on Schedule TO dated February 16, 2000 and incorporated herein by reference)\n55 10.15 Mortgage Note dated June 11, 1996 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.15 to the 1999 Form 10-K and incorporated herein by reference) 10.16 Loan Modification Agreement dated June 24, 1998 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.16 to the 1999 Form 10-K and incorporated herein by reference) 10.17 Note dated June 24, 1998 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.17 to the 1999 Form 10-K and incorporated herein by reference) 10.18 Loan Modification Agreement dated as of July 22, 1999 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.18 to the 1999 Form 10-K and incorporated herein by reference) 10.19 Loan Modification Agreement dated June 21, 2000 between K-Tron America, Inc. and The Bank of Gloucester County* 21.1 Subsidiaries* 23.1 Consent of Arthur Andersen LLP* 24.1 Power of Attorney (Included on Signature Page)* -------------------- * Filed herewith ** Management contract or compensatory plan or arrangement required to be filed or incorporated as an exhibit&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;34-日期&#34;&gt;3.4 日期&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#会计期末account_date&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2000-01-31 00:00:00
2023-10-31 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#报告发布日期&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2000-07-05 00:00:00
2024-01-05 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;四相关内容&#34;&gt;四、相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/&#34;&gt;&lt;strong&gt;数据集 | 港股年报文本数据集(2007 ~ 2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/&#34;&gt;&lt;strong&gt;数据集(付费) | 三板上市公司年报2002-2023.12&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;&lt;strong&gt;数据集 | 2001-2022年A股上市公司年报&amp;amp;管理层讨论与分析&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;五获取数据&#34;&gt;五、获取数据&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;美股年报数据集，&lt;strong&gt;500&lt;/strong&gt;元；加微信 372335839， 备注「&lt;strong&gt;姓名-学校-专业&lt;/strong&gt;」。&lt;/li&gt;
&lt;li&gt;数据是虚拟产品，一经售出，不再退还！&lt;/li&gt;
&lt;li&gt;请仔细阅读推文内容， 确认无误再加微信详谈购买事宜&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course&#34;&gt;&lt;strong&gt;付费视频课 | Python实证指标构建与文本分析&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据名称: 美股年报10-K、20-F报告
数据来源: SEC
报告类型: 10-K、20-F
公司数量: 33619
报告数量: 189739
覆盖日期: 2000-07-05 ~ 2024.01.05
数据类型: html、csv(csv是对所有html的汇总文件)
数据体积: 378G

美股年报数据集，500元；加微信 372335839， 备注「姓名-学校-专业」
数据是虚拟产品，一经售出，不再退还！ 请仔细阅读推文内容， 确认无误再加微信详谈购买事宜 
</code></pre></div><p><img loading="lazy" src="img/01-size.jpg" alt=""  />
</p>
<p><img loading="lazy" src="img/02-file.png" alt=""  />
</p>
<br>
<p>美股报告是html格式(中国沪深交易所的报告是pdf格式),   可以通过爬虫批量下载所有的报告，并保存为html。</p>
<p>以苹果公司为例，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">https://www.sec.gov/Archives/edgar/data/320193/000032019323000106/aapl-20230930.htm
</code></pre></div><p><img loading="lazy" src="img/03-apple.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二-html文件">二、 html文件</h2>
<p>美股报告数据以html格式存储， 总体积了解其命名规则和处理方式，才能更好的使用该数据集。</p>
<p><img loading="lazy" src="img/04-2023.png" alt=""  />
</p>
<br>
<h3 id="21-html命名规则">2.1 html命名规则</h3>
<p>以 <code>1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html</code> 为例, html命名遵循CIK码(股票代码)、会计期末、上市公司简称、上市公司全名、Form类型、报告发布日期</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">file</span> <span class="o">=</span> <span class="s1">&#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&#39;</span>
<span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;1973368&#39;,
 &#39;2023-03-31&#39;,
 &#39;SVMH&#39;,
 &#39;SRIVARU Holding Ltd&#39;,
 &#39;20-F&#39;,
 &#39;2023-12-28.html&#39;]
</code></pre></div><br>
<h3 id="22-提取文本">2.2 提取文本</h3>
<p>如果觉得html不方便分析，可以使用 pyquery、BeautifulSoup等html解析库，提取html中的文本内容。本文以pyquery为例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">pyquery</span> <span class="kn">import</span> <span class="n">PyQuery</span>

<span class="n">file</span> <span class="o">=</span> <span class="s1">&#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&#39;</span>
<span class="n">doc</span> <span class="o">=</span> <span class="n">PyQuery</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
<span class="n">doc</span><span class="o">.</span><span class="n">text</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">bazadebezolkohpepadr=&#34;608506832&#34;\nfalse\nFY\n0001973368\n0001973368\n2022-04-01\n2023-03-31\n0001973368\ndei:BusinessContactMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:OrdinarySharesMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:WarrantsMember\n2022-04-01\n2023-03-31\n0001973368\n2023-03-31\n0001973368\n2022-03-31\n0001973368\n2021-06-16\n2022-03-31\n0001973368\nSVMHW:PredecessorMember\n2021-04-01\n2021-06-15\n0001973368\n2021-04-01\n2021-06-15\n0001973368\nSVMHW:PredecessorMember\nus-gaap:CommonStockMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nSVMHW:SharePremiumMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nus-gaap:RetainedEarningsMember\n2021-03-
......
SVMHW:Integer\nxbrli:pure\nUNITED STATES\nSECURITIES AND EXCHANGE COMMISSION\nWASHINGTON, D.C. 20549\nFORM\n20-F\n(Mark One)\n☐\nREGISTRATION STATEMENT PURSUANT TO SECTION 12(b) OR 12(g) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☐\nANNUAL REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nFor the fiscal year ended\nMarch 31\n,\n2023\nOR\n☐\nTRANSITION REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☒\nSHELL COMPANY REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nDate of event requiring this shell company report:\nDecember 8, 2023\nCommission File Number:\n333-272717\nSRIVARU Holding Limited\n(Exact name of Registrant as specified in its charter)\nNot applicable\nCayman Islands\n(Translation of Registrant’s name into English)\n(Jurisdiction of incorporation or organization)\n2nd Floor, Regatta Office Park\n,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\n(Address of Principal Executive Offices)\nSRIVARU Holding Limited\n2nd Floor, Regatta Office Park,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\nTelephone:\n+1 (888)\n227-8066\nEmail: ir@srivarumotors.com\n(Name, Telephone, Email and/or Facsimile number and Address of Company Contact Person)\nSecurities registered or to be registered pursuant to Section 12(b) of the Act:\nTitle of each class\nTrading Symbol(s)\nName of each exchange\non which registered\nOrdinary shares\nSVMH\nThe\nNasdaq\nGlobal Market\nWarrants\nSVMHW\nThe\nNasdaq\nGlobal Market\nSecurities registered or to be registered pursuant to Section 12(g) of the Act:\nNone\n(Title of Class)\nSecurities for which there is a reporting obligation pursuant to Section 15(d) of the Act:\nNone\n(Title of Class)\nIndicate the number of outstanding shares of each of the issuer’s classes of capital or common stock as of the close of the period covered by the shell company report:\n14,946,286\nordinary shares and 10,005,000 warrants.\nIndicate by check mark if the registrant is a well-known seasoned issuer, as defined in Rule 405 of the Securities Act. Yes ☐\nNo\n☒\nIf this report is an annual or transition report, indicate by check mark if the registrant is not required to file reports pursuant to Section 13 or 15(d) of the Securities Exchange Act of 1934. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant has submitted electronically every Interactive Data File required to be submitted pursuant to Rule 405 of Regulation S-T (§232.405 of this chapter) during the preceding 12 months (or for such shorter period that the registrant was required to submit and post such files).\nYes\n☒ No ☐\nIf securities are registered pursuant to Section 12(b) of the Act, indicate by check mark whether the financial statements of the registrant included in the filing reflect the correction of an error to previously issued financial statements.\n☐\nIndicate by check mark whether any of those error corrections are restatements that required a recovery analysis of incentive-based compensation received by any of the registrant’s executive officers during the relevant recovery period pursuant to §240.10D-1(b).\u202f☐\nIndicate by check mark whether the registrant is a large accelerated filer, an accelerated filer, a non-accelerated filer, or an emerging growth company. See definition of “large accelerated filer,” “accelerated filer,” and “emerging growth company” in Rule 12b-2 of the Exchange Act.\nLarge accelerated filer\n☐\nAccelerated filer\n☐\nNon-accelerated filer\n☒\nEmerging growth company\n☒\nIf an emerging growth company that prepares its financial statements in accordance with U.S. GAAP, indicate by check mark if the registrant has elected to use the extended transition period for complying with any new or revised financial accounting standards† provided pursuant to Section 13(a) of the Exchange Act.
......
</code></pre></div><p><br><br></p>
<h2 id="三csv文件">三、csv文件</h2>
<p><img loading="lazy" src="img/02-file.png" alt=""  />
</p>
<h3 id="31-读取">3.1 读取</h3>
<p>csv是对所有html的汇总文件， 如果电脑内存OK， 直接读取 <code>美股年报_10-K和20-F.csv.gz(14.27G，解压后大概50+G)</code>。</p>
<p>我使用的电内存256G， 读取时间大概17min。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;美股年报_10-K和20-F.csv&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;cik&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/05-df.png" alt=""  />
</p>
<br>
<p>常见电脑内存一般8~16G， 可以借鉴这篇推文 <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>代码 | 如何处理远超电脑内存的csv文件</strong></a>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#只读取5行</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;美股年报_10-K和20-F.csv.gzip&#39;</span><span class="p">,</span> 
                  <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;cik&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">},</span> <span class="c1">#防止股票代码被识别为数字</span>
                  <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> 
                  <span class="n">nrows</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">df2</span>
</code></pre></div><p><img loading="lazy" src="img/06-nrows5.png" alt=""  />
</p>
<br>
<h3 id="32-公司数量">3.2 公司数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;cik&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">33619
</code></pre></div><br>
<h3 id="33-查看content">3.3 查看content</h3>
<p>使用df.loc方式查看content字段的内容</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#第一行，content字段</span>
<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;content&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#39;10-K\n1\nw46943e10-k.txt\nANNUAL REPORT FOR FISCAL YEAR ENDED 12/30/2000\n1 SECURITIES AND EXCHANGE COMMISSION WASHINGTON, D.C. 20549 FORM 10-K (Mark One) [X] Annual report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the fiscal year ended December 30, 2000 or [ ] Transition report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the transition period from ________ to ________ COMMISSION FILE NUMBER 0-9576 ------ K-TRON INTERNATIONAL, INC. (EXACT NAME OF REGISTRANT AS SPECIFIED IN ITS CHARTER)\nNew Jersey 22-1759452 ------------ ------------\n(State or other jurisdiction of (I.R.S. Employer Identification No.) incorporation or organization)\nRoutes 55 and 553 P.O. Box 888 Pitman, New Jersey 08071-0888 -------------------- ---------- (Address of principal executive offices) (Zip Code) Registrant\&#39;s telephone number, including area code: (856) 589-0500 -------------- Securities registered pursuant to Section 12(b) of the Act:\nTitle of each class Name of each exchange on which registered\nNone None ------------------- -----------------------------------------\nSecurities registered pursuant to Section 12(g) of the Act: Common Stock, par value $.01 per share -------------------------------------- (Title of class) Indicate by check mark whether the Registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the Registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes X No --- ---\n2 Indicate by check mark if disclosure of delinquent filers pursuant to Item 405 of Regulation S-K is not contained herein, and will not be contained, to the best of Registrant\&#39;s knowledge, in the definitive proxy statement incorporated by reference in Part III of this annual report on Form 10-K or any amendment to this annual report on Form 10-K. |X| As of February 28, 2001, the aggregate market value of the Common Stock held by non-affiliates of the Registrant was $35,606,718. Such aggregate market value was computed by reference to the closing sale price of the Common Stock as quoted on the Nasdaq National Market on such date. For purposes of making this calculation only, the Registrant has defined affiliates as including all directors and executive ......此处略去无数字
......此处略去无数字
......此处略去无数字

Amendment No. 1 to Employment Agreement dated October 5, 1998 by and between K-Tron International, Inc. and Edward B. Cloues, II (Filed as Exhibit 10.1 to our report on Form 10-Q for the quarterly period ended October 3, 1998 and incorporated herein by reference)** 10.10 Form of Employment Agreement with certain of our employees, which are identical in all material respects except for the employee, amount of salary to be paid and date of execution (Filed as Exhibit 10.12 to our annual report on Form 10-K for the year ended January 3, 1998 and incorporated herein by reference)** 10.11 Form of Indemnification Agreement with certain of our directors and officers listed on Schedule 10.11, which are identical in all material respects except for the director or officer who is a party thereto and the date of execution (Filed as Exhibit 10.11 to the 1999 Form 10-K and incorporated herein by reference)** 10.12 Leasing Agreement dated October 30, 1990 between CS Immobilien Leasing AG, Zurich and Hasler Freres SA, with limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.1(b) to our report on Form 8-K dated October 30, 1990 and incorporated herein by reference) 10.13 Amendment, dated January 25, 1991, to Leasing Agreement, dated October 30, 1990, between CS Immobilien Leasing AG, Zurich and Hasler Freres SA and to the related limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.3.3 to our annual report on Form 10-K for the year ended December 29, 1990 and incorporated herein by reference) 10.14 Note dated February 4, 2000 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit (b)(1) on Amendment No.1 to our Tender Offer Statement on Schedule TO dated February 16, 2000 and incorporated herein by reference)\n55 10.15 Mortgage Note dated June 11, 1996 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.15 to the 1999 Form 10-K and incorporated herein by reference) 10.16 Loan Modification Agreement dated June 24, 1998 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.16 to the 1999 Form 10-K and incorporated herein by reference) 10.17 Note dated June 24, 1998 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.17 to the 1999 Form 10-K and incorporated herein by reference) 10.18 Loan Modification Agreement dated as of July 22, 1999 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.18 to the 1999 Form 10-K and incorporated herein by reference) 10.19 Loan Modification Agreement dated June 21, 2000 between K-Tron America, Inc. and The Bank of Gloucester County* 21.1 Subsidiaries* 23.1 Consent of Arthur Andersen LLP* 24.1 Power of Attorney (Included on Signature Page)* -------------------- * Filed herewith ** Management contract or compensatory plan or arrangement required to be filed or incorporated as an exhibit&#39;
</code></pre></div><br>
<h3 id="34-日期">3.4 日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">])</span>

<span class="c1">#会计期末account_date</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2000-01-31 00:00:00
2023-10-31 00:00:00
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#报告发布日期</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2000-07-05 00:00:00
2024-01-05 00:00:00
</code></pre></div><br>
<br>
<h2 id="四相关内容">四、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/"><strong>数据集 | 港股年报文本数据集(2007 ~ 2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/"><strong>数据集(付费) | 三板上市公司年报2002-2023.12</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/"><strong>数据集 | 2001-2022年A股上市公司年报&amp;管理层讨论与分析</strong></a></li>
</ul>
<br>
<br>
<h2 id="五获取数据">五、获取数据</h2>
<ol>
<li>美股年报数据集，<strong>500</strong>元；加微信 372335839， 备注「<strong>姓名-学校-专业</strong>」。</li>
<li>数据是虚拟产品，一经售出，不再退还！</li>
<li>请仔细阅读推文内容， 确认无误再加微信详谈购买事宜</li>
</ol>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course"><strong>付费视频课 | Python实证指标构建与文本分析</strong></a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  5.6亿条海关数据集(2000-2021.3 商品hs编码已统一)</title>
      <link>https://textdata.cn/blog/2024-01-06-china-export-import-dataset/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-06-china-export-import-dataset/</guid>
      <description>5.6亿条海关数据集(2000-2021.3 商品hs编码已统一)</description>
      <content:encoded><![CDATA[<h2 id="一海关数据集">一、海关数据集</h2>
<h3 id="11-数据概况">1.1 数据概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖时间: 2000 ~ 2021.3
记录条数: 562453390 (5.6亿条)
数据格式: csv文件(utf-8编码)
HS编码:  所有年份均统一为1996年HS编码(6位数)

海关数据集，300元；加微信 372335839， 备注「姓名-学校-专业」
</code></pre></div><p>数据是虚拟产品，一经售出，不再退还！ 请仔细阅读推文内容， 确认无误再加微信详谈购买事宜</p>
<br>
<h3 id="12-有何不同">1.2 有何不同？</h3>
<p>目前市面上售卖的海关数据，格式未做编码统一、文件格式统一、字段统一(对齐)。 所以大概率会遇到以下问题， 如 PYTHON 读取 dta 文件乱码、 Mac 电脑打不开 mdb ， 体验下来的感觉是数据很脏，格式很乱， 老子宁可买贵买个一步到位。</p>
<br>
<p>注意, 大邓卖的这个数据集跟市面上数据集的信息量是一样的，区别在于大邓用了三个整天时间把数据集变的干净整洁了:</p>
<ol>
<li>将 dta、mdb 等文件格式统一为编码 utf-8 的 csv 文件</li>
<li>不同年份的字段命名统一，并进行了字段对齐</li>
<li>新设字段 <strong>hs96_6</strong>， 将 2000-2021.3 中所有的商品hs编码统一为1996版的HS编码</li>
</ol>
<br>
<h3 id="13-字段含义">1.3 字段含义</h3>
<p>字段含义如下</p>
<ul>
<li><strong>exp_or_imp</strong> 进口/出口</li>
<li><strong>date</strong> 日期，有的年份是year-month， 有的年份数据只有year</li>
<li><strong>hs</strong> 商品编码，不同年份采用的hs编码系统不同， 有hs1996/hs2002/2012/2017四种。</li>
<li><strong>hsdetail</strong>  商品详情</li>
<li><strong>value</strong>  货值， 默认是美元计价</li>
<li><strong>quantity</strong> 数量</li>
<li><strong>unit</strong> 计量单位</li>
<li><strong>country</strong> 起运国/目的国</li>
<li><strong>shipment</strong> 贸易方式</li>
<li><strong>port</strong> 海关</li>
<li><strong>transportation</strong> 运输方式</li>
<li><strong>routing</strong> 中转国</li>
<li><strong>company</strong> 公司</li>
<li><strong>companytype</strong> 公司性质</li>
<li><strong>address</strong> 地址</li>
<li><strong>fax</strong> 传真</li>
<li><strong>tel</strong> 电话</li>
<li><strong>zip</strong> 邮编</li>
<li><strong>email</strong> 邮箱</li>
<li><strong>contacts</strong> 联系人</li>
<li><strong>city</strong> 消费地进口/生产地出口</li>
<li><strong>hs96</strong> 商品1996年HS编码(2000-2021统一用HS96编码)</li>
</ul>
 <br>
<h3 id="14-各年份字段">1.4 各年份字段</h3>
<p>每个年份的所含字段不同</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;2007&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment port transportation routing partyid company companytype address fax tel zip email contacts city hs96


[&#39;2000&#39;, &#39;2001&#39;, &#39;2002&#39;, &#39;2003&#39;, &#39;2004&#39;, &#39;2005&#39;, &#39;2006&#39;, &#39;2008&#39;, &#39;2009&#39;, &#39;2010&#39;, &#39;2011&#39;, &#39;2012&#39;, &#39;2013&#39;, &#39;2014&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment port transportation routing company companytype address fax tel zip email contacts city hs96


[&#39;2014&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment transportation company hs96


[&#39;2016&#39;]
exp_or_imp date hs hsdetail value country shipment company hs96


[&#39;2017&#39;, &#39;2018&#39;, &#39;2019&#39;, &#39;2020&#39;, &#39;2021&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment currency address quantity2 unit2 hs96
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<p>数据集均为 csv 格式， 按年份进行整理的数据。csv按照体量有两种</p>
<ul>
<li>千万级记录的全年csv， 如 <strong>full2000.csv.gz</strong></li>
<li>100w条记录量的小csv， 如 <strong>2000_0.csv.gz</strong></li>
</ul>
<p><img loading="lazy" src="img/01-dataset.png" alt=""  />
</p>
<br>
<p><img loading="lazy" src="img/02-gzip2csv.png" alt=""  />
</p>
<p>注意 <em><strong>gz</strong></em> 解压后， 一般文件体积会放大 8 倍左右。</p>
<br>
<h3 id="21-查看大文件">2.1 查看大文件</h3>
<p>电脑内存16G以上，可以直接读取按年份存储的大csv文件(gz解压后得到csv文件)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">glob</span>

<span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*.csv.gz&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;full2000.csv.gz&#39;,
 &#39;full2001.csv.gz&#39;,
 &#39;full2002.csv.gz&#39;,
 &#39;full2003.csv.gz&#39;,
 &#39;full2004.csv.gz&#39;,
 &#39;full2005.csv.gz&#39;,
 &#39;full2006.csv.gz&#39;,
 &#39;full2007.csv.gz&#39;,
 &#39;full2008.csv.gz&#39;,
 &#39;full2009.csv.gz&#39;,
 &#39;full2010.csv.gz&#39;,
 &#39;full2011.csv.gz&#39;,
 &#39;full2012.csv.gz&#39;,
 &#39;full2013.csv.gz&#39;,
 &#39;full2014.csv.gz&#39;,
 &#39;full2015.csv.gz&#39;,
 &#39;full2016.csv.gz&#39;,
 &#39;full2017.csv.gz&#39;,
 &#39;full2018.csv.gz&#39;,
 &#39;full2019.csv.gz&#39;,
 &#39;full2020.csv.gz&#39;,
 &#39;part2021.csv.gz&#39;]
</code></pre></div><br>
<h3 id="22-小文件">2.2 小文件</h3>
<p>如果想了解数据，或者电脑内存较小，可以选择这种小文件(每个csv文件100w条记录)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">glob</span>

<span class="c1">#572个小文件</span>
<span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*/*.csv.gz&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;2000/2000_0.csv.gz&#39;,
 &#39;2000/2000_1.csv.gz&#39;,
 &#39;2000/2000_10.csv.gz&#39;,
 &#39;2000/2000_2.csv.gz&#39;,
 &#39;2000/2000_3.csv.gz&#39;,
 &#39;2000/2000_4.csv.gz&#39;,
 &#39;2000/2000_5.csv.gz&#39;,
 &#39;2000/2000_6.csv.gz&#39;,
 &#39;2000/2000_7.csv.gz&#39;,
 &#39;2000/2000_8.csv.gz&#39;,
 &#39;2000/2000_9.csv.gz&#39;,
 &#39;2001/2001_0.csv.gz&#39;,
 &#39;2001/2001_1.csv.gz&#39;,
 &#39;2001/2001_10.csv.gz&#39;,
 ...
 ...
&#39;2020/2020_68.csv.gz&#39;,
 &#39;2020/2020_7.csv.gz&#39;,
 &#39;2020/2020_8.csv.gz&#39;,
 &#39;2020/2020_9.csv.gz&#39;,
 &#39;2021/2021_0.csv.gz&#39;,
 &#39;2021/2021_1.csv.gz&#39;,
 &#39;2021/2021_10.csv.gz&#39;,
 &#39;2021/2021_11.csv.gz&#39;,
 &#39;2021/2021_12.csv.gz&#39;,
 &#39;2021/2021_13.csv.gz&#39;,
 &#39;2021/2021_14.csv.gz&#39;,
 &#39;2021/2021_15.csv.gz&#39;,
 &#39;2021/2021_16.csv.gz&#39;,
 &#39;2021/2021_17.csv.gz&#39;,
 &#39;2021/2021_18.csv.gz&#39;,
 &#39;2021/2021_2.csv.gz&#39;,
 &#39;2021/2021_3.csv.gz&#39;,
 &#39;2021/2021_4.csv.gz&#39;,
 &#39;2021/2021_5.csv.gz&#39;,
 &#39;2021/2021_6.csv.gz&#39;,
 &#39;2021/2021_7.csv.gz&#39;,
 &#39;2021/2021_8.csv.gz&#39;,
 &#39;2021/2021_9.csv.gz&#39;]
</code></pre></div> <br>
<h3 id="23-记录数">2.3 记录数</h3>
<p>不同年份， 记录数统计。为了提高统计速度， 每个大文件，只读取了 date 字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">glob</span>

<span class="c1"># 查看每年记录数</span>
<span class="n">csvfs</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*.csv.gz&#39;</span><span class="p">))</span>
<span class="k">for</span> <span class="n">csvf</span> <span class="ow">in</span> <span class="n">csvfs</span><span class="p">:</span><span class="c1">#, converters={&#39;hs&#39;:str}</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>
    <span class="n">year</span> <span class="o">=</span> <span class="n">csvf</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;.csv.gz&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;full&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2000 10598247
2001 12682006
2002 13843463
2003 16616696
2004 19703008
2005 22819289
2006 25661754
2007 10635560
2008 11230600
2009 11341519
2010 13351580
2011 14288585
2012 15933823
2013 16662038
2014 17515154
2015 17515154
2016 17288381
2017 65783926
2018 69038499
2019 72391866
2020 68603295
2021 18668460
</code></pre></div><br>
<h3 id="24-字段详情">2.4 字段详情</h3>
<p>数据集有几种字段体系</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">glob</span>

<span class="c1"># 查看字段</span>
<span class="n">dfs</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">csvfs</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*.csv.gz&#39;</span><span class="p">))</span>
<span class="k">for</span> <span class="n">csvf</span> <span class="ow">in</span> <span class="n">csvfs</span><span class="p">:</span><span class="c1">#, converters={&#39;hs&#39;:str}</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">dfs</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
    
<span class="n">fieldtext_set</span> <span class="o">=</span> <span class="nb">set</span><span class="p">([</span><span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span> <span class="k">for</span> <span class="n">df</span> <span class="ow">in</span> <span class="n">dfs</span><span class="p">])</span>
<span class="n">fieldtext_set</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;exp_or_imp date hs hsdetail value country shipment company hs96&#39;,

 &#39;exp_or_imp date hs hsdetail value quantity unit country shipment currency address quantity2 unit2 hs96&#39;,
 
 &#39;exp_or_imp date hs hsdetail value quantity unit country shipment port transportation routing company companytype address fax tel zip email contacts city hs96&#39;,
 
 &#39;exp_or_imp date hs hsdetail value quantity unit country shipment port transportation routing partyid company companytype address fax tel zip email contacts city hs96&#39;,
 
 &#39;exp_or_imp date hs hsdetail value quantity unit country shipment transportation company hs96&#39;}
</code></pre></div><br>
<p>不同年份， 分别存储了哪些字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">field_text</span> <span class="ow">in</span> <span class="n">fieldtext_set</span><span class="p">:</span>
    <span class="n">years</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">df</span> <span class="ow">in</span> <span class="n">dfs</span><span class="p">:</span>
        <span class="k">if</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span><span class="o">==</span><span class="n">field_text</span><span class="p">:</span>
            <span class="n">year</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">])[:</span><span class="mi">4</span><span class="p">]</span>
            <span class="n">years</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">year</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">years</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">field_text</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;2007&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment port transportation routing partyid company companytype address fax tel zip email contacts city hs96


[&#39;2014&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment transportation company hs96


[&#39;2016&#39;]
exp_or_imp date hs hsdetail value country shipment company hs96


[&#39;2017&#39;, &#39;2018&#39;, &#39;2019&#39;, &#39;2020&#39;, &#39;2021&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment currency address quantity2 unit2 hs96


[&#39;2000&#39;, &#39;2001&#39;, &#39;2002&#39;, &#39;2003&#39;, &#39;2004&#39;, &#39;2005&#39;, &#39;2006&#39;, &#39;2008&#39;, &#39;2009&#39;, &#39;2010&#39;, &#39;2011&#39;, &#39;2012&#39;, &#39;2013&#39;, &#39;2014&#39;]
exp_or_imp date hs hsdetail value quantity unit country shipment port transportation routing company companytype address fax tel zip email contacts city hs96
</code></pre></div><p><br><br></p>
<h2 id="三实验代码">三、实验代码</h2>
<p>数据集文件的体量比较大， 使用 PYTHON 处理时，可参照<a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>如何处理远超电脑内存的csv文件</strong></a> 进行数据分析。</p>
<br>
<h3 id="31-读取前-5-条记录">3.1 读取前 5 条记录</h3>
<p>先读取 2014年前 5 条记录，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df2014</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;full2014.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="c1">#df2014 = pd.read_csv(&#39;full2014.csv&#39;, nrows=5)</span>
<span class="n">df2014</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="32-获取所有字段">3.2 获取所有字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2014</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;exp_or_imp&#39;, &#39;date&#39;, &#39;hs&#39;, &#39;hsdetail&#39;, &#39;value&#39;, &#39;quantity&#39;, &#39;unit&#39;,
       &#39;country&#39;, &#39;shipment&#39;, &#39;port&#39;, &#39;transportation&#39;, &#39;routing&#39;, &#39;company&#39;,
       &#39;companytype&#39;, &#39;address&#39;, &#39;fax&#39;, &#39;tel&#39;, &#39;zip&#39;, &#39;email&#39;, &#39;contacts&#39;,
       &#39;city&#39;, &#39;hs96&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><br>
<h3 id="33-读取指定字段数据">3.3 读取指定字段数据</h3>
<p>为了减轻内存压力，可以选择部分字段usecols进行读取, nrows记录数参数可以同时起作用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2014_</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;full2014.csv.gz&#39;</span><span class="p">,</span> 
                      <span class="n">usecols</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;hs&#39;</span><span class="p">,</span> <span class="s1">&#39;hsdetail&#39;</span><span class="p">,</span> <span class="s1">&#39;value&#39;</span><span class="p">,</span> <span class="s1">&#39;address&#39;</span><span class="p">,</span> <span class="s1">&#39;hs96&#39;</span><span class="p">,</span> <span class="s1">&#39;exp_or_imp&#39;</span><span class="p">],</span>
                      <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> 
                      <span class="n">nrows</span><span class="o">=</span><span class="mi">1000000</span><span class="p">,</span> 
                      <span class="p">)</span>

<span class="c1">#df2014_ = pd.read_csv(&#39;full2014.csv&#39;,</span>
<span class="c1">#                      usecols = [&#39;date&#39;, &#39;hs&#39;, &#39;hsdetail&#39;, &#39;value&#39;, &#39;address&#39;, &#39;hs96&#39;, &#39;exp_or_imp&#39;],</span>
<span class="c1">#                      nrows=1000000)</span>

<span class="n">df2014_</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#记录数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df2014_</span><span class="p">)</span>
</code></pre></div><p>1000000</p>
<br>
<h3 id="34-含某类-关键词的记录">3.4 含某(类) 关键词的记录</h3>
<p>筛选出感兴趣的产品记录， 例如筛选出 2014 年 <code>键盘、鼠标、显示器</code> 等产品的进出口</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mask1</span> <span class="o">=</span> <span class="n">df2014_</span><span class="p">[</span><span class="s1">&#39;hsdetail&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;键盘|鼠标|显示器&#39;</span><span class="p">)</span>
<span class="n">df2014_</span><span class="p">[</span><span class="n">mask1</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/05-df.png" alt=""  />
</p>
<br>
<h3 id="35--多条件筛选">3.5  多条件筛选</h3>
<p>筛选出 2014 年 <code>键盘、鼠标、显示器</code> 金额大于10000美元的进口记录 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mask1</span> <span class="o">=</span> <span class="n">df2014_</span><span class="p">[</span><span class="s1">&#39;hsdetail&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;键盘|鼠标|显示器&#39;</span><span class="p">)</span>
<span class="n">mask2</span> <span class="o">=</span> <span class="p">(</span><span class="n">df2014_</span><span class="p">[</span><span class="s1">&#39;exp_or_imp&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;进口&#39;</span><span class="p">)</span>
<span class="n">mask3</span> <span class="o">=</span> <span class="p">(</span><span class="n">df2014_</span><span class="p">[</span><span class="s1">&#39;value&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">10000</span><span class="p">)</span>

<span class="n">df2014_</span><span class="p">[</span><span class="n">mask1</span> <span class="o">&amp;</span> <span class="n">mask2</span> <span class="o">&amp;</span> <span class="n">mask3</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/06-df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四数据获取">四、数据获取</h2>
<h3 id="41-收费说明">4.1 收费说明</h3>
<ol>
<li>海关数据集，<strong>300</strong>元；加微信 372335839， 备注「<strong>姓名-学校-专业</strong>」。</li>
<li>数据是虚拟产品，一经售出，不再退还！</li>
<li>请仔细阅读推文内容， 确认无误再加微信详谈购买事宜</li>
</ol>
<br>
<h3 id="42-样例数据">4.2 样例数据</h3>
<p>提供样例数据供大家下载检查   链接: <a href="https://pan.baidu.com/s/1nBcQ63z8n_hqdtkb84_VjA?pwd=p2gk">https://pan.baidu.com/s/1nBcQ63z8n_hqdtkb84_VjA?pwd=p2gk</a> 提取码: p2gk</p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course"><strong>付费视频课 | Python实证指标构建与文本分析</strong></a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 36330条上市公司仲裁数据(2000-2021)</title>
      <link>https://textdata.cn/blog/2024-01-03-listed-company-arbitration-dataset/</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-03-listed-company-arbitration-dataset/</guid>
      <description>&lt;h2 id=&#34;一数据介绍&#34;&gt;一、数据介绍&lt;/h2&gt;
&lt;h3 id=&#34;11-数据集概况&#34;&gt;1.1 数据集概况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 数据集名: 上市公司仲裁数据
- 时间跨度: 2000-01-26 ~ 2021-09-28
- 案件数据: 36330
- 数据来源: 裁判文书网

  获取数据  20元；加微信 372335839， 备注「姓名-学校-专业」。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据整理自&lt;a href=&#34;https://textdata.cn/blog/2023-05-07-china-law-judgment-documents-datasets/&#34;&gt;数据集(付费) | 中国裁判文书网(2010-2021)&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-用途&#34;&gt;1.2 用途&lt;/h3&gt;
&lt;p&gt;上市公司仲裁数据可用于衡量上市公司法律风险等，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[1]冯延超,梁莱歆.上市公司法律风险、审计收费及非标准审计意见——来自中国上市公司的经验证据[J].审计研究,2010(03):75-81.
[2]祝继高.会计稳健性与债权人利益保护——基于银行与上市公司关于贷款的法律诉讼的研究[J].会计研究,2011(05):50-57+96.
[3]辛宇,黄欣怡,纪蓓蓓.投资者保护公益组织与股东诉讼在中国的实践——基于中证投服证券支持诉讼的多案例研究[J].管理世界,2020,36(01):69-87+235.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;13-字段&#34;&gt;1.3 字段&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; -  公告日期
 -  股票代码
 -  股票简称
 -  涉案类型
 -  原告被告
 -  案件案由
 -  涉案金额
 -  判决情况
 -  执行情况
 -  货币种类
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;上市公司仲裁数据2000-2021.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-记录数&#34;&gt;2.2 记录数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;36330
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23-公司数&#34;&gt;2.3 公司数&lt;/h3&gt;
&lt;p&gt;涉案的上市公司数量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2251
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;2-4-覆盖日期&#34;&gt;2. 4 覆盖日期&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2000-01-26 00:00:00
2021-09-28 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;25-字段缺失率&#34;&gt;2.5 字段&amp;amp;缺失率&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;公告日期 0.0
股票代码 0.0
股票简称 2.7525461051472613e-05
涉案类型 0.0002202036884117809
原告被告 0.001568951279933939
案件案由 0.00013762730525736306
涉案金额 0.00016515276630883568
判决情况 0.8911643270024773
执行情况 0.740765207817231
货币种类 0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;三获取数据&#34;&gt;三、获取数据&lt;/h2&gt;
&lt;p&gt;&lt;span style=&#34;font-size: 18px;color: green;&#34;&gt;1. 付费数据集，20元；加微信 372335839， 备注「姓名-学校-专业」。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size: 18px;color: green;&#34;&gt;2. 数据是虚拟产品，一经售出，不再退还！&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;font-size: 18px;color: green;&#34;&gt;3. 请仔细阅读推文内容， 再加微信详谈购买事宜  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据介绍">一、数据介绍</h2>
<h3 id="11-数据集概况">1.1 数据集概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 数据集名: 上市公司仲裁数据
- 时间跨度: 2000-01-26 ~ 2021-09-28
- 案件数据: 36330
- 数据来源: 裁判文书网

  获取数据  20元；加微信 372335839， 备注「姓名-学校-专业」。
</code></pre></div><p>数据整理自<a href="https://textdata.cn/blog/2023-05-07-china-law-judgment-documents-datasets/">数据集(付费) | 中国裁判文书网(2010-2021)</a></p>
<br>
<h3 id="12-用途">1.2 用途</h3>
<p>上市公司仲裁数据可用于衡量上市公司法律风险等，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]冯延超,梁莱歆.上市公司法律风险、审计收费及非标准审计意见——来自中国上市公司的经验证据[J].审计研究,2010(03):75-81.
[2]祝继高.会计稳健性与债权人利益保护——基于银行与上市公司关于贷款的法律诉讼的研究[J].会计研究,2011(05):50-57+96.
[3]辛宇,黄欣怡,纪蓓蓓.投资者保护公益组织与股东诉讼在中国的实践——基于中证投服证券支持诉讼的多案例研究[J].管理世界,2020,36(01):69-87+235.
</code></pre></div><br>
<br>
<h3 id="13-字段">1.3 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> -  公告日期
 -  股票代码
 -  股票简称
 -  涉案类型
 -  原告被告
 -  案件案由
 -  涉案金额
 -  判决情况
 -  执行情况
 -  货币种类
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;上市公司仲裁数据2000-2021.xlsx&#39;</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-记录数">2.2 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">36330
</code></pre></div><br>
<h3 id="23-公司数">2.3 公司数</h3>
<p>涉案的上市公司数量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2251
</code></pre></div><br>
<h3 id="2-4-覆盖日期">2. 4 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2000-01-26 00:00:00
2021-09-28 00:00:00
</code></pre></div><br>
<h3 id="25-字段缺失率">2.5 字段&amp;缺失率</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">col</span><span class="p">,</span> <span class="n">ratio</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">公告日期 0.0
股票代码 0.0
股票简称 2.7525461051472613e-05
涉案类型 0.0002202036884117809
原告被告 0.001568951279933939
案件案由 0.00013762730525736306
涉案金额 0.00016515276630883568
判决情况 0.8911643270024773
执行情况 0.740765207817231
货币种类 0.0
</code></pre></div><br>
<br>
<h2 id="三获取数据">三、获取数据</h2>
<p><span style="font-size: 18px;color: green;">1. 付费数据集，20元；加微信 372335839， 备注「姓名-学校-专业」。</span></p>
<p><span style="font-size: 18px;color: green;">2. 数据是虚拟产品，一经售出，不再退还！</span></p>
<p><span style="font-size: 18px;color: green;">3. 请仔细阅读推文内容， 再加微信详谈购买事宜  </span></p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  专利转让数据集(1985-2021)</title>
      <link>https://textdata.cn/blog/2023-12-22-patent-transform-exchange-dataset/</link>
      <pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-22-patent-transform-exchange-dataset/</guid>
      <description>数据集 |  专利转让数据库(1985-2021)</description>
      <content:encoded><![CDATA[<p><strong>专利所有权转让</strong> 是指在获得国家知识产权局授权后，将专利权转让给个人或企业等法律行为。转让行为需在国务院专利行政部门登记，并签订书面合同。转让合同的当事人成为新的专利申请权人或专利权人，可行使相应的专利申请权或专利权。<br></p>
<p><img loading="lazy" src="img/2021.png" alt=""  />
</p>
<br>
<br>
<h2 id="一数据集">一、数据集</h2>
<h3 id="11-专利转让数据集概况">1.1 专利转让数据集概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖年份：1985 ~ 2021

数据来源：国家知识产权局

总记录数: 2952073

文件格式:  xlsx、csv（csv是汇总数据， xlsx是按年份存储信息的)

数据文件(数字代表字段数量):
     -|专利转让19.csv.gz
     -|专利转让33.csv.gz
     -|专利转让140.csv.gz
     
     -|19
         -|1985.xlsx
         ...
         -|2018.xlsx
     -|33
         -|1999.xlsx
         ...
         -|2019.xlsx
     -|140
         -|2000.xlsx
         ...
         -|2021.xlsx
         
         
内容为付费数据集，100元， 加微信 372335839， 备注「姓名-学校-专业」。 
</code></pre></div><br>
<h3 id="12-购前须知">1.2 购前须知</h3>
<p><span style="font-size: 18px;color: green;">1. 付费数据集，100元；加微信 372335839， 备注「姓名-学校-专业」。</span></p>
<p><span style="font-size: 18px;color: green;">2. 数据是虚拟产品，一经售出，不再退还！</span></p>
<p><span style="font-size: 18px;color: green;">3. 大家时间其实都很宝贵，请仔细阅读推文内容， 确认无误再加微信详谈购买事宜 </span></p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<p>数据集中有 3 个 csv压缩文件和 数十个 <strong>xlsx文件</strong>， 文件名中的数字代表csv中含多少个字段。例如 <em><strong>专利转让19.csv.gz</strong></em> 表示csv中有19个字段。<strong>csv是汇总数据， xlsx是按年份存储信息的</strong>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据文件(数字代表字段数量):
     -|专利转让19.csv.gz
     -|专利转让33.csv.gz
     -|专利转让140.csv.gz
     
     -|19
         -|1985.xlsx
         ...
         -|2018.xlsx
     -|33
         -|1999.xlsx
         ...
         -|2019.xlsx
     -|140
         -|2000.xlsx
         ...
         -|2021.xlsx
</code></pre></div><br>
<h3 id="21-读取xlsx">2.1 读取xlsx</h3>
<p>试着读取  <em><strong>140/2021.xlsx</strong></em> ,  2021年的(含140个字段)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df140_2021</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;140/2021.xlsx&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df140_2021</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df140_2021</span><span class="o">.</span><span class="n">columns</span><span class="o">.</span><span class="n">tolist</span><span class="p">())</span>
<span class="n">df140_2021</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">9939

[&#39;序号&#39;, &#39;公开（公告）号&#39;, &#39;标题 (中文)&#39;, &#39;公开（公告）日&#39;, &#39;受让人类型&#39;, &#39;转让执行日&#39;, &#39;转让次数&#39;, &#39;转让人&#39;, &#39;转让人类型&#39;, &#39;受让人&#39;, &#39;当前法律状态&#39;, &#39;法律状态&#39;, &#39;转让登记号&#39;, &#39;转让登记日&#39;, &#39;摘要 (中文)&#39;, &#39;申请人&#39;, &#39;申请号&#39;, &#39;申请日&#39;, &#39;公开类型&#39;, &#39;专利类型&#39;, &#39;公开国别&#39;, &#39;链接到incoPat&#39;, &#39;IPC主分类&#39;, &#39;IPC&#39;, &#39;洛迦诺分类号&#39;, &#39;EC&#39;, &#39;CPC&#39;, &#39;UC&#39;, &#39;FI&#39;, &#39;F-term&#39;, &#39;国民经济分类&#39;, &#39;新兴产业分类&#39;, &#39;申请人(翻译)&#39;, &#39;申请人(其他)&#39;, &#39;标准化申请人&#39;, &#39;标准化当前权利人&#39;, &#39;当前权利人&#39;, &#39;第一申请人&#39;, &#39;申请人数量&#39;, &#39;申请人类型&#39;, &#39;申请人国别代码&#39;, &#39;申请人地址&#39;, &#39;申请人地址(其他)&#39;, &#39;申请人省市代码&#39;, &#39;中国申请人地市&#39;, &#39;中国申请人区县&#39;, &#39;当前专利权人地址&#39;, &#39;工商别名&#39;, &#39;工商英文名&#39;, &#39;工商注册地址&#39;, &#39;工商公司类型&#39;, &#39;工商成立日期&#39;, &#39;工商统一社会信用代码&#39;, &#39;工商注册号&#39;, &#39;工商上市代码&#39;, &#39;工商企业状态&#39;, &#39;发明人&#39;, &#39;发明(设计)人(其他)&#39;, &#39;第一发明人&#39;, &#39;当前发明人名称&#39;, &#39;发明人数量&#39;, &#39;发明人国别&#39;, &#39;发明人地址&#39;, &#39;发明(设计)人地址（其他）&#39;, &#39;代理机构&#39;, &#39;代理人&#39;, &#39;审查员&#39;, &#39;受让人地址&#39;, &#39;专利有效性&#39;, &#39;法律文书日期&#39;, &#39;法律文书编号&#39;, &#39;复审请求人&#39;, &#39;无效请求人&#39;, &#39;复审决定&#39;, &#39;复审无效决定日&#39;, &#39;复审无效法律依据&#39;, &#39;标准受让人&#39;, &#39;许可次数&#39;, &#39;许可合同备案日期&#39;, &#39;许可人&#39;, &#39;许可人类型&#39;, &#39;被许可人&#39;, &#39;被许可人类型&#39;, &#39;当前被许可人&#39;, &#39;许可类型&#39;, &#39;质押次数&#39;, &#39;质押期限&#39;, &#39;出质人&#39;, &#39;质权人&#39;, &#39;当前质权人&#39;, &#39;诉讼次数&#39;, &#39;原告&#39;, &#39;被告&#39;, &#39;诉讼类型&#39;, &#39;法庭&#39;, &#39;海关备案&#39;, &#39;复审决定日&#39;, &#39;无效决定日&#39;, &#39;口审日期&#39;, &#39;法律事件&#39;, &#39;复审请求日&#39;, &#39;许可合同备案号&#39;, &#39;质押号&#39;, &#39;合享价值度&#39;, &#39;引证专利&#39;, &#39;被引证专利&#39;, &#39;家族引证&#39;, &#39;家族被引证&#39;, &#39;引证申请人&#39;, &#39;被引证申请人&#39;, &#39;家族引证申请人&#39;, &#39;家族被引证申请人&#39;, &#39;引证次数&#39;, &#39;被引证次数&#39;, &#39;家族引证次数&#39;, &#39;家族被引证次数&#39;, &#39;引证科技文献&#39;, &#39;被引证国别(forward)&#39;, &#39;引证类别&#39;, &#39;简单同族&#39;, &#39;扩展同族&#39;, &#39;DocDB同族&#39;, &#39;简单同族ID&#39;, &#39;扩展同族ID&#39;, &#39;DocDB同族ID&#39;, &#39;简单同族个数&#39;, &#39;扩展同族个数&#39;, &#39;DocDB同族个数&#39;, &#39;同族国家/地区&#39;, &#39;优先权信息&#39;, &#39;优先权号&#39;, &#39;优先权日&#39;, &#39;最早优先权日&#39;, &#39;优先权国别&#39;, &#39;PCT国际申请号&#39;, &#39;PCT国际公布号&#39;, &#39;PCT进入国家阶段日&#39;, &#39;母案&#39;, &#39;分案&#39;, &#39;一案双申&#39;]
</code></pre></div><p><img loading="lazy" src="img/140_2021_df.png" alt=""  />
</p>
<br>
<h3 id="22---专利转让19csvgz">2.2   专利转让19.csv.gz</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#csv.gz压缩文件读取方法</span>
<span class="n">df19</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;专利转让19.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>

<span class="c1">#解压为csv读取方法</span>
<span class="c1">#df19 = pd.read_csv(&#39;专利转让19.csv&#39;)</span>

<span class="n">df19</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df19</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;专利转让19.csv.gz&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df19</span><span class="p">))</span>
<span class="nb">print</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df19</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df19</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df19</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>
<span class="nb">print</span><span class="p">()</span>
<span class="n">df19</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">专利转让19.csv.gz
记录数:  1655692

1985-04-01 00:00:00
2018-11-14 00:00:00

Index([&#39;序号&#39;, &#39;公开（公告）号&#39;, &#39;公开（公告）日&#39;, &#39;申请号&#39;, &#39;申请日&#39;, &#39;申请人&#39;, &#39;申请人省市代码&#39;, &#39;中国申请人地市&#39;,
       &#39;中国申请人区县&#39;, &#39;申请人地址&#39;, &#39;当前专利权人&#39;, &#39;法律状态&#39;, &#39;当前法律状态&#39;, &#39;专利类型&#39;, &#39;主分类号&#39;, &#39;转让人&#39;,
       &#39;受让人&#39;, &#39;转让执行日&#39;, &#39;公开国别&#39;],
      dtype=&#39;object&#39;)

</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="23-专利转让33csvgz">2.3 专利转让33.csv.gz</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df33</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;专利转让33.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#解压为csv读取方法</span>
<span class="c1">#df33 = pd.read_csv(&#39;专利转让33.csv&#39;)</span>
<span class="n">df33</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df33</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;专利转让33.csv.gz&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df33</span><span class="p">))</span>
<span class="nb">print</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df33</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df33</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df33</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>
<span class="nb">print</span><span class="p">()</span>
<span class="n">df33</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">专利转让33.csv.gz
记录数:  246080

1999-01-07 00:00:00
2019-11-07 00:00:00

Index([&#39;序号&#39;, &#39;标题&#39;, &#39;公开（公告）号&#39;, &#39;公开（公告）日&#39;, &#39;申请号&#39;, &#39;申请日&#39;, &#39;申请人&#39;, &#39;标准化申请人&#39;,
       &#39;标准化当前专利权人&#39;, &#39;申请人国别代码&#39;, &#39;申请人省市代码&#39;, &#39;中国申请人地市&#39;, &#39;中国申请人区县&#39;, &#39;申请人地址&#39;,
       &#39;申请人类型&#39;, &#39;当前专利权人&#39;, &#39;法律状态&#39;, &#39;当前法律状态&#39;, &#39;专利类型&#39;, &#39;发明人&#39;, &#39;代理人&#39;, &#39;代理机构&#39;,
       &#39;审查员&#39;, &#39;主分类号&#39;, &#39;IPC&#39;, &#39;国民经济分类&#39;, &#39;转让人&#39;, &#39;受让人&#39;, &#39;转让执行日&#39;, &#39;原告&#39;, &#39;被告&#39;,
       &#39;第一申请人&#39;, &#39;公开国别&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h3 id="24-专利转让140csvgz">2.4 专利转让140.csv.gz</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#csv.gz压缩文件读取方法</span>
<span class="n">df140</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;专利转让140.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#解压为csv读取方法</span>
<span class="c1">#df140 = pd.read_csv(&#39;专利转让140.csv&#39;)</span>


<span class="n">df140</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df140</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;专利转让140.csv.gz&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df140</span><span class="p">))</span>
<span class="nb">print</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df19</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df19</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df19</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>
<span class="nb">print</span><span class="p">()</span>
<span class="n">df19</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">专利转让140.csv.gz
记录数:  1050301

1985-04-01 00:00:00
2018-11-14 00:00:00

Index([&#39;序号&#39;, &#39;公开（公告）号&#39;, &#39;公开（公告）日&#39;, &#39;申请号&#39;, &#39;申请日&#39;, &#39;申请人&#39;, &#39;申请人省市代码&#39;, &#39;中国申请人地市&#39;,
       &#39;中国申请人区县&#39;, &#39;申请人地址&#39;, &#39;当前专利权人&#39;, &#39;法律状态&#39;, &#39;当前法律状态&#39;, &#39;专利类型&#39;, &#39;主分类号&#39;, &#39;转让人&#39;,
       &#39;受让人&#39;, &#39;转让执行日&#39;, &#39;公开国别&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="25-总记录数">2.5 总记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df19</span><span class="p">)</span><span class="o">+</span><span class="nb">len</span><span class="p">(</span><span class="n">df33</span><span class="p">)</span><span class="o">+</span><span class="nb">len</span><span class="p">(</span><span class="n">df140</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2952073
</code></pre></div><p><br><br></p>
<h2 id="三年度记录数">三、年度记录数</h2>
<h3 id="31--字段19">3.1  字段19</h3>
<p>19个字段的数据，每年的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;19字段-记录数&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df19</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df19</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">19字段-记录数
1985 104
1986 67
1987 138
1988 164
1989 103
1990 90
1991 146
1992 430
1993 984
1994 1928
1995 2602
1996 3611
1997 6414
1998 7770
1999 8961
2000 14222
2001 20005
2002 28349
2003 37824
2004 43323
2005 52268
2006 61030
2007 65962
2008 78316
2009 94011
2010 103698
2011 125021
2012 144187
2013 160240
2014 158838
2015 161830
2016 149941
2017 97372
2018 25743
</code></pre></div><br>
<h3 id="32--字段33">3.2  字段33</h3>
<p>33个字段的数据，每年的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;33字段-记录数&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df33</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df33</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">33字段-记录数
1999 74
2000 248
2001 293
2002 420
2003 632
2004 805
2005 1126
2006 1397
2007 1748
2008 2372
2009 2888
2010 3611
2011 4364
2012 5776
2013 15155
2014 20593
2015 27215
2016 42062
2017 59276
2018 51792
2019 4233
</code></pre></div><br>
<h3 id="33--字段140">3.3  字段140</h3>
<p>140个字段的数据，每年的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;140字段-记录数&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df140</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df140</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">140字段-记录数
2000 66
2001 360
2002 965
2003 1639
2004 2424
2005 3710
2006 4517
2007 6556
2008 8386
2009 11227
2010 14925
2011 22968
2012 33932
2013 47757
2014 60567
2015 78147
2016 107435
2017 135501
2018 199329
2019 176711
2020 123240
2021 9939
</code></pre></div><p><br><br></p>
<h2 id="四字段缺失率">四、字段缺失率</h2>
<p>数据集字段太多， 最好通过代码查看下字段缺失率</p>
<h3 id="41-字段19缺失率">4.1 字段19缺失率</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">for field in df19.columns:
    #缺失率
    ratio = df19[field].isna().sum()/len(df19)
    print(field, ratio)
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">序号 0.0
公开（公告）号 0.0
公开（公告）日 0.0
申请号 0.0
申请日 0.0
申请人 0.0
申请人省市代码 0.00012683518432172168
中国申请人地市 0.21583241327493277
中国申请人区县 0.24252155594156402
申请人地址 0.0
当前专利权人 2.1743174455152288e-05
法律状态 3.019885340993373e-06
当前法律状态 0.0
专利类型 0.0
主分类号 0.07351306885580168
转让人 0.0
受让人 0.0
转让执行日 0.00016548971668643684
公开国别 0.0
</code></pre></div><br>
<h3 id="42-字段33缺失率">4.2 字段33缺失率</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="n">df33</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">df33</span><span class="p">[</span><span class="n">field</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df33</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">ratio</span><span class="p">)</span>   
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">序号 0.0
标题 0.0
公开（公告）号 0.0
公开（公告）日 0.0
申请号 0.0
申请日 0.0
申请人 0.0
标准化申请人 0.8322131014304291
标准化当前专利权人 0.9236955461638492
申请人国别代码 0.0
申请人省市代码 0.0007680429128738621
中国申请人地市 0.09331924577373212
中国申请人区县 0.11477974642392717
申请人地址 0.0
申请人类型 0.0
当前专利权人 0.0
法律状态 0.0
当前法律状态 0.0
专利类型 0.0
发明人 0.0
代理人 0.27707656046814044
代理机构 0.27707656046814044
审查员 1.0
主分类号 0.06866059817945383
IPC 0.06866059817945383
国民经济分类 0.0018205461638491547
转让人 0.0
受让人 0.0
转让执行日 0.0
原告 0.9991141092327698
被告 0.9991181729518855
第一申请人 0.0
公开国别 0.0
</code></pre></div><br>
<h3 id="43-字段140缺失率">4.3 字段140缺失率</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="n">df140</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">df140</span><span class="p">[</span><span class="n">field</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df140</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">field</span><span class="p">,</span> <span class="n">ratio</span><span class="p">)</span>   
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">序号 0.0
公开（公告）号 0.0
标题 (中文) 0.0
公开（公告）日 0.0
受让人类型 0.0
转让执行日 0.0
转让次数 0.0
转让人 0.0
转让人类型 9.521080147500573e-07
受让人 0.0
当前法律状态 0.0
法律状态 0.0
转让登记号 1.0
转让登记日 1.0
摘要 (中文) 0.0
申请人 0.0
申请号 0.0
申请日 0.0
公开类型 0.0
专利类型 0.0
公开国别 0.0
链接到incoPat 0.2410651803625818
IPC主分类 0.04527368820937998
IPC 0.04527368820937998
洛迦诺分类号 0.8595155103156142
EC 0.9829315596195757
CPC 0.4954703461198266
UC 0.9171827885529957
FI 1.0
F-term 1.0
国民经济分类 0.09521080147500574
新兴产业分类 0.33990160915775575
申请人(翻译) 0.028841255982808737
申请人(其他) 0.9047891985249943
标准化申请人 0.09521080147500574
标准化当前权利人 0.0
当前权利人 0.0
第一申请人 0.0
申请人数量 0.0
申请人类型 0.0
申请人国别代码 0.0
申请人地址 0.0
申请人地址(其他) 0.9047891985249943
申请人省市代码 0.10137379665448286
中国申请人地市 0.08290480538436125
中国申请人区县 0.10333609127288272
当前专利权人地址 0.1408396259738875
工商别名 0.779989736275601
工商英文名 0.7097203563549878
工商注册地址 0.3659132001207273
工商公司类型 0.3964568252339091
工商成立日期 0.3763606813665797
工商统一社会信用代码 0.33329207531936084
工商注册号 0.3941651012424057
工商上市代码 0.872327075762091
工商企业状态 0.38779359440769834
发明人 0.02176138078512731
发明(设计)人(其他) 0.9008788909084158
第一发明人 0.09503085306021798
当前发明人名称 0.8596783207861366
发明人数量 0.08785100652098779
发明人国别 0.9047891985249943
发明人地址 1.0
发明(设计)人地址（其他） 0.9845910838892851
代理机构 0.30475263757722787
代理人 0.22121848879511682
审查员 0.6819978272895103
受让人地址 6.664756103250401e-06
专利有效性 0.0
法律文书日期 0.9036999869561202
法律文书编号 0.9988631830303885
复审请求人 0.994335909420252
无效请求人 0.9980358011655707
复审决定 0.9931648165621093
复审无效决定日 0.9923764711258963
复审无效法律依据 0.9925745095929643
标准受让人 0.0945938354814477
许可次数 0.8932029960935008
许可合同备案日期 0.9874397910694173
许可人 0.987433126313314
许可人类型 0.987433126313314
被许可人 0.9874312220972845
被许可人类型 0.9874312220972845
当前被许可人 0.98904790150633
许可类型 0.987532145546848
质押次数 0.9783376384484067
质押期限 0.9974673926807649
出质人 0.9808902400359516
质权人 0.9784309450338522
当前质权人 0.9823755285389617
诉讼次数 0.9968675646314723
原告 0.9988070086575181
被告 0.9987898707132526
诉讼类型 0.998735600556412
法庭 0.9987765412010462
海关备案 0.9994706279437989
复审决定日 0.995455588445598
无效决定日 0.9982614507650664
口审日期 0.9987213189361906
法律事件 0.09516795661434198
复审请求日 0.8991670006978951
许可合同备案号 0.9878377722195828
质押号 0.9799076645647296
合享价值度 0.09275150647290634
引证专利 0.4035186103793103
被引证专利 0.610673511688554
家族引证 0.4082791504530606
家族被引证 0.423179640883899
引证申请人 0.4423846116494224
被引证申请人 0.6122416335888474
家族引证申请人 0.40952260352032416
家族被引证申请人 0.42539614834223716
引证次数 0.44171623182306785
被引证次数 0.610673511688554
家族引证次数 0.4082791504530606
家族被引证次数 0.423179640883899
引证科技文献 0.8357090015148039
被引证国别(forward) 0.6626548008618481
引证类别 0.6692310109197268
简单同族 0.09521080147500574
扩展同族 0.0
DocDB同族 0.0
简单同族ID 0.0
扩展同族ID 0.0
DocDB同族ID 0.0
简单同族个数 0.0
扩展同族个数 0.0
DocDB同族个数 0.0
同族国家/地区 0.0
优先权信息 0.829316548303772
优先权号 0.9152566740391564
优先权日 0.9152566740391564
最早优先权日 0.9152576261471711
优先权国别 0.9100848233030341
PCT国际申请号 0.9480701246595024
PCT国际公布号 0.951777633268939
PCT进入国家阶段日 0.9508997896793395
母案 0.9777254329949224
分案 0.9772046299108541
一案双申 0.9016415294282306
</code></pre></div><p><br><br></p>
<h2 id="五相关内容">五、相关内容</h2>
<h3 id="51-文献">5.1 文献</h3>
<p>使用专利数据做研究的文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Bellstam, Gustaf, Sanjai Bhagat, and J. Anthony Cookson. &#34;A text-based analysis of corporate innovation.&#34; _Management Science_ 67, no. 7 (2021): 4004-4031.
[2]Arts, Sam, Bruno Cassiman, and Jianan Hou. &#34;Position and Differentiation of Firms in Technology Space.&#34; Management Science (2023).
</code></pre></div><br>
<h3 id="52-代码操作">5.2 代码操作</h3>
<ul>
<li><a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/"><strong>数据集 | 3571万条专利申请数据集(1985-2022年)</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/"><strong>数据集(付费) | 上市公司 208 万条专利数据集 (1991-2022)</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>推荐 | 如何处理远超电脑内存的csv文件</strong></a></li>
</ul>
<p><br><br></p>
<h2 id="六获取数据">六、获取数据</h2>
<p><span style="font-size: 18px;color: green;">1. 付费数据集，100元；加微信 372335839， 备注「姓名-学校-专业」。</span></p>
<p><span style="font-size: 18px;color: green;">2. 数据是虚拟产品，一经售出，不再退还！</span></p>
<p><span style="font-size: 18px;color: green;">3. 大家时间其实都很宝贵，请仔细阅读推文内容， 确认无误再加微信详谈购买事宜 </span></p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2.49亿条中国工商注册企业信息(23.9更新)</title>
      <link>https://textdata.cn/blog/2023-12-03-china-mainland-corporate-registration-information/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-03-china-mainland-corporate-registration-information/</guid>
      <description>341个地市， 2亿条工商注册信息， 网盘压缩文件夹体积17.6G</description>
      <content:encoded><![CDATA[<h2 id="一工商数据集概况">一、工商数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: 国家企业信用信息公示系统
记录条数: 2.49亿条
文件体积: 160G(解压后)
涵盖日期: 1949.10.1~2023.9.19
</code></pre></div><p><img loading="lazy" src="img/dataset-screen.png" alt=""  />
</p>
<br>
<h3 id="11-字段">1.1 字段</h3>
<p>任意csv文件的字段包括</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 企业名称
- 英文名称
- 统一社会信用代码
- 企业类型
- 经营状态
- 成立日期
- 核准日期
- 法定代表人
- 注册咨本
- 实缴资本
- 参保人数
- 公司规模
- 经营范围
- 注册地址
- 营业期限
- 纳税人识别号
- 工商注册号
- 组织机构代码
- 联系电话(脱敏)
- 邮箱(脱敏)
- 纳税人资质
- 曾用名
- 所属省份
- 所属城市
- 所属区县
- 网站链接
- 所属行业
- 登记机关
- 经度
- 纬度
</code></pre></div><p>数据集已经脱敏处理， 避免分享过程出现违规(法)问题。 如果你想获取手机号，商业用途， 就不要联系我了！我没有，有也不卖。</p>
<br>
<h3 id="12-查看文件">1.2 查看文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> [
 &#39;北京.csv.gz&#39;,
 &#39;上海.csv.gz&#39;,
 &#39;南京.csv.gz&#39;,
 ...
 &#39;重庆.csv.gz&#39;,
  ]
</code></pre></div><br>
<h2 id="二实验代码">二、实验代码</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>不考虑电脑内存容量限制， 读取 石家庄市、长沙市、杭州市。如果电脑内存很小，请先阅读  <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">推荐 | 如何处理远超电脑内存的csv文件</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">sjz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;石家庄.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">cs_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;长沙.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">hz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;杭州.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>

<span class="c1">#随机显示2条记录</span>
<span class="n">sjz_df</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<h3 id="22-记录数">2.2 记录数</h3>
<p>石家庄.csv 企业记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2010163
</code></pre></div><br>
<h3 id="23-所含字段">2.3 所含字段</h3>
<p>含有的字段有</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">sjz_df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><pre><code>Index(['企业组织机构代码', '企业名称', '注册资本', '实缴资本', '纳税人识别号', '法定代表人', '企业状态', '所属行业',
       '企业名称', '英文名称', '统一社会信用代码', '企业类型', '经营状态', '成立日期', '核准日期', '法定代表人',
       '注册咨本', '实缴资本', '参保人数', '公司规模', '经营范围', '注册地址', '营业期限', '纳税人识别号', '工商注册号', '组织机构代码', '联系电话', '邮箱', '纳税人资质', '曾用名', '所属省份', '所属城市', '所属区县', '网站链接', '所属行业', '登记机关', '经度', '纬度'],
      dtype='object')
</code></pre>
<br>
<h3 id="24-日期转换">2.4 日期转换</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">])</span>

<span class="c1">#石家庄数据集日期范围</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1917-01-30 00:00:00
2023-09-19 00:00:00
</code></pre></div><br>
<p>查看成立日期为1917-01-30的信息</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">datetime</span>

<span class="n">sjz_df</span><span class="p">[</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="mi">1917</span><span class="p">,</span> <span class="n">month</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">day</span><span class="o">=</span><span class="mi">30</span><span class="p">)]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;企业组织机构代码&#39;: {913555: &#39;81130000MC0611518K&#39;},
 &#39;企业名称&#39;: {913555: &#39;中国铁路工会石家庄站委员会&#39;},
 &#39;注册资本&#39;: {913555: &#39;276.5万元人民币&#39;},
 &#39;实缴资本&#39;: {913555: &#39;-&#39;},
 &#39;纳税人识别号&#39;: {913555: &#39;81130000MC0611518K&#39;},
 &#39;法定代表人&#39;: {913555: &#39;韩海峰&#39;},
 &#39;企业状态&#39;: {913555: &#39;暂无&#39;},
 &#39;所属行业&#39;: {913555: &#39;公共管理、社会保障和社会组织&#39;},
 &#39;统一社会信用代码&#39;: {913555: &#39;81130000MC0611518K&#39;},
 &#39;工商注册号&#39;: {913555: nan},
 &#39;组织机构代码&#39;: {913555: &#39;-&#39;},
 &#39;登记机关&#39;: {913555: &#39;河北省总工会&#39;},
 &#39;成立日期&#39;: {913555: Timestamp(&#39;1917-01-30 00:00:00&#39;)},
 &#39;核准日期&#39;: {913555: &#39;1949-10-01&#39;},
 &#39;企业类型&#39;: {913555: &#39;-&#39;},
 &#39;经营期限&#39;: {913555: &#39;2019-04-01 至 2022-02-09&#39;},
 &#39;注册所在地&#39;: {913555: nan},
 &#39;地区编码&#39;: {913555: &#39;130105&#39;},
 &#39;详细地址&#39;: {913555: &#39;石家庄市新华区大桥路2号&#39;},
 &#39;经营范围&#39;: {913555: &#39;-&#39;},
 &#39;参保人数&#39;: {913555: 478.0},
 &#39;企业电话&#39;: {913555: nan},
 &#39;企业座机&#39;: {913555: nan},
 &#39;企业邮箱&#39;: {913555: nan}}
</code></pre></div><p><br><br></p>
<h2 id="三可视化">三、可视化</h2>
<p>绘制一个1992-2023年的注册量折线图</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">years</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1992</span><span class="p">,</span> <span class="mi">2023</span><span class="p">)]</span>

<span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;石家庄&#39;</span><span class="p">)</span>
<span class="n">cs_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;长沙&#39;</span><span class="p">)</span>
<span class="n">hz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;杭州&#39;</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;工商企业注册量1992-2019年&#39;</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;center&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;注册量&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper right&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>    
</code></pre></div><p><img loading="lazy" src="img/output_8_0.png" alt="svg"  />
</p>
<br>
<h2 id="四获取数据">四、获取数据</h2>
<p>内容为付费数据集， 100元， 加微信 372335839， 备注「姓名-学校-专业-工商数据集」</p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>从3571w条专利数据集「匹配」上市公司的专利信息</title>
      <link>https://textdata.cn/blog/2023-04-26-matching-listed-corporate-with-patent-dataset/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-26-matching-listed-corporate-with-patent-dataset/</guid>
      <description>3571万专利申请全量数据(1985-2022年)数据</description>
      <content:encoded><![CDATA[<h2 id="一问题">一、问题</h2>
<p>之前分享过 <a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/">数据集(付费) | 3571万条专利申请数据集(1985-2022年)</a> ， 没有涉及匹配数据的问题。 <strong>有学员反映，该数据集是否支持匹配上市公司。或者上市公司的专利数量等信息能否从该数据集中抽取， 答案是可以的</strong>。 如果对数据集了解，可以直接看第二部分，不熟悉的建议看下数据集大致信息。</p>
<br>
<h3 id="11-专利申请数据集">1.1 专利申请数据集</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 数据集名称：省份版知识产权局专利
- 时间跨度：1985-2022，专利申请总量3571万
- 文件格式: csv
- 数据来源：『国家知识产权局』
- 数据整理: 『公众号:大邓和他的Python』
</code></pre></div><p><img loading="lazy" src="img/screen-datasets2.png" alt=""  />
</p>
<br>
<h3 id="12-字段">1.2 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> -  专利公开号
 -  专利名称
 -  专利类型
 -  专利摘要
 -  【申请人】
 -  专利申请号
 -  申请日
 -  申请公布日
 -  授权公布号
 -  授权公布日
 -  申请地址
 -  主权项
 -  发明人
 -  分类号
 -  主分类号
 -  代理机构
 -  分案原申请号
 -  优先权
 -  国际申请
 -  国际公布
 -  代理人
 -  省份或国家代码
 -  法律状态
 -  专利领域
 -  专利学科
 -  多次公布
</code></pre></div><br>
<h3 id="13-数据集大小">1.3 数据集大小</h3>
<p>把所有的 <em><strong>gz</strong></em> 压缩文件解压后， 数据集大概70G，</p>
<p><img loading="lazy" src="img/screen-datasets.png" alt=""  />
</p>
<br>
<h3 id="13-分省统计">1.3 分省统计</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">| 省份(区域)       |  专利数  |
| :---------------| :------ |
| 广东省           | 5728705 |
| 江苏省           | 4879171 |
| 浙江省           | 3706820 |
| 山东省           | 2064446 |
| 北京市           | 2069913 |
| 四川省           | 1159551 |
| 天津市           | 712932  |
| 上海市           | 1548278 |
| 贵州省           | 265512  |
| 陕西省           | 655837  |
| 吉林省           | 232264  |
| 辽宁省           | 637853  |
| 湖北省           | 966384  |
| 山西省           | 233418  |
| 宁夏回族自治区    | 66919   |
| 西藏自治区        | 9911    |
| 广西壮族自治区    | 377658  |
| 江西省           | 519584  |
| 湖南省           | 743828  |
| 黑龙江省         | 357881  |
| 海南省           | 59202   |
| 福建省           | 1046473 |
| 安徽省           | 1342364 |
| 河北省           | 645420  |
| 重庆市           | 592382  |
| 内蒙古自治区      | 133277  |
| 云南省           | 252407  |
| 甘肃省           | 164274  |
| 新疆维吾尔自治区   | 124734  |
| 河南省           | 966477  |
| 青海省           | 34127   |
| 台湾省           | 401555  |
| 香港特别行政区    | 61636   |
| 澳门特别行政区    | 2010    |
| 其他国家         | 2948557 |
</code></pre></div><p><br><br></p>
<h2 id="二读取数据">二、读取数据</h2>
<p>数据集中的个别csv文件较大，例如 <em><strong>广东省.csv</strong></em> 体积10G。 我们就以建议分析的时候， 电脑内存大于等于16G的， 每次分析时不要开其他软件。</p>
<p>为了演示， 我选择用较小的 黑龙江省.csv 为例。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;黑龙江省.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="c1">#解压后，读取csv的方法</span>
<span class="c1">#df = pd.read_csv(&#39;黑龙江省.csv&#39;, encoding=&#39;utf-8&#39;, low_memory=False)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;黑龙江省专利数量: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">河北省: 357881
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据集中的字段含</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;专利公开号&#39;, &#39;专利名称&#39;, &#39;专利类型&#39;, &#39;专利摘要&#39;, 
&#39;申请人&#39;, &#39;专利申请号&#39;, &#39;申请日&#39;, &#39;申请公布日&#39;, 
&#39;授权公布号&#39;, &#39;授权公布日&#39;, &#39;申请地址&#39;, &#39;主权项&#39;, &#39;发明人&#39;,
&#39;分类号&#39;, &#39;主分类号&#39;, &#39;代理机构&#39;, &#39;分案原申请号&#39;, &#39;优先权&#39;, 
&#39;国际申请&#39;, &#39;国际公布&#39;, &#39;代理人&#39;, &#39;省份或国家代码&#39;,
&#39;法律状态&#39;, &#39;专利领域&#39;, &#39;专利学科&#39;, &#39;多次公布&#39;],
dtype=&#39;object&#39;)
</code></pre></div><p><br><br></p>
<p>大邓现在在大东北，知道黑龙江的上市公司有哈药集团和北大荒。 我们就查一下 「黑龙江省.csv」 专利申请的数据中是否有北大荒和哈药集团。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;北大荒专利数: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;北大荒集团&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">())</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;哈药集团专利数: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">北大荒专利数:  4
哈药集团专利数:  712
</code></pre></div><p>还真有!!! so， 这个  <a href="">数据集 | 3571万条专利申请数据集(1985-2022年)</a> 是真的可以匹配上市公司，做一些有价值的变量。 感叹完毕， 继续写点没营养的代码。</p>
<br>
<h2 id="三匹配公司">三、匹配公司</h2>
<p>从上面可以看出哈药集团专利数很多，咱们继续检查哈药集团的专利数据。那么如何筛选出某公司的所有专利申请记录数据呢？这里会用到DataFrame的布尔条件筛选，把值为True的筛选出来。</p>
<ol>
<li>宽松条件  <code>「申请人」含「哈药集团」字眼的</code></li>
<li>严格条件 <code>「申请人」所含字眼就是「哈药集团」四个字</code></li>
</ol>
<br>
<h3 id="31-宽松条件">3.1 宽松条件</h3>
<p>把「申请人」含「哈药集团」字眼的记录筛选出来</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">)</span><span class="o">==</span><span class="kc">True</span><span class="p">]</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df2</span><span class="p">))</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<p>返回结果可以看到，申请人主体是有很多个不同的主体，都是「哈药集团」附属的子公司或分厂。</p>
<br>
<h3 id="31-严格条件">3.1 严格条件</h3>
<p>「申请人」所含字眼就是「哈药集团」四个字</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">]</span>

<span class="n">df3</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<p>严格条件筛选后，符合的记录数量为0 。 「哈药集团」这四个字是上市公司名称的缩写简写，所以直接这样做筛选，一般得到的结果都是0。  实际上，一个完整的公司名一般是 「属地+公司名+股份有限公司」。例如，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df4</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;哈药集团三精制药四厂有限公司&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df4</span><span class="p">))</span>
<span class="n">df4</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">28
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<br>
<h2 id="四其他操作">四、其他操作</h2>
<h3 id="41-类型字段">4.1 类型字段</h3>
<p>想了解「哈药集团」相关公司「专利领域」的分布情况</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">]</span>

<span class="n">df3</span><span class="p">[</span><span class="s1">&#39;专利领域&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">工程科技Ⅱ辑            265
医药卫生科技            250
工程科技Ⅰ辑            157
基础科学               34
农业科技                5
工程科技Ⅰ辑; 工程科技Ⅱ辑      1
Name: 专利领域, dtype: int64
</code></pre></div><p>可以看到 「哈药集团」 在医药相关的领域布局较多，农业科技只有5个，从中可以看出 「哈药集团」还是一个技术很专注的企业。</p>
<br>
<h3 id="42-如何剔除nan">4.2 如何剔除Nan</h3>
<p>如果对某个字段感兴趣， 比如「国际申请」</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;国际申请&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0         NaN
1         NaN
2         NaN
3         NaN
4         NaN
         ... 
357876    NaN
357877    NaN
357878    NaN
357879    NaN
357880    NaN
Name: 国际申请, Length: 357881, dtype: object
</code></pre></div><p>但肉眼所见全是Nan， <strong>如何剔除掉Nan， 显露出非Nan的记录呢？</strong></p>
<p>解决办法依然是使用DataFrame的逻辑布尔筛选数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="o">~</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;国际申请&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()]</span>
</code></pre></div><p><img loading="lazy" src="img/df5.png" alt=""  />

<br></p>
<br>
<h2 id="五获取3751w专利数据集">五、获取3751w专利数据集</h2>
<p>该数据集为付费数据集， 如需数据，点击该链接 <a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/">数据集(付费) | 3571万条专利申请数据集(1985-2022年)</a> 进行购买。</p>
<p><br><br></p>
<h2 id="相关资料">相关资料</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2023-12-22-patent-transform-exchange-dataset/">数据集 | 专利转让数据集(1985-2021)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/">数据集 | 上市公司 208 万条专利数据集 (1991-2022)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2028-12-18-how-to-extract-data-from-patent-application-dataset/"><strong>代码 | 使用3571w专利申请数据集构造「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-04-26-matching-listed-corporate-with-patent-dataset/">从3571w条专利数据集「匹配」上市公司的专利信息</a></p>
</li>
</ul>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>实验 | 互联网黑话与MD&amp;A</title>
      <link>https://textdata.cn/blog/2023-04-26-chinese-it-industry-slangs-words/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-26-chinese-it-industry-slangs-words/</guid>
      <description>&lt;p&gt;最近大邓意外发现，使用mda预训练语言模型扩展互联网黑近义词，模型返回的有鼻子有眼的，这意味着上市公司高管在md&amp;amp;a中可能频繁使用了互联网黑话。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一互联网黑话&#34;&gt;一、互联网黑话&lt;/h2&gt;
&lt;h3 id=&#34;二字动词&#34;&gt;二字动词&lt;/h3&gt;
&lt;p&gt;复盘，赋能，沉淀，倒逼，落地，串联，协同，反晡，兼容，包装，重组，履约，晌应，量化，发力，布局，联动，细分，梳理，输出，加速，共建，支撑，融合，聚合，集成，对齐，对标，对焦，拆解，拉通，抽象，摸索，提炼，打通，打透，吃透，迁移，分发，分层，分装，穿梭，辐射，围绕，复用，渗透，扩展，开拓。&lt;/p&gt;
&lt;h3 id=&#34;二字名词&#34;&gt;二字名词&lt;/h3&gt;
&lt;p&gt;漏斗，中台，闭环，打法，拉通，纽带，矩阵，刺激，规模，场景，聚焦，维度，格局，形态，生态，话术，体系，抓手，赛道，认知，玩法，体感，感知，调性，心智，战役，合力，心力。&lt;/p&gt;
&lt;h3 id=&#34;三字名词&#34;&gt;三字名词&lt;/h3&gt;
&lt;p&gt;颗粒度，感知度，方法论，组合拳，引爆点，点线面，精细化，差异化，平台化，结构化，影响力，耦合性，易用性，一致性，端到端，短平快。&lt;/p&gt;
&lt;h3 id=&#34;四字名词&#34;&gt;四字名词&lt;/h3&gt;
&lt;p&gt;生命周期，价值转化，强化认知，资源倾斜，完善逻辑，抽离透传，复用打法，商业模式，快速响应，定性定量，关键路径，去中心化，结果导向，垂直领域，如何收口，归因分析，体验度量，信息屏障。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二模型近义词&#34;&gt;二、模型近义词&lt;/h2&gt;
&lt;p&gt;之前分享过一个中文金融领域的word2vec预训练语言模型，这里就不详细介绍模型参数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/&#34;&gt;使用中文MD&amp;amp;A数据集训练word2vec预训练模型， 可扩展或新建会计金融等领域的情感词典&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;文本分析最常用的方法是词典法(例如，LIWC)，而词向量模型可以帮助我们扩展或者构建概念情感词典。&lt;/p&gt;
&lt;p&gt;现在给大家演示只给一个词，返回topn个语义最相关的词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 与 seedwords 最相关的前topn个词&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# wv是预训练语言模型&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;复盘&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;复盘&amp;#39;,
 &amp;#39;检视&amp;#39;,
 &amp;#39;检讨&amp;#39;,
 &amp;#39;KPI&amp;#39;,
 &amp;#39;考核评估&amp;#39;,
 &amp;#39;量化考核&amp;#39;,
 &amp;#39;跟踪考核&amp;#39;,
 &amp;#39;纠偏&amp;#39;,
 &amp;#39;过程跟踪&amp;#39;,
 &amp;#39;分析总结&amp;#39;,
 &amp;#39;KPI指标&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;赋能&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;赋能&amp;#39;,
 &amp;#39;技术赋能&amp;#39;,
 &amp;#39;全面赋能&amp;#39;,
 &amp;#39;平台赋能&amp;#39;,
 &amp;#39;科技赋能&amp;#39;,
 &amp;#39;助力&amp;#39;,
 &amp;#39;数字化赋能&amp;#39;,
 &amp;#39;数据赋能&amp;#39;,
 &amp;#39;数智化&amp;#39;,
 &amp;#39;数据驱动&amp;#39;,
 &amp;#39;生态构建&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;感知度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;感知度&amp;#39;,
 &amp;#39;体验度&amp;#39;,
 &amp;#39;产品认知度&amp;#39;,
 &amp;#39;知晓度&amp;#39;,
 &amp;#39;购买率&amp;#39;,
 &amp;#39;品牌黏性&amp;#39;,
 &amp;#39;满意度忠诚度&amp;#39;,
 &amp;#39;忠诚度美誉度&amp;#39;,
 &amp;#39;消费者满意度&amp;#39;,
 &amp;#39;体验满意度&amp;#39;,
 &amp;#39;好感度&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;倒逼&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;倒逼&amp;#39;, 
&amp;#39;倒逼企业&amp;#39;, 
&amp;#39;势在必行&amp;#39;, 
&amp;#39;迫使&amp;#39;, 
&amp;#39;大势所趋&amp;#39;, 
&amp;#39;促使&amp;#39;, 
&amp;#39;优胜劣汰&amp;#39;, 
&amp;#39;加速淘汰&amp;#39;, 
&amp;#39;势必&amp;#39;, 
&amp;#39;趋严&amp;#39;, 
&amp;#39;成为常态&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;闭环&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;闭环&amp;#39;,
&amp;#39;完整闭环&amp;#39;, 
&amp;#39;全链路&amp;#39;, 
&amp;#39;全链条&amp;#39;, 
&amp;#39;全流程&amp;#39;, 
&amp;#39;闭环式&amp;#39;, 
&amp;#39;端端&amp;#39;, 
&amp;#39;端到端&amp;#39;, 
&amp;#39;服务闭环&amp;#39;, 
&amp;#39;全周期&amp;#39;, 
&amp;#39;闭环管理&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;端到端&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;端到端&amp;#39;,
 &amp;#39;端端&amp;#39;,
 &amp;#39;端到端的&amp;#39;,
 &amp;#39;全链路&amp;#39;,
 &amp;#39;端端的&amp;#39;,
 &amp;#39;数字化运营&amp;#39;,
 &amp;#39;全业务流程&amp;#39;,
 &amp;#39;场景全&amp;#39;,
 &amp;#39;全链条&amp;#39;,
 &amp;#39;敏捷&amp;#39;,
 &amp;#39;全价值链&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到， 返回的近义词都是挺互联网范儿的。 只有较为频繁使用， 语言模型才有可能捕捉到这种语义关系。这从侧面反映了近年来互联网高级黑话影响力之大。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三获取模型&#34;&gt;三、获取模型&lt;/h2&gt;
&lt;p&gt;模型训练不易， 为付费资源，如需使用请 &lt;a href=&#34;https://mp.weixin.qq.com/s/zle9-BR-ei1V8Nmul19_7w&#34;&gt;&lt;strong&gt;点击进入跳转购买链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;期待合作&#34;&gt;期待合作&lt;/h2&gt;
&lt;p&gt;cntext目前仍在技术迭代，版本2.0.0综合了训练语言模型&amp;amp;多语言模型对齐， 有较大的应用价值，期待有独特文本数据集交流合作。&lt;/p&gt;
&lt;p&gt;通过cntext2.0.0，理论上可以对文本所涉社会主体进行计算，适合企业文化、品牌印象、旅游目的地形象、国家形象等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同主体不同时间段， 文本中蕴含的文化态度认知变迁，&lt;/li&gt;
&lt;li&gt;或同时间段，不同主体的大样本文本蕴含的差异性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<p>最近大邓意外发现，使用mda预训练语言模型扩展互联网黑近义词，模型返回的有鼻子有眼的，这意味着上市公司高管在md&amp;a中可能频繁使用了互联网黑话。</p>
<p><br><br></p>
<h2 id="一互联网黑话">一、互联网黑话</h2>
<h3 id="二字动词">二字动词</h3>
<p>复盘，赋能，沉淀，倒逼，落地，串联，协同，反晡，兼容，包装，重组，履约，晌应，量化，发力，布局，联动，细分，梳理，输出，加速，共建，支撑，融合，聚合，集成，对齐，对标，对焦，拆解，拉通，抽象，摸索，提炼，打通，打透，吃透，迁移，分发，分层，分装，穿梭，辐射，围绕，复用，渗透，扩展，开拓。</p>
<h3 id="二字名词">二字名词</h3>
<p>漏斗，中台，闭环，打法，拉通，纽带，矩阵，刺激，规模，场景，聚焦，维度，格局，形态，生态，话术，体系，抓手，赛道，认知，玩法，体感，感知，调性，心智，战役，合力，心力。</p>
<h3 id="三字名词">三字名词</h3>
<p>颗粒度，感知度，方法论，组合拳，引爆点，点线面，精细化，差异化，平台化，结构化，影响力，耦合性，易用性，一致性，端到端，短平快。</p>
<h3 id="四字名词">四字名词</h3>
<p>生命周期，价值转化，强化认知，资源倾斜，完善逻辑，抽离透传，复用打法，商业模式，快速响应，定性定量，关键路径，去中心化，结果导向，垂直领域，如何收口，归因分析，体验度量，信息屏障。</p>
<p><br><br></p>
<h2 id="二模型近义词">二、模型近义词</h2>
<p>之前分享过一个中文金融领域的word2vec预训练语言模型，这里就不详细介绍模型参数。</p>
<p><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">使用中文MD&amp;A数据集训练word2vec预训练模型， 可扩展或新建会计金融等领域的情感词典</a></p>
<br>
<p>文本分析最常用的方法是词典法(例如，LIWC)，而词向量模型可以帮助我们扩展或者构建概念情感词典。</p>
<p>现在给大家演示只给一个词，返回topn个语义最相关的词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 与 seedwords 最相关的前topn个词</span>
<span class="c1"># wv是预训练语言模型</span>
<span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;复盘&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;复盘&#39;,
 &#39;检视&#39;,
 &#39;检讨&#39;,
 &#39;KPI&#39;,
 &#39;考核评估&#39;,
 &#39;量化考核&#39;,
 &#39;跟踪考核&#39;,
 &#39;纠偏&#39;,
 &#39;过程跟踪&#39;,
 &#39;分析总结&#39;,
 &#39;KPI指标&#39;]
</code></pre></div> <br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;赋能&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;赋能&#39;,
 &#39;技术赋能&#39;,
 &#39;全面赋能&#39;,
 &#39;平台赋能&#39;,
 &#39;科技赋能&#39;,
 &#39;助力&#39;,
 &#39;数字化赋能&#39;,
 &#39;数据赋能&#39;,
 &#39;数智化&#39;,
 &#39;数据驱动&#39;,
 &#39;生态构建&#39;]
</code></pre></div> <br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;感知度&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;感知度&#39;,
 &#39;体验度&#39;,
 &#39;产品认知度&#39;,
 &#39;知晓度&#39;,
 &#39;购买率&#39;,
 &#39;品牌黏性&#39;,
 &#39;满意度忠诚度&#39;,
 &#39;忠诚度美誉度&#39;,
 &#39;消费者满意度&#39;,
 &#39;体验满意度&#39;,
 &#39;好感度&#39;]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;倒逼&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;倒逼&#39;, 
&#39;倒逼企业&#39;, 
&#39;势在必行&#39;, 
&#39;迫使&#39;, 
&#39;大势所趋&#39;, 
&#39;促使&#39;, 
&#39;优胜劣汰&#39;, 
&#39;加速淘汰&#39;, 
&#39;势必&#39;, 
&#39;趋严&#39;, 
&#39;成为常态&#39;]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;闭环&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;闭环&#39;,
&#39;完整闭环&#39;, 
&#39;全链路&#39;, 
&#39;全链条&#39;, 
&#39;全流程&#39;, 
&#39;闭环式&#39;, 
&#39;端端&#39;, 
&#39;端到端&#39;, 
&#39;服务闭环&#39;, 
&#39;全周期&#39;, 
&#39;闭环管理&#39;]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;端到端&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;端到端&#39;,
 &#39;端端&#39;,
 &#39;端到端的&#39;,
 &#39;全链路&#39;,
 &#39;端端的&#39;,
 &#39;数字化运营&#39;,
 &#39;全业务流程&#39;,
 &#39;场景全&#39;,
 &#39;全链条&#39;,
 &#39;敏捷&#39;,
 &#39;全价值链&#39;]
</code></pre></div><p>可以看到， 返回的近义词都是挺互联网范儿的。 只有较为频繁使用， 语言模型才有可能捕捉到这种语义关系。这从侧面反映了近年来互联网高级黑话影响力之大。</p>
<p><br><br></p>
<h2 id="三获取模型">三、获取模型</h2>
<p>模型训练不易， 为付费资源，如需使用请 <a href="https://mp.weixin.qq.com/s/zle9-BR-ei1V8Nmul19_7w"><strong>点击进入跳转购买链接</strong></a></p>
<p><br><br></p>
<h2 id="期待合作">期待合作</h2>
<p>cntext目前仍在技术迭代，版本2.0.0综合了训练语言模型&amp;多语言模型对齐， 有较大的应用价值，期待有独特文本数据集交流合作。</p>
<p>通过cntext2.0.0，理论上可以对文本所涉社会主体进行计算，适合企业文化、品牌印象、旅游目的地形象、国家形象等</p>
<ul>
<li>同主体不同时间段， 文本中蕴含的文化态度认知变迁，</li>
<li>或同时间段，不同主体的大样本文本蕴含的差异性</li>
</ul>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 3571万条专利申请数据集(1985-2022年)</title>
      <link>https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/</link>
      <pubDate>Thu, 13 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/</guid>
      <description>3571万专利申请全量数据(1985-2022年)数据</description>
      <content:encoded><![CDATA[<h2 id="相关推文">相关推文</h2>
<p><a href="https://textdata.cn/blog/2023-04-26-matching-listed-corporate-with-patent-dataset/">从3571w条专利数据集「匹配」上市公司的专利信息</a></p>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">推荐 | 如何处理远超电脑内存的csv文件</a></p>
<p><br><br></p>
<p>3571万专利申请全量数据(<strong>1985.01 ~ 2022.5</strong>)数据，解压后整个文件夹大概 20 G。</p>
<p><img loading="lazy" src="img/screen-datasets.png" alt=""  />
</p>
<br>
<p>为了方便各位下载，对数据进行了压缩，压缩后整个文件夹体积大概20G 。gz可以用常见的解压软件解压，如 bandizip、winrar。</p>
<p><img loading="lazy" src="img/screen-datasets2.png" alt=""  />
</p>
<br>
<h2 id="一数据介绍">一、数据介绍</h2>
<h3 id="11-数据集概况">1.1 数据集概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 数据集名称：省份版知识产权局专利
- 时间跨度：1985.1-2022.5，专利申请总量3571万
- 数据来源：『国家知识产权局』
- 数据整理: 『公众号:大邓和他的Python』
</code></pre></div><p><span style="font-size: 18px;color: green;">1. 付费数据集，100元；加微信 372335839， 备注「姓名-学校-专业」。</span></p>
<p><span style="font-size: 18px;color: green;">2. 数据是虚拟产品，一经售出，不再退还！</span></p>
<p><span style="font-size: 18px;color: green;">3. 大家时间其实都很宝贵，请仔细阅读推文内容， 确认无误再加微信详谈购买事宜 </span></p>
<br>
<h3 id="12-分省统计">1.2 分省统计</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">| 省份(区域)       |  专利数  |
| :---------------| :------ |
| 广东省           | 5728705 |
| 江苏省           | 4879171 |
| 浙江省           | 3706820 |
| 山东省           | 2064446 |
| 北京市           | 2069913 |
| 四川省           | 1159551 |
| 天津市           | 712932  |
| 上海市           | 1548278 |
| 贵州省           | 265512  |
| 陕西省           | 655837  |
| 吉林省           | 232264  |
| 辽宁省           | 637853  |
| 湖北省           | 966384  |
| 山西省           | 233418  |
| 宁夏回族自治区    | 66919   |
| 西藏自治区        | 9911    |
| 广西壮族自治区    | 377658  |
| 江西省           | 519584  |
| 湖南省           | 743828  |
| 黑龙江省         | 357881  |
| 海南省           | 59202   |
| 福建省           | 1046473 |
| 安徽省           | 1342364 |
| 河北省           | 645420  |
| 重庆市           | 592382  |
| 内蒙古自治区      | 133277  |
| 云南省           | 252407  |
| 甘肃省           | 164274  |
| 新疆维吾尔自治区   | 124734  |
| 河南省           | 966477  |
| 青海省           | 34127   |
| 台湾省           | 401555  |
| 香港特别行政区    | 61636   |
| 澳门特别行政区    | 2010    |
| 其他国家         | 2948557 |
</code></pre></div><br>
<h3 id="13-字段">1.3 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> -  专利公开号
 -  专利名称
 -  专利类型
 -  专利摘要
 -  申请人(自然人、法人；可以是多个主题并列，用;间隔申请人主体)
 -  专利申请号
 -  申请日
 -  申请公布日
 -  授权公布号
 -  授权公布日
 -  申请地址
 -  主权项
 -  发明人
 -  分类号
 -  主分类号
 -  代理机构
 -  分案原申请号
 -  优先权
 -  国际申请
 -  国际公布
 -  代理人
 -  省份或国家代码
 -  法律状态
 -  专利领域
 -  专利学科
 -  多次公布
</code></pre></div><p><br><br></p>
<h2 id="二实验代码">二、实验代码</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>数据集中的个别csv文件较大，例如 <strong>广东省.csv.gz</strong>体积2.47 G , 解压得到的 <strong>广东省.csv</strong> 10G。 建议直接读取 <em><strong>.csv.gz</strong></em>，这样会节省内存消耗。需要注意每次分析时不要开其他软件，如Word/PPT/Excel/WPS。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;河北省.csv.gz&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="c1">#df = pd.read_csv(&#39;河北省.csv&#39;, encoding=&#39;utf-8&#39;, low_memory=False)</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run
<img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<h3 id="22-记录数">2.2 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;河北省: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">河北省: 645420
</code></pre></div><br>
<h3 id="2-3-覆盖日期">2. 3 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1985-01-28 00:00:00
2022-05-24 00:00:00
</code></pre></div><br>
<h3 id="24-字段">2.4 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;专利公开号&#39;, &#39;专利名称&#39;, &#39;专利类型&#39;, &#39;专利摘要&#39;, 
&#39;申请人&#39;, &#39;专利申请号&#39;, &#39;申请日&#39;, &#39;申请公布日&#39;, 
&#39;授权公布号&#39;, &#39;授权公布日&#39;, &#39;申请地址&#39;, &#39;主权项&#39;, &#39;发明人&#39;,
&#39;分类号&#39;, &#39;主分类号&#39;, &#39;代理机构&#39;, &#39;分案原申请号&#39;, &#39;优先权&#39;, 
&#39;国际申请&#39;, &#39;国际公布&#39;, &#39;代理人&#39;, &#39;省份或国家代码&#39;,
&#39;法律状态&#39;, &#39;专利领域&#39;, &#39;专利学科&#39;, &#39;多次公布&#39;],
dtype=&#39;object&#39;)
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">实用新型 361832
发明公开 155084
外观设计 107905
发明授权 20599
</code></pre></div><p><br><br></p>
<h2 id="三查看字段详情">三、查看字段详情</h2>
<p>每个字段都含哪些信息</p>
<h3 id="31-专利类型">3.1 专利类型</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;专利类型&#39;].unique()
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([&#39;外观设计&#39;, &#39;实用新型&#39;, &#39;发明公开&#39;, &#39;发明授权&#39;], dtype=object)
专利领域
</code></pre></div><br>
<h3 id="32-发明人">3.2 发明人</h3>
<p>发明人一般是自然人，但是极少数情况也可以是法人。发明人可以是多个自然人，一般以  <code>; </code>间隔</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;发明人&#39;]
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0                              温绍强
1                              谭红建
2                              梁京京
3                              谭达兴
4                         魏国兴; 陈定祥
                    ...           
5728700                        邓晓明
5728701                        杨峰铭
5728702    赵富荣; 彭新春; 秦何军; 黄领才; 陈立伟
5728703                   周燕莉; 卢建兰
5728704                        曾文华
Name: 发明人, Length: 5728705, dtype: object
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#整个广东省，只有这几个专利是法人发明</span>
<span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;发明人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;公司&#39;</span><span class="p">)][[</span><span class="s1">&#39;专利名称&#39;</span><span class="p">,</span> <span class="s1">&#39;发明人&#39;</span><span class="p">]]</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<h3 id="33-申请人">3.3 申请人</h3>
<p>注意，申请人可以是自然人、法人、多个(自然人、法人),  一般以  <code>; </code>间隔。我们先直接看 <code>申请人</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0                      温绍强
1          台山市国际交通器材配件有限公司
2            深圳市时代设计印务有限公司
3           东莞高端精密电子股份有限公司
4           东莞凤岗嘉安塑胶五金有限公司
                ...       
5728700     佛山肯富来安德里兹泵有限公司
5728701        东莞全方位傢俱有限公司
5728702        中航通飞研究院有限公司
5728703         南方医科大学南方医院
5728704    深圳市金键精密五金制品有限公司
Name: 申请人, Length: 5728705, dtype: object
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)][[</span><span class="s1">&#39;专利名称&#39;</span><span class="p">,</span> <span class="s1">&#39;申请人&#39;</span><span class="p">]]</span>
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<h3 id="34-分类号">3.4 分类号</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;分类号&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0                                                 08-06
1                                                 12-16
2                                              B65D6/14
3                                   H01R13/40;H01R13/02
4          B65C9/02;B65C9/40;B65C9/26;B07C5/34;B07C5/36
                               ...                     
5728700                                           15-02
5728701                                           06-03
5728702                                       B64C35/00
5728703                                       A61G7/053
5728704                               F16B5/00;F16B5/10
Name: 分类号, Length: 5728705, dtype: object
</code></pre></div><br>
<h3 id="35-主分类号">3.5 主分类号</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;主分类号&#39;]
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0              08-06
1              12-16
2           B65D6/14
3          H01R13/40
4           B65C9/02
             ...    
5728700        15-02
5728701        06-03
5728702    B64C35/00
5728703    A61G7/053
5728704     F16B5/00
Name: 主分类号, Length: 5728705, dtype: object
</code></pre></div><br>
<h3 id="36-专利领域">3.6 专利领域</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;专利领域&#39;]
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0                  工程科技Ⅰ辑
1                  工程科技Ⅱ辑
2                  工程科技Ⅱ辑
3                  工程科技Ⅱ辑
4                  工程科技Ⅱ辑
                ...      
5728700            工程科技Ⅱ辑
5728701            工程科技Ⅰ辑
5728702            工程科技Ⅱ辑
5728703    医药卫生科技; 工程科技Ⅱ辑
5728704            工程科技Ⅱ辑
Name: 专利领域, Length: 5728705, dtype: object
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;专利领域&#39;].unique()
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([&#39;工程科技Ⅰ辑&#39;, &#39;工程科技Ⅱ辑&#39;, &#39;农业科技&#39;, &#39;医药卫生科技&#39;, &#39;医药卫生科技; 工程科技Ⅱ辑&#39;, &#39;信息科技&#39;,
       &#39;工程科技Ⅱ辑; 信息科技&#39;, &#39;工程科技Ⅰ辑; 工程科技Ⅱ辑&#39;, &#39;工程科技Ⅱ辑; 工程科技Ⅰ辑&#39;,
       &#39;工程科技Ⅱ辑; 医药卫生科技&#39;, &#39;基础科学&#39;, &#39;社会科学Ⅱ辑&#39;, &#39;基础科学; 信息科技&#39;, &#39;信息科技; 工程科技Ⅰ辑&#39;,
       &#39;工程科技Ⅰ辑; 信息科技&#39;, &#39;基础科学; 工程科技Ⅰ辑&#39;, &#39;工程科技Ⅰ辑; 农业科技&#39;, &#39;工程科技Ⅰ辑; 医药卫生科技&#39;,
       &#39;农业科技; 工程科技Ⅰ辑&#39;, &#39;工程科技Ⅱ辑; 哲学与人文科学&#39;], dtype=object)
</code></pre></div><br>
<h3 id="37-专利学科">3.7 专利学科</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利学科&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0                                   轻工业手工业
1                                     汽车工业
2                                工业通用技术及设备
3                                     电力工业
4                                工业通用技术及设备
                        ...               
5728700                               机械工业
5728701                             轻工业手工业
5728702                          航空航天科学与工程
5728703    医药卫生方针政策与法律法规研究; 生物医学工程; 仪器仪表工业
5728704                               机械工业
Name: 专利学科, Length: 5728705, dtype: object
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">array</span><span class="p">([</span><span class="s1">&#39;轻工业手工业&#39;</span><span class="p">,</span> <span class="s1">&#39;汽车工业&#39;</span><span class="p">,</span> <span class="s1">&#39;工业通用技术及设备&#39;</span><span class="p">,</span> <span class="s1">&#39;电力工业&#39;</span><span class="p">,</span> <span class="s1">&#39;园艺&#39;</span><span class="p">,</span> <span class="s1">&#39;机械工业&#39;</span><span class="p">,</span>
       <span class="s1">&#39;医药卫生方针政策与法律法规研究; 中医学&#39;</span><span class="p">,</span> <span class="s1">&#39;医药卫生方针政策与法律法规研究; 生物医学工程; 仪器仪表工业&#39;</span><span class="p">,</span>
       <span class="s1">&#39;金属学及金属工艺&#39;</span><span class="p">,</span> <span class="s1">&#39;电信技术&#39;</span><span class="p">,</span> <span class="s1">&#39;外科学&#39;</span><span class="p">,</span> <span class="s1">&#39;无线电电子学&#39;</span><span class="p">,</span> <span class="s1">&#39;建筑科学与工程&#39;</span><span class="p">,</span> <span class="s1">&#39;船舶工业&#39;</span><span class="p">,</span> <span class="s1">&#39;材料科学&#39;</span><span class="p">,</span>
       <span class="s1">&#39;仪器仪表工业&#39;</span><span class="p">,</span> <span class="s1">&#39;动力工程&#39;</span><span class="p">,</span> <span class="s1">&#39;生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;一般服务业&#39;</span><span class="p">,</span> <span class="s1">&#39;有机化工&#39;</span><span class="p">,</span> <span class="s1">&#39;水产和渔业&#39;</span><span class="p">,</span> <span class="s1">&#39;自动化技术&#39;</span><span class="p">,</span>
       <span class="s1">&#39;有机化工; 无机化工&#39;</span><span class="p">,</span> <span class="s1">&#39;武器工业与军事技术&#39;</span><span class="p">,</span> <span class="s1">&#39;计算机硬件技术&#39;</span><span class="p">,</span> <span class="s1">&#39;工业通用技术及设备; 电信技术&#39;</span><span class="p">,</span>
       <span class="s1">&#39;环境科学与资源利用&#39;</span><span class="p">,</span> <span class="s1">&#39;水利水电工程&#39;</span><span class="p">,</span> <span class="s1">&#39;一般化学工业&#39;</span><span class="p">,</span> <span class="s1">&#39;公路与水路运输&#39;</span><span class="p">,</span> <span class="s1">&#39;有机化工; 无机化工; 矿业工程&#39;</span><span class="p">,</span>
       <span class="s1">&#39;眼科与耳鼻咽喉科&#39;</span><span class="p">,</span> <span class="s1">&#39;口腔科学&#39;</span><span class="p">,</span> <span class="s1">&#39;园艺; 林业&#39;</span><span class="p">,</span> <span class="s1">&#39;新能源&#39;</span><span class="p">,</span> <span class="s1">&#39;无机化工&#39;</span><span class="p">,</span> <span class="s1">&#39;无机化工; 有机化工&#39;</span><span class="p">,</span>
       <span class="s1">&#39;临床医学; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;有机化工; 无机化工; 工业通用技术及设备&#39;</span><span class="p">,</span> <span class="s1">&#39;生物医学工程; 仪器仪表工业&#39;</span><span class="p">,</span> <span class="s1">&#39;化学&#39;</span><span class="p">,</span>
       <span class="s1">&#39;航空航天科学与工程&#39;</span><span class="p">,</span> <span class="s1">&#39;畜牧与动物医学&#39;</span><span class="p">,</span> <span class="s1">&#39;农业工程; 畜牧与动物医学&#39;</span><span class="p">,</span> <span class="s1">&#39;临床医学&#39;</span><span class="p">,</span> <span class="s1">&#39;轻工业手工业; 仪器仪表工业&#39;</span><span class="p">,</span>
       <span class="s1">&#39;计算机软件及计算机应用&#39;</span><span class="p">,</span> <span class="s1">&#39;蚕蜂与野生动物保护; 农业工程&#39;</span><span class="p">,</span> <span class="s1">&#39;农业工程&#39;</span><span class="p">,</span> <span class="s1">&#39;中医学&#39;</span><span class="p">,</span> <span class="s1">&#39;有机化工; 矿业工程&#39;</span><span class="p">,</span>
       <span class="s1">&#39;建筑科学与工程; 环境科学与资源利用&#39;</span><span class="p">,</span> <span class="s1">&#39;仪器仪表工业; 医药卫生方针政策与法律法规研究; 生物医学工程&#39;</span><span class="p">,</span>
       <span class="s1">&#39;建筑科学与工程; 公路与水路运输&#39;</span><span class="p">,</span> <span class="s1">&#39;矿业工程&#39;</span><span class="p">,</span> <span class="s1">&#39;药学&#39;</span><span class="p">,</span> <span class="s1">&#39;安全科学与灾害防治&#39;</span><span class="p">,</span> <span class="s1">&#39;农艺学&#39;</span><span class="p">,</span> <span class="s1">&#39;化学; 无机化工&#39;</span><span class="p">,</span>
       <span class="s1">&#39;冶金工业&#39;</span><span class="p">,</span> <span class="s1">&#39;核科学技术&#39;</span><span class="p">,</span> <span class="s1">&#39;铁路运输; 公路与水路运输&#39;</span><span class="p">,</span> <span class="s1">&#39;泌尿科学&#39;</span><span class="p">,</span> <span class="s1">&#39;外科学; 生物医学工程&#39;</span><span class="p">,</span>
       <span class="s1">&#39;蚕蜂与野生动物保护&#39;</span><span class="p">,</span> <span class="s1">&#39;医药卫生方针政策与法律法规研究&#39;</span><span class="p">,</span> <span class="s1">&#39;物理学&#39;</span><span class="p">,</span> <span class="s1">&#39;工业通用技术及设备; 机械工业&#39;</span><span class="p">,</span> <span class="s1">&#39;铁路运输&#39;</span><span class="p">,</span>
       <span class="s1">&#39;体育&#39;</span><span class="p">,</span> <span class="s1">&#39;预防医学与卫生学; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;物理学; 无线电电子学&#39;</span><span class="p">,</span> <span class="s1">&#39;预防医学与卫生学&#39;</span><span class="p">,</span> <span class="s1">&#39;植物保护&#39;</span><span class="p">,</span>
       <span class="s1">&#39;呼吸系统疾病&#39;</span><span class="p">,</span> <span class="s1">&#39;无线电电子学; 轻工业手工业&#39;</span><span class="p">,</span> <span class="s1">&#39;畜牧与动物医学; 水产和渔业&#39;</span><span class="p">,</span> <span class="s1">&#39;气象学&#39;</span><span class="p">,</span> <span class="s1">&#39;特种医学&#39;</span><span class="p">,</span>
       <span class="s1">&#39;消化系统疾病&#39;</span><span class="p">,</span> <span class="s1">&#39;无机化工; 有机化工; 工业通用技术及设备&#39;</span><span class="p">,</span> <span class="s1">&#39;农业基础科学&#39;</span><span class="p">,</span> <span class="s1">&#39;金属学及金属工艺; 轻工业手工业&#39;</span><span class="p">,</span>
       <span class="s1">&#39;水产和渔业; 畜牧与动物医学&#39;</span><span class="p">,</span> <span class="s1">&#39;燃料化工&#39;</span><span class="p">,</span> <span class="s1">&#39;林业&#39;</span><span class="p">,</span> <span class="s1">&#39;生物学&#39;</span><span class="p">,</span> <span class="s1">&#39;轻工业手工业; 出版&#39;</span><span class="p">,</span>
       <span class="s1">&#39;医药卫生方针政策与法律法规研究; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;有机化工; 轻工业手工业&#39;</span><span class="p">,</span> <span class="s1">&#39;公路与水路运输; 矿业工程&#39;</span><span class="p">,</span>
       <span class="s1">&#39;轻工业手工业; 计算机硬件技术&#39;</span><span class="p">,</span> <span class="s1">&#39;地质学&#39;</span><span class="p">,</span> <span class="s1">&#39;海洋学&#39;</span><span class="p">,</span> <span class="s1">&#39;地质学; 石油天然气工业&#39;</span><span class="p">,</span> <span class="s1">&#39;公路与水路运输; 铁路运输&#39;</span><span class="p">,</span>
       <span class="s1">&#39;有机化工; 化学&#39;</span><span class="p">,</span> <span class="s1">&#39;特种医学; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;自然地理学和测绘学&#39;</span><span class="p">,</span> <span class="s1">&#39;轻工业手工业; 林业&#39;</span><span class="p">,</span> <span class="s1">&#39;中药学&#39;</span><span class="p">,</span>
       <span class="s1">&#39;一般化学工业; 轻工业手工业&#39;</span><span class="p">,</span> <span class="s1">&#39;妇产科学&#39;</span><span class="p">,</span> <span class="s1">&#39;中西医结合&#39;</span><span class="p">,</span> <span class="s1">&#39;临床医学; 特种医学&#39;</span><span class="p">,</span> <span class="s1">&#39;燃料化工; 轻工业手工业&#39;</span><span class="p">,</span>
       <span class="s1">&#39;地球物理学&#39;</span><span class="p">,</span> <span class="s1">&#39;化学; 有机化工&#39;</span><span class="p">,</span> <span class="s1">&#39;公路与水路运输; 建筑科学与工程&#39;</span><span class="p">,</span> <span class="s1">&#39;轻工业手工业; 水产和渔业&#39;</span><span class="p">,</span>
       <span class="s1">&#39;石油天然气工业&#39;</span><span class="p">,</span> <span class="s1">&#39;眼科与耳鼻咽喉科; 口腔科学&#39;</span><span class="p">,</span> <span class="s1">&#39;肿瘤学&#39;</span><span class="p">,</span> <span class="s1">&#39;环境科学与资源利用; 建筑科学与工程&#39;</span><span class="p">,</span> <span class="s1">&#39;基础医学&#39;</span><span class="p">,</span>
       <span class="s1">&#39;急救医学&#39;</span><span class="p">,</span> <span class="s1">&#39;仪器仪表工业; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;心血管系统疾病&#39;</span><span class="p">,</span> <span class="s1">&#39;互联网技术&#39;</span><span class="p">,</span> <span class="s1">&#39;矿业工程; 公路与水路运输&#39;</span><span class="p">,</span>
       <span class="s1">&#39;农作物&#39;</span><span class="p">,</span> <span class="s1">&#39;公路与水路运输; 水利水电工程&#39;</span><span class="p">,</span> <span class="s1">&#39;水利水电工程; 电力工业&#39;</span><span class="p">,</span> <span class="s1">&#39;畜牧与动物医学; 农业工程&#39;</span><span class="p">,</span>
       <span class="s1">&#39;材料科学; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;安全科学与灾害防治; 建筑科学与工程&#39;</span><span class="p">,</span> <span class="s1">&#39;植物保护; 农艺学&#39;</span><span class="p">,</span>
       <span class="s1">&#39;轻工业手工业; 一般化学工业&#39;</span><span class="p">,</span> <span class="s1">&#39;消化系统疾病; 外科学&#39;</span><span class="p">,</span> <span class="s1">&#39;水产和渔业; 轻工业手工业&#39;</span><span class="p">,</span>
       <span class="s1">&#39;建筑科学与工程; 安全科学与灾害防治&#39;</span><span class="p">,</span> <span class="s1">&#39;农作物; 园艺&#39;</span><span class="p">,</span> <span class="s1">&#39;急救医学; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;水利水电工程; 公路与水路运输&#39;</span><span class="p">,</span>
       <span class="s1">&#39;皮肤病与性病&#39;</span><span class="p">,</span> <span class="s1">&#39;工业通用技术及设备; 戏剧电影与电视艺术&#39;</span><span class="p">,</span> <span class="s1">&#39;眼科与耳鼻咽喉科; 生物医学工程&#39;</span><span class="p">,</span> <span class="s1">&#39;人才学与劳动科学&#39;</span><span class="p">,</span>
       <span class="s1">&#39;外科学; 口腔科学; 生物医学工程&#39;</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">object</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h2 id="四可视化">四、可视化</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#为减轻内存压力，可以选择需要的字段读取</span>
<span class="n">cols</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">,</span> <span class="s1">&#39;授权公布日&#39;</span><span class="p">]</span>

<span class="c1">#读取数据</span>
<span class="n">guangdong_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;广东省.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="n">cols</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">jiangsu_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;江苏省.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="n">cols</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">shandong_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;山东省.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="n">cols</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">zhejiang_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;浙江省.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="n">cols</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">beijing_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;北京市.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="n">cols</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">shanghai_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;上海市.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="n">cols</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>

<span class="c1">#显示前5行</span>
<span class="n">shanghai_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">years</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">2020</span><span class="p">)]</span>


<span class="n">guangdong_df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;广东&#39;</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">jiangsu_df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;江苏&#39;</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">zhejiang_df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;浙江&#39;</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">shandong_df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;山东&#39;</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">beijing_df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;北京&#39;</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">shanghai_df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;上海&#39;</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">hebei_df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;河北&#39;</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>



<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;七省市专利申请量(2000年-2019年)&#39;</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;center&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份(按申请日统计)&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;申请量&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper right&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>    
</code></pre></div><p><img loading="lazy" src="img/output_7_0.png" alt=""  />
</p>
<ul>
<li>
<p>2012年， 申请量开始下降， 直至2014年，触底反弹。这个时期国内外宏观经济发生了什么？</p>
</li>
<li>
<p>不考虑人口规模， 在专利申请量可以看出广东、江苏、浙江体量还是比北京、上海、河北要高的。</p>
</li>
<li>
<p>2015年开始， 广东触底反弹后， 拉开了与江苏、浙江的体量。</p>
</li>
</ul>
<p><br><br></p>
<h2 id="五获取数据">五、获取数据</h2>
<p><span style="font-size: 18px;color: green;">1. 付费数据集，100元；加微信 372335839， 备注「姓名-学校-专业」。</span></p>
<p><span style="font-size: 18px;color: green;">2. 数据是虚拟产品，一经售出，不再退还！</span></p>
<p><span style="font-size: 18px;color: green;">3. 大家时间其实都很宝贵，请仔细阅读推文内容， 确认无误再加微信详谈购买事宜 </span></p>
<p><br><br></p>
<h2 id="六相关文献">六、相关文献</h2>
<p>使用专利数据做研究的文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Bellstam, Gustaf, Sanjai Bhagat, and J. Anthony Cookson. &#34;A text-based analysis of corporate innovation.&#34; _Management Science_ 67, no. 7 (2021): 4004-4031.
[2]Arts, Sam, Bruno Cassiman, and Jianan Hou. &#34;Position and Differentiation of Firms in Technology Space.&#34; Management Science (2023).
</code></pre></div><p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 3.9G 全国POI地点兴趣点数据集</title>
      <link>https://textdata.cn/blog/2023-04-12-china-poi-datasets/</link>
      <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-12-china-poi-datasets/</guid>
      <description>POI是英文&amp;#34;Point of Interest&amp;#34;的缩写，中文翻译为&amp;#34;兴趣点&amp;#34;或&amp;#34;兴趣地点&amp;#34;。在地理信息系统（GIS）和位置服务领域中，POI通常指代一些在地图上显示的特定地点或地理位置，例如商店、餐厅、公园、景点等。</description>
      <content:encoded><![CDATA[<p>POI是英文&quot;Point of Interest&quot;的缩写，中文翻译为&quot;兴趣点&quot;或&quot;兴趣地点&quot;。在地理信息系统（GIS）和位置服务领域中，POI通常指代一些在地图上显示的特定地点或地理位置，例如商店、餐厅、公园、景点等。</p>
<p>与之前分享的 <a href="https://textdata.cn/blog/2023-04-12-china-mainland-corporate-registration-information/"><strong>数据集 | 2亿条中国大陆工商企业注册信息</strong></a> ，可以结合起来使用。</p>
<br>
<h2 id="一数据集概况">一、数据集概况</h2>
<p>370个地市， 截止2022年12月份的POI数据集。压缩文件夹体积800M，解压3.9G。</p>
<p><img loading="lazy" src="img/size.png" alt=""  />
</p>
<p><img loading="lazy" src="img/code.png" alt=""  />
</p>
<p>解压后， 在「<strong>全国POI数据(2022年12月)</strong>」文件夹内新建一个 「<strong>代码.ipynb</strong>」，运行如下代码查看文件夹内的文件列表</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">glob</span>

<span class="c1"># 查询</span>
<span class="n">files</span> <span class="o">=</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*/*.csv&#39;</span><span class="p">)</span>
<span class="n">files</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    [
    &#39;北京POI数据/北京市POI数据.csv&#39;,
    &#39;浙江省POI数据/杭州市POI数据.csv&#39;, 
     &#39;吉林省POI数据/长春市POI数据.csv&#39;,
     &#39;陕西省POI数据/西安市POI数据.csv&#39;,
     &#39;江苏省POI数据/南京市POI数据.csv&#39;,
     &#39;山东省POI数据/青岛市POI数据.csv&#39;,
     &#39;湖南省POI数据/长沙市POI数据.csv&#39;,
     &#39;辽宁省POI数据/大连市POI数据.csv&#39;,
     ...
     &#39;河北省POI数据/衡水市POI数据.csv&#39;,
    ]
</code></pre></div><br>
<p>地级市csv文件个数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">files</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">370
</code></pre></div><br>
<h2 id="二读取poi数据">二、读取POI数据</h2>
<p>读取北京、天津、青岛、上海、广州、杭州、长沙这几个城市poi数据(大家可以根据自己的兴趣更改城市)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">bj_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;北京POI数据/北京市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">qd_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;山东省POI数据/青岛市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">tj_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;天津市POI数据/天津市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>


<span class="n">sh_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;上海POI数据/上海市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">gz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;广东省POI数据/广州市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">hz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;浙江省POI数据/杭州市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">cs_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;湖南省POI数据/长沙市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>


<span class="n">hz_df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#该文件poi记录数</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;北京poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">bj_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;天津poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">tj_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;青岛poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">qd_df</span><span class="p">))</span>

<span class="nb">print</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;上海poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">sh_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;广州poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">gz_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;杭州poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">hz_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;长沙poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">cs_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    北京poi记录数:  679413
    天津poi记录数:  409020
    青岛poi记录数:  426314
    
    上海poi记录数:  780347
    广州poi记录数:  793056
    杭州poi记录数:  534595
    长沙poi记录数:  406489
</code></pre></div><br>
<h2 id="三简单分析">三、简单分析</h2>
<p>对比北京、天津、青岛、上海、广州、杭州、长沙这几个城市poi大类占比情况，探索性分析， 大家可以根据自己的兴趣更改城市</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>




<span class="c1"># 统计各城市的大类POI数量</span>
<span class="n">bj_poi_count</span> <span class="o">=</span> <span class="n">bj_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">tj_poi_count</span> <span class="o">=</span> <span class="n">tj_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">qd_poi_count</span> <span class="o">=</span> <span class="n">qd_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="n">sh_poi_count</span> <span class="o">=</span> <span class="n">sh_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">hz_poi_count</span> <span class="o">=</span> <span class="n">hz_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">gz_poi_count</span> <span class="o">=</span> <span class="n">gz_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">cs_poi_count</span> <span class="o">=</span> <span class="n">cs_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>



<span class="c1"># 创建一个包含所有城市的分组条形图</span>
<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>

<span class="c1"># 计算每个城市的条形图位置</span>
<span class="n">bar_width</span> <span class="o">=</span> <span class="mf">0.07</span>

<span class="n">bar_positions</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bj_poi_count</span><span class="p">))</span>

<span class="n">bj_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">(</span><span class="n">bar_positions</span><span class="p">,</span> 
                 <span class="n">bj_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;北京&#39;</span><span class="p">)</span>


<span class="n">tj_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">tj_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;天津&#39;</span><span class="p">)</span>


<span class="n">qd_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">2</span><span class="o">*</span><span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">dl_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;青岛&#39;</span><span class="p">)</span>


<span class="n">sh_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">3</span><span class="o">*</span><span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">sh_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;上海&#39;</span><span class="p">)</span>


<span class="n">hz_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">4</span> <span class="o">*</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">hz_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;杭州&#39;</span><span class="p">)</span>

<span class="n">gz_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">5</span> <span class="o">*</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">gz_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;广州&#39;</span><span class="p">)</span>


<span class="n">cs_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">6</span> <span class="o">*</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">cs_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;长沙&#39;</span><span class="p">)</span>


<span class="n">ax</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s1">&#39;POI地理兴趣点城市比较&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s1">&#39;POI大类&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;POI类别占比&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_xticks</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">])</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">bj_poi_count</span><span class="o">.</span><span class="n">index</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>  <span class="c1"># 添加图例</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/output_8_0.svg" alt="svg"  />
</p>
<p>7个城市中，从poi大类占比来看，</p>
<ul>
<li>交通设施&amp;科教文化&amp;休闲娱乐&amp;运动健身&amp;金融机构&amp;旅游景点， 北京位列top1</li>
<li>购物消费， 长沙位列top1</li>
<li>餐饮美食， 广州位列top1</li>
<li>生活服务&amp;公司企业， 上海位列top1</li>
<li>酒店住宿， 杭州位列top1</li>
<li>汽车相关， 天津位列top1</li>
</ul>
<br>
<h2 id="数据获取">数据获取</h2>
<p><a href="https://mp.weixin.qq.com/s/YA1MdUUe9fntV6d6nN6Z6g">付费内容， 点击链接进入跳转页面</a> 有疑问，加微信372335839， 备注「姓名-学校-专业」</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>词向量(付费) | 使用MD&amp;A2001-2022语料训练Word2Vec模型</title>
      <link>https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/</guid>
      <description>&lt;h2 id=&#34;相关内容&#34;&gt;相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/the_text_analysis_list_about_ms/&#34;&gt;LIST | 社科(经管)文本挖掘文献汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/text_analysis_code_list_about_ms/&#34;&gt;LIST | 文本分析代码汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/datasets_available_for_management_science/&#34;&gt;LIST | 可供社科(经管)领域使用的数据集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-20-word2vec-by-year-by-province/&#34;&gt;使用3751w专利申请数据集按年份(按省份)训练词向量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/&#34;&gt;预训练模型 | 使用1000w专利摘要训练word2vec模型，可用于开发词典&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相关文献&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[0]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[1]冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J].南开管理评论:1-27.
[3]胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.
[4]Kai Li, Feng Mai, Rui Shen, Xinyan Yan, Measuring Corporate Culture Using Machine Learning, *The Review of Financial Studies*,2020
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一训练&#34;&gt;一、训练&lt;/h2&gt;
&lt;h3 id=&#34;11-导入mda数据&#34;&gt;1.1 导入mda数据&lt;/h3&gt;
&lt;p&gt;读取2001-2022年的&lt;strong&gt;管理层讨论与分析mda&lt;/strong&gt;数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-22.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;55439
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-构造语料&#34;&gt;1.2 构造语料&lt;/h3&gt;
&lt;p&gt;从 &lt;strong&gt;mda01-22.xlsx&lt;/strong&gt; 数据中抽取出所有文本，写入到 &lt;strong&gt;mda01-22.txt&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-22.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;13-配置cntext环境&#34;&gt;1.3 配置cntext环境&lt;/h3&gt;
&lt;p&gt;使用2.1.0版本cntext库(该版本暂不开源，需付费购买)。 将得到的 &lt;strong&gt;cntext-2.1.0-py3-none-any.whl&lt;/strong&gt; 文件放置于电脑桌面，  win系统打开&lt;strong&gt;cmd&lt;/strong&gt;(Mac打开terminal)， 输入如下命令(将工作环境切换至桌面)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;个别Win用户如无效，试试&lt;code&gt;cd Desktop&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;继续在cmd (terminal) 中执行如下命令安装cntext2.0.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;pip3 install cntext-2.1.0-py3-none-any.whl 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;14-训练word2vec&#34;&gt;1.4 训练word2vec&lt;/h3&gt;
&lt;p&gt;设置模型参数配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mda01-22 使用2001-2022年度mda数据训练&lt;/li&gt;
&lt;li&gt;200 嵌入的维度数，即每个词的向量长度是200&lt;/li&gt;
&lt;li&gt;6 词语上下文的窗口是6&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;%%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#程序结束后，可查看总的运行时间&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;W2VModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;corpus_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-22.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;train&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Word2Vec&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Building prefix dict from the default dictionary ...
Start Preprocessing Corpus...
Dumping model to file cache /var/folders/y0/4gqxky0s2t94x1c1qhlwr6100000gn/T/jieba.cache
Loading model cost 0.278 seconds.
Prefix dict has been built successfully.
Start Training! This may take a while. Please be patient...

Training word2vec model took 3532 seconds

Note: The Word2Vec model has been saved to output/Word2Vec

CPU times: user 1h 30min 45s, sys: 30.1 s, total: 1h 31min 15s
Wall time: 58min 57s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;经过不到两个小时时间， 训练出的中国A股市场词向量模型(如下截图)，词汇量 914058， 模型文件 1.49G。模型可广泛用于经济管理等领域概念(情感)词典的构建或扩展。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;mda01-22.200.6.bin&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mda01-22.200.6.bin.syn1neg.npy&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mda01-22.200.6.bin.wv.vectors.npy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/pretained-screen.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;为什么这样确定200和6，可以看这篇 &lt;a href=&#34;https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science&#34;&gt;词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二导入模型&#34;&gt;二、导入模型&lt;/h2&gt;
&lt;p&gt;需要用到两个自定义函数load_w2v、expand_dictionary，源代码太长，为了提高阅读体验， 放在文末。大家记得用这两个函数前一定要先导入。&lt;a href=&#34;mda_pretained_model_code.ipynb&#34;&gt;&lt;strong&gt;点击代码&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#先导入load_w2v、expand_dictionary函数源代码&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;#读取模型文件&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_w2v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Word2Vec/mda01-22.200.6.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Loading word2vec model...
&amp;lt;gensim.models.word2vec.Word2Vec at 0x310dd9990&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h2 id=&#34;注意&#34;&gt;注意&lt;/h2&gt;
&lt;p&gt;之前购买过mda01-22.100.6.bin的可以留意下， &amp;lt;gensim.models.word2vec.Word2Vec&amp;gt;和&amp;lt;gensim.models.keyedvectors.KeyedVectors&amp;gt;
是有区别的。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;三w2v_model的使用&#34;&gt;三、w2v_model的使用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查看词汇量&lt;/li&gt;
&lt;li&gt;查询某词向量&lt;/li&gt;
&lt;li&gt;查看多个词的均值向量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多内容，建议查看下gensim库的文档&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#词汇量&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index_to_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;914058  
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#查询某词的词向量&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;创新&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;array([-1.36441350e-01, -2.02002168e+00, -1.49168205e+00,  2.65202689e+00,
        1.49721682e+00,  2.14851022e+00, -1.54925853e-01, -2.25241160e+00,
       -3.58773202e-01,  1.54530525e+00, -7.62950361e-01, -9.77181852e-01,
        6.70365512e-01, -3.20203233e+00,  3.18079638e+00,  1.66510820e+00,
        9.80131567e-01,  1.62199986e+00,  1.80585206e+00,  4.08179426e+00,
       -1.26518166e+00,  3.75929743e-01,  5.72038591e-01,  1.16134119e+00,
        2.55617023e+00, -2.25110960e+00, -2.61538339e+00, -5.71992218e-01,
        8.70356798e-01, -1.85045290e+00, -2.85597444e-01, -9.15628672e-01,
       -2.03667688e+00,  2.11716801e-01,  2.94088912e+00, -2.32688546e+00,
        2.20858502e+00,  8.81347775e-01, -7.99135566e-01, -8.61206651e-01,
       -4.45446587e+00, -1.73757005e+00, -3.36678886e+00, -2.82611530e-02,
       -1.62726247e+00, -8.49750221e-01,  4.13731128e-01, -1.62519825e+00,
        3.03865957e+00, -1.39746085e-01,  8.22233260e-01, -7.97697455e-02,
        1.72468078e+00,  2.94929433e+00,  9.72453177e-01, -1.12741642e-01,
        8.18425417e-01, -9.05264139e-01,  2.61516261e+00,  8.02830994e-01,
        2.40420485e+00,  8.85799348e-01, -1.08665645e+00,  8.21912348e-01,
       -4.39456075e-01, -2.57663131e+00,  2.38062453e+00, -4.58515882e-01,
        2.12767506e+00, -2.01356173e-01,  2.71096081e-01,  9.51708496e-01,
       -3.05705309e+00, -6.06385887e-01, -1.38406023e-01,  2.36809158e+00,
       -2.49158549e+00,  2.71105647e+00, -3.07211792e-03,  1.04273570e+00,
        1.44201803e+00, -5.65704823e-01,  2.85488725e-01,  1.43495277e-01,
       -1.39421299e-01,  9.24086392e-01,  4.25374925e-01, -1.56690669e+00,
        1.67641795e+00, -1.03729677e+00, -1.45472065e-01, -2.11022258e+00,
       -1.81541741e+00, -8.66766050e-02,  8.72350857e-02,  1.17173791e+00,
       -3.07721123e-02,  5.84330797e-01,  1.47265148e+00, -1.76913440e+00,
       -8.48391712e-01, -3.25056529e+00,  7.14846313e-01, -2.98076987e-01,
        1.13966620e+00, -1.42698896e+00,  6.93505168e-01, -2.04717040e+00,
       -1.53559577e+00,  1.01942134e+00, -1.58283603e+00,  9.08654630e-01,
       -1.90529859e+00, -9.43309963e-01,  4.12964225e-01, -2.50713086e+00,
       -4.24056143e-01, -4.10613680e+00,  3.60615468e+00, -4.19765860e-01,
       -2.41174579e+00,  6.80675328e-01,  2.99834704e+00,  1.05610855e-01,
       -7.84325838e-01,  3.24065971e+00, -1.85072863e+00, -2.12448812e+00,
       -2.83468294e+00, -5.77759802e-01, -3.13433480e+00, -6.91670418e-01,
        2.99401569e+00, -5.16145706e-01,  9.09552336e-01, -5.52680910e-01,
       -2.88360894e-01,  1.11991334e+00, -1.11737549e+00,  1.15479147e+00,
       -4.63319182e-01,  1.38351321e+00, -3.02179503e+00,  1.24334955e+00,
        1.93393975e-01, -8.27962995e-01, -2.37227559e+00, -9.26931739e-01,
        6.72517180e-01,  1.27736795e+00,  1.98695862e+00,  1.41960573e+00,
       -3.73892736e+00, -3.14201683e-01, -7.19093859e-01,  1.86080355e-02,
       -2.68105698e+00,  1.04344964e+00,  9.46133554e-01, -2.06151366e+00,
       -2.84214950e+00,  1.17004764e+00,  1.24577022e+00, -1.10806060e+00,
        9.93207514e-01,  8.46789181e-01, -3.09691691e+00,  2.12616014e+00,
       -1.49274826e+00, -1.53214395e+00, -9.95470941e-01,  1.23463202e+00,
       -2.18907285e+00, -4.94913310e-01,  2.80939412e+00,  1.68149090e+00,
        1.48991072e+00,  3.83729649e+00,  4.72325265e-01,  1.37606680e+00,
        2.14257884e+00,  3.18186909e-01,  5.98093605e+00,  1.46744043e-01,
       -2.37729326e-01,  1.20463884e+00, -1.55812174e-01, -5.03088772e-01,
        4.53981996e-01,  1.95544350e+00, -2.32564354e+00, -4.09389853e-01,
        1.89125270e-01,  2.62835431e+00,  9.81123984e-01, -9.51041043e-01,
       -1.14294410e-01,  1.10983588e-01,  9.30419266e-02, -9.84693542e-02],
      dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#查询多个词的词向量&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_mean_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;创新&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;研发&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ruj&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;array([ 0.03019853, -0.01928307, -0.05371316,  0.00053774,  0.02516318,
        0.10103251, -0.03914721, -0.08307559,  0.00444389,  0.09456791,
       -0.05761364, -0.03459097,  0.04394419, -0.10181106,  0.1418381 ,
        0.05334964,  0.01820264,  0.01493831,  0.01626587,  0.17402864,
       -0.02859601,  0.04538149,  0.03768233,  0.05431981,  0.15405464,
       -0.03632693, -0.08566202, -0.00595666,  0.08378439, -0.11071078,
       -0.05904576, -0.06451955, -0.1076955 ,  0.05141645,  0.11710279,
       -0.09403889,  0.08633652, -0.06743232,  0.00328483,  0.01589498,
       -0.11226317, -0.05367877, -0.057222  , -0.00685401, -0.04531868,
       -0.02090884,  0.01426806, -0.04787309,  0.1325518 , -0.00498158,
        0.01912023, -0.02292867,  0.08855374,  0.07697155,  0.01407153,
       -0.02378988,  0.03745927,  0.00889686,  0.12555045,  0.04007044,
        0.06247196,  0.04912657, -0.06158784,  0.06346396,  0.00197599,
       -0.04995281,  0.05125345, -0.01584197,  0.07572784,  0.02580263,
       -0.02904062, -0.0008835 , -0.08365948, -0.05539802, -0.07523517,
        0.04622741, -0.12007375,  0.05453204, -0.02054051,  0.02937108,
        0.10272598, -0.0089594 ,  0.05172383,  0.00588922, -0.0010917 ,
        0.02603476, -0.01580217, -0.07810815,  0.06964722, -0.04709972,
       -0.0316673 , -0.05055645, -0.05096703,  0.02772727, -0.03495743,
        0.09567484, -0.0071935 , -0.01266821,  0.00074132, -0.07593331,
       -0.02928162, -0.12574387,  0.02437552, -0.0228716 , -0.03047204,
       -0.03948782,  0.07722469, -0.07440004, -0.00951135,  0.05531401,
       -0.03240326,  0.00389662, -0.05632257, -0.05030375,  0.02883579,
       -0.06157173,  0.00584065, -0.16594191,  0.1108149 , -0.00243916,
       -0.09964953,  0.02029083,  0.03522225, -0.01167114, -0.04048527,
        0.08301719, -0.04682562, -0.0714631 , -0.07355815, -0.0496731 ,
       -0.05303175, -0.03625978,  0.06879813, -0.09117774,  0.0323513 ,
       -0.01808765, -0.01746182,  0.02472609, -0.00873791, -0.00951474,
       -0.02176155,  0.02394484, -0.07035318,  0.10963078,  0.01004294,
       -0.02269555, -0.09929934, -0.02897175,  0.02157164,  0.05608977,
        0.09083252, -0.00525982, -0.09866816, -0.02736895, -0.02923711,
        0.05582205, -0.04462272,  0.01932517,  0.04468061,  0.00317996,
       -0.04182415,  0.03061792,  0.04278665,  0.02939183,  0.03475334,
       -0.00898206, -0.08902986,  0.08294971, -0.00942507, -0.02125597,
       -0.01008157,  0.04477865, -0.08366893, -0.00074587,  0.08328778,
        0.02653155,  0.04581301,  0.10532658, -0.04637942,  0.04722971,
        0.06853952, -0.00235328,  0.18312256, -0.0457427 ,  0.00874868,
        0.08945092, -0.01135547, -0.04203002,  0.02408407,  0.0594779 ,
       -0.05467811,  0.01946783,  0.07095537,  0.04226222, -0.0018304 ,
       -0.00086302,  0.04624099,  0.01009499,  0.04783599,  0.02535392],
      dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有了每个词或者概念的向量，可以结合cntext旧版本单语言模型内的态度偏见的度量。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四扩展词典&#34;&gt;四、扩展词典&lt;/h2&gt;
&lt;p&gt;做词典法的文本分析，最重要的是有自己的领域词典。之前受限于技术难度，文科生的我也一直在用形容词的通用情感词典。现在依托word2vec技术， 可以加速人工构建的准确率和效率。&lt;/p&gt;
&lt;p&gt;下面是在 mda01-22.200.6.bin 上做的词典扩展测试，函数expand_dictionary会根据种子词选取最准确的topn个词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#短视主义词  实验&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;抓紧&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;立刻&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;月底&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年底&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年终&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;争取&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;力争&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&#39;抓紧&#39;,
 &#39;立刻&#39;,
 &#39;月底&#39;,
 &#39;年底&#39;,
 &#39;年终&#39;,
 &#39;争取&#39;,
 &#39;力争&#39;,
 &#39;争取&#39;,
 &#39;力争&#39;,
 &#39;年底&#39;,
 &#39;月底&#39;,
 &#39;3月底&#39;,
 &#39;尽快&#39;,
 &#39;上半年&#39;,
 &#39;努力争取&#39;,
 &#39;年内实现&#39;,
 &#39;抓紧&#39;,
 &#39;工作争取&#39;,
 &#39;尽早&#39;,
 &#39;6月底&#39;,
 &#39;工作力争&#39;,
 &#39;7月份&#39;,
 &#39;年底完成&#39;,
 &#39;确保&#39;,
 &#39;早日&#39;,
 &#39;有望&#39;,
 &#39;全力&#39;,
 &#39;创造条件&#39;,
 &#39;3月份&#39;,
 &#39;加紧&#39;,
 &#39;力争实现&#39;,
 &#39;力争今年&#39;,
 &#39;月底前&#39;,
 &#39;10月底&#39;,
 &#39;4月份&#39;,
 &#39;继续&#39;,
 &#39;月初&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;团结&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;拼搏&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;克服&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;勇攀高峰&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;友善&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;进取&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&#39;团结&#39;,
 &#39;拼搏&#39;,
 &#39;克服&#39;,
 &#39;勇攀高峰&#39;,
 &#39;友善&#39;,
 &#39;进取&#39;,
 &#39;拼搏&#39;,
 &#39;艰苦奋斗&#39;,
 &#39;团结拼搏&#39;,
 &#39;勇于担当&#39;,
 &#39;锐意进取&#39;,
 &#39;勇气&#39;,
 &#39;团结&#39;,
 &#39;团结奋进&#39;,
 &#39;团结一致&#39;,
 &#39;顽强拼搏&#39;,
 &#39;上下一心&#39;,
 &#39;实干&#39;,
 &#39;拼搏进取&#39;,
 &#39;积极进取&#39;,
 &#39;奋力拼搏&#39;,
 &#39;奋进&#39;,
 &#39;坚定信念&#39;,
 &#39;团结一心&#39;,
 &#39;精诚团结&#39;,
 &#39;顽强&#39;,
 &#39;踏实&#39;,
 &#39;团结协作&#39;,
 &#39;求真务实&#39;,
 &#39;团结奋斗&#39;,
 &#39;奋发有为&#39;,
 &#39;同心协力&#39;,
 &#39;脚踏实地&#39;,
 &#39;开拓进取&#39;,
 &#39;进取&#39;,
 &#39;勇于&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;创新&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;科技&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;研发&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;技术&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;标准&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&#39;创新&#39;,
 &#39;科技&#39;,
 &#39;研发&#39;,
 &#39;技术&#39;,
 &#39;标准&#39;,
 &#39;技术创新&#39;,
 &#39;技术研发&#39;,
 &#39;先进技术&#39;,
 &#39;关键技术&#39;,
 &#39;创新性&#39;,
 &#39;前沿技术&#39;,
 &#39;科技创新&#39;,
 &#39;技术应用&#39;,
 &#39;产品开发&#39;,
 &#39;自主创新&#39;,
 &#39;新技术&#39;,
 &#39;科研&#39;,
 &#39;产品研发&#39;,
 &#39;自主研发&#39;,
 &#39;技术开发&#39;,
 &#39;工艺技术&#39;,
 &#39;技术标准&#39;,
 &#39;基础研究&#39;,
 &#39;集成创新&#39;,
 &#39;核心技术&#39;,
 &#39;成熟技术&#39;,
 &#39;研发创新&#39;,
 &#39;理论技术&#39;,
 &#39;前沿技术研发&#39;,
 &#39;工艺&#39;,
 &#39;科技成果&#39;,
 &#39;技术研究&#39;,
 &#39;标准制定&#39;,
 &#39;技术装备&#39;,
 &#39;技术相结合&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;竞争&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;竞争力&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&#39;竞争&#39;,
 &#39;竞争力&#39;,
 &#39;竞争能力&#39;,
 &#39;市场竞争&#39;,
 &#39;竞争优势&#39;,
 &#39;市场竞争力&#39;,
 &#39;竞&#39;,
 &#39;竞争实力&#39;,
 &#39;激烈竞争&#39;,
 &#39;参与市场竞争&#39;,
 &#39;国际竞争&#39;,
 &#39;市场竞争能力&#39;,
 &#39;竞争态势&#39;,
 &#39;市场竞争优势&#39;,
 &#39;行业竞争&#39;,
 &#39;综合竞争力&#39;,
 &#39;竞争对手&#39;,
 &#39;未来市场竞争&#39;,
 &#39;产品竞争力&#39;,
 &#39;之间竞争&#39;,
 &#39;核心竞争力&#39;,
 &#39;参与竞争&#39;,
 &#39;核心竞争能力&#39;,
 &#39;竞争日趋激烈&#39;,
 &#39;国际化竞争&#39;,
 &#39;国际竞争力&#39;,
 &#39;竟争力&#39;,
 &#39;市场化竞争&#39;,
 &#39;同质化竞争&#39;,
 &#39;竞争力关键&#39;,
 &#39;价格竞争&#39;,
 &#39;整体竞争力&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;疫情&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;扩散&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;防控&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;反复&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;冲击&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&#39;疫情&#39;,
 &#39;扩散&#39;,
 &#39;防控&#39;,
 &#39;反复&#39;,
 &#39;冲击&#39;,
 &#39;蔓延&#39;,
 &#39;疫情&#39;,
 &#39;疫情爆发&#39;,
 &#39;疫情冲击&#39;,
 &#39;新冠疫情&#39;,
 &#39;肆虐&#39;,
 &#39;新冠肺炎&#39;,
 &#39;疫情蔓延&#39;,
 &#39;本次疫情&#39;,
 &#39;散发&#39;,
 &#39;疫情扩散&#39;,
 &#39;疫情影响&#39;,
 &#39;疫情反复&#39;,
 &#39;疫情传播&#39;,
 &#39;肺炎疫情&#39;,
 &#39;国内疫情&#39;,
 &#39;击&#39;,
 &#39;各地疫情&#39;,
 &#39;疫情全球&#39;,
 &#39;疫情多点&#39;,
 &#39;全球疫情&#39;,
 &#39;持续蔓延&#39;,
 &#39;多点散发&#39;,
 &#39;疫情导致&#39;,
 &#39;疫情暴发&#39;,
 &#39;病毒疫情&#39;,
 &#39;疫情持续&#39;,
 &#39;疫情初期&#39;,
 &#39;疫情出现&#39;,
 &#39;防控措施&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;旧&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;老&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;后&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;落后&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[&#39;旧&#39;,
 &#39;老&#39;,
 &#39;后&#39;,
 &#39;落后&#39;,
 &#39;老&#39;,
 &#39;旧&#39;,
 &#39;陈旧&#39;,
 &#39;老旧&#39;,
 &#39;淘汰&#39;,
 &#39;低效率&#39;,
 &#39;低效&#39;,
 &#39;部分老旧&#39;,
 &#39;进行改造&#39;,
 &#39;老旧设备&#39;,
 &#39;工艺落后&#39;,
 &#39;设备陈旧&#39;,
 &#39;能耗高&#39;,
 &#39;更新改造&#39;,
 &#39;落后工艺&#39;,
 &#39;技术落后&#39;,
 &#39;改造&#39;,
 &#39;翻新&#39;,
 &#39;简陋&#39;,
 &#39;旧设备&#39;,
 &#39;拆除&#39;,
 &#39;现象严重&#39;,
 &#39;原有&#39;,
 &#39;相对落后&#39;,
 &#39;产能淘汰&#39;,
 &#39;加快淘汰&#39;,
 &#39;搬&#39;,
 &#39;替换&#39;,
 &#39;大批&#39;,
 &#39;迁&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;五源代码&#34;&gt;五、源代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;gensim.models&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;KeyedVectors&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pathlib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_w2v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Load word2vec model
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Args:
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        w2v_path (str): path of word2vec model
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Returns:
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        model: word2vec model
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Loading word2vec model...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;KeyedVectors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    According to the seed word file, select the top n words with the most similar semantics and save them in the directory save_dir.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Args:
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        wv (Word2VecKeyedVectors): the word embedding model
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        seedwords (list): 种子词
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        topn (int, optional): Set the number of most similar words to retrieve to topn. Defaults to 100.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;        save_dir (str, optional): the directory to save the candidate words. Defaults to &amp;#39;Word2Vec&amp;#39;.
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    Returns:
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;simidx_scores&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;similars_candidate_idxs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#the candidate words of seedwords&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_to_index&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;seedidxs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#transform word to index&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;seedidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;seedidxs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seedidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seedidx&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seedidxs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# sims_words such as [(&amp;#39;by&amp;#39;, 0.99984), (&amp;#39;or&amp;#39;, 0.99982), (&amp;#39;an&amp;#39;, 0.99981), (&amp;#39;up&amp;#39;, 0.99980)]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;sims_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;similar_by_word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seedidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;#Convert words to index and store them&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;similars_candidate_idxs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sim&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sims_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;similars_candidate_idxs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;similars_candidate_idxs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;similars_candidate_idxs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_similarity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seedidxs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;simidx_scores&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;simidxs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simidx_scores&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;simwords&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index_to_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;simidxs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;resultwords&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;resultwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;resultwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simwords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resultwords&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;六获取模型&#34;&gt;六、获取模型&lt;/h2&gt;
&lt;p&gt;内容创作不易， 本文为付费内容，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 50元    2001-2022年报MDA.xlsx  

- 50元    cntext-2.1.0-py3-none-any.whl

- 100元   Word2Vec相关模型文件(mda01-22.200.6.bin)

- 150元   
    - 2001-2022年报MDA.xlsx  
    - cntext-2.1.0-py3-none-any.whl  
    - Word2Vec相关模型文件(mda01-22.200.6.bin)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加微信 372335839， 备注「姓名-学校-专业-word2vec」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<h2 id="相关内容">相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)文本挖掘文献汇总</a></li>
<li><a href="https://textdata.cn/blog/text_analysis_code_list_about_ms/">LIST | 文本分析代码汇总</a></li>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">Python实证指标构建与文本分析</a></li>
<li><a href="https://textdata.cn/blog/2023-11-20-word2vec-by-year-by-province/">使用3751w专利申请数据集按年份(按省份)训练词向量</a></li>
<li><a href="https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/">预训练模型 | 使用1000w专利摘要训练word2vec模型，可用于开发词典</a></li>
</ul>
<p>相关文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[0]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[1]冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J].南开管理评论:1-27.
[3]胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.
[4]Kai Li, Feng Mai, Rui Shen, Xinyan Yan, Measuring Corporate Culture Using Machine Learning, *The Review of Financial Studies*,2020
</code></pre></div><p><br><br></p>
<h2 id="一训练">一、训练</h2>
<h3 id="11-导入mda数据">1.1 导入mda数据</h3>
<p>读取2001-2022年的<strong>管理层讨论与分析mda</strong>数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;mda01-22.xlsx&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">55439
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<h3 id="12-构造语料">1.2 构造语料</h3>
<p>从 <strong>mda01-22.xlsx</strong> 数据中抽取出所有文本，写入到 <strong>mda01-22.txt</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;mda01-22.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">])</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="13-配置cntext环境">1.3 配置cntext环境</h3>
<p>使用2.1.0版本cntext库(该版本暂不开源，需付费购买)。 将得到的 <strong>cntext-2.1.0-py3-none-any.whl</strong> 文件放置于电脑桌面，  win系统打开<strong>cmd</strong>(Mac打开terminal)， 输入如下命令(将工作环境切换至桌面)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop
</code></pre></div><p>个别Win用户如无效，试试<code>cd Desktop</code> 。</p>
<p>继续在cmd (terminal) 中执行如下命令安装cntext2.0.0</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install cntext-2.1.0-py3-none-any.whl 
</code></pre></div><br>
<h3 id="14-训练word2vec">1.4 训练word2vec</h3>
<p>设置模型参数配置</p>
<ul>
<li>mda01-22 使用2001-2022年度mda数据训练</li>
<li>200 嵌入的维度数，即每个词的向量长度是200</li>
<li>6 词语上下文的窗口是6</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>  <span class="c1">#程序结束后，可查看总的运行时间</span>
<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">w2v</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2VModel</span><span class="p">(</span><span class="n">corpus_file</span><span class="o">=</span><span class="s1">&#39;mda01-22.txt&#39;</span><span class="p">)</span>
<span class="n">w2v</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">vector_size</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span> <span class="n">window_size</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">min_count</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">save_dir</span><span class="o">=</span><span class="s1">&#39;Word2Vec&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Building prefix dict from the default dictionary ...
Start Preprocessing Corpus...
Dumping model to file cache /var/folders/y0/4gqxky0s2t94x1c1qhlwr6100000gn/T/jieba.cache
Loading model cost 0.278 seconds.
Prefix dict has been built successfully.
Start Training! This may take a while. Please be patient...

Training word2vec model took 3532 seconds

Note: The Word2Vec model has been saved to output/Word2Vec

CPU times: user 1h 30min 45s, sys: 30.1 s, total: 1h 31min 15s
Wall time: 58min 57s
</code></pre></div><p>经过不到两个小时时间， 训练出的中国A股市场词向量模型(如下截图)，词汇量 914058， 模型文件 1.49G。模型可广泛用于经济管理等领域概念(情感)词典的构建或扩展。</p>
<ul>
<li><strong>mda01-22.200.6.bin</strong></li>
<li><strong>mda01-22.200.6.bin.syn1neg.npy</strong></li>
<li><strong>mda01-22.200.6.bin.wv.vectors.npy</strong></li>
</ul>
<p><img loading="lazy" src="img/pretained-screen.png" alt=""  />
</p>
<p>为什么这样确定200和6，可以看这篇 <a href="https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science">词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总</a></p>
<br>
<br>
<h2 id="二导入模型">二、导入模型</h2>
<p>需要用到两个自定义函数load_w2v、expand_dictionary，源代码太长，为了提高阅读体验， 放在文末。大家记得用这两个函数前一定要先导入。<a href="mda_pretained_model_code.ipynb"><strong>点击代码</strong></a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#先导入load_w2v、expand_dictionary函数源代码</span>


<span class="c1">#读取模型文件</span>
<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">load_w2v</span><span class="p">(</span><span class="n">w2v_path</span><span class="o">=</span><span class="s1">&#39;Word2Vec/mda01-22.200.6.bin&#39;</span><span class="p">)</span>
<span class="n">w2v_model</span>
</code></pre></div><pre><code>Loading word2vec model...
&lt;gensim.models.word2vec.Word2Vec at 0x310dd9990&gt;
</code></pre>
<br>
<h2 id="注意">注意</h2>
<p>之前购买过mda01-22.100.6.bin的可以留意下， &lt;gensim.models.word2vec.Word2Vec&gt;和&lt;gensim.models.keyedvectors.KeyedVectors&gt;
是有区别的。</p>
<p><br><br></p>
<h3 id="三w2v_model的使用">三、w2v_model的使用</h3>
<ul>
<li>查看词汇量</li>
<li>查询某词向量</li>
<li>查看多个词的均值向量</li>
</ul>
<p>更多内容，建议查看下gensim库的文档</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#词汇量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">index_to_key</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>914058  
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#查询某词的词向量</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;创新&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>array([-1.36441350e-01, -2.02002168e+00, -1.49168205e+00,  2.65202689e+00,
        1.49721682e+00,  2.14851022e+00, -1.54925853e-01, -2.25241160e+00,
       -3.58773202e-01,  1.54530525e+00, -7.62950361e-01, -9.77181852e-01,
        6.70365512e-01, -3.20203233e+00,  3.18079638e+00,  1.66510820e+00,
        9.80131567e-01,  1.62199986e+00,  1.80585206e+00,  4.08179426e+00,
       -1.26518166e+00,  3.75929743e-01,  5.72038591e-01,  1.16134119e+00,
        2.55617023e+00, -2.25110960e+00, -2.61538339e+00, -5.71992218e-01,
        8.70356798e-01, -1.85045290e+00, -2.85597444e-01, -9.15628672e-01,
       -2.03667688e+00,  2.11716801e-01,  2.94088912e+00, -2.32688546e+00,
        2.20858502e+00,  8.81347775e-01, -7.99135566e-01, -8.61206651e-01,
       -4.45446587e+00, -1.73757005e+00, -3.36678886e+00, -2.82611530e-02,
       -1.62726247e+00, -8.49750221e-01,  4.13731128e-01, -1.62519825e+00,
        3.03865957e+00, -1.39746085e-01,  8.22233260e-01, -7.97697455e-02,
        1.72468078e+00,  2.94929433e+00,  9.72453177e-01, -1.12741642e-01,
        8.18425417e-01, -9.05264139e-01,  2.61516261e+00,  8.02830994e-01,
        2.40420485e+00,  8.85799348e-01, -1.08665645e+00,  8.21912348e-01,
       -4.39456075e-01, -2.57663131e+00,  2.38062453e+00, -4.58515882e-01,
        2.12767506e+00, -2.01356173e-01,  2.71096081e-01,  9.51708496e-01,
       -3.05705309e+00, -6.06385887e-01, -1.38406023e-01,  2.36809158e+00,
       -2.49158549e+00,  2.71105647e+00, -3.07211792e-03,  1.04273570e+00,
        1.44201803e+00, -5.65704823e-01,  2.85488725e-01,  1.43495277e-01,
       -1.39421299e-01,  9.24086392e-01,  4.25374925e-01, -1.56690669e+00,
        1.67641795e+00, -1.03729677e+00, -1.45472065e-01, -2.11022258e+00,
       -1.81541741e+00, -8.66766050e-02,  8.72350857e-02,  1.17173791e+00,
       -3.07721123e-02,  5.84330797e-01,  1.47265148e+00, -1.76913440e+00,
       -8.48391712e-01, -3.25056529e+00,  7.14846313e-01, -2.98076987e-01,
        1.13966620e+00, -1.42698896e+00,  6.93505168e-01, -2.04717040e+00,
       -1.53559577e+00,  1.01942134e+00, -1.58283603e+00,  9.08654630e-01,
       -1.90529859e+00, -9.43309963e-01,  4.12964225e-01, -2.50713086e+00,
       -4.24056143e-01, -4.10613680e+00,  3.60615468e+00, -4.19765860e-01,
       -2.41174579e+00,  6.80675328e-01,  2.99834704e+00,  1.05610855e-01,
       -7.84325838e-01,  3.24065971e+00, -1.85072863e+00, -2.12448812e+00,
       -2.83468294e+00, -5.77759802e-01, -3.13433480e+00, -6.91670418e-01,
        2.99401569e+00, -5.16145706e-01,  9.09552336e-01, -5.52680910e-01,
       -2.88360894e-01,  1.11991334e+00, -1.11737549e+00,  1.15479147e+00,
       -4.63319182e-01,  1.38351321e+00, -3.02179503e+00,  1.24334955e+00,
        1.93393975e-01, -8.27962995e-01, -2.37227559e+00, -9.26931739e-01,
        6.72517180e-01,  1.27736795e+00,  1.98695862e+00,  1.41960573e+00,
       -3.73892736e+00, -3.14201683e-01, -7.19093859e-01,  1.86080355e-02,
       -2.68105698e+00,  1.04344964e+00,  9.46133554e-01, -2.06151366e+00,
       -2.84214950e+00,  1.17004764e+00,  1.24577022e+00, -1.10806060e+00,
        9.93207514e-01,  8.46789181e-01, -3.09691691e+00,  2.12616014e+00,
       -1.49274826e+00, -1.53214395e+00, -9.95470941e-01,  1.23463202e+00,
       -2.18907285e+00, -4.94913310e-01,  2.80939412e+00,  1.68149090e+00,
        1.48991072e+00,  3.83729649e+00,  4.72325265e-01,  1.37606680e+00,
        2.14257884e+00,  3.18186909e-01,  5.98093605e+00,  1.46744043e-01,
       -2.37729326e-01,  1.20463884e+00, -1.55812174e-01, -5.03088772e-01,
        4.53981996e-01,  1.95544350e+00, -2.32564354e+00, -4.09389853e-01,
        1.89125270e-01,  2.62835431e+00,  9.81123984e-01, -9.51041043e-01,
       -1.14294410e-01,  1.10983588e-01,  9.30419266e-02, -9.84693542e-02],
      dtype=float32)
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#查询多个词的词向量</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_mean_vector</span><span class="p">([</span><span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;研发&#39;</span><span class="p">])</span>
</code></pre></div><p>Ruj</p>
<pre><code>array([ 0.03019853, -0.01928307, -0.05371316,  0.00053774,  0.02516318,
        0.10103251, -0.03914721, -0.08307559,  0.00444389,  0.09456791,
       -0.05761364, -0.03459097,  0.04394419, -0.10181106,  0.1418381 ,
        0.05334964,  0.01820264,  0.01493831,  0.01626587,  0.17402864,
       -0.02859601,  0.04538149,  0.03768233,  0.05431981,  0.15405464,
       -0.03632693, -0.08566202, -0.00595666,  0.08378439, -0.11071078,
       -0.05904576, -0.06451955, -0.1076955 ,  0.05141645,  0.11710279,
       -0.09403889,  0.08633652, -0.06743232,  0.00328483,  0.01589498,
       -0.11226317, -0.05367877, -0.057222  , -0.00685401, -0.04531868,
       -0.02090884,  0.01426806, -0.04787309,  0.1325518 , -0.00498158,
        0.01912023, -0.02292867,  0.08855374,  0.07697155,  0.01407153,
       -0.02378988,  0.03745927,  0.00889686,  0.12555045,  0.04007044,
        0.06247196,  0.04912657, -0.06158784,  0.06346396,  0.00197599,
       -0.04995281,  0.05125345, -0.01584197,  0.07572784,  0.02580263,
       -0.02904062, -0.0008835 , -0.08365948, -0.05539802, -0.07523517,
        0.04622741, -0.12007375,  0.05453204, -0.02054051,  0.02937108,
        0.10272598, -0.0089594 ,  0.05172383,  0.00588922, -0.0010917 ,
        0.02603476, -0.01580217, -0.07810815,  0.06964722, -0.04709972,
       -0.0316673 , -0.05055645, -0.05096703,  0.02772727, -0.03495743,
        0.09567484, -0.0071935 , -0.01266821,  0.00074132, -0.07593331,
       -0.02928162, -0.12574387,  0.02437552, -0.0228716 , -0.03047204,
       -0.03948782,  0.07722469, -0.07440004, -0.00951135,  0.05531401,
       -0.03240326,  0.00389662, -0.05632257, -0.05030375,  0.02883579,
       -0.06157173,  0.00584065, -0.16594191,  0.1108149 , -0.00243916,
       -0.09964953,  0.02029083,  0.03522225, -0.01167114, -0.04048527,
        0.08301719, -0.04682562, -0.0714631 , -0.07355815, -0.0496731 ,
       -0.05303175, -0.03625978,  0.06879813, -0.09117774,  0.0323513 ,
       -0.01808765, -0.01746182,  0.02472609, -0.00873791, -0.00951474,
       -0.02176155,  0.02394484, -0.07035318,  0.10963078,  0.01004294,
       -0.02269555, -0.09929934, -0.02897175,  0.02157164,  0.05608977,
        0.09083252, -0.00525982, -0.09866816, -0.02736895, -0.02923711,
        0.05582205, -0.04462272,  0.01932517,  0.04468061,  0.00317996,
       -0.04182415,  0.03061792,  0.04278665,  0.02939183,  0.03475334,
       -0.00898206, -0.08902986,  0.08294971, -0.00942507, -0.02125597,
       -0.01008157,  0.04477865, -0.08366893, -0.00074587,  0.08328778,
        0.02653155,  0.04581301,  0.10532658, -0.04637942,  0.04722971,
        0.06853952, -0.00235328,  0.18312256, -0.0457427 ,  0.00874868,
        0.08945092, -0.01135547, -0.04203002,  0.02408407,  0.0594779 ,
       -0.05467811,  0.01946783,  0.07095537,  0.04226222, -0.0018304 ,
       -0.00086302,  0.04624099,  0.01009499,  0.04783599,  0.02535392],
      dtype=float32)
</code></pre>
<p>有了每个词或者概念的向量，可以结合cntext旧版本单语言模型内的态度偏见的度量。</p>
<p><br><br></p>
<h2 id="四扩展词典">四、扩展词典</h2>
<p>做词典法的文本分析，最重要的是有自己的领域词典。之前受限于技术难度，文科生的我也一直在用形容词的通用情感词典。现在依托word2vec技术， 可以加速人工构建的准确率和效率。</p>
<p>下面是在 mda01-22.200.6.bin 上做的词典扩展测试，函数expand_dictionary会根据种子词选取最准确的topn个词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#短视主义词  实验</span>
<span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;抓紧&#39;</span><span class="p">,</span> <span class="s1">&#39;立刻&#39;</span><span class="p">,</span> <span class="s1">&#39;月底&#39;</span><span class="p">,</span> <span class="s1">&#39;年底&#39;</span><span class="p">,</span> <span class="s1">&#39;年终&#39;</span><span class="p">,</span> <span class="s1">&#39;争取&#39;</span><span class="p">,</span> <span class="s1">&#39;力争&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>['抓紧',
 '立刻',
 '月底',
 '年底',
 '年终',
 '争取',
 '力争',
 '争取',
 '力争',
 '年底',
 '月底',
 '3月底',
 '尽快',
 '上半年',
 '努力争取',
 '年内实现',
 '抓紧',
 '工作争取',
 '尽早',
 '6月底',
 '工作力争',
 '7月份',
 '年底完成',
 '确保',
 '早日',
 '有望',
 '全力',
 '创造条件',
 '3月份',
 '加紧',
 '力争实现',
 '力争今年',
 '月底前',
 '10月底',
 '4月份',
 '继续',
 '月初']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;团结&#39;</span><span class="p">,</span> <span class="s1">&#39;拼搏&#39;</span><span class="p">,</span>  <span class="s1">&#39;克服&#39;</span><span class="p">,</span>  <span class="s1">&#39;勇攀高峰&#39;</span><span class="p">,</span>  <span class="s1">&#39;友善&#39;</span><span class="p">,</span>  <span class="s1">&#39;进取&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>['团结',
 '拼搏',
 '克服',
 '勇攀高峰',
 '友善',
 '进取',
 '拼搏',
 '艰苦奋斗',
 '团结拼搏',
 '勇于担当',
 '锐意进取',
 '勇气',
 '团结',
 '团结奋进',
 '团结一致',
 '顽强拼搏',
 '上下一心',
 '实干',
 '拼搏进取',
 '积极进取',
 '奋力拼搏',
 '奋进',
 '坚定信念',
 '团结一心',
 '精诚团结',
 '顽强',
 '踏实',
 '团结协作',
 '求真务实',
 '团结奋斗',
 '奋发有为',
 '同心协力',
 '脚踏实地',
 '开拓进取',
 '进取',
 '勇于']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;科技&#39;</span><span class="p">,</span>  <span class="s1">&#39;研发&#39;</span><span class="p">,</span>  <span class="s1">&#39;技术&#39;</span><span class="p">,</span>  <span class="s1">&#39;标准&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>['创新',
 '科技',
 '研发',
 '技术',
 '标准',
 '技术创新',
 '技术研发',
 '先进技术',
 '关键技术',
 '创新性',
 '前沿技术',
 '科技创新',
 '技术应用',
 '产品开发',
 '自主创新',
 '新技术',
 '科研',
 '产品研发',
 '自主研发',
 '技术开发',
 '工艺技术',
 '技术标准',
 '基础研究',
 '集成创新',
 '核心技术',
 '成熟技术',
 '研发创新',
 '理论技术',
 '前沿技术研发',
 '工艺',
 '科技成果',
 '技术研究',
 '标准制定',
 '技术装备',
 '技术相结合']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;竞争&#39;</span><span class="p">,</span> <span class="s1">&#39;竞争力&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>['竞争',
 '竞争力',
 '竞争能力',
 '市场竞争',
 '竞争优势',
 '市场竞争力',
 '竞',
 '竞争实力',
 '激烈竞争',
 '参与市场竞争',
 '国际竞争',
 '市场竞争能力',
 '竞争态势',
 '市场竞争优势',
 '行业竞争',
 '综合竞争力',
 '竞争对手',
 '未来市场竞争',
 '产品竞争力',
 '之间竞争',
 '核心竞争力',
 '参与竞争',
 '核心竞争能力',
 '竞争日趋激烈',
 '国际化竞争',
 '国际竞争力',
 '竟争力',
 '市场化竞争',
 '同质化竞争',
 '竞争力关键',
 '价格竞争',
 '整体竞争力']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;疫情&#39;</span><span class="p">,</span> <span class="s1">&#39;扩散&#39;</span><span class="p">,</span> <span class="s1">&#39;防控&#39;</span><span class="p">,</span> <span class="s1">&#39;反复&#39;</span><span class="p">,</span> <span class="s1">&#39;冲击&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>['疫情',
 '扩散',
 '防控',
 '反复',
 '冲击',
 '蔓延',
 '疫情',
 '疫情爆发',
 '疫情冲击',
 '新冠疫情',
 '肆虐',
 '新冠肺炎',
 '疫情蔓延',
 '本次疫情',
 '散发',
 '疫情扩散',
 '疫情影响',
 '疫情反复',
 '疫情传播',
 '肺炎疫情',
 '国内疫情',
 '击',
 '各地疫情',
 '疫情全球',
 '疫情多点',
 '全球疫情',
 '持续蔓延',
 '多点散发',
 '疫情导致',
 '疫情暴发',
 '病毒疫情',
 '疫情持续',
 '疫情初期',
 '疫情出现',
 '防控措施']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;旧&#39;</span><span class="p">,</span> <span class="s1">&#39;老&#39;</span><span class="p">,</span> <span class="s1">&#39;后&#39;</span><span class="p">,</span> <span class="s1">&#39;落后&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>['旧',
 '老',
 '后',
 '落后',
 '老',
 '旧',
 '陈旧',
 '老旧',
 '淘汰',
 '低效率',
 '低效',
 '部分老旧',
 '进行改造',
 '老旧设备',
 '工艺落后',
 '设备陈旧',
 '能耗高',
 '更新改造',
 '落后工艺',
 '技术落后',
 '改造',
 '翻新',
 '简陋',
 '旧设备',
 '拆除',
 '现象严重',
 '原有',
 '相对落后',
 '产能淘汰',
 '加快淘汰',
 '搬',
 '替换',
 '大批',
 '迁']
</code></pre>
<p><br><br></p>
<h2 id="五源代码">五、源代码</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>
<span class="kn">from</span> <span class="nn">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>


<span class="k">def</span> <span class="nf">load_w2v</span><span class="p">(</span><span class="n">w2v_path</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    Load word2vec model
</span><span class="s2">
</span><span class="s2">    Args:
</span><span class="s2">        w2v_path (str): path of word2vec model
</span><span class="s2">
</span><span class="s2">    Returns:
</span><span class="s2">        model: word2vec model
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Loading word2vec model...&#39;</span><span class="p">)</span>
    <span class="n">model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">w2v_path</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">model</span>


<span class="k">def</span> <span class="nf">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="p">,</span> <span class="n">seedwords</span><span class="p">,</span> <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    According to the seed word file, select the top n words with the most similar semantics and save them in the directory save_dir.
</span><span class="s2">    
</span><span class="s2">    Args:
</span><span class="s2">        wv (Word2VecKeyedVectors): the word embedding model
</span><span class="s2">        seedwords (list): 种子词
</span><span class="s2">        topn (int, optional): Set the number of most similar words to retrieve to topn. Defaults to 100.
</span><span class="s2">        save_dir (str, optional): the directory to save the candidate words. Defaults to &#39;Word2Vec&#39;.
</span><span class="s2">    
</span><span class="s2">    Returns:
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="n">simidx_scores</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="n">similars_candidate_idxs</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1">#the candidate words of seedwords</span>
    <span class="n">dictionary</span> <span class="o">=</span> <span class="n">wv</span><span class="o">.</span><span class="n">key_to_index</span>
    <span class="n">seedidxs</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1">#transform word to index</span>
    <span class="k">for</span> <span class="n">seed</span> <span class="ow">in</span> <span class="n">seedwords</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">seed</span> <span class="ow">in</span> <span class="n">dictionary</span><span class="p">:</span>
            <span class="n">seedidx</span> <span class="o">=</span> <span class="n">dictionary</span><span class="p">[</span><span class="n">seed</span><span class="p">]</span>
            <span class="n">seedidxs</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">seedidx</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">seedidx</span> <span class="ow">in</span> <span class="n">seedidxs</span><span class="p">:</span>
        <span class="c1"># sims_words such as [(&#39;by&#39;, 0.99984), (&#39;or&#39;, 0.99982), (&#39;an&#39;, 0.99981), (&#39;up&#39;, 0.99980)]</span>
        <span class="n">sims_words</span> <span class="o">=</span> <span class="n">wv</span><span class="o">.</span><span class="n">similar_by_word</span><span class="p">(</span><span class="n">seedidx</span><span class="p">,</span> <span class="n">topn</span><span class="o">=</span><span class="n">topn</span><span class="p">)</span>
        <span class="c1">#Convert words to index and store them</span>
        <span class="n">similars_candidate_idxs</span><span class="o">.</span><span class="n">extend</span><span class="p">([</span><span class="n">dictionary</span><span class="p">[</span><span class="n">sim</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="k">for</span> <span class="n">sim</span> <span class="ow">in</span> <span class="n">sims_words</span><span class="p">])</span>
    <span class="n">similars_candidate_idxs</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">similars_candidate_idxs</span><span class="p">)</span>
    
    <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="n">similars_candidate_idxs</span><span class="p">:</span>
        <span class="n">score</span> <span class="o">=</span> <span class="n">wv</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="n">idx</span><span class="p">],</span> <span class="n">seedidxs</span><span class="p">)</span>
        <span class="n">simidx_scores</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">idx</span><span class="p">,</span> <span class="n">score</span><span class="p">))</span>
    <span class="n">simidxs</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">simidx_scores</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">k</span><span class="p">:</span><span class="n">k</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)]</span>

    <span class="n">simwords</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">wv</span><span class="o">.</span><span class="n">index_to_key</span><span class="p">[</span><span class="n">idx</span><span class="p">])</span> <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="n">simidxs</span><span class="p">][:</span><span class="n">topn</span><span class="p">]</span>

    <span class="n">resultwords</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">resultwords</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">seedwords</span><span class="p">)</span>
    <span class="n">resultwords</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">simwords</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">resultwords</span>
</code></pre></div><p><br><br></p>
<h2 id="六获取模型">六、获取模型</h2>
<p>内容创作不易， 本文为付费内容，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 50元    2001-2022年报MDA.xlsx  

- 50元    cntext-2.1.0-py3-none-any.whl

- 100元   Word2Vec相关模型文件(mda01-22.200.6.bin)

- 150元   
    - 2001-2022年报MDA.xlsx  
    - cntext-2.1.0-py3-none-any.whl  
    - Word2Vec相关模型文件(mda01-22.200.6.bin)
</code></pre></div><p>加微信 372335839， 备注「姓名-学校-专业-word2vec」</p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2001-2022年A股上市公司年报&amp;管理层讨论与分析</title>
      <link>https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/</link>
      <pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/</guid>
      <description>&lt;p&gt;2001-2022年A股年报数据集，含2个文件，共2G。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;年报 &lt;strong&gt;A01-22.xlsx&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;管理层讨论与分析 &lt;strong&gt;mda01-22.xlsx&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;xlsx与csv相比，同样的数据量，文件体积会小很多。截图对比&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/dataset.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意， 当数据的记录数小于100w条， 数据如果不考虑体积，存储到csv和xlsx都是okay的，推荐xlsx。当数据记录数大于100w， 只能存储到csv。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据获取&#34;&gt;数据获取&lt;/h2&gt;
&lt;p&gt;数据集不单卖， 打包50元，&lt;strong&gt;加微信 372335839， 备注「姓名-学校-专业」&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一年报数据&#34;&gt;一、年报数据&lt;/h2&gt;
&lt;p&gt;2001-2022年， 年报数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A01-22.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;55222
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二mda数据&#34;&gt;二、MD&amp;amp;A数据&lt;/h2&gt;
&lt;p&gt;2001-2022年MD&amp;amp;A数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-22.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;55439
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三相关内容&#34;&gt;三、相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/&#34;&gt;&lt;strong&gt;数据集 | 港股年报文本数据集(2007 ~ 2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/&#34;&gt;&lt;strong&gt;数据集(付费) | 三板上市公司年报2002-2023.12&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/&#34;&gt;&lt;strong&gt;数据集 | 美股年报10-K、20-F数据(2000-2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<p>2001-2022年A股年报数据集，含2个文件，共2G。</p>
<ul>
<li>
<p>年报 <strong>A01-22.xlsx</strong></p>
</li>
<li>
<p>管理层讨论与分析 <strong>mda01-22.xlsx</strong></p>
</li>
</ul>
<p>xlsx与csv相比，同样的数据量，文件体积会小很多。截图对比</p>
<p><img loading="lazy" src="img/dataset.png" alt=""  />
</p>
<blockquote>
<p>注意， 当数据的记录数小于100w条， 数据如果不考虑体积，存储到csv和xlsx都是okay的，推荐xlsx。当数据记录数大于100w， 只能存储到csv。</p>
</blockquote>
<p><br><br></p>
<h2 id="数据获取">数据获取</h2>
<p>数据集不单卖， 打包50元，<strong>加微信 372335839， 备注「姓名-学校-专业」</strong>。</p>
<p><br><br></p>
<h2 id="一年报数据">一、年报数据</h2>
<p>2001-2022年， 年报数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;A01-22.xlsx&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">55222
</code></pre></div><p><br><br></p>
<h2 id="二mda数据">二、MD&amp;A数据</h2>
<p>2001-2022年MD&amp;A数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">mda_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;mda01-22.xlsx&#39;</span><span class="p">)</span>
<span class="n">mda_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">mda_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">55439
</code></pre></div><p><br><br></p>
<h2 id="三相关内容">三、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/"><strong>数据集 | 港股年报文本数据集(2007 ~ 2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/"><strong>数据集(付费) | 三板上市公司年报2002-2023.12</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/"><strong>数据集 | 美股年报10-K、20-F数据(2000-2023.12)</strong></a></li>
</ul>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>金融研究 | 使用Python构建「关键审计事项信息含量」</title>
      <link>https://textdata.cn/blog/2023-01-13-information-content-of-critical-audit/</link>
      <pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-01-13-information-content-of-critical-audit/</guid>
      <description>关键审计事项是来自审计师视角的信息， 其蕴含的特质性信息对实现沟通价值至关重要。本文采用文本 分析方法计算的文本相似度衡量关键审计事项特质性信息含量，考察其对公司债券发行定价的影响。 结果发现， 以较低文本相似度代表的较高关键审计事项信息含量能够降低公司债券发行定价。 较高的审计师专业胜任能力 和独立性能够增强关键审计事项信息含量对公司债券发行定价的降低作用。 信息不对称的缓解是关键审计事项 信息含量降低公司债券发行定价的具体影响渠道。考虑关键审计事项类型后发现， 关联交易类关键审计事项信 息含量对公司债券发行定价的降低作用更强。本文研究结论有助于未来改进关键审计事项的披露要求。</description>
      <content:encoded><![CDATA[<p>宋建波,冯晓晴.关键审计事项信息含量与公司债券发行定价——基于文本相似度视角[J].会计研究,2022,(03):174-191.
<img loading="lazy" src="img/%e5%85%b3%e9%94%ae%e5%ae%a1%e8%ae%a1%e4%ba%8b%e9%a1%b9%e4%bf%a1%e6%81%af%e5%90%ab%e9%87%8f%e4%b8%8e%e5%85%ac%e5%8f%b8%e5%80%ba%e5%88%b8%e5%8f%91%e8%a1%8c%e5%ae%9a%e4%bb%b7_cover.png" alt=""  />
</p>
<h2 id="摘要">摘要</h2>
<p>关键审计事项是来自审计师视角的信息， 其蕴含的特质性信息对实现沟通价值至关重要。<strong>本文采用文本分析方法计算的文本相似度衡量关键审计事项特质性信息含量，考察其对公司债券发行定价的影响。 结果发现， 以较低文本相似度代表的较高关键审计事项信息含量能够降低公司债券发行定价</strong>。 较高的审计师专业胜任能力 和独立性能够增强关键审计事项信息含量对公司债券发行定价的降低作用。 信息不对称的缓解是关键审计事项 信息含量降低公司债券发行定价的具体影响渠道。考虑关键审计事项类型后发现， 关联交易类关键审计事项信 息含量对公司债券发行定价的降低作用更强。本文研究结论有助于未来改进关键审计事项的披露要求。</p>
<p>关键词: 关键审计事项; 公司债券; 发行定价; 信息含量; 文本相似度</p>
<p><br><br></p>
<h2 id="一信息含量算法">一、信息含量算法</h2>
<p>文中关键审计事项信息含量算法</p>
<p><img loading="lazy" src="img/%e5%85%b3%e9%94%ae%e5%ae%a1%e8%ae%a1%e4%ba%8b%e9%a1%b9%e4%bf%a1%e6%81%af%e5%90%ab%e9%87%8f-%e5%ae%9e%e7%8e%b0%e7%ae%97%e6%b3%95.png" alt=""  />
</p>
<p>本文不仅限于关键审计事项，在别的应用场景中也可以使用相似度计算得到信息含量。这里将算法再简化为文本向量化，依次计算得到该企业的<strong>企业向量</strong>、该企业所在行业的<strong>行业向量</strong>、<strong>信息含量(特质性)</strong>。大致的算法思路如下</p>
<ol>
<li>使用sklearn，将该企业文本(审计报告文本)转为TF-IDF的<strong>企业向量</strong>。</li>
<li>当年同行业所有企业(排除该公司)向量求均值，得到<strong>行业向量</strong>。</li>
<li>计算企业向量与行业向量余弦值，乘以(-1)，得到该企业的特质性的<strong>信息含量</strong></li>
</ol>
<p><br><br></p>
<h2 id="二信息含量算法实现">二、信息含量算法实现</h2>
<p>计算关键审计事项信息含量，需要有审计报告、行业。这里参考论文，使用md&amp;a文本 和 md&amp;a数据,用于计算 <strong>企业信息含量(特质性)</strong> 。</p>
<p>为了减少计算工作量，这里只准备了 2020 年的数据。</p>
<h3 id="21-读入数据">2.1 读入数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1"># converters 强制声明该列为字符串，  防止股票代码 被程序识别为数字，</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;mda2020.xlsx&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>

<span class="c1">#显示前5行</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<h3 id="22-数据筛选">2.2 数据筛选</h3>
<p>行业内企业数量过少，会导致行业向量与某个或某几个企业向量相关性增大，极端情况下，一个企业就是一个行业。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><pre><code>C39    419
C26    272
C35    256
C38    254
I65    250
      ... 
M75      1
R88      1
O80      1
B10      1
E49      1
Name: 行业代码, Length: 81, dtype: int64
</code></pre>
<p>剔除掉企业数较少的行业，这里只保留大于20的行业。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">ind_codes</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
<span class="n">ind_codes</span> <span class="o">=</span> <span class="n">ind_codes</span><span class="p">[</span><span class="n">ind_codes</span><span class="o">&gt;</span><span class="mi">20</span><span class="p">]</span><span class="o">.</span><span class="n">index</span>
<span class="n">ind_codes</span>
</code></pre></div><pre><code>Index(['C39', 'C26', 'C35', 'C38', 'I65', 'C27', 'C34', 'C36', 'K70', 'C30',
       'F52', 'C29', 'F51', 'C32', 'C33', 'D44', 'I64', 'E48', 'C40', 'C14',
       'C37', 'N77', 'J67', 'L72', 'C13', 'M74', 'C15', 'C17', 'C18', 'J66',
       'G54', 'C22', 'C31', 'G55', 'E50', 'C28', 'D45', 'R86', 'R85', 'C21',
       'B06', 'C41', 'B09', 'J69'],
      dtype='object')
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">filter_industry</span><span class="p">(</span><span class="n">ind_code</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">ind_code</span> <span class="ow">in</span> <span class="n">ind_codes</span><span class="p">:</span>
            <span class="k">return</span> <span class="kc">True</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="kc">False</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">return</span> <span class="kc">False</span>


<span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">filter_industry</span><span class="p">)]</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<h3 id="23-文本向量化">2.3 文本向量化</h3>
<p>使用sklearn，将该企业文本(审计报告文本)转为TF-IDF的企业向量。步骤</p>
<ol>
<li>分词整理</li>
<li>tfidff文本向量化</li>
<li>合并多个字段为新的df</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">re</span>

<span class="c1">#pip3 install cntext==1.8.6</span>
<span class="n">stopwords</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;STOPWORDS.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;STOPWORDS&#39;</span><span class="p">][</span><span class="s1">&#39;chinese&#39;</span><span class="p">]</span>


<span class="k">def</span> <span class="nf">transform</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="c1">#只保留md&amp;a中的中文内容</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;[</span><span class="se">\u4e00</span><span class="s1">-</span><span class="se">\u9fa5</span><span class="s1">]+&#39;</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>
    <span class="c1">#剔除停用词</span>
    <span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">jieba</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">stopwords</span><span class="p">]</span>
    <span class="c1">#整理为用空格间隔的字符串(类西方语言文本格式)</span>
    <span class="k">return</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>

<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;clean_text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;经营讨论与分析内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">transform</span><span class="p">)</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <span class="n">TfidfVectorizer</span>

<span class="n">cv</span> <span class="o">=</span> <span class="n">TfidfVectorizer</span><span class="p">(</span><span class="n">min_df</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">max_df</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span> 
<span class="c1"># 生成稀疏bow矩阵</span>
<span class="c1">#dtm 文档-词频-矩阵</span>
<span class="n">dtm2020</span> <span class="o">=</span> <span class="n">cv</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;clean_text&#39;</span><span class="p">])</span> 
<span class="n">dtm2020</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">dtm2020</span><span class="o">.</span><span class="n">toarray</span><span class="p">())</span>
<span class="n">dtm2020</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#合并多个字段为新的df</span>
<span class="n">dtm2020_</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df2</span><span class="p">[[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">]],</span> <span class="n">dtm2020</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">dtm2020_</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df5.png" alt=""  />
</p>
<br>
<h3 id="24-计算2020年信息含量">2.4 计算2020年信息含量</h3>
<ol>
<li>使用sklearn，将该企业文本(审计报告文本)转为TF-IDF的<strong>企业向量</strong>。</li>
<li>当年同行业所有企业(排除该公司)向量求均值，得到<strong>行业向量</strong>。</li>
<li>计算企业向量与行业向量余弦值，乘以(-1)，得到该企业的特质性的<strong>信息含量</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics.pairwise</span> <span class="kn">import</span> <span class="n">cosine_similarity</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">csv</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;信息含量2020.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">csvf</span><span class="p">:</span>
    <span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">,</span> <span class="s1">&#39;信息含量&#39;</span><span class="p">]</span>
    <span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span><span class="o">=</span><span class="n">fieldnames</span><span class="p">)</span>
    <span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>
    
    <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">dtm2020_</span><span class="p">)):</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">code</span> <span class="o">=</span> <span class="n">dtm2020_</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;股票代码&#39;</span><span class="p">]</span>
            <span class="n">ind</span> <span class="o">=</span> <span class="n">dtm2020_</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">]</span>
            <span class="n">year</span> <span class="o">=</span> <span class="n">dtm2020_</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">]</span>
            <span class="c1">#企业向量</span>
            <span class="n">corp_vec</span> <span class="o">=</span> <span class="p">[</span><span class="n">dtm2020_</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="mi">3</span><span class="p">:]</span><span class="o">.</span><span class="n">values</span><span class="p">]</span>
            <span class="n">corp_arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">corp_vec</span><span class="p">)</span>
            <span class="c1">#行业向量</span>
            <span class="n">ind_vec</span> <span class="o">=</span> <span class="p">[</span><span class="n">dtm2020_</span><span class="p">[</span><span class="n">dtm2020_</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">ind</span><span class="p">][</span><span class="n">dtm2020_</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">!=</span><span class="n">code</span><span class="p">]</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">3</span><span class="p">:]</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">.</span><span class="n">values</span><span class="p">]</span>
            <span class="n">ind_arr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">ind_vec</span><span class="p">)</span>
            <span class="c1">#信息含量</span>
            <span class="n">special_info</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">*</span> <span class="n">cosine_similarity</span><span class="p">(</span><span class="n">corp_arr</span><span class="p">,</span> <span class="n">ind_arr</span><span class="p">)[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>

            <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
            <span class="n">data</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">code</span>
            <span class="n">data</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ind</span>
            <span class="n">data</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">year</span>
            <span class="n">data</span><span class="p">[</span><span class="s1">&#39;信息含量&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">special_info</span>

            <span class="n">writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">pass</span>
</code></pre></div><p>欣赏一下结果</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">idf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;信息含量2020.csv&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">idf</span><span class="p">))</span>
<span class="n">idf</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df6.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三讨论">三、讨论</h2>
<p>最近陆续分享了几篇<strong>文本相似度</strong>、<strong>信息含量</strong>的论文</p>
<ul>
<li>[1]姜富伟,胡逸驰,黄楠.央行货币政策报告文本信息、宏观经济与股票市场[J].金融研究,2021,(06):95-113.</li>
<li>[2]宋建波,冯晓晴.关键审计事项信息含量与公司债券发行定价——基于文本相似度视角[J].会计研究,2022,(03):174-191.</li>
<li>[3]孟庆斌,杨俊华,鲁冰.管理层讨论与分析披露的信息含量与股价崩盘风险——基于文本向量化方法的研究[J].中国工业经济,2017,(12):132-150.</li>
</ul>
<p>比较一下,三者均先使用了文本向量化，将本文数据转为向量。每篇论文的算法</p>
<br>
<table>
<thead>
<tr>
<th>论文</th>
<th>指标</th>
<th>算法</th>
</tr>
</thead>
<tbody>
<tr>
<td>[1]</td>
<td>文本相似度</td>
<td>将央行货币政策报告向量化， 临近的两个报告文本向量计算相似度，相似度越高，金融市场波动性越小。</td>
</tr>
<tr>
<td>[2]</td>
<td>信息含量</td>
<td>将同行业内所有企业向量Corp求均值得到行业向量Ind，求Corp与Ind的余弦相似度，并将结果乘以(-1),所得结果定义为信息向量。</td>
</tr>
<tr>
<td>[3]</td>
<td>信息含量</td>
<td>文本向量化+计量建模，认为md&amp;a中的信息向量Norm可以由市场Norm_Market、行业Norm_Industry、企业异质性μ三种信息向量组成，通过计算 <br><code>Norm = a0 + a1*Norm_Industry +  a2*Norm_Market + μ</code> <br>，将μ 向量的绝对值和作为信息含量，而a1+a2看标准信息。</td>
</tr>
</tbody>
</table>
<br>
<p>从中可以看到两个向量的余弦相似度，在不同场景，解读含义是不同的，亦正亦邪。在货币政策中，相似度越高，表示越政策稳定，金融市场波动星越小。而在关键审计场景中，特质性信息是缓解公司与投资者信息不对称的关键，公司向量Corp与行业向量Ind相似度越高，表示公司审计报告文本特质性信息越少。</p>
<br>
<br>
<h2 id="代码获取">代码获取</h2>
<ul>
<li>代码及视频讲解已经添加至 <a href="https://textdata.cn/blog/management_python_course/">支持开票 | Python实证指标构建与文本分析</a> 中，感兴趣的同学欢迎订阅该系列课，涵盖Python语法入门、数据采集、文本分析、机器学习等。</li>
<li>数据&amp;代码创作不易， 50元， 如果需要源代码和数据， 加微信372335839， 备注「姓名-学校-专业」</li>
</ul>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>中国工业经济 | MD&amp;A信息含量指标构建代码实现</title>
      <link>https://textdata.cn/blog/2023-01-06-mda_informative_content/</link>
      <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-01-06-mda_informative_content/</guid>
      <description>每个上市公司 MD&amp;amp;A 信息不可避免地在某种程度上与同行业其他上市公司以及市场其他行业上市公司存在一定的相似性， 甚至某些公司可能直接参考其他公司 MD&amp;amp;A 的表述。 可以将与行业其他公司或其他行业的公司重复或相似的信息定义为不具有信息含量的内容，同时将不同的信息定义为真正具有信息含量的内容，简称为信息含量。In this paper ， we discuss the impact of informative content of Management Discussion and Analysis （ MD&amp;amp;A ） on stock price crash risk using the method of text vectorization. Using the MD&amp;amp;A in annual reports of China A -share listed firms from 2007 to 2015 ， we find that the informative content of MD&amp;amp;A can reduce future stock price crash risk ， and the informative content of preview section has significant effects on stock price crash risk ， while that of review section does not. After controlling endogeneity ， the conclusions still stand. Further ， we study the influence of informative content of preview section on crash risk from the aspects of readability and information opaqueness. The results show that the higher readability and higher information opaqueness ， the greater impact of informative content has on stock price crash risk. Finally ， after changing the calculation of crash risk ， and controlling the impact of stock price synchronicity ， the informative content of preview section still reduces stock price crash risk. This paper enriches the influencing factors of stock price crash risk and improves the study of the usefulness of MD&amp;amp;A from the perspective of incremental information ， which has important theoretical and practical significance.</description>
      <content:encoded><![CDATA[<h2 id="信息含量">信息含量</h2>
<p>由于每个公司的 MD&amp;A 中不仅包括公司经营状况等历史信息， 也包括与其他公司相似的信息， 如外部环境、市场格局、风险因素等内容。 因此， 本文参考 Hanley and Hoberg （ 2010 ）， 从行业和市场两个维度来考察和定义公司 MD&amp;A 中的信息含量。</p>
<ul>
<li><strong>市场因素</strong>， 所有上市公司都处于相同的宏观经济环境、风险因素和政治、政策背景之下；</li>
<li><strong>行业因素</strong>， 同一行业中的各上市公司又面临着相似的产业政策、竞争环境和市场特征。</li>
</ul>
<p>由此可见， 每个上市公司 MD&amp;A 信息不可避免地在某种程度上与同行业其他上市公司以及市场其他行业上市公司存在一定的相似性， 甚至某些公司可能直接参考其他公司 MD&amp;A 的表述。 <strong>可以将与行业其他公司或其他行业的公司重复或相似的信息定义为不具有信息含量的内容，同时将不同的信息定义为真正具有信息含量的内容，简称为信息含量</strong>。</p>
<br>
<blockquote>
<p>孟庆斌, 杨俊华, and 鲁冰. &ldquo;管理层讨论与分析披露的信息含量与股价崩盘风险——基于文本向量化方法的研究.&rdquo; 中国工业经济 12 (2017): 132-150.</p>
</blockquote>
<br>
<h3 id="摘要">摘要</h3>
<p>本文采用文本向量化的方法， 对 2007—2015 年中国 A 股上市公司年报的管理层讨论与分析（MD&amp;A）所披露的信息含量加以度量， 研究其对股价崩盘风险的影响。 研究发现， MD&amp;A 的信息含量越高，未来股价崩盘风险越低。 将 MD&amp;A 进一步划分为回顾部分和展望部分后发现，仅有展望部分中的信息含量能够显著降低未来股价崩盘风险。 在控制内生性问题之后，本文的结论依然成立。 本文还分别从文本可读性和信息不对称的角度出发，研究它们对二者关系的影响。 结果表明，信息的可读性越高，信息不对称程度越高，展望部分的信息含量对股价崩盘风险的降低作用越大。 在重新定义股价崩盘风险的计算区间以及控制股价同步性之后， MD&amp;A 展望部分的信息含量依然能够显著降低股价崩盘风险， 表明本文的结论是稳健的。 本文从文本信息的角度丰富了股价崩盘风险影响因素的研究， 同时也从增量信息的角度完善了 MD&amp;A 信息有用性的研究，具有重要的理论和现实意义。</p>
<br>
<h3 id="样本选择和处理">样本选择和处理</h3>
<p>本文选取 2007 — 2015 年中国上市公司年报中的 MD&amp;A 信息作为研究样本。 之所以选取 2007 年作为样本的起点， 是因为从 2007 年开始， MD&amp;A 在企业定期报告中的披露要求已经较为完善， 而且 2007 年是中国会计准则国际趋同的重要时点， 新制定的《企业会计准则》已经开始实施， 为避免前后会计准则差异而产生的影响， 因此选取 2007 年作为样本区间的起点。</p>
<p>本文所使用的上市公司年度报告均来自于巨潮资讯网。 数据处理过程如下：</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">（ 1 ）剔除金融行业、 ST 和 *ST 类企业， 以及上市时间不足一年的企业。

（ 2 ）从 MD&amp;A 的内容中分别提取回顾和展望部分， 保存为回顾信息文件和展望信息文件， 部分无法抓取出的年报通过手工收集处理。

（ 3 ）文本处理-文本向量化。 借鉴 Hanley and Hoberg （ 2010 ）的研究思路， 将每个 MD&amp;A 文本通过向量的 形式表示出来， 其每个元素为文本中的每个词语出现的频率。 例如， 假设某 MD&amp;A 文本中包含 10000 个词， 则该文本对应一个 10000×1 维的向量。 举一个简单的例子来描述文本向量化的过程： 在两个简化的 MD&amp;A 文本中， 一个包含“我们生产土豆和生产玉米”， 另一个包含“我们生产家具”， 剔除连词“和”、代词“我们”之后， 只剩下“生产”、“土豆”、“玉米”、“家具”这 4 个词。 那么， 在第一个 MD&amp;A 文本中， “生产”、“土豆”和“玉米”分别出现了 2 次、 1 次和 1 次， 而“家具”出现 0 次， 所以该 文本的向量为 {2 ， 1 ， 1 ， 0} ， 同样得到第二个文本的向量为 {1 ， 0 ， 0 ， 1} 。

（ 4 ）向量标准化。 对于向量化的文本， 仍需解决文本长度不同导致的结果不可比问题。 一般来说， 某一个词在长文本中重复出现的次数较多， 在短文本中重复出现的次数较少， 但并不能因此说 长文本比短文本的信息量大。 为此， 本文进一步将这些向量进行标准化处理， 即将该向量除以文本 中单词的总数， 得到标准化后的向量。 在上面的例子中， 两个公司的标准化之后的向量就成为了 {0.50 ， 0.25 ， 0.25 ， 0} 和 {0.50 ， 0 ， 0 ， 0.50} 。
</code></pre></div><br>
<h3 id="文件目录">文件目录</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">管理层讨论信息含量/
├── 信息含量计算代码.ipynb
├── data/
│   ├── 行业代码.xlsx
│   └── mda10-20.xlsx
├── mda_infor.csv
├── output/
│   └── 2020/
│       ├── 000002.csv
│       ├── 000004.csv
│       ├── 000005.csv
│       ├── 000006.csv
│       ├── ...
│   └── 2019/
│       ├── 000002.csv
│       ├── 000004.csv
│       ├── 000005.csv
│       ├── 000006.csv
│       ├── ...
│   └── 2018/
│       ├── 000002.csv
│       ├── 000004.csv
│       ├── 000005.csv
│       ├── 000006.csv
│       ├── 000006.csv
│       ├── ...
│   └── ...
</code></pre></div><p><br><br></p>
<h2 id="一导入数据">一、导入数据</h2>
<p>这里准备了2010-2020年A股经营讨论与分析内容和行业代码数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1"># converters 强制声明该列为字符串，  防止股票代码 被程序识别为数字，</span>
<span class="c1"># 完整数据370+M </span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;data/mda10-20.xlsx&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>

<span class="c1">#上市公司行业信息</span>
<span class="n">ind_info_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;data/行业代码.xlsx&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>


<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">ind_info_df</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">],</span> <span class="n">how</span><span class="o">=</span><span class="s1">&#39;inner&#39;</span><span class="p">)</span>

<span class="c1">#显示前5行</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 剔除金融行业处理</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="o">~</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s2">&#34;J&#34;</span><span class="p">)]</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="o">~</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公司简称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s2">&#34;ST&#34;</span><span class="p">)]</span>

<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二以2020年为例">二、以2020年为例</h2>
<p>写代码先局部后整体，以2020年为例，如果2020年可以成功计算出信息含量，则可以for循环推广到所有股票所有年份。本章节需要做</p>
<ol>
<li>选定某年份，以2020年为例</li>
<li>定义transform函数，用于处理「经营讨论与分析内容」字段内的内容。</li>
<li>文本向量化，向量标准化。</li>
</ol>
<br>
<h3 id="21-选定2020年">2.1 选定2020年</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df_per_year</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">2020</span><span class="p">]</span>
<span class="n">df_per_year</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">df_per_year</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<h3 id="22-定义transform函数">2.2 定义transform函数</h3>
<p>定义transform函数，该函数可以处理「经营讨论与分析内容」字段内容，使其:</p>
<ol>
<li>只保留中文内容</li>
<li>剔除停用词</li>
<li>整理为用空格间隔的字符串(类西方语言文本格式)</li>
</ol>
<p>之后应用 <strong>transform函数</strong>， 使用<strong>apply方法</strong>， 处理 <strong>df_per_year[&lsquo;经营讨论与分析内容&rsquo;]</strong> 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">re</span>

<span class="n">stopwords</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;STOPWORDS.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;STOPWORDS&#39;</span><span class="p">][</span><span class="s1">&#39;chinese&#39;</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">transform</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="c1">#只保留md&amp;a中的中文内容</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;[</span><span class="se">\u4e00</span><span class="s1">-</span><span class="se">\u9fa5</span><span class="s1">]+&#39;</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>
    <span class="c1">#剔除停用词</span>
    <span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">jieba</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">stopwords</span><span class="p">]</span>
    <span class="c1">#整理为用空格间隔的字符串(类西方语言文本格式)</span>
    <span class="k">return</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>


<span class="n">df_per_year</span><span class="p">[</span><span class="s1">&#39;clean_text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_per_year</span><span class="p">[</span><span class="s1">&#39;经营讨论与分析内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">transform</span><span class="p">)</span>
</code></pre></div><pre><code>Building prefix dict from the default dictionary ...
Loading model from cache /var/folders/sc/3mnt5tgs419_hk7s16gq61p80000gn/T/jieba.cache
Loading model cost 0.556 seconds.
Prefix dict has been built successfully.
</code></pre>
<br>
<h3 id="23-文本向量化">2.3 文本向量化</h3>
<p>本小节要做:</p>
<ol>
<li>文本向量化</li>
<li>向量标准化</li>
<li>合并多个字段为新的df</li>
</ol>
<p>先将df_per_year[&lsquo;clean_text&rsquo;] 向量化，代码如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <span class="n">CountVectorizer</span>

<span class="n">cv</span> <span class="o">=</span> <span class="n">CountVectorizer</span><span class="p">(</span><span class="n">min_df</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">max_df</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span> 
<span class="c1"># 生成稀疏bow矩阵</span>
<span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">cv</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">df_per_year</span><span class="p">[</span><span class="s1">&#39;clean_text&#39;</span><span class="p">])</span> 
<span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">dtm_per_year</span><span class="o">.</span><span class="n">toarray</span><span class="p">())</span>
<span class="n">dtm_per_year</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="c1">#向量标准化</span>
<span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">/</span><span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">row</span><span class="p">),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">dtm_per_year</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df5.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#合并多个字段为新的df</span>
<span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df_per_year</span><span class="p">[[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">]],</span> <span class="n">dtm_per_year</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">dtm_per_year</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df6.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三计算2020年行业向量市场向量">三、计算2020年行业向量、市场向量</h2>
<p>计算2020年所有公司的市场向量、行业向量。这里</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">dtm_per_year</span><span class="p">)):</span>
    <span class="n">code</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;股票代码&#39;</span><span class="p">]</span>
    <span class="n">ind</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">]</span>
    <span class="n">year</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">]</span>
    
    <span class="n">ind_freq</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="p">[</span><span class="n">dtm_per_year</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">ind</span><span class="p">][</span><span class="n">dtm_per_year</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">!=</span><span class="n">code</span><span class="p">]</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">3</span><span class="p">:]</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">market_freq</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="p">[</span><span class="n">dtm_per_year</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">!=</span><span class="n">ind</span><span class="p">]</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">3</span><span class="p">:]</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    
    <span class="n">dtm_per_year_melted</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">melt</span><span class="p">(</span><span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">],</span>
                                            <span class="n">var_name</span><span class="o">=</span><span class="s1">&#39;word_id&#39;</span><span class="p">,</span> 
                                            <span class="n">value_name</span><span class="o">=</span><span class="s1">&#39;word_freq&#39;</span><span class="p">)</span>
    <span class="n">corporate_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;word_id&#39;</span><span class="p">:</span> <span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">code</span><span class="p">][</span><span class="s1">&#39;word_id&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
                                 <span class="s1">&#39;word_freq&#39;</span><span class="p">:</span> <span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">code</span><span class="p">][</span><span class="s1">&#39;word_freq&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
                                 <span class="s1">&#39;ind_freq&#39;</span><span class="p">:</span> <span class="n">ind_freq</span><span class="p">,</span>
                                 <span class="s1">&#39;market_freq&#39;</span><span class="p">:</span><span class="n">market_freq</span><span class="p">})</span>
    <span class="n">corporate_df</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">code</span>
    <span class="n">corporate_df</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ind</span>
    <span class="n">corporate_df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">year</span>
    <span class="n">corporate_df</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">corporate_df</span> <span class="o">=</span> <span class="n">corporate_df</span><span class="p">[[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;word_id&#39;</span><span class="p">,</span> <span class="s1">&#39;word_freq&#39;</span><span class="p">,</span> <span class="s1">&#39;ind_freq&#39;</span><span class="p">,</span> <span class="s1">&#39;market_freq&#39;</span><span class="p">]]</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="s1">&#39;output/</span><span class="si">{year}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">year</span><span class="p">)):</span>
        <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="s1">&#39;output/</span><span class="si">{year}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">year</span><span class="p">))</span>
    <span class="n">corporate_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;output/</span><span class="si">{year}</span><span class="s1">/</span><span class="si">{code}</span><span class="s1">.csv&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">year</span><span class="p">,</span> <span class="n">code</span><span class="o">=</span><span class="n">code</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h2 id="四计算2010-2020年所有公司行业向量市场向量">四、计算2010-2020年所有公司行业向量、市场向量</h2>
<p>信息含量的定义。 由于每个公司的 MD&amp;A 中不仅包括公司经营状况等历史信息， 也包括与其他公司相似的信息， 如外部环境、市场格局、风险因素等内容。 因此， 本文参考 Hanley and Hoberg （ 2010 ）， 从行业和市场两个维度来考察和定义公司 MD&amp;A 中的信息含量。</p>
<ul>
<li><strong>市场因素</strong>， 所有上市公司都处于相同的宏观经济环境、风险因素和政治、政策背景之下；</li>
<li><strong>行业因素</strong>， 同一行业中的各上市公司又面临着相似的产业政策、竞争环境和市场特征。</li>
</ul>
<p>由此可见， 每个上市公司 MD&amp;A 信息不可避免地在某种程度上与同行业其他上市公司以及市场其他行业上市公司存在一定的相似性， 甚至某些公司可能直接参考其他公司 MD&amp;A 的表述。</p>
<p><img loading="lazy" src="img/norm_ind_market.png" alt=""  />
</p>
<p>参考文中截图行业向量、市场向量计算方法，有如下代码。<strong>该部分代码运行较慢，全部运行下来大约10小时。</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <span class="n">CountVectorizer</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">re</span>

<span class="n">stopwords</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;STOPWORDS.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;STOPWORDS&#39;</span><span class="p">][</span><span class="s1">&#39;chinese&#39;</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">transform</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="c1">#只保留md&amp;a中的中文内容</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;[</span><span class="se">\u4e00</span><span class="s1">-</span><span class="se">\u9fa5</span><span class="s1">]+&#39;</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>
    <span class="c1">#剔除停用词</span>
    <span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">jieba</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">stopwords</span><span class="p">]</span>
    <span class="c1">#整理为用空格间隔的字符串(类西方语言文本格式)</span>
    <span class="k">return</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>


<span class="c1"># converters 强制声明该列为字符串，  防止股票代码 被程序识别为数字，</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;data/mda10-20.xlsx&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="c1">#上市公司行业信息</span>
<span class="n">ind_info_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;data/行业代码.xlsx&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">ind_info_df</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">],</span> <span class="n">how</span><span class="o">=</span><span class="s1">&#39;inner&#39;</span><span class="p">)</span>

<span class="c1"># 剔除金融行业处理</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="o">~</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s2">&#34;J&#34;</span><span class="p">)]</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="o">~</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公司简称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s2">&#34;ST&#34;</span><span class="p">)]</span>

<span class="k">for</span> <span class="n">year</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">2010</span><span class="p">,</span> <span class="mi">2011</span><span class="p">,</span> <span class="mi">2012</span><span class="p">,</span> <span class="mi">2013</span><span class="p">]:</span>
<span class="c1">#for year in set(df[&#39;会计年度&#39;].values):</span>
    <span class="n">df_per_year</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">year</span><span class="p">]</span>
    <span class="n">df_per_year</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">df_per_year</span><span class="p">[</span><span class="s1">&#39;clean_text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_per_year</span><span class="p">[</span><span class="s1">&#39;经营讨论与分析内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">transform</span><span class="p">)</span>
    

    <span class="n">cv</span> <span class="o">=</span> <span class="n">CountVectorizer</span><span class="p">(</span><span class="n">min_df</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">max_df</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span> 
    <span class="c1"># 生成稀疏bow矩阵</span>
    <span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">cv</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">df_per_year</span><span class="p">[</span><span class="s1">&#39;clean_text&#39;</span><span class="p">])</span> 
    <span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">dtm_per_year</span><span class="o">.</span><span class="n">toarray</span><span class="p">())</span>
    <span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">/</span><span class="n">np</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">row</span><span class="p">),</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    
    <span class="n">dtm_per_year</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df_per_year</span><span class="p">[[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">]],</span> <span class="n">dtm_per_year</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    
    <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">dtm_per_year</span><span class="p">)):</span>
        <span class="n">code</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;股票代码&#39;</span><span class="p">]</span>
        <span class="n">ind</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">]</span>
        <span class="n">year</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">]</span>



        <span class="n">ind_freq</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="p">[</span><span class="n">dtm_per_year</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">ind</span><span class="p">][</span><span class="n">dtm_per_year</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">!=</span><span class="n">code</span><span class="p">]</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">3</span><span class="p">:]</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="n">market_freq</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="p">[</span><span class="n">dtm_per_year</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span><span class="o">!=</span><span class="n">ind</span><span class="p">]</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">3</span><span class="p">:]</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        
        <span class="n">dtm_per_year_melted</span> <span class="o">=</span> <span class="n">dtm_per_year</span><span class="o">.</span><span class="n">melt</span><span class="p">(</span><span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">],</span>
                                                <span class="n">var_name</span><span class="o">=</span><span class="s1">&#39;word_id&#39;</span><span class="p">,</span> 
                                                <span class="n">value_name</span><span class="o">=</span><span class="s1">&#39;word_freq&#39;</span><span class="p">)</span>
        <span class="n">corporate_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span> <span class="s1">&#39;word_id&#39;</span><span class="p">:</span> <span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">code</span><span class="p">][</span><span class="s1">&#39;word_id&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
                                       <span class="s1">&#39;word_freq&#39;</span><span class="p">:</span> <span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="n">dtm_per_year_melted</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">code</span><span class="p">][</span><span class="s1">&#39;word_freq&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
                                       <span class="s1">&#39;ind_freq&#39;</span><span class="p">:</span> <span class="n">ind_freq</span><span class="p">,</span>
                                       <span class="s1">&#39;market_freq&#39;</span><span class="p">:</span><span class="n">market_freq</span><span class="p">})</span>
        <span class="n">corporate_df</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">code</span>
        <span class="n">corporate_df</span><span class="p">[</span><span class="s1">&#39;行业代码&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ind</span>
        <span class="n">corporate_df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">year</span>
        <span class="n">corporate_df</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="n">corporate_df</span> <span class="o">=</span> <span class="n">corporate_df</span><span class="p">[[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;word_id&#39;</span><span class="p">,</span> <span class="s1">&#39;word_freq&#39;</span><span class="p">,</span> <span class="s1">&#39;ind_freq&#39;</span><span class="p">,</span> <span class="s1">&#39;market_freq&#39;</span><span class="p">]]</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="s1">&#39;output/</span><span class="si">{year}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">year</span><span class="p">)):</span>
            <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="s1">&#39;output/</span><span class="si">{year}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">year</span><span class="p">))</span>
        <span class="n">corporate_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;output/</span><span class="si">{year}</span><span class="s1">/</span><span class="si">{code}</span><span class="s1">.csv&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">year</span><span class="p">,</span> <span class="n">code</span><span class="o">=</span><span class="n">code</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h2 id="五标准信息信息含量">五、标准信息、信息含量</h2>
<p>以2020年000002为例，计算其标准信息、信息含量。计算成功后，再计算所有年份所有上市公司 md&amp;a的标准信息、信息含量。</p>
<p><strong>原文除了计算md&amp;a，还将md&amp;a区分为回顾过去、展望未来两部分，并分别计算了对应的标准信息、信息含量。这里只计算md&amp;a的标准信息、信息含量。</strong></p>
<p><img loading="lazy" src="img/infor_pre.png" alt=""  />
</p>
<p>这里使用Python的统计模型statsmodels库OLS来计算标准信息和信息含量。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">csv_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;output/2020/000002.csv&#39;</span><span class="p">,</span>  <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">csv_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df7.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#更改字段名</span>
<span class="n">csv_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;word_id&#39;</span><span class="p">,</span> <span class="s1">&#39;Norm&#39;</span><span class="p">,</span> <span class="s1">&#39;Norm_Ind&#39;</span><span class="p">,</span> <span class="s1">&#39;Norm_Market&#39;</span><span class="p">]</span>
<span class="n">csv_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run
<img loading="lazy" src="img/df8.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">statsmodels.formula.api</span> <span class="k">as</span> <span class="nn">smf</span>

<span class="c1">#因变量Norm</span>
<span class="c1">#解释变量Norm_Ind、 Norm_Market</span>
<span class="n">formula</span> <span class="o">=</span> <span class="s1">&#39;Norm ~ Norm_Ind + Norm_Market&#39;</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">smf</span><span class="o">.</span><span class="n">ols</span><span class="p">(</span><span class="n">formula</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">csv_df</span><span class="p">)</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">summary</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">
                                OLS Regression Results                            
    ==============================================================================
    Dep. Variable:                   Norm   R-squared:                       0.319
    Model:                            OLS   Adj. R-squared:                  0.318
    Method:                 Least Squares   F-statistic:                     763.9
    Date:                Fri, 06 Jan 2023   Prob (F-statistic):          6.88e-273
    Time:                        06:37:27   Log-Likelihood:                 17334.
    No. Observations:                3269   AIC:                        -3.466e+04
    Df Residuals:                    3266   BIC:                        -3.464e+04
    Df Model:                           2                                         
    Covariance Type:            nonrobust                                         
    ===============================================================================
                      coef    std err          t      P&gt;|t|      [0.025      0.975]
    -------------------------------------------------------------------------------
    Intercept    1.164e-05   2.86e-05      0.407      0.684   -4.44e-05    6.77e-05
    Norm_Ind        0.7486      0.020     37.460      0.000       0.709       0.788
    Norm_Market     0.2133      0.064      3.327      0.001       0.088       0.339
    ==============================================================================
    Omnibus:                     4804.262   Durbin-Watson:                   2.026
    Prob(Omnibus):                  0.000   Jarque-Bera (JB):          4165802.983
    Skew:                           8.425   Prob(JB):                         0.00
    Kurtosis:                     177.069   Cond. No.                     3.05e+03
    ==============================================================================
    
    Notes:
    [1] Standard Errors assume that the covariance matrix of the errors is correctly specified.
    [2] The condition number is large, 3.05e+03. This might indicate that there are
    strong multicollinearity or other numerical problems.
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#标准信息</span>
<span class="n">standard_info</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">Norm_Ind</span> <span class="o">+</span> <span class="n">result</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">Norm_Market</span>


<span class="c1">#信息含量</span>
<span class="n">informative_content</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">resid</span><span class="p">))</span>


<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;000002标准信息: </span><span class="si">{}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">standard_info</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;000002信息含量: </span><span class="si">{}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">informative_content</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    000002标准信息: 0.9619640977801796
    000002信息含量: 1.2750713760886476
</code></pre></div><br>
<p>既然能成功计算某年某公司的标准信息、信息含量，现在推广到所有年份所有公司，计算结果存储为一个csv文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">csv</span>
<span class="kn">import</span> <span class="nn">statsmodels.formula.api</span> <span class="k">as</span> <span class="nn">smf</span>
<span class="kn">import</span> <span class="nn">re</span>

<span class="c1">#结果存储到mda_infor.csv</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;mda_infor.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">csvf</span><span class="p">:</span>
    <span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;标准信息&#39;</span><span class="p">,</span> <span class="s1">&#39;信息含量&#39;</span><span class="p">]</span>
    <span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span><span class="o">=</span><span class="n">fieldnames</span><span class="p">)</span>
    <span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>
    
    <span class="n">year_dirs</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="s1">&#39;output&#39;</span><span class="p">)</span>
    <span class="n">year_dirs</span> <span class="o">=</span> <span class="p">[</span><span class="n">y</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">year_dirs</span> <span class="k">if</span> <span class="s1">&#39;DS&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">y</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">year_dir</span> <span class="ow">in</span> <span class="n">year_dirs</span><span class="p">:</span>
        <span class="n">code_csvfs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;output/</span><span class="si">{year}</span><span class="s1">/</span><span class="si">{csvf}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">year_dir</span><span class="p">,</span> <span class="n">csvf</span><span class="o">=</span><span class="n">f</span><span class="p">)</span> 
                      <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="s1">&#39;output/</span><span class="si">{}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year_dir</span><span class="p">))]</span>
        <span class="n">code_csvfs</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">code_csvfs</span> <span class="k">if</span> <span class="s1">&#39;DS&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">f</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">csvf</span> <span class="ow">in</span> <span class="n">code_csvfs</span><span class="p">:</span> 
            <span class="k">try</span><span class="p">:</span>
                <span class="n">csv_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span>  <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
                <span class="n">csv_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;行业代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;word_id&#39;</span><span class="p">,</span> <span class="s1">&#39;Norm&#39;</span><span class="p">,</span> <span class="s1">&#39;Norm_Ind&#39;</span><span class="p">,</span> <span class="s1">&#39;Norm_Market&#39;</span><span class="p">]</span>
                <span class="n">formula</span> <span class="o">=</span> <span class="s1">&#39;Norm ~ Norm_Ind + Norm_Market&#39;</span>
                <span class="n">model</span> <span class="o">=</span> <span class="n">smf</span><span class="o">.</span><span class="n">ols</span><span class="p">(</span><span class="n">formula</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">csv_df</span><span class="p">)</span>
                <span class="n">result</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">()</span>

                <span class="c1">#标准信息</span>
                <span class="n">standard_info</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">Norm_Ind</span> <span class="o">+</span> <span class="n">result</span><span class="o">.</span><span class="n">params</span><span class="o">.</span><span class="n">Norm_Market</span>
                <span class="c1">#信息含量</span>
                <span class="n">informative_content</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">abs</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">resid</span><span class="p">))</span>

                <span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;\d</span><span class="si">{6}</span><span class="s1">&#39;</span><span class="p">,</span> <span class="n">csvf</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span> 
                        <span class="s1">&#39;会计年度&#39;</span><span class="p">:</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;\d</span><span class="si">{4}</span><span class="s1">&#39;</span><span class="p">,</span> <span class="n">csvf</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span> 
                        <span class="s1">&#39;标准信息&#39;</span><span class="p">:</span> <span class="n">standard_info</span><span class="p">,</span> 
                        <span class="s1">&#39;信息含量&#39;</span><span class="p">:</span> <span class="n">informative_content</span><span class="p">}</span>
                <span class="n">writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
</code></pre></div><p><br><br></p>
<h2 id="最后">最后</h2>
<p>读取生成的 &lsquo;mda_infor.csv&rsquo; 文件，欣赏一下 <code>标准信息、信息含量</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;mda_infor.csv&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df9.png" alt=""  />
</p>
<br>
<p>需要注意，原文选取 2007 — 2015 年中国上市公司年报中的 MD&amp;A 信息作为研究样本。 之所以选取 2007 年作为样本的起点， 是因为从 2007 年开始， MD&amp;A 在企业定期报告中的披露要求已经较为完善， 而且 2007 年是中国会计准则国际趋同的重要时点， 新制定的《企业会计准则》已经开始实施， 为避免前后会计准则差异而产生的影响， 因此选取 2007 年作为样本区间的起点。</p>
<p><strong>mda_infor.csv含有2010-2020年的数据，如要复现原文，需要注意筛选数据。</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;mda_infor.csv记录数:&#39;</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    mda_infor.csv记录数: 30173
</code></pre></div><p><br><br></p>
<h2 id="数据代码获取">数据代码获取</h2>
<ul>
<li>数据&amp;代码创作不易， 如果需要源代码和数据， <a href="https://mp.weixin.qq.com/s/Rf3B0GJ_Tml-DVH-A6gV_g">点击进入购买链接</a>。</li>
<li>已购买 <a href="https://textdata.cn/blog/management_python_course/"><strong>支持开票 | Python实证指标构建与文本分析</strong></a> 课程学员，可私信大邓，直接获取本文数据、代码。</li>
</ul>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
