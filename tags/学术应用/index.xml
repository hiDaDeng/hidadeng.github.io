<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>学术应用 on 大邓和他的PYTHON</title>
    <link>/tags/%E5%AD%A6%E6%9C%AF%E5%BA%94%E7%94%A8/</link>
    <description>Recent content in 学术应用 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 23 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E5%AD%A6%E6%9C%AF%E5%BA%94%E7%94%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>置顶推荐 | 社科(经管)文本分析快速指南</title>
      <link>https://hidadeng.github.io/blog/the_text_analysis_list_about_ms/</link>
      <pubDate>Sat, 16 Apr 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/the_text_analysis_list_about_ms/</guid>
      <description>如何从网络世界中高效地采集数据？是否能从文本中挖掘出人类的偏见等认知信息？如何从杂乱的文本数据中抽取文本信息(变量)？本文汇总的列表将让你对文本、对Python文本分析个全面的了解</description>
      <content:encoded><![CDATA[<h2 id="文献类">文献类</h2>
<p>个人感觉本文的精华就在这里了，读几篇文章就能对文本分析在社科（经管）的应用有深刻的了解。</p>
<ul>
<li><a href="https://hidadeng.github.io/blog/read_this_you_will_know_what_is_text_mining/">读完本文你就了解什么是文本分析</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-12-03-scraping-web-data-for-marketing-insights/">JM2022综述 | 黄金领域: 为营销研究(新洞察)采集网络数据</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-16-literature-review-textmining-in-finance-yao2020/">转载 | 金融学文本大数据挖掘方法与研究进展</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-12-03-social-computing-methodology-about-big-data-and-artificial-intelligence/">转载 | 社会计算驱动的社会科学研究方法</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-13-computing-cultural-psychology-with-big-data/">转载 | 大数据时代的「计算文化心理学」</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-12-30-review-about-socioeconomic-status-analysis/">转载 | 大数据驱动的「社会经济地位」分析研究综述</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-12-review_about_accounting_text_mining/">转载 | 国外会计文本信息实证研究述评与展望</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-19-quantitative-history-economic/">文献汇总 | 量化历史学与经济学研究</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-08-dufe-text-mining-in-ms/">视频分享 | 文本分析在经济管理研究中的应用</a></li>
<li><a href="https://hidadeng.github.io/blog/accountingtext/">视频分享 | 会计领域中的Python文本分析</a></li>
<li><a href="https://hidadeng.github.io/blog/fintech_quant_with_python/">视频分享 | Python数据挖掘与金融科技 </a></li>
<li><a href="https://hidadeng.github.io/blog/text_mining_in_marketing_research/">文本分析在市场营销研究中的应用</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-16-papers-using-text-mining-tech-in-journal-of-economic-research/">近年《经济研究》中「文本分析」相关论文</a></li>
<li><a href="https://hidadeng.github.io/blog/research_with_tm_in_chinese_top_ms_journal/">近年《管理世界》《管理科学学报》使用文本分析论文</a></li>
<li><a href="https://hidadeng.github.io/blog/2019-12-08-lazy-prices/">文本相似 | Lazy Prices公司年报内容变动预示重大风险</a></li>
<li><a href="https://hidadeng.github.io/blog/manager_tone_analysis_with_lm/">管理世界 | 使用LM中文金融词典对年报进行语调分析</a></li>
<li><a href="https://hidadeng.github.io/blog/text_mining_in_2021_management_world/">管理世界 | 使用文本分析&amp;机器学习测量短视主义</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-03-mda-measure-digitalization/">管理世界 | 使用 经营讨论与分析 测量 企业数字化</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-06-mda_informative_content/">中国工业经济 | MD&amp;A信息含量指标构建代码实现</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-10-similarity_of_cental_bank_monetary_policy/">金融研究 | 央行货币政策文本相似度计算与可视化</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-13-information-content-of-critical-audit/">金融研究 | 使用Python构建「关键审计事项信息含量」</a></li>
<li><a href="https://hidadeng.github.io/blog/automate_text_analysis_in_market/">营销研究中文本分析应用概述(含案例及代码)</a></li>
<li><a href="https://hidadeng.github.io/blog/text_readability/">文本可读性研究及应用清单</a></li>
<li><a href="https://mp.weixin.qq.com/s/mefUYQnTn8vdWV78c9lRBw">多维度、细粒度情感词库的核心思想与建设过程概述</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-10-22-textstats-readability/">使用 textsta t库计算文本可读性</a></li>
<li><a href="https://hidadeng.github.io/blog/jcr_concreteness_computation/">计算文本的语言具体性 | 以JCR2021论文为例</a></li>
<li><a href="https://hidadeng.github.io/blog/pnas_culture_bridges/">PNAS | 文本网络分析&amp;文化桥梁 Python 代码实现</a></li>
<li><a href="https://hidadeng.github.io/blog/pnas_historical_language/">PNAS | 历史语言记录揭示了近几十年来认知扭曲的激增</a></li>
<li><a href="https://hidadeng.github.io/blog/pnas_love_separate/">PNAS | 情侣分手3个月前就有预兆！聊天记录还能反映分手后遗症</a></li>
<li><a href="https://hidadeng.github.io/blog/pnas_text_fluency/">PNAS | 词汇熟悉度对线上参与和资金筹集的预测性效用</a></li>
<li><a href="https://hidadeng.github.io/blog//2022-11-14-pnas_naming_unrelated_words_predicts_creativity/">PNAS | 使用语义距离测量一个人的创新力(发散思维)得分</a></li>
<li><a href="https://hidadeng.github.io/blog/embeddingsandattitude/">词嵌入测量不同群体对某概念的态度(偏见)</a></li>
<li><a href="https://hidadeng.github.io/blog/wordembeddingsinsocialscience/">转载 | 大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用</a></li>
<li><a href="https://hidadeng.github.io/blog/from_sysbol_to_embeddings_in_computational_social_science/">转载 | 从符号到嵌入：计算社会科学的两种文本表示</a></li>
<li><a href="https://hidadeng.github.io/blog/literatureembeddings/">文献汇总 | 词嵌入 与 社会科学中的偏见(态度)</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-07-management-science-disrupt-science-and-technology">Management Science | 使用网络算法识别创新的颠覆性与否</a></li>
</ul>
<br>
<h2 id="代码类">代码类</h2>
<p>本部分选取了与社科相关性较强的文本分析代码或第三方库。</p>
<ul>
<li><a href="https://hidadeng.github.io/blog/2023-02-11-chatgpt-plus-for-text-mining">使用 chatGPT 做词频统计&amp;词云图</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-12-regex-expression-generated-by-chatgpt/">数据清洗 | 借助 chatGPT 设计正则表达式</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-27-cheatsheet-about-text-manipulate-in-python/">CheatSheet | Python文本数据处理速查表</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-18-regex-expression-examples/">正则表达式 | 词频统计、情感分析、融资约束</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-21-create-brower-data-label-tools-with-nicegui/">NiceGUI库 | 简单易懂的Web GUI开发包； 可开发数据标注工具、心理学实验工具等</a></li>
<li><a href="https://hidadeng.github.io/blog/dadeng_python_basic_tutorial/">Python语法入门 | 含视频代码</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-18-how-to-use-if-elif-else-in-one-line/">如何在一行代码中实现if-elif-else三分支语句</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-11-pyanimate-create-vis-video/">pynimate库 | 绘制动态可视化图</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-01-tricks-for-better-python-code-with-examples/">12个优雅的python代码使用案例</a></li>
<li><a href="https://hidadeng.github.io/blog2023-02-01-chatgpt-usage-first-time/">使用 chatGPT 撰写 Python 文本分析代码</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-27-pandas-dataframe-tutorial-in-python/">Pandas库 | DataFrame类常用知识点总结</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-30-query-method-in-dataframe/">Pandas库 | 使用 df.query 字符串表达式进行数据筛选</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-30-pipeline-for-data-analysis/">使用流水线pipeline模式设计并处理数据</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-22-glove-embeddings-model/">训练&amp;使用 Glove 语言模型， 可度量刻板印象等</a></li>
<li><a href="https://hidadeng.github.io/blog/bertopic_tutorial/">BERTopic库 | 使用预训练模型做话题建模</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-12-03-dynamic_topic_model_with_bertopic/">BERTopic | 使用推特数据构建 <strong>动态主题模型模</strong></a></li>
<li><a href="https://hidadeng.github.io/blog/keybert_tutorial/">KeyBERT | 关键词发现库</a></li>
<li><a href="https://hidadeng.github.io/blog/top2vec_tutorial/">Top2Vec | 主题建模和语义搜索库</a></li>
<li><a href="https://hidadeng.github.io/blog/douban_w2v/">豆瓣影评 | 探索词向量妙处</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-10-16-python-word-mover-s-distance/"> Python | 词移距离(Word Mover&rsquo;s Distance)</a></li>
<li><a href="https://hidadeng.github.io/blog/chinese_financial_dictionary/">中文金融情感词典</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-17-finbert-finance-bert-model/">FinBERT | 金融文本BERT模型，可情感分析、识别ESG和FLS类型</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-16-how-to-fix-string-unicode-decode-error/">如何正确读入文本数据不乱码(解决文本乱码问题)</a></li>
<li><a href="https://hidadeng.github.io/blog/30_days_of_python/">30天Python编程学习挑战</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-07-embeddings-theory-applicaiton-liuhuanyong/">预训练词向量模型的方法、应用场景、变体延伸与实践总结</a></li>
<li><a href="https://hidadeng.github.io/blog/tian_ya_cha_spider_code/">天**  |  使用selenium做数据采集</a></li>
<li><a href="https://hidadeng.github.io/blog/qdata_collect_baidu_index/">百度指数 | 使用qdata采集百度指数</a></li>
<li><a href="https://hidadeng.github.io/blog/liwc_python_text_mining/">LIWC vs Python  | 文本分析之词典词频法略讲(含代码)</a></li>
<li><a href="https://hidadeng.github.io/blog/share_your_dict_to_cntext/">欢迎各位向cntext库分享情感词典</a></li>
<li><a href="https://hidadeng.github.io/blog/fixed_dutir_bug/">cntext库 | 关于DUTIR被污染解决办法</a></li>
<li><a href="https://hidadeng.github.io/blog/chinese_emobank/">EmoBank | 中文维度情感词典</a></li>
<li><a href="https://hidadeng.github.io/blog/how_chinese_tmtai_impact_corporate_inovation/">文本分析 | 中国企业高管团队创新注意力</a></li>
<li><a href="https://hidadeng.github.io/blog/text_mining_in_accouting_research/">在会计研究中使用Python进行文本分析</a></li>
<li><a href="https://hidadeng.github.io/blog/culture_analysis/">Python与文化分析入门</a></li>
<li><a href="https://hidadeng.github.io/blog/course_recommendation_about_social_science/">免费社科类Python编程课程列表</a></li>
<li><a href="https://hidadeng.github.io/blog/pyplutchik_emotion_circle/">PyPlutchik库 | 可视化文本的情绪轮(情绪指纹)</a></li>
<li><a href="https://hidadeng.github.io/blog/tomotopy_is_the_fastest_topic_model/">tomotopy库 | 速度最快的LDA主题模型</a></li>
<li><a href="https://hidadeng.github.io/blog/hierarchy_dendrogram_tutorial/">使用scipy实现层次聚类分析</a></li>
<li><a href="https://hidadeng.github.io/blog/svd_in_recommendation_system/">推荐系统与协同过滤、奇异值分解</a></li>
<li><a href="https://hidadeng.github.io/blog/cntext_tutorial/">cntext库 | 中文情感分析包</a></li>
<li><a href="https://hidadeng.github.io/blog/asent_sentiment_analysis/">Asent库 | 英文文本数据情感分析</a></li>
<li><a href="https://hidadeng.github.io/blog/sentence-transformer-tutorial/">sentence-transformer库 | 句子语义向量化</a></li>
<li><a href="https://hidadeng.github.io/blog/weighted_tfidf_sentiment_analysis/">tfidf有权重的情感分析</a></li>
<li><a href="https://hidadeng.github.io/blog/shifterator_text_vis/">Shifterator库 | 词移图分辨两文本用词风格差异</a></li>
<li><a href="https://hidadeng.github.io/blog/pandas_example_company_analysis/">Pandas小案例 | 对某公司同年的某指标批量汇总</a></li>
<li><a href="https://hidadeng.github.io/blog/label_studio_test/">Label-Studio|多媒体数据标注工具</a></li>
<li><a href="https://hidadeng.github.io/blog/text_analysis_in_pandas/">使用Pandas处理文本数据</a></li>
<li><a href="https://hidadeng.github.io/blog/doccano_text_anotation/">doccano|为机器学习建模做数据标注</a></li>
<li><a href="https://hidadeng.github.io/blog/whatlies_word2vec/">whatlies库 | 可视化词向量</a></li>
<li><a href="https://hidadeng.github.io/blog/wordbias/">WordBias库 | 发现偏见(刻板印象)的交互式工具</a></li>
<li><a href="https://hidadeng.github.io/blog/karateclub_tutorial/">karateclub库 | 计算社交网络中节点的向量</a></li>
<li><a href="https://hidadeng.github.io/blog/causal_inference/">causalinference库 | 使用Python做因果推断</a></li>
<li><a href="https://hidadeng.github.io/blog/ml_credit_card_fraud_detection/">机器学习实战 | 信用卡欺诈检测</a></li>
<li><a href="https://hidadeng.github.io/blog/customer_segment_with_kmeans/">实战 | 构建基于客户细分的 K-Means 聚类算法！</a></li>
<li><a href="https://hidadeng.github.io/blog/speed_up_sklearn_code_with_sklearnex/">sklearnex库 | 让你的scikit-learn代码加速百倍</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-10-08-nlp-roadmap/">nlp-roadmap | 文本分析知识点思维脑图</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-10-08-find-sns-account-information-with-maigret/"> Maigret库 | 查询某用户名在各平台网站的使用情况</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-20-visualization-of-sentiment-analysis-of-historical-text-data-with-r/">R语言 | 绘制文本数据情感历时趋势图</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-04-r-ggplot2-scatter/">R语言 | ggplot2简明绘图之散点图</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-04-r-ggplot2-histogram/">R语言 | ggplot2简明绘图之直方图</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-04-r-ggplot2-ggplotly/">R语言 | ggplot2简明绘图之动态图</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-04-posterdown/">R语言 | 使用posterdown包制作学术会议海报</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-20-r-ggsci/">R语言 | 使用ggsci包绘制sci风格图表</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-20-r-ggplot2-ggpubr/">R语言 | ggpubr包让数据可视化更加优雅</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-21-r-easystats/">R语言 | 让统计更easy的easystats集合包</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-10-07-r-shiny-reactive/">R语言 | 使用shiny的reactive表达式写应用程序</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-10-07-r-stargazer/">R语言 | 使用stargazer包输出格式化回归结果</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-10-12-r-word2vec/">R语言 | 使用word2vec词向量模型</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-09-01-how_to_use_tinytex/">Latex | 为Rmarkdown配置tinytex环境</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-25-faker-generate-test-data/">Faker库 | 生成实验数据</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-11-29-santi-relationship-visualization-with-pyecharts/">可视化 | 绘制《三体》人物关系网络图</a></li>
<li><a href="https://hidadeng.github.io/blog/2022-12-10-lovelyplots/">LovelyPlots库 | 格式化科学论文、论文和演示文稿的可视化图形</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-01-08-pandas-5-trips-you-may-or-not-may-know/">5个你或许不知道的pandas数据导入技巧</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-09-openai-vs-google/">在巨型语言模型时代竞争：OpenAI vs 谷歌</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-23-simplet5-one-line-summary/">simpleT5 库 | 根据英文摘要内容生成标题</a></li>
</ul>
<br>
<h2 id="数据集">数据集</h2>
<p>数据集这块比较少，各位如果有资源，欢迎留言分享或者邮箱thunderhit@qq.com联系我。</p>
<ul>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-12-10-1850w-poi-dataset/">1850万条 | 世界地图POI兴趣点数据集</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-12-08-indiegogo-dataset/">1.5G数据集 | 200万条Indiegogo众筹项目信息</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-12-04-kickstarters_dataset/">12G数据集 | 23w条Kickstarter项目信息</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2023-02-26-cctv1-news-text-dataset/">数据集 | cctv新闻联播文稿数据集</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-11-09-chinese-modelscope-open-source/">魔搭 | 在线中文AI模型开源社区</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-11-25-senior-manager-resume-dataset/">数据集 | 90w条中国上市公司高管数据</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/sh_market/">400M数据集 | 上交所年报excel文件</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-12-07-585w-chinese-enterprise-registration-data/">数据集 | 585w企业工商注册信息</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/yelpdataset_10g/">10G数据集 | YelpDaset酒店管理类数据集</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/coporate_social_responsibility_datasets/">17G数据集 | 企业社会责任报告数据集</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-11-02-27g-python-27g-a-share-market-prospectus/">27G数据集 | 使用Python对27G招股说明书进行文本分析</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/70g_china_market_anunal_report_datasets/">70G数据集 | 上交所定期报告数据集</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-10-21-2007-2021-a-share-reports-dataset/">14G数据集 | 2007-2021年A股上市公司年度报告（txt文件）</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/chinese_semantic_kb/">ChineseSemanticKB | 中文语义常用词典</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-11-07-domainwordsdict-liuhuanyong/">DomainWordsDict | 领域词库构建方法与68领域、916万级专业词库分享</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-11-07-financial-invest-merge/">小规模金融并购、投资事件图谱设计概述与数据构成解析</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/embeddings_resource_usage_method/">中文词向量资源汇总 &amp; 使用方法</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/pretained_nlp_models/">NLP资源 | 汽车、金融等9大领域预训练词向量模型下载资源</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-10-16-aligned-word-vectors/">数据集 | 多语言对齐词向量预训练模型</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-09-27-r-ngramr/">Google Books Ngram Viewer显示英文词汇历史使用趋势</a></p>
</li>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-11-07-chinese-casual-text-datasets/">十万级 | 多领域因果事件对数据集对外开源</a></p>
</li>
<li>
<p><a href="https://mp.weixin.qq.com/s/2qMJTeiiLZE1-5ZivbZ2iQ">历时语料 | 新闻联播文字版等数据源分享</a></p>
</li>
</ul>
<br>
<h2 id="工具分享">工具分享</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/2023-01-18-rath-next-generation-business-intelligence/">Rath | 自动化数据分析工具</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-01-v2net-science-network/">科学上网工具v2net</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-15-how-to-sign-up-the-chatgpt-accout-and-upgrade-to-plus/">如何注册chatGPT账号</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-11-credit_card_for_chatgpt-plus/">使用虚拟信用卡，国内用户升级为chatGPT plus会员</a></li>
<li><a href="https://hidadeng.github.io/blog/2023-02-15-write-web-scraper-with-chatgpt/">使用 chatGPT 写 Python 网络爬虫</a></li>
</ul>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><strong>付费视频课程 | Python实证指标构建与文本分析</strong></li>
<li>大邓每年会有4场直播，五一、十一、寒、暑假，如果时间点接近，可考虑报名参与<a href="https://hidadeng.github.io/blog/2022-05-workshop/7-Python.html">直播课</a>。</li>
<li>如果只意性价比，且已迫不及待想学，可以考虑直接报名大邓的<a href="https://hidadeng.github.io/blog/management_python_course">录播课</a>。</li>
<li>如果不想学，也可以考虑外包。更建议找淘宝，如果找我咨询，请先阅读<a href="https://hidadeng.github.io/blog/paid_for_service">有偿说明</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>置顶推荐 | Python文本分析与会计(视频) </title>
      <link>https://hidadeng.github.io/blog/accountingtext/</link>
      <pubDate>Sat, 16 Apr 2022 15:40:10 +0600</pubDate>
      
      <guid>/blog/accountingtext/</guid>
      <description>会计Python文本分析, 文本是如何产生，信息的发布者与接收者如何相互影响，分析师为了预测还是解释现象。为了开展研究，如何获取数据，如何测量文本中的态度、偏见、情感分析。。</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1vA4y197YR&page=1"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h1 id="文本分析与会计">文本分析与会计</h1>
<h2 id="资料下载accountingtextzip"><a href="accountingtext.zip">资料下载</a></h2>
<ol>
<li>
<p>数据挖掘一般会遇到两个难题</p>
<ol>
<li>
<p>如何从网络中高效地 <strong>采集数据</strong>？</p>
<p>批量下载、汇总、清洗、整理</p>
</li>
<li>
<p>如何从文本数据中<strong>抽取文本信息(变量)</strong>？</p>
<p>情感、客观性、主观性、偏见</p>
</li>
</ol>
</li>
</ol>
<p><img loading="lazy" src="img/unstructrueddata.png" alt=""  />
</p>
<h2 id="目录">目录</h2>
<h3 id="1-认识python">1. 认识Python</h3>
<ul>
<li>学Python的n理由</li>
<li>Python是一门语言</li>
<li>数据类型与语法</li>
<li>如何写Python代码</li>
</ul>
<p>​</p>
<h3 id="2-text-as-data">2. Text as Data</h3>
<ul>
<li>
<p>角色-Producer/Receiver</p>
</li>
<li>
<p>机制-Reflects/Impacts</p>
</li>
<li>
<p>目的-Predict/Understanding</p>
</li>
<li>
<p>方法-定性vs定量</p>
</li>
<li>
<p>文本分析的常用指标</p>
</li>
</ul>
<h3 id="3-文本特征工程">3. 文本特征工程</h3>
<ul>
<li>词袋法(文档向量)</li>
<li>词向量</li>
<li>文档向量化</li>
<li>词向量</li>
</ul>
<h3 id="4-文本分析指标">4. 文本分析指标</h3>
<h3 id="5-文本分析应用案例会计">5. 文本分析应用案例(会计)</h3>
<p><br><br></p>
<h1 id="一认识python">一、认识Python</h1>
<p><img loading="lazy" src="img/whatcandowithpython.png" alt=""  />
</p>
<h2 id="11-学python的n理由">1.1 学Python的n理由</h2>
<ul>
<li>
<p><strong>简单</strong></p>
</li>
<li>
<p><strong>用户多</strong></p>
</li>
<li>
<p><strong>能做很多有意思的事</strong></p>
<ul>
<li>自动化办公
<ul>
<li>群发邮件</li>
<li>自动生成报表</li>
</ul>
</li>
<li>网络爬虫
<ul>
<li>在线秒杀</li>
<li>下载音频、视频pdf报告</li>
<li>明星的微博有新消息后邮箱提醒你</li>
</ul>
</li>
<li>数据分析</li>
<li>可视化</li>
<li>机器学习</li>
<li>物联网</li>
<li>制作网站</li>
</ul>
</li>
</ul>
<br>
<h2 id="12-python是一门语言">1.2 Python是一门语言</h2>
<p><img loading="lazy" src="img/simplecode.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">There is such a number a, if a is greater than or equal to 0, we will print a; if a is less than 0, we will print -a.
</code></pre></div><br>
<h2 id="13-数据类型与语法">1.3 数据类型与语法</h2>
<table>
<thead>
<tr>
<th style="text-align:left">英语</th>
<th style="text-align:left">Python</th>
<th style="text-align:left">例如</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>单词</strong></td>
<td style="text-align:left">数据类型</td>
<td style="text-align:left">数字、列表、字符串、字典等</td>
</tr>
<tr>
<td style="text-align:left"><strong>语法</strong></td>
<td style="text-align:left">逻辑语句</td>
<td style="text-align:left">if条件判断语句、for循环语句等</td>
</tr>
</tbody>
</table>
<br>
<table>
<thead>
<tr>
<th style="text-align:left">数据类型</th>
<th>例子</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">数字</td>
<td><code>age = 25</code></td>
</tr>
<tr>
<td style="text-align:left">字符串</td>
<td><code>intro = &quot;Hello, my name is ...&quot;</code></td>
</tr>
<tr>
<td style="text-align:left">列表</td>
<td><code>my_list = [1, 2, 3]</code></td>
</tr>
<tr>
<td style="text-align:left">字典</td>
<td><code>ages = {'David': 25, 'Mark':30}</code></td>
</tr>
<tr>
<td style="text-align:left">空值</td>
<td><code>None</code></td>
</tr>
<tr>
<td style="text-align:left">布尔值</td>
<td><code>True, False</code></td>
</tr>
</tbody>
</table>
<br>
<h2 id="14-如何写python代码">1.4 如何写Python代码</h2>
<p>实现一定功能, 代码一般由三部分组成</p>
<ol>
<li>数据类型</li>
<li>逻辑语句</li>
<li>相应功能Python包(库)</li>
</ol>
<p><img loading="lazy" src="img/bebetter.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据类型</span>
<span class="n">ability</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">scale</span> <span class="o">=</span> <span class="mf">1.01</span>
<span class="n">records</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1">#逻辑语句</span>
<span class="n">days</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">365</span><span class="p">)</span>
<span class="k">for</span> <span class="n">day</span> <span class="ow">in</span> <span class="n">days</span><span class="p">:</span>
    <span class="n">ability</span> <span class="o">=</span> <span class="n">ability</span><span class="o">*</span><span class="n">scale</span>
    <span class="n">records</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ability</span><span class="p">)</span>
    
<span class="c1">#相应的库  </span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">days</span><span class="p">,</span> <span class="n">records</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;Day day Up in one field!&#39;</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h1 id="二text-as-data">二、Text as Data</h1>
<h2 id="heading"></h2>
<h2 id="21--producerreceiver">2.1  Producer/Receiver</h2>
<p>本节讨论的是涉及到文本的形形色色的角色</p>
<p><img loading="lazy" src="img/SenderReceiver.png" alt=""  />
</p>
<p>文本信息的==producer== 与 ==receiver==，涵盖 ==个人、公司(组织)、国家(社会)==三个层面。</p>
<p><img loading="lazy" src="img/consumer_org_society.png" alt=""  />
</p>
<p><img loading="lazy" src="img/%e7%94%9f%e4%ba%a7%e4%b8%8e%e6%b6%88%e8%b4%b9.png" alt=""  />
</p>
<br>
<h2 id="22-reflectsimpacts">2.2 Reflects/Impacts</h2>
<blockquote>
<p><strong>编码解码理论</strong></p>
<p>文化研究之父斯图亚特·霍尔（Stuart Hall）在《电视话语中的编码和解码》（<em>Encoding and decoding inthe television discourse</em>）一文中提出了“编码解码”理论。</p>
<ul>
<li><strong>编码（encoding）</strong>，信息传播者将所传递的讯息、意图或观点，转化为具有特定规则的代码。</li>
<li><strong>解码（decoding）</strong>，信息接受者，将上述代码按特定规则进行解读。</li>
</ul>
</blockquote>
<p>需要注意的是文本的 ==反映Reflects== 和==影响Impacts==并不是非此即彼，往往会同时起作用。</p>
<table>
<thead>
<tr>
<th>&mdash;</th>
<th>研究目的</th>
<th>自变量</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Reflects</strong></td>
<td>文本可以反映<strong>producer</strong>的一些特质，帮助研究者理解producer。<br>例如试图挖掘producer的个性personality或隶属于什么社会团体。</td>
<td>了解公司的品牌个性；<br>年报含有未来业绩表现的线索；<br>消费者们在品牌社区的言语能更深的投射出消费者对品牌的态度；<br>而更宏大的层面，文本也能反映出文化差异。<br>了解消费者是否喜欢新产品，消费者如何看待品牌，消费者最看重什么</td>
</tr>
<tr>
<td><strong>Affects</strong></td>
<td>知道文本如何影响<strong>receiver</strong>，receiver会有什么样的行为和选择。</td>
<td>检验文本是否以及如何导致消费者诸如购买、分享和卷入行为。<br>广告会塑造消费者的消费行为<br>消费者杂志会扭曲消费者产品分类感知<br>电影剧本会影响观众的反应</td>
</tr>
</tbody>
</table>
<br>
<h2 id="23-predictunderstanding">2.3 Predict/Understanding</h2>
<p>使用文本数据的目的是</p>
<table>
<thead>
<tr>
<th>&mdash;</th>
<th>Reflects</th>
<th>Affects</th>
<th>目的</th>
<th>应用</th>
<th>难点</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Predict</strong></td>
<td>预测 <strong>producer</strong>的状态、特性、性格等</td>
<td>预测 <strong>receiver</strong>阅读、分享和购买行为</td>
<td>相比搞清楚作用机制(因果关系)，更关心预测的准确性。</td>
<td>什么消费者最喜欢贷款;<br>什么电影会大火;<br>未来股市走向;<br></td>
<td>文本数据可以生成成千上万的特征(相当于变量x1，x2&hellip;xn)，而文本数据记录数甚至可能少于特征数。<br>为了解决这个为题，使用新的特征分类方法，减少特征数量，又有可能存在拟合问题。</td>
</tr>
<tr>
<td><strong>Understanding</strong></td>
<td>为什么当人们压抑的时候会使用特殊人称。</td>
<td>来理解为何带有情绪的文本会更容易被阅读和分享</td>
<td>理解为什么事情发生以及如何发生的<br/>这类研究往往会用到心理学、社会学的<strong>实证方法</strong>，旨在<strong>理解某个文本特征会导致什么后续结果，以及为什么产生这样的后果</strong>。</td>
<td>消费者怎样表达会如何影响口碑;<br>为何某些推文会被挑中分享？<br> 歌曲为何变火？<br> 品牌如何让消费者忠诚？</td>
<td>找出观测数据背后的因果关系。相应的，该领域的工作可能会强调实验数据，以允许对关键的独立变量进行操作。<br>另一个挑战是解释文本特征之间的关系。</td>
</tr>
</tbody>
</table>
<br>
<h2 id="24--定性定量">2.4  定性/定量</h2>
<p>经过刚刚定量技术的介绍，现在对定性与定量粗略做个对比。</p>
<table>
<thead>
<tr>
<th style="text-align:left">定性/量</th>
<th>分析方法</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>定性</strong>（text as text）</td>
<td>质性（扎根）</td>
<td>依靠研究者领域知识，可以对少量的数据做出深刻洞见。</td>
<td>难以应对大规模数据；<br>编码过程并不能保证唯一；</td>
</tr>
<tr>
<td style="text-align:left"><strong>定量</strong> textual data(text as data)</td>
<td>明显的文本特征，如词频、可阅读性</td>
<td>标准如一;<br>适合大规模文本挖掘；<br>纷繁复杂中涌现出潜在规律</td>
<td><strong>需要破坏文本的结构，丧失了部分信息量</strong></td>
</tr>
</tbody>
</table>
<br>
<h2 id="25-文本指标">2.5 文本指标</h2>
<p><strong>词典法，对某个词、某类词(词典)的统计个数多少</strong>，。特点容易理解，简单，实施性强。</p>
<ul>
<li><strong>数量</strong>； 如文本长度(e.g., Godes and Mayzlin 2004; Moe and Trusov2011)</li>
<li><strong>主观性</strong>； 情感得分，情感词词典(e.g., Godes and Silva 2012; Moe and Schweidel 2012; Ying, Feinberg and Wedel 2006)·</li>
<li><strong>客观性</strong>，如方差、信息墒(e.g., Godes and Mayzlin 2004).
<ul>
<li>A  <code>产品不错， 包装破损， 态度很好， 综合还是推荐大家购买!</code>  [5,1,5,4]</li>
<li>B<code>产品垃圾，使用垃圾， 包装破损， 差评!! </code>    [1,  1,  1,  1]</li>
<li>A的方差更大，信息量更客观公正。</li>
</ul>
</li>
<li><strong>实体词词频</strong>； 例如“电脑”商品的在线评论中“电脑”出现次数会远多于其他词。</li>
<li><strong>可读性</strong>；阅读难易程度，根据词典或词的字母数测量</li>
<li><strong>不确定性</strong>；经济政策不确定性词典</li>
<li><strong>偏见，态度</strong>；将每个词看做向量，对向量进行计算</li>
</ul>
<p><br><br></p>
<h1 id="三文本特征工程">三、文本特征工程</h1>
<h2 id="31-文档向量化">3.1 文档向量化</h2>
<h3 id="311-词袋法">3.1.1 词袋法</h3>
<p>以**词典法(语料中所有词均列入词典)**为基础，文档向量化</p>
<p><img loading="lazy" src="img/05-bagofwords.png" alt=""  />
</p>
<h3 id="312-one-hot">3.1.2 one-hot</h3>
<p>与词袋非常类似的算法还有one-hot</p>
<p><img loading="lazy" src="img/03-one-hot.png" alt=""  />
</p>
<h3 id="313-tf-idf">3.1.3 tf-idf</h3>
<p>不止考虑出现次数，还要考虑词语出现场景的可诊断性</p>
<p><img loading="lazy" src="img/tf.png" alt=""  />

<img loading="lazy" src="img/idf.png" alt=""  />

<img loading="lazy" src="img/tfidf.png" alt=""  />

<img loading="lazy" src="img/TFIDFExample.png" alt=""  />
</p>
<h2 id="32-词向量">3.2 词向量</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">Docs</span> <span class="o">=</span><span class="p">[</span><span class="s2">&#34;Mom is a happy woman&#34;</span><span class="p">,</span>
       <span class="s2">&#34;Dad is happy.!&#34;</span><span class="p">]</span>
</code></pre></div><p>词典中带顺序<code>[Mom, is a happy woman dad]</code></p>
<table>
<thead>
<tr>
<th>技术</th>
<th>技术</th>
<th>维度类比</th>
<th>任务</th>
<th>例子</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>字典法</strong>（词频）</td>
<td>数个数</td>
<td>原子</td>
<td>统计每句话里的名词个数</td>
<td>sent_num1 = 2<br>sent_num2 = 1</td>
</tr>
<tr>
<td><strong>词袋法</strong></td>
<td>bag of words<br>one-hot<br>Tf-idf</td>
<td>分子</td>
<td>转化为词向量, 计算两个句子相似度。</td>
<td>vec1 = [1, 1, 1, 1, 1, 0]<br>vec2 = [0, 1, 0, 1, 0, 1]<br>similarity = cosine(vec1, vec2)</td>
</tr>
<tr>
<td><strong>词嵌入</strong></td>
<td>word2vec、<br>glove等</td>
<td>中子、质子、电子</td>
<td>词语相似度。(语义上大小相近，方向相反)</td>
<td>mom = [0.2, 0.7, 0.1]<br/>dad   = [0.3, 0.5, -0.2]</td>
</tr>
</tbody>
</table>
<p>有意思的是，词嵌入Embeddings，尤其是glove，通过一定的向量化运算，可以挖掘出人类留下的认知信息，如态度、偏见等。词嵌入模型训练的方式不同，能做不同的计算。</p>
<p><img loading="lazy" src="img/word2vec.png" alt=""  />
</p>
<h3 id="321-按群体">3.2.1 按群体</h3>
<p>将数据按照producer划分，对每类producer的文本数据分别训练<strong>词嵌入模型</strong></p>
<p><img loading="lazy" src="img/musicSuccessGenderbias.png" alt=""  />
</p>
<p><img loading="lazy" src="img/americanClass.jpeg" alt=""  />
</p>
<h3 id="322-按时间">3.2.2 按时间</h3>
<p>将时间分为不同时间段，对每个时间段内的文本数据分别训练<strong>词嵌入模型</strong></p>
<p><img loading="lazy" src="img/DiachronicWordEmbeddings.png" alt=""  />
</p>
<p><br><br></p>
<h1 id="四技术对比">四、技术对比</h1>
<p><img loading="lazy" src="img/%e5%88%86%e6%9e%90%e6%96%b9%e6%b3%95.png" alt=""  />
</p>
<p>从左向右，自动化程度越来越高； 相对而言， 后期人工介入的越来越少。</p>
<table>
<thead>
<tr>
<th>技术</th>
<th>描述</th>
<th>优点</th>
<th>缺点</th>
<th>应用领域</th>
<th>Python包</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>主题分析</strong></td>
<td>人工编码</td>
<td>使用参与者自己的话语或者构念来挖掘数据，对少量文本理解的更深入</td>
<td>属于时间、劳动密集型任务，不适合大规模数据。<br>由于不同的编码人员有不同的经历和偏好，编码过程的标准不可靠</td>
<td>社会学、管理学</td>
<td></td>
</tr>
<tr>
<td><strong>字典法</strong></td>
<td>统计文本中词语的出现个数(占比)</td>
<td>允许对研究的数据进行定量分析，有标准，规格唯一</td>
<td>采用的词典应尽量与研究问题适应，词典适配性问题突出。情感分析，形容词词典。</td>
<td>管理学</td>
<td>jieba</td>
</tr>
<tr>
<td><strong>词袋法</strong></td>
<td>文本向量化</td>
<td>编码标准稳定简单，扩展性强</td>
<td>编码过程忽略词语的先后顺序；舍弃了一些信息量</td>
<td>管理学</td>
<td>jieba<br>scikit-learn</td>
</tr>
<tr>
<td><strong>监督学习</strong></td>
<td><strong>文本分类</strong></td>
<td>允许事先定义编码规则；逻辑简单</td>
<td>需要高质量的标注数据(工作量大)；特征词太多，训练的模型很容易过拟合。</td>
<td>计算机学、政治学、管理学</td>
<td>scikit-learn</td>
</tr>
<tr>
<td><strong>无监督学习</strong></td>
<td>主题建模<br>LDA话题模型</td>
<td>在没有人工标注的情况下，加速了数据的“标注”或“分类”</td>
<td>“标注”是机器按照数字特征进行的分组，需要研究者解读才可以赋予“标准“意义；训练过程需要大量的调参</td>
<td>计算机学、政治学、管留学</td>
<td>scikit-learn<br/></td>
</tr>
<tr>
<td><strong>自然语言处理</strong></td>
<td>考虑词语上下文语境顺序，word2vec、glove等</td>
<td>计算机自动化；可分析语义</td>
<td>大多数模型是人类无法解读的黑箱；<br>虽然代码编程量小，但训练代码耗时巨大</td>
<td>计算科学；市场营销；心理学</td>
<td>gensim<br>等</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h1 id="五文本分析论文解读">五、文本分析论文解读</h1>
<h2 id="51-应用">5.1 应用</h2>
<table>
<thead>
<tr>
<th>论文</th>
<th>定性</th>
<th>词典</th>
<th>向量</th>
</tr>
</thead>
<tbody>
<tr>
<td>胡楠, 薛付婧 and 王昊楠, 2021. 管理者短视主义影响企业长期投资吗———基于文本分析和机器学习. <em>管理世界</em>, <em>37</em>(5), pp.139-156.</td>
<td></td>
<td>Y</td>
<td>Y</td>
</tr>
<tr>
<td>Cohen, L., Malloy, C. and Nguyen, Q., 2020. Lazy prices. <em>The Journal of Finance</em>, <em>75</em>(3), pp.1371-1415.</td>
<td></td>
<td>Y</td>
<td>Y</td>
</tr>
<tr>
<td>王伟, 陈伟, 祝效国 and 王洪伟, 2016. 众筹融资成功率与语言风格的说服性&ndash;基于 Kickstarter 的实证研究. <em>管理世界</em>, (5), pp.81-98.</td>
<td>Y</td>
<td>Y</td>
<td></td>
</tr>
</tbody>
</table>
<br>
<p><img loading="lazy" src="img/%e7%9f%ad%e8%a7%86%e4%b8%bb%e4%b9%89.png" alt=""  />
</p>
<h2 id="52-分析步骤">5.2 分析步骤</h2>
<table>
<thead>
<tr>
<th>步骤</th>
<th>任务</th>
<th>Python</th>
</tr>
</thead>
<tbody>
<tr>
<td>1. 研究问题</td>
<td><strong>Produce/Receive</strong> 、 <strong>Reflects/Impact</strong><br><strong>管理层短视特质x -&gt; 企业资本支出和研发支出y</strong></td>
<td></td>
</tr>
<tr>
<td>2. 数据收集</td>
<td>巨潮资讯网； <br>所有 A 股；<br>2007~2018 年年度财务报告文件</td>
<td>Python网络爬虫</td>
</tr>
<tr>
<td>3. 设计构念</td>
<td>短视主义词有哪些<br>训练word2vec模型，找到”尽快“近义词，<br>如、”尽早“、”抓紧“、”力争“、”加紧“</td>
<td>word2vec</td>
</tr>
<tr>
<td>4. 测量构念</td>
<td>统计不同年报中MD&amp;A中的短视主义词出现占比</td>
<td>词典法</td>
</tr>
<tr>
<td>5. 计量建模</td>
<td>计算 x 与y之间的关系</td>
<td></td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="相关文献">相关文献</h2>
<p>冉雅璇,李志强,刘佳妮,张逸石.<strong>大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用</strong>.南开管理评论1-27</p>
<p>沈艳, 陈赟, &amp; 黄卓. (2019). <strong>文本大数据分析在经济学和金融学中的应用: 一个文献综述</strong>. <em>经济学 (季刊)</em>, <em>18</em>(4), 1153-1186.</p>
<p>Berger, J., Humphreys, A., Ludwig, S., Moe, W.W., Netzer, O. and Schweidel, D.A., 2020. <strong>Uniting the tribes: Using text for marketing insight</strong>. <em>Journal of Marketing</em>, <em>84</em>(1), pp.1-25.</p>
<p>Kenneth Benoit. July 16, 2019. “Text as Data: An Overview” Forthcoming in Cuirini, Luigi and Robert Franzese, eds. <em>Handbook of Research Methods in Political Science and International Relations</em>. Thousand Oaks: Sage.</p>
<p>Anand, V., Bochkay, K., Chychyla, R. and Leone, A.J., 2020. <strong>Using Python for text analysis in accounting research</strong>. <em>Vic Anand, Khrystyna Bochkay, Roman Chychyla and Andrew Leone (2020),&quot; Using Python for Text Analysis in Accounting Research&quot;, Foundations and Trends® in Accounting</em>, <em>14</em>(3-4), pp.128-359.</p>
<p>Cohen, L., Malloy, C. and Nguyen, Q., 2020. <strong>Lazy prices</strong>. <em>The Journal of Finance</em>, <em>75</em>(3), pp.1371-1415.</p>
<p>胡楠, 薛付婧 and 王昊楠, 2021. 管理者短视主义影响企业长期投资吗———基于文本分析和机器学习. <em>管理世界</em>, <em>37</em>(5), pp.139-156.</p>
<p>王伟, 陈伟, 祝效国 and 王洪伟, 2016. 众筹融资成功率与语言风格的说服性&ndash;基于 Kickstarter 的实证研究. <em>管理世界</em>, (5), pp.81-98.</p>
<p>Banks, George C., Haley M. Woznyj, Ryan S. Wesslen, and Roxanne L. Ross. “A review of best practice recommendations for text analysis in R (and a user-friendly app).” <em>Journal of Business and Psychology</em> 33, no. 4 (2018): 445-459.</p>
<p>Cohen, L., Malloy, C. and Nguyen, Q., 2020. Lazy prices. <em>The Journal of Finance</em>, <em>75</em>(3), pp.1371-1415.</p>
<p>徐巍,姚振晔,陈冬华.中文年报可读性：衡量与检验[J].会计研究,2021(03):28-44.</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>如何注册chatGPT账号</title>
      <link>https://hidadeng.github.io/blog/2023-02-15-how-to-sign-up-the-chatgpt-accout-and-upgrade-to-plus/</link>
      <pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-15-how-to-sign-up-the-chatgpt-accout-and-upgrade-to-plus/</guid>
      <description>如何注册chatGPT，如何升级为PLUS用户</description>
      <content:encoded><![CDATA[<h2 id="一拦路虎">一、拦路虎</h2>
<p>使用chatGPT PLUS前，我们将面临有几个拦路虎</p>
<ol>
<li>如何科学上网</li>
<li>海外手机号</li>
<li>国外的信用卡</li>
</ol>
<p>搞定了这些问题， 我们就可以愉悦的使用chatGPT</p>
<p><img loading="lazy" src="img/chatgpt-is-a-joke.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二注册chatgpt">二、注册chatGPT</h2>
<p>注册 chatGPT，需要先科学上网， 教程之前分享过 <a href="https://hidadeng.github.io/blog/2023-02-01-v2net-science-network/">科学上网v2net</a> ，需要注意， 代理节点推荐选用美国、日本，全局模式访问外网。</p>
<h3 id="21-自己注册">2.1 自己注册</h3>
<p>搞定了 chatGPT 页面的访问后，需要使用国外可用的手机号， 才能注册chatGPT， 这时候可以用<a href="https://sms-activate.org/">接码平台https://sms-activate.org/</a>，</p>
<h3 id="22-找代理注册账号">2.2 找代理注册账号</h3>
<p>或者花钱 <a href="https://shop.terobox.com/?from=1059">找代理网https://shop.terobox.com/</a> 注册chatGPT账号。对了， 大邓自己的账号就是找代理注册的。</p>
<p><img loading="lazy" src="img/chatgpt-register-page.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三chatgpt-plus">三、chatGPT PLUS</h2>
<p>chatGPT短短一个月，注册用户狂涨至 一亿用户， 是目前发展最迅猛的 网络应用。这就导致短时间大规模的访问让chatGPT服务有点绷不住了， 出现网络连接不稳定、响应速度变慢。 而且chatGPT的功能也被阉割， 不像最初那么智能。解决办法只有一个&mdash;使用超能力，20美金将账号提升至PLUS。有两种PLUS升级方式</p>
<h3 id="21-虚拟信用卡">2.1 虚拟信用卡</h3>
<p>升级chatGPT PLUS的难点在于你的信用卡是否可用。比如大邓，即使是VISA卡， 升级PLUS也不支持。解决办法是使用<a href="https://hidadeng.github.io/blog/2023-02-11-credit_card_for_chatgpt-plus/">虚拟信用卡</a> ， PLUS最终使用成本大概 <strong>150元（21美元/月） ， 大邓个人推荐自己搭建虚拟信用卡</strong>，</p>
<h3 id="32-找代理升级账号">3.2 找代理升级账号</h3>
<p>如果觉得操作起来比较繁琐复杂，如果你经济状况还okay， 可以使用 <a href="https://shop.terobox.com/?from=1059">代理网https://shop.terobox.com/</a> ，但就是有些小贵， 要300元啊，两倍于自己搞。</p>
<p><img loading="lazy" src="img/chatgpt-register-page.png" alt=""  />
</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">支持开票 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>simpleT5 库 | 根据英文摘要内容生成标题</title>
      <link>https://hidadeng.github.io/blog/2023-02-23-simplet5-one-line-summary/</link>
      <pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-23-simplet5-one-line-summary/</guid>
      <description>T5（Text-to-Text Transfer Transformer）是一种基于 Transformer 架构的自然语言处理模型，由 Google Brain 团队开发。T5 模型采用了 encoder-decoder 架构，其中 encoder 将输入文本编码为向量，decoder 则从该向量生成目标文本。T5 模型的特点是将所有自然语言处理任务都视为“从输入文本到输出文本”的转换问题，它可以通过在任务之间共享模型参数和预训练模型来轻松地应用于各种 NLP 任务，如**文本分类、命名实体识别、文本摘要、问答系统**等。 与其他 NLP 模型不同的是，T5 模型使用了一种称为“text-to-text”方法的统一输入输出架构，使得所有 NLP 任务都能转化为文本转换问题，从而使得模型训练更加高效。</description>
      <content:encoded><![CDATA[<p>simpleT5 是基于 PyTorch 实现的 T5 模型库，旨在为用户提供一种简单、易用、可定制的 T5 模型工具。T5（Text-to-Text Transfer Transformer）是一种基于 Transformer 架构的自然语言处理模型，由 Google Brain 团队开发。T5 模型采用了 encoder-decoder 架构，其中 encoder 将输入文本编码为向量，decoder 则从该向量生成目标文本。</p>
<p><img loading="lazy" src="img/new_text_to_text.jpg" alt=""  />
</p>
<p>simpleT5 的设计目标是尽可能地减少 T5 模型的使用门槛，以方便用户在自然语言处理任务中快速应用 T5 模型，从而节省大量的模型开发时间和成本。</p>
<p>simpleT5 提供了一个简单的 API 接口，用户只需要提供输入文本和模型参数，即可轻松地使用 T5 模型进行文本转换任务，如<strong>文本摘要、机器翻译、对话系统</strong>等。simpleT5 还提供了一些预训练模型，包括 T5-small、T5-base 和 T5-large 等不同规模的模型，用户可以根据任务需求选择合适的模型。</p>
<p>除此之外，simpleT5 还提供了一些有用的工具和功能，如文本预处理、数据集加载、训练日志记录等，以帮助用户更轻松地进行模型训练和调试。simpleT5 的开发者们还提供了详细的文档和示例代码，以帮助用户更快地上手使用该库。</p>
<p>总之，simpleT5 为用户提供了一种快速、方便、可定制的 T5 模型工具，可以帮助用户在自然语言处理任务中更加高效地应用 T5 模型，节省大量的开发时间和成本。</p>
<p><br><br></p>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="o">--</span><span class="n">upgrade</span> <span class="n">simplet5</span>
</code></pre></div><p><br><br></p>
<h2 id="快速上手">快速上手</h2>
<p>t5模型有很多，如下图，今天以huggingface中公开的模型 <strong>snrspeaks/t5-one-line-summary为例， 展示 「根据传入的摘要内容生成对应的标题」。</strong></p>
<p><img loading="lazy" src="img/t5-models.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># pip install --upgrade simplet5</span>
<span class="kn">from</span> <span class="nn">simplet5</span> <span class="kn">import</span> <span class="n">SimpleT5</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">SimpleT5</span><span class="p">()</span>
<span class="n">model</span><span class="o">.</span><span class="n">load_model</span><span class="p">(</span><span class="s2">&#34;t5&#34;</span><span class="p">,</span><span class="s2">&#34;snrspeaks/t5-one-line-summary&#34;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    Global seed set to 42
    Downloading:   100%|          | 0.00/1.36k [00:00&lt;?, ?B/s]
    Downloading:   100%|          | 0.00/850M [00:00&lt;?, ?B/s]
    Downloading:   100%|          | 0.00/1.84k [00:00&lt;?, ?B/s]
    Downloading:   100%|          | 0.00/773k [00:00&lt;?, ?B/s]
    Downloading:   100%|          | 0.00/1.32M [00:00&lt;?, ?B/s]
    Downloading:   100%|          | 0.00/1.74k [00:00&lt;?, ?B/s]
</code></pre></div><br>
<p>根据英文摘要生成标题</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">abstract</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;We describe a system called Overton, whose main design goal is to support engineers in building, monitoring, and improving production 
</span><span class="s2">machine learning systems. Key challenges engineers face are monitoring fine-grained quality, diagnosing errors in sophisticated applications, and 
</span><span class="s2">handling contradictory or incomplete supervision data. Overton automates the life cycle of model construction, deployment, and monitoring by providing a 
</span><span class="s2">set of novel high-level, declarative abstractions. Overton&#39;s vision is to shift developers to these higher-level tasks instead of lower-level machine learning tasks. 
</span><span class="s2">In fact, using Overton, engineers can build deep-learning-based applications without writing any code in frameworks like TensorFlow. For over a year, 
</span><span class="s2">Overton has been used in production to support multiple applications in both near-real-time applications and back-of-house processing. In that time, 
</span><span class="s2">Overton-based applications have answered billions of queries in multiple languages and processed trillions of records reducing errors 1.7-2.9 times versus production systems.
</span><span class="s2">&#34;&#34;&#34;</span>

<span class="n">model</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">abstract</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>['Overton: Building, Deploying, and Monitoring Deep Machine Learning Systems']
</code></pre>
<br>
<p>根据摘要生成多个标题</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">abstract</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;We describe a system called Overton, whose main design goal is to support engineers in building, monitoring, and improving production 
</span><span class="s2">machine learning systems. Key challenges engineers face are monitoring fine-grained quality, diagnosing errors in sophisticated applications, and 
</span><span class="s2">handling contradictory or incomplete supervision data. Overton automates the life cycle of model construction, deployment, and monitoring by providing a 
</span><span class="s2">set of novel high-level, declarative abstractions. Overton&#39;s vision is to shift developers to these higher-level tasks instead of lower-level machine learning tasks. 
</span><span class="s2">In fact, using Overton, engineers can build deep-learning-based applications without writing any code in frameworks like TensorFlow. For over a year, 
</span><span class="s2">Overton has been used in production to support multiple applications in both near-real-time applications and back-of-house processing. In that time, 
</span><span class="s2">Overton-based applications have answered billions of queries in multiple languages and processed trillions of records reducing errors 1.7-2.9 times versus production systems.
</span><span class="s2">&#34;&#34;&#34;</span>

<span class="c1">#根据摘要生成5个标题</span>
<span class="n">n</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">model</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">abstract</span><span class="p">,</span> 
              <span class="n">num_return_sequences</span><span class="o">=</span><span class="n">n</span><span class="p">,</span> 
              <span class="n">num_beams</span><span class="o">=</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>

</code></pre></div><p>Run</p>
<pre><code>['Overton: Building, Deploying, and Monitoring Deep Machine Learning Systems',
 'Overton: Building, Deployment, and Improving Production Machine Learning Systems',
 'Overton: Building, Deploying, and Monitoring Machine Learning Systems for Engineers',
 'Overton: Building, Deploying, and Monitoring Machine Learning Systems',
 'Overton: Building, Deployment, and Monitoring Deep Machine Learning Systems']
</code></pre>
<p><br><br></p>
<h2 id="simplet5微调">simpleT5微调</h2>
<p>在 T5 模型的预训练阶段，它使用了巨大的文本语料库进行无监督的训练，以学习将输入文本转换为输出文本的能力。</p>
<p>预训练阶段结束后，T5 模型可以通过微调或迁移学习的方式用于各种下游 NLP 任务中，以实现最先进的性能表现。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">path</span> <span class="o">=</span> <span class="s2">&#34;https://raw.githubusercontent.com/Shivanandroy/T5-Finetuning-PyTorch/main/data/news_summary.csv&#34;</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># simple5库传入的数据是DataFrames，必须含 &#34;source_text&#34; 和 &#34;target_text&#34;这两个字段。</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;headlines&#34;</span><span class="p">:</span><span class="s2">&#34;target_text&#34;</span><span class="p">,</span> <span class="s2">&#34;text&#34;</span><span class="p">:</span><span class="s2">&#34;source_text&#34;</span><span class="p">})</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span><span class="s1">&#39;source_text&#39;</span><span class="p">,</span> <span class="s1">&#39;target_text&#39;</span><span class="p">]]</span>

<span class="c1"># T5 模型微调时候，source_text 数据都加入了前缀关键词summarise， 告诉 T5模型要做总结类任务的微调。</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;source_text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;summarize: &#34;</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;source_text&#39;</span><span class="p">]</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<p>查看数据的形状</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">train_df</span><span class="p">,</span> <span class="n">test_df</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">)</span>
<span class="n">train_df</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">test_df</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">((78720, 2), (19681, 2))
</code></pre></div><br>
<p>开始进行 T5 模型的微调</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">simplet5</span> <span class="kn">import</span> <span class="n">SimpleT5</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">SimpleT5</span><span class="p">()</span>
<span class="n">model</span><span class="o">.</span><span class="n">from_pretrained</span><span class="p">(</span><span class="n">model_type</span><span class="o">=</span><span class="s2">&#34;t5&#34;</span><span class="p">,</span> <span class="n">model_name</span><span class="o">=</span><span class="s2">&#34;t5-base&#34;</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">train_df</span><span class="o">=</span><span class="n">train_df</span><span class="p">[:</span><span class="mi">5000</span><span class="p">],</span>
            <span class="n">eval_df</span><span class="o">=</span><span class="n">test_df</span><span class="p">[:</span><span class="mi">100</span><span class="p">],</span> 
            <span class="n">source_max_token_len</span><span class="o">=</span><span class="mi">128</span><span class="p">,</span> 
            <span class="n">target_max_token_len</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> 
            <span class="n">batch_size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">max_epochs</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">use_gpu</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Downloading: 100%
792k/792k [00:36&lt;00:00, 21.6kB/s]

Downloading: 100%
1.39M/1.39M [00:02&lt;00:00, 641kB/s]

Downloading: 100%
1.20k/1.20k [00:00&lt;00:00, 3.50kB/s]

Downloading: 100%
892M/892M [00:32&lt;00:00, 27.4MB/s]

GPU available: True, used: True
TPU available: False, using: 0 TPU cores
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name  | Type                       | Params
-----------------------------------------------------
0 | model | T5ForConditionalGeneration | 222 M 
-----------------------------------------------------
222 M     Trainable params
0         Non-trainable params
222 M     Total params
891.614   Total estimated model params size (MB)
Validation sanity check: 0%
0/2 [22:52&lt;?, ?it/s]
Global seed set to 42
Epoch 2: 100%
638/638 [04:07&lt;00:00, 2.57it/s, loss=1.02, v_num=0, val_loss=1.200, train_loss=1.130]
Validating: 100%
13/13 [00:01&lt;00:00, 7.43it/s]
Validating: 100%
13/13 [00:01&lt;00:00, 7.29it/s]
Validating: 100%
13/13 [00:01&lt;00:00, 7.30it/s]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># let&#39;s load the trained model for inferencing:</span>
<span class="n">model</span><span class="o">.</span><span class="n">load_model</span><span class="p">(</span><span class="s2">&#34;t5&#34;</span><span class="p">,</span><span class="s2">&#34;outputs/SimpleT5-epoch-2-train-loss-0.9478&#34;</span><span class="p">,</span> <span class="n">use_gpu</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="n">text_to_summarize</span><span class="o">=</span><span class="s2">&#34;&#34;&#34;summarize: Rahul Gandhi has replied to Goa CM Manohar Parrikar&#39;s letter, 
</span><span class="s2">which accused the Congress President of using his &#34;visit to an ailing man for political gains&#34;. 
</span><span class="s2">&#34;He&#39;s under immense pressure from the PM after our meeting and needs to demonstrate his loyalty by attacking me,&#34; 
</span><span class="s2">Gandhi wrote in his letter. Parrikar had clarified he didn&#39;t discuss Rafale deal with Rahul.
</span><span class="s2">&#34;&#34;&#34;</span>
<span class="n">model</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">text_to_summarize</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;Rahul responds to Goa CM accusing him of using visit for political gain&#39;]
</code></pre></div><p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">支持开票 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>cctv新闻联播文稿数据集</title>
      <link>https://hidadeng.github.io/blog/2023-02-26-cctv1-news-text-dataset/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-26-cctv1-news-text-dataset/</guid>
      <description>cctv新闻联播文稿数据集</description>
      <content:encoded><![CDATA[<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install akshare
</code></pre></div><br>
<h2 id="aknews_cctv参数">ak.news_cctv参数</h2>
<p>查看ak.news_cctv函数的帮助文档，显示该函数<strong>只能采集20160203之后的数据</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">help</span><span class="p">(</span><span class="n">ak</span><span class="o">.</span><span class="n">news_cctv</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Help on function news_cctv in module akshare.news.news_cctv:

news_cctv(date: str = &#39;20130308&#39;) -&gt; pandas.core.frame.DataFrame
    新闻联播文字稿
    https://tv.cctv.com/lm/xwlb/?spm=C52056131267.P4y8I53JvSWE.0.0
    :param date: 需要获取数据的日期; 目前 20160203 年后
    :type date: str
    :return: 新闻联播文字稿
    :rtype: pandas.DataFrame
</code></pre></div><h2 id="获取某日新闻">获取某日新闻</h2>
<p>获取某日期的新闻联播文稿</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">akshare</span> <span class="k">as</span> <span class="nn">ak</span>

<span class="n">news_cctv_df</span> <span class="o">=</span> <span class="n">ak</span><span class="o">.</span><span class="n">news_cctv</span><span class="p">(</span><span class="n">date</span><span class="o">=</span><span class="s2">&#34;20160204&#34;</span><span class="p">)</span>
<span class="n">news_cctv_df</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<h2 id="批量存储">批量存储</h2>
<p>批量存储**20160203 - 至今 ** 之间所有的数据，每个日期保存到csv文件中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">datetime</span> 
<span class="kn">import</span> <span class="nn">akshare</span> <span class="k">as</span> <span class="nn">ak</span>

<span class="c1">#获取【20160203 - 至今】日期字符串的列表</span>
<span class="k">def</span> <span class="nf">date_ranges</span><span class="p">():</span>
    <span class="n">begin</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2016</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="n">now</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">today</span><span class="p">()</span>
    <span class="n">interv</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">dates</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">date</span> <span class="o">=</span> <span class="n">begin</span>
    <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">date</span> <span class="o">&lt;</span> <span class="n">now</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">date</span> <span class="o">+</span> <span class="n">interv</span> <span class="o">&lt;</span> <span class="n">now</span><span class="p">):</span>
            <span class="n">date</span> <span class="o">=</span> <span class="n">date</span> <span class="o">+</span> <span class="n">interv</span>
            <span class="n">dates</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">date</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y%m</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">dates</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y%m</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
            <span class="k">break</span>
    <span class="k">return</span> <span class="n">dates</span>


<span class="c1">#按 日期依次下载</span>
<span class="k">for</span> <span class="n">date</span> <span class="ow">in</span> <span class="n">date_ranges</span><span class="p">():</span>
    <span class="n">news_cctv_df</span> <span class="o">=</span> <span class="n">ak</span><span class="o">.</span><span class="n">news_cctv</span><span class="p">(</span><span class="n">date</span><span class="o">=</span><span class="n">date</span><span class="p">)</span>
    <span class="n">news_cctv_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;cctv/</span><span class="si">{}</span><span class="s1">.csv&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">date</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">20160203
20160204
20160205
......
                                               
20230223
20230224
20230225
</code></pre></div><h2 id="数据集">数据集</h2>
<p>运行了5个小时，共有 2,518 天的新闻联播新闻稿的csv文件。</p>
<p><img loading="lazy" src="img/csvs.png" alt=""  />
</p>
<br>
<h2 id="数据获取">数据获取</h2>
<p>链接: <a href="https://pan.baidu.com/s/1pSdKe53OIZANwRAAZ0TGAg">https://pan.baidu.com/s/1pSdKe53OIZANwRAAZ0TGAg</a> 提取码: uxxs</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">支持开票 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>正则表达式 | 词频统计、情感分析、融资约束</title>
      <link>https://hidadeng.github.io/blog/2023-02-18-regex-expression-examples/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-18-regex-expression-examples/</guid>
      <description>&lt;h2 id=&#34;一统计某类词出现次数&#34;&gt;一、统计某类词出现次数&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 定义词语列表&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;word_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;融资&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;资金&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;筹资&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;投资&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;投入资金&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 将词语列表转换为正则表达式模式&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 定义待匹配的中文文本&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;今年公司的融资计划受到了资金压力的影响，筹资难度较大。&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 使用 re.findall() 方法统计出现次数&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 打印结果&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h3 id=&#34;注意&#34;&gt;注意：&lt;/h3&gt;
&lt;p&gt;使用正则表达式统计某类词的出现次数的效率取决于正则表达式的复杂度和文本的大小。对于较小的文本和简单的正则表达式，使用正则表达式可以提供一个简单的解决方案。但是对于较大的文本和复杂的正则表达式，可能会导致性能问题。&lt;/p&gt;
&lt;p&gt;如果需要更快的实现方法，可以考虑使用字符串查找和替换函数，例如Python中的str.count()方法，该方法可以计算一个字符串中出现子字符串的次数。通过遍历所有需要查找的词汇并分别计算其出现次数，可以得出所有词汇的出现次数。这种方法可以避免正则表达式的匹配成本，并且通常比使用正则表达式更快。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 定义词语列表&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;融资&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;资金&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;筹资&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;投资&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;投入资金&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 定义待匹配的中文文本&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;今年公司的融资计划受到了资金压力的影响，筹资难度较大。&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#words类词 出现次数&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;二-情感分析&#34;&gt;二、 情感分析&lt;/h2&gt;
&lt;p&gt;正则表达式也可以用于情感分析。下面是一个使用正则表达式实现情感分析的示例代码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先定义了一个包含积极情感词和消极情感词的列表。&lt;/li&gt;
&lt;li&gt;然后，使用正则表达式识别文本中出现的积极情感词和消极情感词，并计算它们出现的次数。&lt;/li&gt;
&lt;li&gt;最后，通过比较积极词和消极词的出现次数来确定情感分析结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 情感词列表，这里只列出了一些示例&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;positive_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;喜欢&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;赞&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;棒&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;好&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;美&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;赏心悦目&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;negative_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;讨厌&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;踩&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;差&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;烂&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;丑&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;不满意&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 使用正则表达式识别文本中的情感词&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sentiment_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;positive_count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;positive_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;negative_count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;negative_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;positive_count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;negative_count&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 测试示例&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;我很喜欢这个餐厅，菜品棒极了！&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;这部电影很烂，演员演得太差了。&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;这个景点很美，值得去看看。&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;这家店的服务太差了，不满意。&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentiment_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出 2&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentiment_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出 -2&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentiment_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出 1&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentiment_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 输出 -1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;2
-2
1
-2
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;nouns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GDP&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;CPI&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;PPI&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;利率&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;政策&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pos_adj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;增长&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;提高&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;优化&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;neg_adj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;下降&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;降低&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;恶化&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sentiment_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;noun&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nouns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;noun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;match&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adj&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos_adj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adj&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adj&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;neg_adj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;adj&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;中国GDP增长预期下调，影响市场情绪&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;score&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sentiment_analysis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h2 id=&#34;三融资约束&#34;&gt;三、融资约束&lt;/h2&gt;
&lt;h3 id=&#34;31-识别融资约束句子&#34;&gt;3.1 识别融资约束句子&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;姜付秀,王运通,田园,吴恺.多个大股东与企业融资约束——基于文本分析的经验证据[J].管理世界,2017,(12):61-74.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;摘要: 本文采用文本分析方法构建了融资约束指标,在此基础上,实证检验了多个大股东对企业融资约束的影响以及相应的作用机理。我们发现,多个大股东的公司有着较低的融资约束水平。该结论在控制内生性情况下依然成立。中介效应模型的检验结果表明,其他大股东通过抑制控股股东的掏空行为降低了企业融资约束。进一步的研究结果表明,在其他大股东具有较强的监督动机和监督能力(大股东数量更多、持股数量之和更大、大股东之间不容易合谋)、及更好的外部环境(信息环境、法律环境)时,公司的融资约束水平更低,这些发现在逻辑上为其他大股东的监督假说提供证据支持的同时,也表明大股东发挥监督作用降低企业融资约束需要一定条件。本文为完善中国情景下的融资约束指标构建、更好度量中国企业融资约束提供了有益参考;同时,为股权结构安排的经济后果提供了新的证据支持。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 融资不足情况：&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;regex1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(?:融资|资金|筹资)[^。]{0,6}?(?:难以|不能|无法|不足以)[^。]*&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 融资成本或压力过大情况：&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;regex2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(?:融资|资金|筹资)[^。]{0,6}?(?:成本|压力|难度)[^。]{0,4}?(?:升|增|高|大)[^。]*&amp;#34;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 使用“或”运算符, 将这些正则表达式组合成一个大的正则表达式&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regex1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)|(&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regex2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;这是一段融资方面的文本，其中提到了资金不足的情况，还提到了融资成本过高的问题。&amp;#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[(&#39;&#39;, &#39;融资成本过高的问题&#39;)]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;32-出现融资约束句子的数量&#34;&gt;3.2 出现融资约束句子的数量&lt;/h3&gt;
&lt;p&gt;pattern可以应用的A股上市公司md&amp;amp;a部分的融资压力句子的识别，其实稍微改动就可以测量md&amp;amp;a中企业关于融资压力句子的出现次数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;finance_constrain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 融资不足情况：&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regex1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(?:融资|资金|筹资)[^。]{0,6}?(?:难以|不能|无法|不足以)[^。]*&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 融资成本或压力过大情况：&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regex2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(?:融资|资金|筹资)[^。]{0,6}?(?:成本|压力|难度)[^。]{0,4}?(?:升|增|高|大)[^。]*&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 使用“或”运算符, 将这些正则表达式组合成一个大的正则表达式&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regex1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)|(&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regex2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;


    &lt;span class=&#34;c1&#34;&gt;# 将 pattern 编译成正则表达式对象&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


    &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;match&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/management_python_course/&#34;&gt;支持开票 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一统计某类词出现次数">一、统计某类词出现次数</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>

<span class="c1"># 定义词语列表</span>
<span class="n">word_list</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;融资&#39;</span><span class="p">,</span> <span class="s1">&#39;资金&#39;</span><span class="p">,</span> <span class="s1">&#39;筹资&#39;</span><span class="p">,</span> <span class="s1">&#39;投资&#39;</span><span class="p">,</span> <span class="s1">&#39;投入资金&#39;</span><span class="p">]</span>

<span class="c1"># 将词语列表转换为正则表达式模式</span>
<span class="n">pattern</span> <span class="o">=</span> <span class="sa">r</span><span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>

<span class="c1"># 定义待匹配的中文文本</span>
<span class="n">text</span> <span class="o">=</span> <span class="s2">&#34;今年公司的融资计划受到了资金压力的影响，筹资难度较大。&#34;</span>

<span class="c1"># 使用 re.findall() 方法统计出现次数</span>
<span class="n">count</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>

<span class="c1"># 打印结果</span>
<span class="nb">print</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</code></pre></div><pre><code>3
</code></pre>
<br>
<h3 id="注意">注意：</h3>
<p>使用正则表达式统计某类词的出现次数的效率取决于正则表达式的复杂度和文本的大小。对于较小的文本和简单的正则表达式，使用正则表达式可以提供一个简单的解决方案。但是对于较大的文本和复杂的正则表达式，可能会导致性能问题。</p>
<p>如果需要更快的实现方法，可以考虑使用字符串查找和替换函数，例如Python中的str.count()方法，该方法可以计算一个字符串中出现子字符串的次数。通过遍历所有需要查找的词汇并分别计算其出现次数，可以得出所有词汇的出现次数。这种方法可以避免正则表达式的匹配成本，并且通常比使用正则表达式更快。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 定义词语列表</span>
<span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;融资&#39;</span><span class="p">,</span> <span class="s1">&#39;资金&#39;</span><span class="p">,</span> <span class="s1">&#39;筹资&#39;</span><span class="p">,</span> <span class="s1">&#39;投资&#39;</span><span class="p">,</span> <span class="s1">&#39;投入资金&#39;</span><span class="p">]</span>

<span class="c1"># 定义待匹配的中文文本</span>
<span class="n">text</span> <span class="o">=</span> <span class="s2">&#34;今年公司的融资计划受到了资金压力的影响，筹资难度较大。&#34;</span>

<span class="c1">#words类词 出现次数</span>
<span class="n">count</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">)</span> <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">)</span>
</code></pre></div><br>
<h2 id="二-情感分析">二、 情感分析</h2>
<p>正则表达式也可以用于情感分析。下面是一个使用正则表达式实现情感分析的示例代码：</p>
<ul>
<li>首先定义了一个包含积极情感词和消极情感词的列表。</li>
<li>然后，使用正则表达式识别文本中出现的积极情感词和消极情感词，并计算它们出现的次数。</li>
<li>最后，通过比较积极词和消极词的出现次数来确定情感分析结果。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>

<span class="c1"># 情感词列表，这里只列出了一些示例</span>
<span class="n">positive_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;喜欢&#39;</span><span class="p">,</span> <span class="s1">&#39;赞&#39;</span><span class="p">,</span> <span class="s1">&#39;棒&#39;</span><span class="p">,</span> <span class="s1">&#39;好&#39;</span><span class="p">,</span> <span class="s1">&#39;美&#39;</span><span class="p">,</span> <span class="s1">&#39;赏心悦目&#39;</span><span class="p">]</span>
<span class="n">negative_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;讨厌&#39;</span><span class="p">,</span> <span class="s1">&#39;踩&#39;</span><span class="p">,</span> <span class="s1">&#39;差&#39;</span><span class="p">,</span> <span class="s1">&#39;烂&#39;</span><span class="p">,</span> <span class="s1">&#39;丑&#39;</span><span class="p">,</span> <span class="s1">&#39;不满意&#39;</span><span class="p">]</span>

<span class="c1"># 使用正则表达式识别文本中的情感词</span>
<span class="k">def</span> <span class="nf">sentiment_analysis</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">positive_count</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">positive_words</span><span class="p">),</span> <span class="n">text</span><span class="p">))</span>
    <span class="n">negative_count</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">negative_words</span><span class="p">),</span> <span class="n">text</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">positive_count</span> <span class="o">-</span> <span class="n">negative_count</span>

<span class="c1"># 测试示例</span>
<span class="n">text1</span> <span class="o">=</span> <span class="s1">&#39;我很喜欢这个餐厅，菜品棒极了！&#39;</span>
<span class="n">text2</span> <span class="o">=</span> <span class="s1">&#39;这部电影很烂，演员演得太差了。&#39;</span>
<span class="n">text3</span> <span class="o">=</span> <span class="s1">&#39;这个景点很美，值得去看看。&#39;</span>
<span class="n">text4</span> <span class="o">=</span> <span class="s1">&#39;这家店的服务太差了，不满意。&#39;</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sentiment_analysis</span><span class="p">(</span><span class="n">text1</span><span class="p">))</span>  <span class="c1"># 输出 2</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sentiment_analysis</span><span class="p">(</span><span class="n">text2</span><span class="p">))</span>  <span class="c1"># 输出 -2</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sentiment_analysis</span><span class="p">(</span><span class="n">text3</span><span class="p">))</span>  <span class="c1"># 输出 1</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sentiment_analysis</span><span class="p">(</span><span class="n">text4</span><span class="p">))</span>  <span class="c1"># 输出 -1</span>
</code></pre></div><pre><code>2
-2
1
-2
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>

<span class="n">nouns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;GDP&#39;</span><span class="p">,</span> <span class="s1">&#39;CPI&#39;</span><span class="p">,</span> <span class="s1">&#39;PPI&#39;</span><span class="p">,</span> <span class="s1">&#39;利率&#39;</span><span class="p">,</span> <span class="s1">&#39;政策&#39;</span><span class="p">]</span>
<span class="n">pos_adj</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;增长&#39;</span><span class="p">,</span> <span class="s1">&#39;提高&#39;</span><span class="p">,</span> <span class="s1">&#39;优化&#39;</span><span class="p">]</span>
<span class="n">neg_adj</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;下降&#39;</span><span class="p">,</span> <span class="s1">&#39;降低&#39;</span><span class="p">,</span> <span class="s1">&#39;恶化&#39;</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">sentiment_analysis</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">noun</span> <span class="ow">in</span> <span class="n">nouns</span><span class="p">:</span>
        <span class="n">matches</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">noun</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">match</span> <span class="ow">in</span> <span class="n">matches</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">adj</span> <span class="ow">in</span> <span class="n">pos_adj</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">adj</span> <span class="ow">in</span> <span class="n">text</span><span class="p">:</span>
                    <span class="n">score</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">for</span> <span class="n">adj</span> <span class="ow">in</span> <span class="n">neg_adj</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">adj</span> <span class="ow">in</span> <span class="n">text</span><span class="p">:</span>
                    <span class="n">score</span> <span class="o">-=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">score</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;中国GDP增长预期下调，影响市场情绪&#39;</span>
<span class="n">score</span> <span class="o">=</span> <span class="n">sentiment_analysis</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">score</span><span class="p">)</span>

</code></pre></div><pre><code>1
</code></pre>
<br>
<h2 id="三融资约束">三、融资约束</h2>
<h3 id="31-识别融资约束句子">3.1 识别融资约束句子</h3>
<p><strong>姜付秀,王运通,田园,吴恺.多个大股东与企业融资约束——基于文本分析的经验证据[J].管理世界,2017,(12):61-74.</strong></p>
<p>摘要: 本文采用文本分析方法构建了融资约束指标,在此基础上,实证检验了多个大股东对企业融资约束的影响以及相应的作用机理。我们发现,多个大股东的公司有着较低的融资约束水平。该结论在控制内生性情况下依然成立。中介效应模型的检验结果表明,其他大股东通过抑制控股股东的掏空行为降低了企业融资约束。进一步的研究结果表明,在其他大股东具有较强的监督动机和监督能力(大股东数量更多、持股数量之和更大、大股东之间不容易合谋)、及更好的外部环境(信息环境、法律环境)时,公司的融资约束水平更低,这些发现在逻辑上为其他大股东的监督假说提供证据支持的同时,也表明大股东发挥监督作用降低企业融资约束需要一定条件。本文为完善中国情景下的融资约束指标构建、更好度量中国企业融资约束提供了有益参考;同时,为股权结构安排的经济后果提供了新的证据支持。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>

<span class="c1"># 融资不足情况：</span>
<span class="n">regex1</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;(?:融资|资金|筹资)[^。]{0,6}?(?:难以|不能|无法|不足以)[^。]*&#34;</span>
<span class="c1"># 融资成本或压力过大情况：</span>
<span class="n">regex2</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;(?:融资|资金|筹资)[^。]{0,6}?(?:成本|压力|难度)[^。]{0,4}?(?:升|增|高|大)[^。]*&#34;</span>
<span class="c1"># 使用“或”运算符, 将这些正则表达式组合成一个大的正则表达式</span>
<span class="n">pattern</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;(&#34;</span> <span class="o">+</span> <span class="n">regex1</span> <span class="o">+</span> <span class="sa">r</span><span class="s2">&#34;)|(&#34;</span> <span class="o">+</span> <span class="n">regex2</span> <span class="o">+</span> <span class="sa">r</span><span class="s2">&#34;)&#34;</span>

<span class="n">text</span> <span class="o">=</span> <span class="s2">&#34;这是一段融资方面的文本，其中提到了资金不足的情况，还提到了融资成本过高的问题。&#34;</span>

<span class="n">matches</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">matches</span><span class="p">)</span>
</code></pre></div><pre><code>[('', '融资成本过高的问题')]
</code></pre>
<h3 id="32-出现融资约束句子的数量">3.2 出现融资约束句子的数量</h3>
<p>pattern可以应用的A股上市公司md&amp;a部分的融资压力句子的识别，其实稍微改动就可以测量md&amp;a中企业关于融资压力句子的出现次数。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>


<span class="k">def</span> <span class="nf">finance_constrain</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="c1"># 融资不足情况：</span>
    <span class="n">regex1</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;(?:融资|资金|筹资)[^。]{0,6}?(?:难以|不能|无法|不足以)[^。]*&#34;</span>
    <span class="c1"># 融资成本或压力过大情况：</span>
    <span class="n">regex2</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;(?:融资|资金|筹资)[^。]{0,6}?(?:成本|压力|难度)[^。]{0,4}?(?:升|增|高|大)[^。]*&#34;</span>
    <span class="c1"># 使用“或”运算符, 将这些正则表达式组合成一个大的正则表达式</span>
    <span class="n">pattern</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;(&#34;</span> <span class="o">+</span> <span class="n">regex1</span> <span class="o">+</span> <span class="sa">r</span><span class="s2">&#34;)|(&#34;</span> <span class="o">+</span> <span class="n">regex2</span> <span class="o">+</span> <span class="sa">r</span><span class="s2">&#34;)&#34;</span>


    <span class="c1"># 将 pattern 编译成正则表达式对象</span>
    <span class="n">regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">pattern</span><span class="p">)</span>


    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">match</span> <span class="o">=</span> <span class="n">regex</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
        <span class="n">count</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">match</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">count</span>
</code></pre></div><br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">支持开票 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>转载 | 大数据时代的「计算文化心理学」</title>
      <link>https://hidadeng.github.io/blog/2023-02-13-computing-cultural-psychology-with-big-data/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-13-computing-cultural-psychology-with-big-data/</guid>
      <description>随着大数据技术与文化心理学的融合发展, 计算文化心理学作为一门新兴交叉学科逐渐兴起, 大尺 度、近乎全样本的文化心理分析真正得以实现。计算文化心理学关注的文化变量主要围绕个人主义/集体主义 这一文化心理学使用最为广泛的维度展开, 分析方法包括特征词典、机器学习、社会网络分析、仿真模拟等, 分 析思路包括时间维度上的文化变迁效应以及空间维度上的文化地理效应。 当然, 计算文化心理学在为传统文 化心理研究提供新方法、新范式的同时, 也存在解码失真、样本偏差、词语多义性、隐私风险等局限, 未来研 究应重视变量理论解释、文化动态演化分析、学科深度整合、生态效度等问题。</description>
      <content:encoded><![CDATA[<h2 id="推荐理由">推荐理由</h2>
<p><a href="https://hidadeng.github.io/blog/management_python_course/"><strong>「课程 | Python实证指标构建与文本分析」</strong></a> 一直是面向经管、心理学、社会学等计算社会科学的一门综合性课程。 希望能学技术的同时，也多了解技术应用背后的方法论、认识论，大数据导向的研究必能事半功倍。</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">吴胜涛,茅云云,吴舒涵,冯健仁,张庆鹏,谢天,陈浩,朱廷劭.基于大数据的文化心理分析[J].心理科学进展:1-13.
</code></pre></div><p><strong>摘要</strong>: 随着大数据技术与文化心理学的融合发展, 计算文化心理学作为一门新兴交叉学科逐渐兴起, 大尺度、近乎全样本的文化心理分析真正得以实现。计算文化心理学关注的文化变量主要围绕个人主义/集体主义这一文化心理学使用最为广泛的维度展开, 分析方法包括特征词典、机器学习、社会网络分析、仿真模拟等, 分析思路包括时间维度上的文化变迁效应以及空间维度上的文化地理效应。 当然, 计算文化心理学在为传统文 化心理研究提供新方法、新范式的同时, 也存在解码失真、样本偏差、词语多义性、隐私风险等局限, 未来研 究应重视变量理论解释、文化动态演化分析、学科深度整合、生态效度等问题。</p>
<p><strong>关键词: 大数据, 文化, 计算文化心理学, 文化变迁, 文化地理</strong></p>
<p><br><br></p>
<h2 id="一大数据文化心理学">一、大数据文化心理学</h2>
<p>近 10 年的大量文献来看, <strong>大数据技术已经成为当前哲学、自然科学和 社会科学共同关注的重要问题,  为人文与社会科学提供了继实验、理论、仿真之后的第四种研究范式,  并催生了计算社会科学</strong>的诞生(Gray, 2009; Lazer et al., 2009)。</p>
<p>随着大数据时代的到来, 传统文化心理学面临诸多挑战, 但也迎来了范式变革的机遇。</p>
<p>首先, 互联网将人与人之间的距离拉近, 使得不同文化背景的人主动或被动地汇聚在一个时空压缩的“地球村”里, 全球范围的文化互动、变迁成为常态, 但由于研究资料受限、分析方法滞后, <strong>传统文化心理学在进行大尺度时间、空间分析时费时费力。幸运的是, 信息技术的发展使得不同时间、空间的文化符号及其互动过程留下了海量的数据印记, 这为研究者分析不同时间、不同空间下的文化心理特征提供了无可比拟的大规模生态数据库。</strong> 进而, 大数据技术赋能研究者们方便地抓取网络生态数据, 研究文化动态演化及节点事件效应(Park, Baek et al., 2014; Wu, Zhou et al., 2018), 使得时间趋势和空间地理上的大尺度分析真正成为可能, 文化心理学的研究问题也得以拓展。</p>
<p>其次, 大数据时代文化符号生产快速增长, 但是基于纸笔测验和行为实验的传统文化心理学 研究往往是滞后的, 且样本量较小、代表性不够, 远远不能满足研究者和决策者的需要。 而<strong>基于大数据的文化心理学研究能够以相对较低的时间、 人力成本实现近乎全样本的数据进行自动抓取、 实时分析乃至实验操控, 并从海量数据中迅速锁定、预测某一群体的行为特征, 进而实现宏观群 体水平的文化心理分析、预测和改变。</strong></p>
<p><strong>再者, 大数据时代的文化互动日趋个体化和复杂化, 而传统的文化心理学容易忽视文化成员在个体水平及复杂情景中的差异, 仅通过抽样追 求简单因果关系, 却难以把握文化心理、行为间的复杂相关性</strong>。也就是说, 在没有搞清楚“是什么” 的情况下就去分析“为什么” (顾肃, 2021)。 巨大、 连续的数据存储和模型分析, 以一种细粒度和大规模乃至全球范围的方式实时研究个体行为, 能够根据个体和情景变异进行适应性的调整和持续、实时的纠正;  同时, 庞大数据量补偿了精确性上的损失, 这有助于分辨出最合适的相关关系, 捕捉小数据测量时没有的新价值(Lazer et al., 2009)。尽管基于大数据技术的词频、预测模型或社会网络分析并非新鲜事物, 但将其应用于文化心理学研究能够从整体上把握对象, 促进从因果思维向相关性思维转变, 进而有利于全面、客观地揭示隐藏在数据背后的文化意涵和规律(陈云松, 2015)。</p>
<p><strong>最后, 更为重要的是, 大数据时代的文化形态也发生了深刻变化。</strong> 随着互联网的快速发展与网民的大量增加, 基于网络的独特文化现象层出 不穷, 一些经典的文化行为特征在网络上的表现也有所不同, 但传统文化心理学对此知之甚少。 例如, 研究发现相对于其他社会环境, 网络环境 下人们的情绪表达会更极端, 而且网络使用的时间越长, 极端情绪越明显(King, 2001)。 此外, 由于线上与线下任务的认知加工过程不同, 人们在 一些经典的文化认知表现上也存在差异。 例如, 相对于认知负荷较大的线下记忆任务, 低认知负荷的线上浏览任务中被试有更多的认知资源来处理外部信息, 因此在社会行为推理上会表现出较小的对应偏差, 基于国别的文化差异被基于线上 和线下的文化差异所代替(Miyamoto &amp; Kitayama, 2002)。 尤其值得注意的是, 移动互联网本身就是一种带有偏差的文化产品, 例如具有相应文化倾向(如高个人主义、低不确定性回避)的用户也更能 体验到技术−文化匹配后的愉悦感和效用感(Lee et al., 2007)。 因此我们不能仅满足于将研究线下文化现象的思维来简单套用到线上行为的文化心理研究中。 总之, 随着计算机和大数据技术的深入发展, 人类社会及其文化形态正经历着深刻的变革。 <strong>文化符号的生产和互动日趋复杂, 文化成员及其社 会网络更是留下了海量的文本与行为足迹。 这使得文化必须被快速地描述、预测甚至改变, “可计算”的文化符号及其互动过程也逐渐成为文化心理学的研究对象。 接下来, 我们将主要对计算文化心理学的产生过程、主要变量和分析技术进行回顾, 并介绍该技术在相关文化变迁、文化地理效应的应用。</strong></p>
<p><br><br></p>
<h2 id="二计算文化心理学">二、计算文化心理学</h2>
<p>在计算文化心理学正式产生以前, 文化学者就受到计算机技术的启发, 提出了**「文化计算」**概 念, 强调要发挥计算机的独特优势, 以便多维度 展现文化及其与人的互动(Tosa et al., 2005)。通过 <strong>文化计算</strong>, 研究者首先在艺术领域实现了文化的数据化呈现和翻译(Tosa et al., 2019)。 进而, <strong>文化计算把计算及相关技术应用到越来越多的文化领域, 探索其发展规律、提示其内在联系并对其进行量化分析与展示的科学</strong>(赵海英 等, 2016)。 如 Michel 等人(2011)通过对谷歌图书项目的数据进行分析, 发现了特定关键词使用频率的时间变化规律, 并由此推导出人类文化发展的趋势, 如语法演变、集体记忆和流行病学的变化趋势等; 吴育锋等人(2018)通过“文心” (中文心理分析系统) 对小说《平凡的世界》中的对话文本进行文学智能分析, 发现其计算出的小说人物性格与以往文艺研究结果一致, 并发现了不同时代人物呈现出性格变迁的趋势(如新时代青年的性格更加开放、 外向);</p>
<p>Neuman 等人(2012)在 <strong>「文化计算」</strong> 的基础上正式提出了**「计算文化心理学」**”的概念, 即通过计算工具和大数据资料库来研究文化符号及其互动过程的心理学分支。 值得注意的是, 虽然文化计算和基于计算的文化心理学有很多相似之处, 但是二者也有区别：</p>
<ul>
<li>前者侧重文化载体的呈现, 以及 文化基因的提取;</li>
<li>后者除了一般意义上的文化计算, 还注重分析人与文化环境的交互关系, 并且文化载体不仅是传统艺术文化, 也包含网络社交 媒体等。</li>
</ul>
<p><br><br></p>
<h2 id="三文化心理变量的提取">三、文化心理变量的提取</h2>
<p>为了理解文化现象, 心理学者需要首先提取文化心理变量, 进而理解影响其成员思维的符号系统和互动机制。<strong>语言是被分享的文化系统(王斌, 2012), 因此我们可以把语言看做是理解文化的窗口以及提取文化心理变量的来源(罗伯特·怀尔 等, 2017)。 语言的本质是思想、话语的直接现实和展示(吴美川, 2020), 其在计算文化心理学领域的语言载体主要包括书籍、社会媒体数据、档案数据、网络音频等</strong>。</p>
<p>针对语言文化载体, 研究者主要提取的文化心理变量包括<strong>个人主义/集体主义、个性解放/自我表达、文化松紧度</strong>等, 详见表 1。</p>
<p><img loading="lazy" src="img/%e6%96%87%e5%8c%96%e5%bf%83%e7%90%86%e5%8f%98%e9%87%8f%e7%a0%94%e7%a9%b6%e8%b7%9d%e7%a6%bb.png" alt=""  />
</p>
<p>第一, 这些变量本身具有重要研究价值, 如个人主义/集体 主义是文化心理学中使用最为广泛的文化维度, 尤其对社会文化变迁和跨文化比较研究具有重要 意义; 第二, 社会现实的需求, 如新冠疫情的全球大流行显著增加了规范遵从的强度, 这需要研 究者及时分析其文化适应后果及政策干预策略; 第三, 此类文化变量的可操作性强, 便于用大数 据方法来进行抓取和计算。</p>
<p>此外, 计算文化心理学研究也对一些文化变量进行了操作化和创造性的发展。 首先, 考虑到大数据的语料库特点, 选用一些便于操作的语言 特征作为经典文化心理学变量的指标, 例如用第一人称单数的使用频率作为个人主义的指标(Twenge et al., 2013); 其次, 将个体的行为印记(如@他人、 成组人群比例)作为文化心理变量的指标, 是对以往基于主观报告的文化心理测量的重要发展(Wu, Li et al., 2018); 此外, 根据新媒体的特点, 采用表情包等作为文化相关情绪表达规范的指标也是一种有益的创新(Koda &amp; Ishida, 2006)。</p>
<p><br><br></p>
<h2 id="四文化心理变量的计算方法">四、文化心理变量的计算方法</h2>
<p>目前采用大数据技术进行文化心理分析主要 有 4 种方法：</p>
<ol>
<li>
<p>基于<strong>特征词典的频次分析</strong>, 如通过对数字、表情和语言等方面的关键特征分析, 研究个体或群体的文化价值观, 这是一种简单有效但相对粗糙的分析(李国杰, 程学旗, 2012)。</p>
</li>
<li>
<p>基于<strong>机器学习的模型预测或词嵌入联想测验</strong>, 如通过机器学习模型对用户的个性、价值观和意识 形态进行识别, 这种方法更精确, 对心理特征的 把握也更全面(Kosinski et al., 2015); 词嵌入联想 测验以词嵌入向量特征代替传统的词频特征, 将 靶词和属性词向量的余弦相似度作为语义关联度的指标, 是社会态度与价值观研究的新方法 (Caliskan et al., 2017; Hamamura et al., 2021)。</p>
</li>
<li>
<p><strong>社会网络分析</strong>, 如通过对网络搜索、网友互粉 等数据的分析, 研究不同文化群体的行为和决策风格, 这种方法目前在文化心理学领域还相对较 少, 但具有重要的社会实践价值(Wu, Li et al., 2018);</p>
</li>
<li>
<p><strong>社会仿真模型</strong>, 因为很多社会事 件是无法在现实中进行实验的, 所以采用仿真模拟的办法来研究某一特定的系统和策略, 从而达到分析社会事件的目的(刘婷婷 等, 2016)。 当然, 这 4 种技术并不是孤立的, 研究者也会根据研究 问题采取一种或多种技术。</p>
</li>
</ol>
<blockquote>
<p>特征词典的频次分析、机器学习的模型预测或词嵌入联想测验等技术方法在课程<a href="https://hidadeng.github.io/blog/management_python_course/"><strong>「课程 | Python实证指标构建与文本分析」</strong></a> 中均有丰富的案例、代码、实战。</p>
</blockquote>
<br>
<p>总之, 计算文化心理学致力于应用大数据思维、大数据资源和计算工具来研究文化系统背后的意义制造与互动过程, 它不仅为文化心理分析 提供了新的工具, 也为理解人类思维本质和文化 形态提供了新的学科范式(Neuman, 2014)。<strong>围绕着“集体主义/个人主义”这一被最广泛讨论的文化心理变量, 「计算文化心理学」可以在时间、空间两个维度方面有如下应用</strong>：</p>
<ul>
<li>在时间维度上, 分别从长时程的宏观历史发展和短时程的经济波动转型两个角度介绍计算文化心理学的应用;</li>
<li>在空间维度上, 主要进行生态地理分析, 如文化在特定政治和经济框架内的地区差异, 不同地区生态或户籍制度造成的个人−环境匹配与价值失调。 分析框架见图 1。</li>
</ul>
<p><img loading="lazy" src="img/%e8%ae%a1%e7%ae%97%e6%96%87%e5%8c%96%e5%bf%83%e7%90%86%e5%ad%a6%e7%9a%84%e5%88%86%e6%9e%90%e6%a1%86%e6%9e%b6.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="五不足展望">五、不足&amp;展望</h2>
<p>虽然计算文化心理学已经崭露头角, 相对于 传统文化心理学研究方法和范式具有无法比拟的优势, 但利用大数据进行文化心理分析仍然存在一些局限。</p>
<h3 id="51-技术自身带来的局限">5.1 技术自身带来的局限</h3>
<p><strong>首先, 很多研究者忽视了同一变量在不同时代、不同国家的意义分歧, 造成解码失真</strong>。 心理学者检验文化变迁的常用方法是寻找作者认为对 文化敏感的词汇并探索其使用频率的时间变化, 比如通过追踪第一人称单、复数代词的使用频率 来分析集体主义、个人主义的时间变迁效应 (Twenge et al., 2013; Yu et al., 2016)。 然而, 语言 总是随着时间演变, 同一个词义并不具有稳定性, 其不可避免地受到经济、政治或者文化因素的影响。</p>
<p><strong>假定大数据背后的文化成员能代表整个文化, 容易将带有偏差的文化成员样本视为研究整体</strong>。 例如, 很多研究者使用当下非常流行的语料库——Google Ngram Viewer 来研究集体主义/个人主 义, 并把结论推广至整个国家层面(Twenge et al., 2013)。 但实际上, 该语料库并不能代表无差别的文化整体, 相反, 它仅仅是突出了特定子群体的文化, 如 Google Ngram Viewer 仅代表书面文化的使用者, 社交媒体数据只包含社交媒体用户, 而 忽视了没有机会接触书籍和社交媒体的文化成员 (Pettit, 2016)。 所以, <strong>研究者要特别注意, 诸如图书语料库、社交媒体分析等并不是基于无偏样本, 因此在使用该类分析材料时要考虑结论的可推广 性和普遍适用性问题。</strong></p>
<p>第三, 研究者对量表或题项进行赋值、使得变量可计量, 进而将文化心理与行为转换为一种符号系统, 但是<strong>大数据分析中的频次分析提取的 关键词往往具有多义性, 如果研究者只是摘取了某个含义并将其纳入特定理论范畴, 则难免会出 现选择性谬误</strong>。 同时, 用于处理数据的软件还会 进一步固化这一测量误差。例如在 LIWC 软件中, 因 为 “great” 属 于积极情感范畴 , 所 以 “a great amount of rain”这一无关表达将被归类为积极情 感表达。 这意味着, 即便大数据分析技术的飞速发展, 但其得出的结果仍不够精确。</p>
<p>第四, 存在文化被监控和被操纵、以及侵犯个人隐私的风险。 大数据以其海量存储和智能计算优势来提取个人和特定群体的文化和性格数据, 进而实施与文化−性格相匹配的精准操纵, 甚至攻击。 这些做法明显的弊端就是数据隐私性和国 家区域安全难以保证, 容易被不法分子利用。 因 此, 为了避免个体数据及其分析结果被滥用, 全球研究者应该将研究伦理置于大数据分析的首位, 共同谋求相应的解决措施和共通的数据法律来解 决个人信息及国家或地区文化心理分析的不当使 用问题 (Kosinski et al., 2015)。</p>
<br>
<h3 id="52-技术带来的机会">5.2 技术带来的机会</h3>
<p><strong>我们不能忽视它在未来的巨大发展空间， 应从理论高度对大数据测量指标进行准确定义和解释</strong>。 大数据时代, 出现了重视数据驱动、而轻视理论的现象(维克托 • 迈尔-舍恩伯格, 肯尼斯 • 库克耶, 2013)。 但实际上大数据只是在数据采集中提供了一个发现或检验科学理论的新方法, 不能在知识生产环节中取代理论知识的地位。 理论在大数据研究中是重要的, 一方面大数据分析的算法模型以及对数据的解释需要理论的支撑(彭理强, 2019), 另一方面我们需要运用数据的意向性并由此对数据进行分类, 而不同的意向性和不同的分类体系是由理论概念决定的(齐磊磊, 2015)。 因此, <strong>在未来的研究中, 研究者的设计和经验数据的使用应在理论指引下进行, 尤其在指标维度的构建上要重视理论术语的指称和实体之间的关系</strong>(贾向桐, 2019)。</p>
<p><strong>其次, 利用多种大数据语料库, 进行更广泛的文化动态演化分析</strong>。 过往的研究容易把文化看做静态的单一实体, 并且将不同文化之间的异同 归因于其背后的国家/民族中根深蒂固的特质, 即轻易对群体进行本质化。 然而, 我们需要意识到文化知识是动态发展的过程, 文化的相关潜质或 因果连结存在于特定共享文化知识的激活, 并且 共享文化会随着社会政治和其他类型的社会变化 不断地产生和演化(康萤仪 等, 2010)。 传统的文 化心理学研究受制于小样本并容易忽视微弱的相 关关系, 因此在条件允许的情况下, 未来需要依 赖多种大数据语料库开展更广泛的纵向大尺度研 究, 探索文化符号串联及其背后机制的研究线 索。例如, 研究者可以使用历史档案数据库, 来研 究共享文化从何而来、其分布与使用的频率如何、 共享的边界是什么、共享文化被激活后产生了什么后果等, 进而促进共同的和个体的经验。</p>
<p><strong>第三, 推动文化心理学与计算机、传播学、 历史学等学科的深度整合</strong>。 文化心理学的力量在于其方法论上的多元化和多学科基础(余霞, 钟年, 2019; Cohen, 2019)。 但是, 跨学科也使得学科互补的同时充满文化冲突, 例如不同学科会由于不同范式而在考虑问题的优先级等方面存在根本性 差异, 一旦学科之间产生冲突, 问题或许就会贯穿任何主题和学科的边界(Popper, 1963)。 然而, <strong>当计算思维、数据资源和计算工具被采用后, 就可以从方法论层面加速对研究问题的解决</strong>。 在未来研究中, 研究者可以充分利用计算文化心理学固有的学科多样性和数据多源化, 尝试通过“计 算”去更好地整合文化心理学背后的多个学科视 角及其变量维度, 使大家共同聚焦某个问题。 比如, 为了描绘复杂的文化现象共同将目光聚焦于 背后多源数据的处理、共享数据库的建成、理论与数据的结合等学科问题, 不断推进计算文化心理学的整体发展。</p>
<p><strong>最后, 利用大数据的“场景功能”, 提升文化心理学研究的生态效度。</strong> 一直以来, 由于实验情境缺乏生态效度, 心理学赖以成为“科学”的实验研究备受质疑; 而在大数据背景下, 研究者对已有数据的挖掘完全能够在自然情境下生成实验变量, 在大数据中挑选情境便是实验方式(喻丰 等, 2015)。 在未来研究中, 研究者不仅可以聚焦小场景, 研究个人经验与近端影响源之间的关系, 而且可以探索大场景中更远端影响源与个人经验之间的相互作用, 从而分析不同时间、空间的文化 差异。值得注意的是, 当场景被扩大和拉长, 这些真实的场景可能体现了个人行为与动机的绝大部 分变异, 这体现了自然情境研究的“深度背景化”, 有助于提升文化等背景特征的解释水平。</p>
<p><br><br></p>
<h2 id="六总结">六、总结</h2>
<p>总之, 计算机和大数据技术深刻影响了文化符号的生产、互动方式以及文化形态本身, 并促成了计算文化心理学的产生和发展。 通过回顾计 算文化心理学的产生过程, 以及将大数据分析方法应用到文化变迁、文化地理效应等多个领域的实证研究, 有助于我们理解计算文化心理学的学 科优势、局限及未来发展方向, 并对文化心理研 究的思路拓展和方法革新具有启发意义。</p>
<p>尤为重要的是, 大数据为大尺度的文化分析提供了可能。 文化作为一种宏观且多变的现象, 任何一种文化理论都需要从越大规模的时间和空 间维度来进行检验和评判, 基于大数据的计算文化心理学能够为研究者提供数以亿计的数据以及 强有力的分析工具; 同时, 大数据改变了传统文 化心理学的研究范式, 更产生了诸多新的文化现 象, 这蕴含了整个学科思维方式和学科体系的变 革(喻丰 等, 2015)。当然, 在看到大数据为传统文 化心理研究提供新方法、新范式的同时, 我们也不能忽视其研究局限, 以及潜在的伦理和安全风险。</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">支持开票 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>PNAS | 使用语义距离测量一个人的创新力(发散思维)得分</title>
      <link>https://hidadeng.github.io/blog/2022-11-14-pnas_naming_unrelated_words_predicts_creativity/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-11-14-pnas_naming_unrelated_words_predicts_creativity/</guid>
      <description>使用语义距离测量一个人的创新力(发散思维)得分</description>
      <content:encoded><![CDATA[<br>
<p>传统测量 <strong>被试者创造力</strong> 存在耗费时间、主观性太强、缺乏客观性，且所得到的分值是不稳定的，无法跨时间、文化、群体进行分值比较。该研究分析了创新力的两大理论，即联系理论和执行理论，即创新力是包含思维的广度和深度两方面。</p>
<ul>
<li><strong>联系理论(广度)</strong> 负责搜寻所有可能方案的集合，增加集合的规模，体现思维的广度。</li>
<li><strong>执行理论(深度)</strong> 负责寻找最佳方案，并将方案落实执行，体现思维的深度。</li>
</ul>
<p>结合Glove词嵌入技术，将每个词理解为一个技术或知识，两词语语义越相似，发散性越低。</p>
<p>文中让被试按照一定规则，随意填写10个名词，使用其中7个有效词语测量被试的创新力(发散性)思维。可以简单的把7个词理解为知识或者技术，7个词语会形成21种词语对(组合)。最后求均值可以测量出被试词语对的语义距离体现创新发散性的强度。<strong>文末含案例代码</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Olson, J.A., Nahas, J., Chmoulevitch, D., Cropper, S.J. and Webb, M.E., 2021. Naming unrelated words predicts creativity. Proceedings of the National Academy of Sciences, 118(25), p.e2022340118.
</code></pre></div><p><br><br></p>
<h2 id="一摘要">一、摘要</h2>
<p><strong>一些理论认为，有 创造力 的人能够产生更多 发散性 的想法。如果这是正确的，简单地让被试写 N 个不相关的单词，然后测量这N个词的语义距离， 作为 #发散思维 的客观衡量标准</strong>。为了验证这一假设，我们要求 8,914 名参与者说出 10 个彼此尽可能不同的单词。</p>
<p>然后计算算法估计单词之间的平均语义距离；<strong>相关词（例如 cat 和 dog）比不相关词（例如 cat 和 thimble）的距离更短。我们预测，产生更大语义距离的人也会在传统的创造力测量中得分更高</strong>。</p>
<p>在研究 1 中，我们发现语义距离与两个广泛使用的创造力测量（替代用途任务和桥接关联差距任务）之间存在中度至强相关性。在研究 2 中，参与者来自 98 个国家，语义距离仅因基本人口变量而略有不同。在一系列已知可预测创造力的问题上，语义距离与表现之间也存在正相关关系。</p>
<p>总体而言， <strong>语义距离</strong> 与已建立的 创造力测量 的相关性至少与这些测量彼此之间的相关性一样强。 因此，在我们所说的发散关联任务中命名不相关的词可以作为发散思维的简短、可靠和客观的衡量标准。</p>
<br>
<h2 id="二创新力理论">二、创新力理论</h2>
<p>想出 3 个尽可能不同的词。根据两种主要的创造力理论 (1, 2)，选择这些词依赖于产生 #远程联想 ，同时抑制 #常见联想 。</p>
<p>#联想理论 (Associative Theory)认为，有创造力的人具有语义记忆结构，可以更容易地链接远程元素 (3-6)。</p>
<p>#执行理论 (Executive Theory) 侧重于自上而下的注意力控制；创造性的解决方案来自于监测和抑制共同的联想 (2, 7)。</p>
<p>基于这些理论，我们假设 <strong>填写n个无关单词的任务</strong> 可以可靠地衡量 #语言创造力 。 <strong>创造力有两个主要的心理成分， 收敛思维和发散思维，它们在产生创意输出时协同工作</strong>。收敛性思维任务衡量评估多种刺激并得出最适当响应的能力，例如问题的最佳解决方案 (3, 8-10)。这些任务往往更容易得分，因为只有一小部分正确答案。<strong>相比之下，发散思维任务通常使用开放式问题来衡量一个人产生各种解决方案的能力</strong> (11-13)。它们通常需要更长的回答(文本)，因此更难客观评分。</p>
<br>
<h2 id="三创新力测量">三、创新力测量</h2>
<h3 id="31--替代用途任务">3.1  替代用途任务</h3>
<p>最常见的发散思维测量是 <strong>替代用途任务</strong> Alternative Uses Task (14, 15)，在该任务中，参与者生成常见物体的用途，例如回形针或鞋子。使用常用的评分方法 (16)，评分者然后根据三个组成部分来判断回答：</p>
<ul>
<li>灵活性，产生的不同用途类别的数量；</li>
<li>独创性，每次使用相对于样本的其余部分的稀有程度，这对创造力特别重要（17、18）；和</li>
<li>流畅度，一共产生了多少次使用。</li>
</ul>
<br>
<h3 id="32-离散联系任务">3.2 离散联系任务</h3>
<p>本研究作者开发了 <strong>离散联系任务</strong> (Divergent Association Task， DAT) 的网站， <strong>填写你想到的10个不相关词语， 创造力越丰富的人，填写的词语语义距离往往会更远</strong>。</p>
<p><a href="https://www.datcreativity.com/">https://www.datcreativity.com/</a></p>
<p><img loading="lazy" src="img/1_pnas_divergent_association_task_mainpage.png" alt=""  />
</p>
<h3 id="被试填写10个单词的规则">被试填写10个单词的规则</h3>
<ol>
<li>只能填写英文单词</li>
<li>只能是名词(如事情、物体、概念)</li>
<li>不能填 专有名词（例如，特定的人或地点）</li>
<li>不能填写 专业词（比如技术词）</li>
<li>自己思考这些词，不要只看周围环境的物体。</li>
</ol>
<h3 id="dat算法实现">DAT算法实现</h3>
<ol>
<li>使用Glove预训练模型</li>
<li>选前7个词(一共10个词)， 存在 21个词对（组合）</li>
<li>对21词对， 分别计算词向量的余弦距离，分别乘以100。最终求均值得到DAT得分。</li>
</ol>
<blockquote>
<p>下图是大邓第二次填写得到的DAT得分，第一次只超过了6%的人，这方法第一次准，再测就知道如何提高DAT得分。</p>
</blockquote>
<p><img loading="lazy" src="img/2_pnas_divergent_association_task_result.png" alt=""  />
</p>
<p>DAT得分范围0-200， 得分为0可能是7个有效词之间语义相同，而得分200可能是有效词之间彼此语义完全不相同。实践中，得分大多处于65~90之间，且很少超过100。</p>
<p><img loading="lazy" src="img/pnas_dat_score_low_median_high.jpg" alt=""  />
</p>
<blockquote>
<p>词嵌入技术可以把每个词转化为等长的向量，而不同词语共处于相同的语义空间中。常见的词嵌入技术有word2vec、Glove、flastText等，因为最近有学者在 <strong>替代用途任务</strong>(Alternative Uses Task）中用过Glove算法，本文采用Glove算法。本研究使用的Glove预训练模型来自Common Crawl Corpus项目，该项目拥有数十亿网页文本数据。</p>
<p>为了提供冗余， 只采用 被试者 填写的前7个词作为有效单词(DAT的被试需要填写10个词)。DAT得分是这些词之间的语义距离的平均值，具体计算方法， 7个词两两相关的组合有 42种组合， 选择其中最有可能的 21 个语义组合。</p>
</blockquote>
<br>
<h2 id="四实验">四、实验</h2>
<p>这种发散思维的操作化是基于创造力的联想和执行控制理论。 更高的分数将显示出更大的能力来利用更远程的关联 (3-5) 或抑制过度相关的关联 (2, 7)。</p>
<p>在研究 1 中，我们通过将 DAT 与其他两种创造力测量方法进行比较来检验这一假设：替代用途任务 (15) 和桥接关联差距任务 (36)。
<img loading="lazy" src="img/pnas_dat_aut_algo_valid_num.jpg" alt=""  />
</p>
<p>在研究 2 中，我们测试了这些分数如何随人口统计而变化，以及它们是否与更大数据集中与发散性思维相关的其他测量值相关 (9, 37)。 这些研究评估了语义距离是否可以作为发散思维的可靠指标。
<img loading="lazy" src="img/pnas_dat_gender_age.jpg" alt=""  />
</p>
<br>
<h2 id="五讨论">五、讨论</h2>
<p>研究结果表面， 让被试简单的填写10个不想管单词的任务可以作为 测量发散思维 的可靠衡量标准。在研究中， 将这项任务的表现与已有的两种创造力量表做了比较，具有很高的相关性。</p>
<p>总体而言支持了语义发散性，尽管这种联系背后的确切机制尚不清楚，但在创新力最主要的两个理论，即联想理论或执行理论 的联系网络中衡量网络的范围或效率。</p>
<p><strong>DAT算法表现稳定，方差不随人口统计特征变化出现显著性变化（研究2），可以在跨年龄、跨性别的情况下应用</strong>。</p>
<br>
<h3 id="51-dat的优点">5.1 DAT的优点</h3>
<ul>
<li>操作简单，快捷，客观，节约了大量的人力时间，又能保证客观性。</li>
<li>得分绝对，可比较，可以用于测量不同群体(种族、文化、性别、年龄)的创造力得分。</li>
<li>对被试友好，一般一两分钟即可完成。</li>
</ul>
<h3 id="52-dat的不足">5.2 DAT的不足</h3>
<ul>
<li>创造力有发散性和执行力，发散性负责搜选所有方案集合的规模，而执行力是从方案集中选出最优方案并将其执行。DAT测量的仅仅是发散性思维。</li>
<li>被试可能通过填写稀奇的词语提高DAT得分。</li>
<li>只有短短几分钟，被试可能很难短时间内了解实验规则。</li>
</ul>
<h3 id="53-未来展望">5.3 未来展望</h3>
<p>DAT得分取决于Glove模型、语料库(数据集), 更新词模型或语料库，被试的DAT得分会发生变化。为简单起见，本研究使用免费的预训练模型， 通过一些努力，未来研究者可以对不同时期，不同国家的语料库来训练Glove模型。随着特定单词关联或多或少的联系， 更新的模型将会自动考虑这些变化，这将允许DAT得分跨越文化跨越时代，进行创新力的比较。</p>
<p><br><br></p>
<h2 id="代码">代码</h2>
<p>代码的文档说明请点击 github仓库地址 <a href="https://github.com/jayolson/divergent-association-task">https://github.com/jayolson/divergent-association-task</a> 查看。这里仅粘贴作者源代码，源代码需要配置好才可运行。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">dat</span>

<span class="c1">## 从 https://nlp.stanford.edu/projects/glove/ 下载Glove模型</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">dat</span><span class="o">.</span><span class="n">Model</span><span class="p">(</span><span class="s2">&#34;glove.840B.300d.txt&#34;</span><span class="p">,</span> <span class="s2">&#34;words.txt&#34;</span><span class="p">)</span>

<span class="c1"># 验证词语，如输入的是词组，代码会将其转为连线形式的单词</span>
<span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">validate</span><span class="p">(</span><span class="s2">&#34;cul de sac&#34;</span><span class="p">))</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cul-de-sac
</code></pre></div><br>
<p>计算两个词语之间的语义距离</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">distance</span><span class="p">(</span><span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;dog&#34;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">distance</span><span class="p">(</span><span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;thimble&#34;</span><span class="p">))</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.1983
0.8787
</code></pre></div><br>
<p>计算词对的DAT得分（语义cosine距离*100）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">dat</span><span class="p">([</span><span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;dog&#34;</span><span class="p">],</span> <span class="mi">2</span><span class="p">))</span> 
<span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">dat</span><span class="p">([</span><span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;thimble&#34;</span><span class="p">],</span> <span class="mi">2</span><span class="p">))</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">19.83
87.87
</code></pre></div><br>
<p>假设有三个人分别都填写10个词，选其前7个词作为有效词。有效词如下，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">low</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;arm&#34;</span><span class="p">,</span> <span class="s2">&#34;eyes&#34;</span><span class="p">,</span> <span class="s2">&#34;feet&#34;</span><span class="p">,</span> <span class="s2">&#34;hand&#34;</span><span class="p">,</span> <span class="s2">&#34;head&#34;</span><span class="p">,</span> <span class="s2">&#34;leg&#34;</span><span class="p">,</span> <span class="s2">&#34;body&#34;</span><span class="p">]</span>
<span class="n">average</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;bag&#34;</span><span class="p">,</span> <span class="s2">&#34;bee&#34;</span><span class="p">,</span> <span class="s2">&#34;burger&#34;</span><span class="p">,</span> <span class="s2">&#34;feast&#34;</span><span class="p">,</span> <span class="s2">&#34;office&#34;</span><span class="p">,</span> <span class="s2">&#34;shoes&#34;</span><span class="p">,</span> <span class="s2">&#34;tree&#34;</span><span class="p">]</span>
<span class="n">high</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;hippo&#34;</span><span class="p">,</span> <span class="s2">&#34;jumper&#34;</span><span class="p">,</span> <span class="s2">&#34;machinery&#34;</span><span class="p">,</span> <span class="s2">&#34;prickle&#34;</span><span class="p">,</span> <span class="s2">&#34;tickets&#34;</span><span class="p">,</span> <span class="s2">&#34;tomato&#34;</span><span class="p">,</span> <span class="s2">&#34;violin&#34;</span><span class="p">]</span>

<span class="c1"># Compute the DAT score (transformed average cosine distance of first 7 valid words)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">dat</span><span class="p">(</span><span class="n">low</span><span class="p">))</span> <span class="c1"># 50</span>
<span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">dat</span><span class="p">(</span><span class="n">average</span><span class="p">))</span> <span class="c1"># 78</span>
<span class="nb">print</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">dat</span><span class="p">(</span><span class="n">high</span><span class="p">))</span> <span class="c1"># 95</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">50
78
95
</code></pre></div><p>需要注意pnas作者公开的代码只能用在英文，且无法自己训练Glove模型。如果想基于自有数据集（中文、英文），训练自有Glove模型，需要学习</p>
<ul>
<li>如何训练Glove模型</li>
<li>如何导入训练好的Glove模型</li>
<li>如何计算中英文dat得分</li>
</ul>
<p>相关知识点已更新至我的录播课课程 <a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>管理世界 | 使用 经营讨论与分析 测量 企业数字化</title>
      <link>https://hidadeng.github.io/blog/2022-11-03-mda-measure-digitalization/</link>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-11-03-mda-measure-digitalization/</guid>
      <description>使用 经营讨论与分 文本数据，测量企业的数字化指标，代码实现过程参考2021管理世界的一篇论文</description>
      <content:encoded><![CDATA[<p>使用 经营讨论与分析 数据，计算企业数字化指标, 相关论文:</p>
<ul>
<li>吴非, 胡慧芷, 林慧妍, and 任晓怡. &ldquo;企业数字化转型与资本市场表现——来自股票流动性的经验证据.&rdquo; 管理世界 (2021).</li>
<li>宋德勇, 朱文博, and 丁海. &ldquo;企业数字化能否促进绿色技术创新?.&rdquo; 财经研究 48, no. 4 (2022).</li>
</ul>
<p>数字化指标数分析结果以xlsx存储，如下图</p>
<br>
<h2 id="一读取数据">一、读取数据</h2>
<p>完整md&amp;a.xlsx数据集370M，覆盖33000+条   md&amp;a记录。</p>
<p><img loading="lazy" src="img/mda_screen.png" alt=""  />
</p>
<p>测试数据 <a href="small_test_data.xlsx">small_test_data.xlsx</a> 是从完整的数据中随机抽取的20条，结构基本一致。以测试数据为例，方便快速实验。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">import pandas as pd

# converters 强制声明该列为字符串，  防止股票代码 被程序识别为数字，
df = pd.read_excel(&#39;small_mda_data.xlsx&#39;, converters={&#39;股票代码&#39;: str})

#显示前5行
df.head()
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<h2 id="二构建词典">二、构建词典</h2>
<p>下图是吴非等(2021)数字化指标的截图</p>
<p><img loading="lazy" src="img/%e7%ae%a1%e7%90%86%e4%b8%96%e7%95%8c2021%e5%90%b4%e9%9d%9e-%e4%bc%81%e4%b8%9a%e6%95%b0%e5%ad%97%e5%8c%96-%e5%85%b3%e9%94%ae%e8%af%8d.png" alt=""  />
</p>
<blockquote>
<p>后期，如果想自己扩展词典，可以初步筛选种子词(该篇论文的词表), 使用md&amp;a语料文件(txt格式)， 结合cntext库的so-pmi或词向量方法，对数字化词典进行扩充。</p>
</blockquote>
<p>这里我已将吴非等(2021)的词表内置到 cntext库（1.8.0版本）的 Chinese_Digitalization.pkl中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#安装cntext库
import cntext as ct

Chinese_Digitalization_Info = ct.load_pkl_dict(&#39;Chinese_Digitalization.pkl&#39;)

print(ct.__version__)
print(Chinese_Digitalization_Info)
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1.8.0

{&#39;Referer&#39;: &#39;吴非,胡慧芷,林慧妍,任晓怡. 企业数字化转型与资本市场表现——来自股票流动性的经验证据[J]. 管理世界,2021,37(07):130-144+10.&#39;, 

&#39;Desc&#39;: &#39;基于这篇论文，构建了中文数字化词典，含人工智能技术、大数据技术、云计算技术、区块链技术、数字技术应用等关键词列表。 &#39;, 

&#39;Chinese_Digitalization&#39;: 
    {&#39;Artificial_Intelligence&#39;: [&#39;人工智能&#39;, &#39;商业智能&#39;, &#39;图像理解&#39;, &#39;投资决策辅助系统&#39;, &#39;智能数据分析, &#39;智能机器人&#39;, &#39;机器学习&#39;, &#39;深度学习&#39;, &#39;语义搜索&#39;, &#39;生物识别技术&#39;, &#39;人脸识别&#39;, &#39;语音识别&#39;, &#39;身份验证&#39;, &#39;自动驾驶&#39;, &#39;自然语言处理&#39;], 
    &#39;Big_Data&#39;: [&#39;大数据&#39;, &#39;数据挖掘&#39;, &#39;文本挖掘&#39;, &#39;数据可视化&#39;, &#39;异构数据&#39;, &#39;征信&#39;, &#39;增强现实&#39;, &#39;混合现实&#39;, &#39;虚拟现实&#39;], 
    &#39;Cloud_Computing&#39;: [&#39;云计算&#39;, &#39;流计算&#39;, &#39;图计算&#39;, &#39;内存计算&#39;, &#39;多方安全计算&#39;, &#39;类脑计算&#39;, &#39;绿色计算&#39;, &#39;认知计算&#39;, &#39;融合架构&#39;, &#39;亿级并发&#39;, &#39;EB级存储&#39;, &#39;物联网&#39;, &#39;信息物理系统&#39;], 
    &#39;Block_Chains&#39;: [&#39;区块链&#39;, &#39;数字货币&#39;, &#39;分布式计算&#39;, &#39;差分隐私技术&#39;, &#39;智能金融合约&#39;], 
    &#39;Usage_of_Digitalization&#39;: [&#39;移动互联网&#39;, &#39;工业互联网&#39;, &#39;移动互联&#39;, &#39;互联网医疗&#39;, &#39;电子商务&#39;, &#39;移动支付&#39;, &#39;第三方支付&#39;, &#39;NFC支付&#39;, &#39;智能能源&#39;, &#39;B2B&#39;, &#39;B2C&#39;, &#39;C2B&#39;, &#39;C2C&#39;, &#39;O2O&#39;, &#39;网联&#39;, &#39;智能穿戴&#39;, &#39;智慧农业&#39;, &#39;智能交通&#39;, &#39;智能医疗&#39;, &#39;智能客服&#39;, &#39;智能家居&#39;, &#39;智能投顾&#39;, &#39;智能文旅&#39;, &#39;智能环保&#39;, &#39;智能电网&#39;, &#39;智能营销&#39;, &#39;数字营销&#39;, &#39;无人零售&#39;, &#39;互联网金融&#39;, &#39;数字金融&#39;, &#39;Fintech&#39;, &#39;金融科技&#39;, &#39;量化金融&#39;, &#39;开放银行&#39;]}}
</code></pre></div><br>
<br>
<h2 id="三定义数字化函数">三、定义数字化函数</h2>
<p>目前，对于企业数字化水平的度量是相关研究的难点，现有文献主要有三种度量方法。</p>
<ul>
<li>第一，祁怀锦等（2020）使用企业年末无形资产明细项中与数字经济相关部分的金额占无形资产总额的比例度量企业数字化程度。</li>
<li>第二，大量研究运用数字化相关关键词在年报中的词频数量或占比度量企业的数字化转型或数字化水平（赵宸宇，2021；袁淳等，2021）。</li>
<li>第三，相关研究采取问卷调查的方式获取企业的数字化水平数据（刘政等，2020）。</li>
</ul>
<p>使用第二种方法，通过Python定义数字化函数，统计文本中数字化词语个数得到相应指标。</p>
<blockquote>
<p>吴非等(2021管理世界)数字化指标的计算更复杂一些，在此基础上，剔除关键词前存在“没”
“无”
“不”等否定词语的表述，同时也剔除非本公司（包括公司的股东、客户、供应商、公司高管简介介绍在内）的“数
字化转型”关键词。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">import cntext as ct


digtal_diction = ct.load_pkl_dict(&#39;Chinese_Digitalization.pkl&#39;)[&#39;Chinese_Digitalization&#39;]


def digtal_function(text):
    #统计text中每类词的个数
    res = ct.sentiment(text=text,  diction=digtal_diction)
    return pd.Series(res)


test_text = &#39;经过技术人员不懈努力， 该企业在人工智能、大数据、云计算、工业互联网等领域有了一定的市场地位....&#39;


digtal_function(text=test_text)
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Artificial_Intelligence_num     1
Big_Data_num                    1
Cloud_Computing_num             1
Block_Chains_num                0
Usage_of_Digitalization_num     1
stopword_num                   11
word_num                       24
sentence_num                    1
dtype: int64
</code></pre></div><br>
<h2 id="四批量计算">四、批量计算</h2>
<p>使用apply方法，对  [经营讨论与分析内容] 列，进行  digtal_function 运算, 得到 <code>res_df</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#结果返回为dataframe，数字代表的是每类词出现次数
res_df = df[&#39;经营讨论与分析内容&#39;].apply(digtal_function)
res_df.head()
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<p>参数解读</p>
<ul>
<li>Artificial_Intelligence_num	 人工智能技术词出现在md&amp;a中的次数</li>
<li>Big_Data_num	 大数据技术词出现在md&amp;a中的次数</li>
<li>Cloud_Computing_num	云计算技术词出现在md&amp;a中的次数</li>
<li>Block_Chains_num	区块链技术词出现在md&amp;a中的次数</li>
<li>Usage_of_Digitalization_num	数字化应用技术词出现在md&amp;a中的次数</li>
<li>stopword_num	停用词出现在md&amp;a中的次数</li>
<li>word_num	md&amp;a中的总词数(md&amp;a的长度)</li>
<li>sentence_num   md&amp;a的句子数</li>
</ul>
<br>
<h2 id="五结果整理">五、结果整理</h2>
<p>上一环节，将各种技术词出现次数加总，构建企业数字化词语出现个数， 并将其转为数字化指标(词频)。</p>
<blockquote>
<p>由于这类数据具有典型的“右偏性”特征，后续在其他计量分析软件中需要将其进行对数化处理，从而得到刻画企业数字化转型的整体指标。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">res_df[&#39;Digital_word_num&#39;] = res_df[[&#39;Artificial_Intelligence_num&#39;, &#39;Big_Data_num&#39;, &#39;Cloud_Computing_num&#39;, &#39;Block_Chains_num&#39;, &#39;Usage_of_Digitalization_num&#39;]].sum(axis=1)

# [数字化相关技术词] 在 [文本总词数] 中的占比
res_df[&#39;Digital_Index&#39;] = res_df[&#39;Digital_word_num&#39;]/res_df[&#39;word_num&#39;]
res_df.head()
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<h2 id="六保存结果">六、保存结果</h2>
<p>合并df 和 <code>res_df</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df2 = pd.concat([df, res_df], axis=1)

df2.head()
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<p>选中需要的字段，保存到 corporate_digitalization.xlsx 内</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;公司简称&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;Digital_Index&#39;</span><span class="p">]]</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;corporate_digitalization.xlsx&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/digital_index.png" alt=""  />
</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>27G数据集 | 使用Python对27G招股说明书进行文本分析</title>
      <link>https://hidadeng.github.io/blog/2022-11-02-27g-python-27g-a-share-market-prospectus/</link>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-11-02-27g-python-27g-a-share-market-prospectus/</guid>
      <description>使用Python对27G招股说明书进行文本分析</description>
      <content:encoded><![CDATA[<h2 id="一招股说明书">一、招股说明书</h2>
<p>从淘宝店花70元买的， 一共有27G， 百度网盘分享很不方便，且格式比较乱， 有txt、pdf等， 汇总整理至csv中。</p>
<p>使用csv格式，只要定义相应的指标函数，就可以很方便得到相应文本变量。</p>
<br>
<h2 id="二导入数据">二、导入数据</h2>
<p>截止2022.01.01，共有3630家公司，含公司名、股票代码、日期、标题、报告文本5个字段。</p>
<blockquote>
<p>链接：https://pan.baidu.com/s/1pLZHDy0oXwcTiCakFb-KiA 
提取码：e68l</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;招股说明书.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 招股记录数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>4630
</code></pre>
<br>
<h2 id="三定义指标函数">三、定义指标函数</h2>
<p>这里准备两个比较简单的指标，设计函数，可以理解为设计数据分析流水线某环节的输入和输出。</p>
<ul>
<li>报告长度</li>
<li>情感得分</li>
<li>其他指标&hellip;</li>
</ul>
<p>例如</p>
<h3 id="31-报告长度函数">3.1 报告长度函数</h3>
<ul>
<li>输入: 字符串</li>
<li>运算: 计算字符长度</li>
<li>输出: 数字</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">length</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;你好啊&#39;</span>
<span class="n">length</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>3
</code></pre>
<br>
<h3 id="32-某类词个数">3.2 某类词个数</h3>
<ul>
<li>输入: 字符串</li>
<li>运算: 使用某种词典(成熟的或自己开发)，计算文本中正面词个数、负面词个数、总词数</li>
<li>输出: 数字</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#使用已有词典或自定义词典</span>
<span class="n">diction</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;pos&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;独家&#39;</span><span class="p">,</span> <span class="s1">&#39;进步&#39;</span><span class="p">,</span> <span class="s1">&#39;发展&#39;</span><span class="p">,</span> <span class="s1">&#39;稳定&#39;</span><span class="p">,</span> <span class="s1">&#39;卓越&#39;</span><span class="p">,</span> <span class="s1">&#39;提高&#39;</span><span class="p">,</span> <span class="s1">&#39;成功&#39;</span><span class="p">],</span>
           <span class="s1">&#39;neg&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;丑闻&#39;</span><span class="p">,</span> <span class="s1">&#39;挪用&#39;</span><span class="p">,</span> <span class="s1">&#39;错过&#39;</span><span class="p">,</span> <span class="s1">&#39;不利&#39;</span><span class="p">,</span> <span class="s1">&#39;牺牲&#39;</span><span class="p">,</span> <span class="s1">&#39;干扰&#39;</span><span class="p">,</span> <span class="s1">&#39;过度&#39;</span><span class="p">]}</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;公司在市场竞争中，主动发挥技术优势，取得了长足的发展。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
             <span class="n">diction</span><span class="o">=</span><span class="n">diction</span><span class="p">,</span> 
             <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>{'pos_num': 1,
 'neg_num': 0,
 'stopword_num': 7,
 'word_num': 16,
 'sentence_num': 1}
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">diction</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;pos&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;独家&#39;</span><span class="p">,</span> <span class="s1">&#39;进步&#39;</span><span class="p">,</span> <span class="s1">&#39;发展&#39;</span><span class="p">,</span> <span class="s1">&#39;稳定&#39;</span><span class="p">,</span> <span class="s1">&#39;卓越&#39;</span><span class="p">,</span> <span class="s1">&#39;提高&#39;</span><span class="p">,</span> <span class="s1">&#39;成功&#39;</span><span class="p">],</span>
           <span class="s1">&#39;neg&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;丑闻&#39;</span><span class="p">,</span> <span class="s1">&#39;挪用&#39;</span><span class="p">,</span> <span class="s1">&#39;错过&#39;</span><span class="p">,</span> <span class="s1">&#39;不利&#39;</span><span class="p">,</span> <span class="s1">&#39;牺牲&#39;</span><span class="p">,</span> <span class="s1">&#39;干扰&#39;</span><span class="p">,</span> <span class="s1">&#39;过度&#39;</span><span class="p">]}</span>

<span class="k">def</span> <span class="nf">pos</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="c1">#使用已有词典或自定义词典</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
                       <span class="n">diction</span><span class="o">=</span><span class="n">diction</span><span class="p">,</span> 
                       <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">[</span><span class="s1">&#39;pos_num&#39;</span><span class="p">]</span>


<span class="k">def</span> <span class="nf">neg</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="c1">#使用已有词典或自定义词典</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
                       <span class="n">diction</span><span class="o">=</span><span class="n">diction</span><span class="p">,</span> 
                       <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">[</span><span class="s1">&#39;neg_num&#39;</span><span class="p">]</span>
    


<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;公司在市场竞争中，主动发挥技术优势，取得了长足的发展。&#39;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">pos</span><span class="p">(</span><span class="n">text</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">neg</span><span class="p">(</span><span class="n">text</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<pre><code>1
0
</code></pre>
<br>
<h2 id="四批量运算">四、批量运算</h2>
<p>选中dataframe中某一列，使用apply应用某种计算函数。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#确保text这列所有的数据均为字符串</span>
<span class="c1">#如果不是字符串，强制转化为字符串</span>
<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>

<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Len&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">length</span><span class="p">)</span>
<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Pos&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Neg&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">neg</span><span class="p">)</span>


<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Senti&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Pos&#39;</span><span class="p">]</span><span class="o">-</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Neg&#39;</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Pos&#39;</span><span class="p">]</span><span class="o">+</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Neg&#39;</span><span class="p">])</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<h2 id="五保存">五、保存</h2>
<p>最后保存为csv、或xlsx，具体根据自己需要进行选择。</p>
<ul>
<li>df.to_csv()</li>
<li>df.to_excel()</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#df.to_csv(&#39;result.csv&#39;, encoding=&#39;utf-8&#39;, index=False)</span>
<span class="n">df</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;result.xlsx&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>文献汇总 | 量化历史学与经济学研究</title>
      <link>https://hidadeng.github.io/blog/2022-09-19-quantitative-history-economic/</link>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-19-quantitative-history-economic/</guid>
      <description>通过历史数据挖掘构建有意思的新变量， 量化历史学 可能是个不错的借鉴思路。</description>
      <content:encoded><![CDATA[<p>我对经济史不太懂，标题起的可能不一定恰当，通过历史数据挖掘构建有意思的新变量， <strong>量化历史学</strong> 可能是个不错的借鉴思路。</p>
<p><br><br></p>
<h2 id="历史与经济">历史与经济</h2>
<blockquote>
<p>摘自 <a href="https://mp.weixin.qq.com/s/pnwlwQfO0EWgV8XNHzMuZg">陈志武教授统筹量化历史研究获得创纪录研究经费支持</a></p>
</blockquote>
<p>由<strong>陈志武</strong>教授统筹的跨领域研究项目获得大学教育资助委员会（教资会）辖下的研究资助局（研资局）6,732万港元（即逾850万美元） 的拨款资助，再加上香港大学的支持，此单一研究项目共获得7,480万港元 （即逾950万美元），资助金额创学院自2001年成立以来的新高。项目研究团队由来自五间教资会资助院校的成员及合作方组成，包括香港大学（港大）、香港中文大学 （中大）、香港科技大学 （科大）、岭南大学（岭大）及香港浸会大学（浸大），另外亦有来自牛津大学及中国人民大学的学者。项目成员包括：港大陈志武 （项目统筹人）、Jed O. Kaplan、梁其姿、林晨和马驰骋、白营（中大）、康文林（科大）、林展 （人民大学）、刘光临（岭大）以及马德斌 （牛津）。（按英文字母顺序排列）</p>
<p>题为 “<strong>量化历史研究：追寻现代中国发展的根源</strong>” 的研究项目获得研资局辖下第十轮 “<strong>卓越学科领域计划</strong>” 的资助，旨在透过在香港大学成立 “<strong>量化历史研究中心</strong>” ，作为协调和开展 “<strong>量化中国历史</strong>” 研究的核心学术机构，<strong>致力加深对中国历史发展的认识，挖掘历史新知识，促进历史教学，引导政策制定，改善商界运营模式</strong>。</p>
<p>学院金融学讲座教授及郑裕彤基金教授（金融学）陈志武指出：“我们很荣幸能够获得今年度卓越学科领域计划的拨款，这支持并肯定了我们为多层面中国历史研究所作出的努力。<strong>中国蕴藏丰富的历史档案和考古挖掘，其规模在世界乃独一无二， 内容几乎涵盖中国社会的所有方面：从政治到商业、法律和监管、犯罪和动乱、家庭和宗族、文化和习俗、宗教和社会组织，以及科学。近年，这些档案被数码化，为量化历史学家提供前所未有的机会去全面重新审视中国历史的各方面</strong>。作为中国的一部分，香港具有语言、文化和人力资源的优势去建立整体而全面的中国量化历史，我们深信成立量化历史研究中心，将推动香港成为全球量化历史研究的领导者。”</p>
<p><br><br></p>
<h2 id="更多资料">更多资料</h2>
<ul>
<li><a href="https://academic.oup.com/ej/article/130/631/2030/5819954"><strong>鉴古识今 – 从「科举考试」分析中国经济发展</strong></a><br>Ting Chen, James Kai-sing Kung, Chicheng Ma, Long Live <em>Keju</em>! The Persistent Effects of China’s Civil Examination System, <em><strong>The Economic Journal</strong></em>, Volume 130, Issue 631, October 2020, Pages 2030–2064, <a href="https://doi.org/10.1093/ej/ueaa043">https://doi.org/10.1093/ej/ueaa043</a></li>
</ul>
<br>
<ul>
<li>Zhiwu Chen, Chicheng Ma, Andrew J Sinclair, Banking on the Confucian Clan: Why China Developed Financial Markets so Late, <em><strong>The Economic Journal</strong></em>, Volume 132, Issue 644, May 2022, Pages 1378–1413, <a href="https://doi.org/10.1093/ej/ueab082">https://doi.org/10.1093/ej/ueab082</a></li>
</ul>
<br>
<ul>
<li><a href="https://www.bilibili.com/video/BV19L4y1A7Yn">从权贵到富贵： 中国传世明画产权变动与社会流动性研究，960-1911</a></li>
</ul>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV19L4y1A7Yn&page=1"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<ul>
<li><a href="https://www.bilibili.com/video/BV1Q34y1J7f5">陈志武 &ndash; 史前文明摇篮的长久影响 &mdash;你的故乡是兴是衰在四千多年前就确定？</a></li>
</ul>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV1Q34y1J7f5&page=1"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<ul>
<li><a href="https://mp.weixin.qq.com/s/DJei28L1iZ_7rtkD0dZAQQ">李中清|《大数据与中国社会经济史》</a></li>
</ul>
<br>
<ul>
<li><a href="https://mp.weixin.qq.com/s/wpfz4WbNg-wW5IYxbBWcEQ">陈春声 | 统计分析方法在史学研究中的应用</a></li>
</ul>
<br>
<ul>
<li><a href="https://mp.weixin.qq.com/s/NxcFvQm7msQq9DrRLpMydQ">地理信息系统（GIS）与中国历史研究</a></li>
</ul>
<br>
<ul>
<li><a href="https://mp.weixin.qq.com/s/HqLvrK626bXt984dGtnR_A">周欣平：大数据与社会科学和人文科学研究</a></li>
</ul>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>EmoBank | 中文维度情感词典</title>
      <link>https://hidadeng.github.io/blog/chinese_emobank/</link>
      <pubDate>Sat, 16 Jul 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/chinese_emobank/</guid>
      <description>中文情绪银行 (Chinese EmoBank)是由人工标注产生的 中文维度情感词典，含效价valence和唤醒度arousal两个维度。</description>
      <content:encoded><![CDATA[<h2 id="引言">引言</h2>
<p><strong>『中文情绪银行』</strong> (Chinese EmoBank)是由人工标注产生的 <strong>中文维度情感词典</strong>  ，含效价valence和唤醒度arousal两个维度。</p>
<ul>
<li>效价valence，可测量出文本中的积极/消极情感程度。</li>
<li>唤醒度arousal，可测量文本中平静/兴奋状态的程度。</li>
</ul>
<p>该词典包括</p>
<ul>
<li>CVAW(Chinese valence-arousal words)， 5512词</li>
<li>CVAP(Chinese valence-arousal phrases)， 含2998词组</li>
<li>语料CVAS(Chinese valence-arousal sentences) 含2582个单句</li>
<li>语料CVAT(Chinese valence-arousal texts）  2969个句子</li>
</ul>
<p>需要注意该词典是繁体中文词典，经过繁体转简体，已将CVAW嵌入到最新的cntext包。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install --upgrade cntext 
</code></pre></div><br>
<blockquote>
<p>本文图片来源于</p>
<p><a href="http://nlp.innobic.yzu.edu.tw/resources/ChineseEmoBank.html">http://nlp.innobic.yzu.edu.tw/resources/ChineseEmoBank.html</a></p>
</blockquote>
<br>
<h2 id="cvawchinese-valence-arousal-words">CVAW(Chinese valence-arousal words)</h2>
<p><img loading="lazy" src="img/cvaw.png" alt=""  />
</p>
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Valence_Mean</th>
<th style="text-align:left">Arousal_Mean</th>
<th style="text-align:left">Valence_SD</th>
<th style="text-align:left">Arousal_SD</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">乏味</td>
<td style="text-align:left">3.4</td>
<td style="text-align:left">3.0</td>
<td style="text-align:left">0.800</td>
<td style="text-align:left">1.414</td>
</tr>
<tr>
<td style="text-align:left">放鬆</td>
<td style="text-align:left">6.2</td>
<td style="text-align:left">2.0</td>
<td style="text-align:left">0.748</td>
<td style="text-align:left">0.894</td>
</tr>
<tr>
<td style="text-align:left">勝利</td>
<td style="text-align:left">7.8</td>
<td style="text-align:left">7.2</td>
<td style="text-align:left">0.748</td>
<td style="text-align:left">1.166</td>
</tr>
<tr>
<td style="text-align:left">痛苦</td>
<td style="text-align:left">2.4</td>
<td style="text-align:left">6.8</td>
<td style="text-align:left">0.490</td>
<td style="text-align:left">0.748</td>
</tr>
</tbody>
</table>
<br>
<h2 id="cvapchinese-valence-arousal-phrases-">CVAP(Chinese valence-arousal phrases )</h2>
<p><img loading="lazy" src="img/cvap.png" alt=""  />
</p>
<table>
<thead>
<tr>
<th style="text-align:left">Modifier Type</th>
<th style="text-align:left">Phrase</th>
<th style="text-align:left">Valence_Mean</th>
<th style="text-align:left">Arousal_Mean</th>
<th style="text-align:left">Valence_SD</th>
<th style="text-align:left">Arousal_SD</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">deg</td>
<td style="text-align:left">十分有趣</td>
<td style="text-align:left">8.222</td>
<td style="text-align:left">7.063</td>
<td style="text-align:left">0.533</td>
<td style="text-align:left">0.390</td>
</tr>
<tr>
<td style="text-align:left">mod</td>
<td style="text-align:left">應該開心</td>
<td style="text-align:left">5.986</td>
<td style="text-align:left">5.350</td>
<td style="text-align:left">0.242</td>
<td style="text-align:left">0.456</td>
</tr>
<tr>
<td style="text-align:left">neg</td>
<td style="text-align:left">不喜歡</td>
<td style="text-align:left">3.033</td>
<td style="text-align:left">5.788</td>
<td style="text-align:left">0.481</td>
<td style="text-align:left">0.605</td>
</tr>
<tr>
<td style="text-align:left">neg_deg</td>
<td style="text-align:left">沒有太難過</td>
<td style="text-align:left">4.478</td>
<td style="text-align:left">4.675</td>
<td style="text-align:left">0.413</td>
<td style="text-align:left">0.538</td>
</tr>
</tbody>
</table>
<br>
<h2 id="cvaschinese-valence-arousal-sentences">CVAS(Chinese valence-arousal sentences)</h2>
<p><img loading="lazy" src="img/cvas.png" alt=""  />
</p>
<table>
<thead>
<tr>
<th style="text-align:left">Text</th>
<th style="text-align:left">Valence_Mean</th>
<th style="text-align:left">Arousal_Mean</th>
<th style="text-align:left">Valence_SD</th>
<th style="text-align:left">Arousal_SD</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">這是我觀賞過的最令人驚歎的演出。</td>
<td style="text-align:left">7.000</td>
<td style="text-align:left">7.750</td>
<td style="text-align:left">0.000</td>
<td style="text-align:left">0.433</td>
</tr>
<tr>
<td style="text-align:left">簡直是人生惡夢的開端。</td>
<td style="text-align:left">2.600</td>
<td style="text-align:left">6.750</td>
<td style="text-align:left">0.490</td>
<td style="text-align:left">0.829</td>
</tr>
<tr>
<td style="text-align:left">從小我經常覺得現實很無聊。</td>
<td style="text-align:left">3.667</td>
<td style="text-align:left">4.333</td>
<td style="text-align:left">0.471</td>
<td style="text-align:left">0.471</td>
</tr>
<tr>
<td style="text-align:left">過去他們很輕鬆地賺錢。</td>
<td style="text-align:left">5.667</td>
<td style="text-align:left">4.000</td>
<td style="text-align:left">1.247</td>
<td style="text-align:left">0.816</td>
</tr>
</tbody>
</table>
<br>
<h2 id="cvatchinese-valence-arousal-texts">CVAT(Chinese valence-arousal texts)</h2>
<p><img loading="lazy" src="img/cvat.png" alt=""  />
</p>
<table>
<thead>
<tr>
<th style="text-align:left">Text</th>
<th style="text-align:left">Valence_Mean</th>
<th style="text-align:left">Arousal_Mean</th>
<th style="text-align:left">Valence_SD</th>
<th style="text-align:left">Arousal_SD</th>
<th style="text-align:left">Category</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">很多車主抱怨新車怠速抖動嚴重&mdash;-冷車時更嚴重。</td>
<td style="text-align:left">3.250</td>
<td style="text-align:left">5.667</td>
<td style="text-align:left">1.090</td>
<td style="text-align:left">1.054</td>
<td style="text-align:left">Car</td>
</tr>
<tr>
<td style="text-align:left">房間裏黴味，煙味撲鼻，沒有窗戶通風，骯髒的地毯上的斑斑點點的污蹟，令人觸目驚心。</td>
<td style="text-align:left">1.889</td>
<td style="text-align:left">6.875</td>
<td style="text-align:left">0.737</td>
<td style="text-align:left">0.927</td>
<td style="text-align:left">Hotel</td>
</tr>
<tr>
<td style="text-align:left">CPU顯卡也完全夠用，接口也非常齊全，總體來說很滿意！</td>
<td style="text-align:left">7.143</td>
<td style="text-align:left">5.000</td>
<td style="text-align:left">0.350</td>
<td style="text-align:left">0.816</td>
<td style="text-align:left">Laptop</td>
</tr>
<tr>
<td style="text-align:left">飛安帶來更多保障，也提供旅客更安心的服務品質。</td>
<td style="text-align:left">7.000</td>
<td style="text-align:left">4.222</td>
<td style="text-align:left">0.535</td>
<td style="text-align:left">1.133</td>
<td style="text-align:left">News</td>
</tr>
</tbody>
</table>
<br>
<h2 id="文献">文献</h2>
<p>如果用到Chinese EmoBank词典，请注明出处。</p>
<p>Lung-Hao Lee, Jian-Hong Li and Liang-Chih Yu, &ldquo;<a href="https://dl.acm.org/doi/pdf/10.1145/3489141">Chinese EmoBank: Building Valence-Arousal Resources for Dimensional Sentiment Analysis,</a>&rdquo; <em>ACM Trans. Asian and Low-Resource Language Information Processing</em>, vol. 21, no. 4, article 65, 2022.</p>
<p>Liang-Chih Yu, Lung-Hao Lee, Shuai Hao, Jin Wang, Yunchao He, Jun Hu, K. Robert Lai, and Xuejie Zhang. 2016. &ldquo;<a href="http://www.aclweb.org/anthology/N16-1066.pdf">Building Chinese affective resources in valence-arousal dimensions.</a> In <em>Proceedings of NAACL/HLT-16</em>, pages 540-545.</p>
<br>
<h2 id="代码">代码</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;ChineseEmoBank.pkl&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;Referer-1&#39;: &#39;Lee, Lung-Hao, Jian-Hong Li, and Liang-Chih Yu. &#34;Chinese EmoBank: Building Valence-Arousal Resources for Dimensional Sentiment Analysis.&#34; Transactions on Asian and Low-Resource Language Information Processing 21, no. 4 (2022): 1-18.&#39;,
 
 &#39;Referer-2&#39;: &#39;Liang-Chih Yu, Lung-Hao Lee, Shuai Hao, Jin Wang, Yunchao He, Jun Hu, K. Robert Lai, and Xuejie Zhang. 2016. &#34;Building Chinese affective resources in valence-arousal dimensions. In Proceedings of NAACL/HLT-16, pages 540-545.&#39;,
 
 &#39;Desc&#39;: &#39;Chinese Sentiment Dictionary, includes 「valence」「arousal」. In cntext, we only take single word into account, ignore phrase.&#39;,
 
 &#39;ChineseEmoBank&#39;:       word  valence  arousal
 0     不可思议      5.4      7.2
 1       不平      3.6      5.8
 2       不甘      3.2      6.4
 3       不安      3.8      5.4
 4       不利      3.6      5.6
 ...    ...      ...      ...
 5505    黏闷      2.8      5.6
 5506    黏腻      2.7      5.8
 5507    艳丽      5.8      4.5
 5508    苗条      6.7      3.8
 5509    修长      7.0      4.5
</code></pre></div><br>
<p>ChineseEmoBank的CVAW词典(Chinese valence-arousal words)原有 5512词，经过繁体转简体处理，得到5510个词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">diction_df</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;ChineseEmoBank.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;ChineseEmoBank&#39;</span><span class="p">]</span>
<span class="n">diction_df</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<p>测量一段文本的valence和arousal，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;很多车主抱怨新车怠速抖动严重---冷车时更严重。&#39;</span>

<span class="n">help</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_weight</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Help on function sentiment_by_weight in module cntext.stats:

sentiment_by_weight(text, diction, params, lang=&#39;english&#39;)
    calculate the occurrences of each sentiment category words in text;
    the complex influence of intensity adverbs and negative words on emotion is not considered.
    :param text:  text sring
    :param diction:  sentiment dictionary dataframe with weight.；
    :param params:  set sentiment category weight, such as params=[&#39;valence&#39;, &#39;arousal&#39;]
    :param lang: &#34;chinese&#34; or &#34;english&#34;; default lang=&#34;english&#34;
    
    :return:
</code></pre></div><br>
<p>计算文本text中chinese_emobank词两维度的汇总得分，得到valence、arousal、word_num</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;很多车主抱怨新车怠速抖动严重---冷车时更严重。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_weight</span><span class="p">(</span><span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">,</span> 
                       <span class="n">diction</span> <span class="o">=</span> <span class="n">diction_df</span><span class="p">,</span>
                       <span class="n">params</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;valence&#39;</span><span class="p">,</span> <span class="s1">&#39;arousal&#39;</span><span class="p">],</span>
                       <span class="n">lang</span> <span class="o">=</span> <span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;valence&#39;: 14.8, 
&#39;arousal&#39;: 24.8, 
&#39;word_num&#39;: 13}
</code></pre></div><ul>
<li>valence是句子中各个chinese_emobank词valence得分的加总。</li>
<li>arousal是句子中各个chinese_emobank词arousal得分的加总。</li>
<li>word_num是句子中的词语数(含标点符号)，短文本的情况下，word_num会不太准确，长文本情况下无限接近真实词语数。</li>
</ul>
<p>需要注意，文本越长，valence和arousal指标应该会越大。使用这两个指标时，需要结合word_num进行均值处理，即</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Valence = valence/word_num

Arousal = arousal/word_num
</code></pre></div><p>这里未做均值处理，尽量保留文本的原始信息。</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>chinese-converter | 中文繁简互换Python库</title>
      <link>https://hidadeng.github.io/blog/chinese_converter/</link>
      <pubDate>Mon, 11 Jul 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/chinese_converter/</guid>
      <description>中文繁简互换</description>
      <content:encoded><![CDATA[<p>网上有一些繁体中文资源不能直接利用，通过chinese-convertor库，我们可以进行中文繁简互换。</p>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install chinese-converter
</code></pre></div><br>
<h2 id="快速上手">快速上手</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">chinese_converter</span>

<span class="n">chinese_converter</span><span class="o">.</span><span class="n">to_traditional</span><span class="p">(</span><span class="s2">&#34;中国&#34;</span><span class="p">)</span>

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">中國
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">chinese_converter</span><span class="o">.</span><span class="n">to_simplified</span><span class="p">(</span><span class="s2">&#34;中國&#34;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">中国
</code></pre></div><br>
<br>
<h2 id="长期征稿">长期征稿</h2>
<div style="text-align: center;">
<figure >
    <a href="https://hidadeng.github.io/blog/call_for_paper/">
        <img src="/images/blog/call_for_paper.png" width="100%" />
    </a>
    <figcaption><small><i>点击了解投稿</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="招募小伙伴">招募小伙伴</h2>
<div style="text-align: center;">
<figure >
    <a href="https://hidadeng.github.io/blog/we_need_you/">
        <img src="/images/blog/we_need_you.png" width="100%" />
    </a>
    <figcaption><small><i>点击加入我们</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>2022暑期工作坊 | Python实证指标构建与文本分析</title>
      <link>https://hidadeng.github.io/blog/2022_summer_workshop/</link>
      <pubDate>Sun, 10 Jul 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/2022_summer_workshop/</guid>
      <description>2022Python实证指标构建与文本分析</description>
      <content:encoded><![CDATA[<h2 id="课程介绍">课程介绍</h2>
<p>在科学研究中，数据的获取及分析是最重要的也是最棘手的两个环节！</p>
<p>在前大数据时代，一般使用实验法、调查问卷、访谈或者二手数据等方式，将数据整理为结构化的表格数据，之后再使用各种计量分析方法，对这些表格数据进行分析。但大数据时代，网络数据成为各方学者亟待挖掘的潜在宝藏，大量商业信息、社会信息以文本等非结构化、异构型数据格式存储于海量的网页中。那么对于经管为代表的人文社科类专业科研工作者而言，通过Python可以帮助学者解决使用Web数据进行科研面临的两个问题：</p>
<ul>
<li>网络爬虫技术 解决如何从网络世界中高效地采集数据？</li>
<li>文本分析技术 解决如何从杂乱的文本数据中抽取实证指标(情绪、不确定、态度、认知等变量)？</li>
</ul>
<br>
<h3 id="授课方式">授课方式</h3>
<ul>
<li>线上直播（电脑端与手机端皆可播放，回放十天）。</li>
<li>开课前会建立讲师微信群并发布最新学习资料，群聊长期有效，助教全程跟随。</li>
<li>第一时段-在线讲座 2022.8.16~17  上午&amp;下午</li>
<li>第二时段-论文指导 2022.8.24 下午
<ul>
<li>Python实证指标构建与文本分析课程结束一周后</li>
<li>半天时间</li>
<li>学员利用一周的时间用Python收集、整理数据、文本分析，撰写一个初步的论文与老师交流，老师一对一地指导如何修改文本数据挖掘的实证论文。</li>
</ul>
</li>
</ul>
<h3 id="费用与优惠">费用与优惠</h3>
<ul>
<li>报名总费用2500元（包含在线讲座费用2000元、论文指导费用500元、课后长期答疑以及全部讲义以及代码等资料）</li>
<li>个人报名优惠：报名两科9折；三科8折；四科及以上7.5折；老朋友9折；凭本人学生证报名可再减200元/人。</li>
<li>团队报名优惠：三人成团及以上9折；五人成团及以上8折。</li>
<li>7月10日之前报名可享每人优惠100元。</li>
<li>各项优惠叠加不超过总价的7.5折。</li>
</ul>
<h3 id="报名方式">报名方式</h3>
<ul>
<li>从即日起可加老师微信咨询与报名。</li>
<li>17816181460（同微信）（汪老师）</li>
</ul>
<p><img loading="lazy" src="img/wechat.png" alt=""  />
</p>
<h3 id="缴费方式">缴费方式</h3>
<ul>
<li>扫码付款</li>
<li>添加汪老师微信获取,支持公务卡支付</li>
</ul>
<h3 id="对公转账">对公转账</h3>
<ul>
<li>单位：杭州国商智库信息技术服务有限公司</li>
<li>开户银行：中国银行杭州大学城支行</li>
<li>银行账户：6232636200100260588</li>
</ul>
<p><br><br></p>
<h2 id="内容安排">内容安排</h2>
<h3 id="一python语法入门">一、Python语法入门</h3>
<ul>
<li>Python跟英语一样是一门语言</li>
<li>数据类型之字符串</li>
<li>数据类型之列表元组集合</li>
<li>数据类型之字典</li>
<li>数据类型之布尔值、None</li>
<li>逻辑语句(if&amp;for&amp;tryexcept)</li>
<li>列表推导式</li>
<li>理解函数</li>
<li>常用的内置函数</li>
<li>os路径库</li>
<li>内置库csv文件库</li>
<li>常见错误汇总</li>
</ul>
<br>
<h3 id="二数据采集">二、数据采集</h3>
<ul>
<li>网络爬虫原理</li>
<li>寻找网址规律</li>
<li>获取网页-requests库</li>
<li>pyquery库解析html网页</li>
<li>案例 1：豆瓣小说</li>
<li>json库解析json网页</li>
<li>案例 2：豆瓣电影</li>
<li>案例 3：微博</li>
<li>案例 4： 批量下载文档、多媒体文件</li>
<li>案例 5：上市公司定期报告pdf批量下载</li>
<li>区分动态网站与静态网站</li>
</ul>
<br>
<h3 id="三文本分析入门">三、文本分析入门</h3>
<ul>
<li>文本分析在经管领域中的应用</li>
<li>读取文件中的数据(txt、pdf、docx、xlsx、csv)</li>
<li>数据清洗re库-从文本中抽取姓名、年龄、电话、数字等各种信息</li>
<li>案例 6：如何将多个文件中的数据整理到一个excel中</li>
<li>中文jieba分词</li>
<li>案例 7：词频统计、制作词云图</li>
<li>案例 8：共现法扩展情感词典</li>
<li>案例 9：词向量word2vec扩展情感词典</li>
<li>案例 10：中文情感分析(无权重词典法)</li>
<li>数据分析pandas库快速入门</li>
<li>案例 11：使用pandas对excel中的文本进行情感分析</li>
<li>案例 12: 计算地图中两点(经纬度)距离及方位角</li>
</ul>
<br>
<h3 id="四机器学习">四、机器学习</h3>
<ul>
<li>了解机器学习</li>
<li>理解特征工程</li>
<li>文本特征工程-将文本转化为机器可处理的数字向量</li>
<li>认识词袋法、one-hot、Tf-Idf、word2vec</li>
<li>案例 13：使用tf-idf进行情感分析（有权重词典法）</li>
<li>案例 14： 使用标注工具对文本数据进行标注</li>
<li>案例 15：在线评论文本分类</li>
<li>文本相似性计算</li>
<li>案例 16：使用文本相似性识别变化(政策连续性)</li>
<li>案例 17：Kmeans聚类算法</li>
<li>案例 18：LDA话题模型</li>
<li>案例 19: 识别图片中的文本</li>
<li>python爬虫、文本分析、机器学习等技术在论文中的应用赏析</li>
</ul>
<br>
<h3 id="五词嵌入与认知">五、词嵌入与认知</h3>
<ul>
<li>词嵌入</li>
<li>豆瓣影评-gensim导入词向量模型</li>
<li>认知偏见(刻板印象)</li>
<li>总结: 文本分析在经管领域中的应用概述</li>
</ul>
<p><br><br></p>
<h2 id="文本分析应用案例">文本分析应用案例</h2>
<p>参照两篇论文的摘要，可以通过场景化等的方式帮助我们迅速理解上面两个问题。摘要部分的加粗内容是论文用到的分析技术，在我们的课程中均有与之对应的知识点和代码。</p>
<p><strong>王伟,陈伟,祝效国,王洪伟.众筹融资成功率与语言风格的说服性——基于Kickstarter的实证研究[J].管理世界,2016(05):81-98.</strong></p>
<blockquote>
<p>摘要：众筹融资效果决定着众筹平台的兴衰。众筹行为很大程度上是由投资者的主观因素决定的，而影响主观判断的一个重要因素就是语言的说服性。而这又是一种典型的用 户产生内容（UGC），项目发起者可以采用任意类型的语言风格对项目进行描述。不同的语 言风格会改变投资者对项目前景的感知，进而影响他们的投资意愿。首先，依据 Aristotle 修 辞三元组以及 Hovland 说服模型，采用扎根理论，将众筹项目的语言说服风格分为 5 类：诉诸可信、诉诸情感、诉诸逻辑、诉诸回报和诉诸夸张。</p>
<p>然后，借助文本挖掘方法，构建说服风格语料库，并对项目摘要进行分类。</p>
<p>最后，建立语言说服风格对项目筹资影响的计量模型，并对 Kickstarter 平台上的 128345 个项目进行实证分析。总体来说，由于项目性质的差异，不同 的项目类别对应于不同的最佳说服风格。</p>
</blockquote>
<br>
<p><a href="https://hidadeng.github.io/blog/text_mining_in_2021_management_world/">胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.</a></p>
<blockquote>
<p>在可持续发展战略导向下，秉持长远理念是企业抵御外部环境威胁和拥有可持续经营能力的基 石。然而，作为企业掌舵人的管理者并非都具有长远的目光。本文基于高层梯队理论和社会心理学中的时间 导向理论，提出了管理者内在的短视主义特质与企业资本支出和研发支出的关系，并采用文本分析和机器学习技术构建出管理者短视主义指标从而对其进行实证检验。研究结果发现，年报 MD&amp;A 中披露的“短期视域” 语言 能够反映管理者内在的短视主义特质，管理者短视会导致企业减少资本支出和研发支出。当公司治理水平、监督型机构投资者的持股比例以及分析师关注度越高时，管理者短视主义对这些长期投资的负向影响越易受到抑制。最终，管理者短视主义导致的研发支出减少和资本投资效率降低会损害企业的未来绩效。本文拓宽了管理者短视主义的行为后果分析，对企业高层次管理人才的聘任以及企业和政府的监管具有重要的实践启示。同时，本文将文本分析和机器学习方法引入管理者短视主义的研究，为未来该领域的研究提供了参考和借鉴。</p>
</blockquote>
<br>
<p><strong>Wang, Quan, Beibei Li, and Param Vir Singh. &ldquo;Copycats vs. original mobile apps: A machine learning copycat-detection method and empirical analysis.&rdquo; Information Systems Research 29, no. 2 (2018): 273-291.</strong></p>
<blockquote>
<p>摘要：尽管移动应用程序市场的增长为移动应用程序开发人员创新提供了巨大的市场机会和经济诱因，但它也不可避免地刺激了模仿者开发盗版软件。原始应用的从业人员和开发人员声称，模仿者窃取了原始应用的想法和潜在需求，并呼吁应用平台对此类模仿者采取行动。令人惊讶的是，很少有严格的研究来分析模仿者是否以及如何影响原始应用的需求。</p>
<p>进行此类研究的主要威慑因素是缺乏一种客观的方法来识别应用程序是模仿者还是原创者。通过结合自然语言处理，潜在语义分析，基于网络的聚类和图像分析等机器学习技术，我们提出了一种将应用识别为原始或模仿者并检测两种模仿者的方法：欺骗性和非欺骗性。</p>
<p>根据检测结果，我们进行了经济计量分析，以确定五年间在iOS App Store中发布的5,141个开发人员的10,100个动作游戏应用程序样本中，模仿应用程序对原始应用程序需求的影响。我们的结果表明，特定模仿者对原始应用需求的影响取决于模仿者的质量和欺骗程度。高质量的非欺骗性复制品会对原件产生负面影响。相比之下，低质量，欺骗性的模仿者正面影响了对原件的需求。</p>
<p>结果表明，从总体上讲，模仿者对原始移动应用程序需求的影响在统计上是微不足道的。我们的研究通过提供一种识别模仿者的方法，并提供模仿者对原始应用需求的影响的证据，为越来越多的移动应用消费文献做出了贡献。</p>
</blockquote>
<br>
<p><strong>Markowitz, D. M., &amp; Shulman, H. C. (2021). The predictive utility of word familiarity for online engagements and funding. Proceedings of the National Academy of Sciences, 118(18).</strong></p>
<blockquote>
<p>处理流畅性等元认知框架通常表明人们对简单和通用的语言的反应比复杂和技术性语言更有利。与复杂的信息相比，人们更容易处理简单和非技术性的信息，因此会更多地与目标进行互动。在涵盖 12 个现场样本（总 n = 1,064,533）的两项研究中，我们通过展示人们在付出时间和注意力时更多地使用非技术语言（例如，简单的在线语言往往会获得更多社交信息）来建立并复制这种越简单越好的现象订婚）。然而，人们在捐款时会对复杂的语言做出反应（例如，慈善捐赠活动和赠款摘要中的复杂语言往往会收到更多的钱）。这一证据表明，人们根据时间或金钱目标以不同的方式使用复杂语言的启发式方法。这些结果强调语言是社会和心理过程的镜头，以及大规模测量文本模式的计算方法。</p>
</blockquote>
<br>
<h2 id="文献汇总">文献汇总</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J/OL].南开管理评论:1-27[2022-04-08].http://kns.cnki.net/kcms/detail/12.1288.F.20210905.1337.002.html
[2]沈艳,陈赟,黄卓．文本大数据分析在经济学和金融学中的应用：一个文献综述[EB/OL].http://www.ccer.pku.edu.cn/yjcg/tlg/242968.htm,2018-11-19
[3]王伟,陈伟,祝效国,王洪伟. 众筹融资成功率与语言风格的说服性-基于Kickstarter的实证研究.*管理世界*.2016;5:81-98.
[4]胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.
[5]Kai Li, Feng Mai, Rui Shen, Xinyan Yan, Measuring Corporate Culture Using Machine Learning, *The Review of Financial Studies*,2020
[6]Kenneth Benoit. July 16, 2019. “Text as Data: An Overview.” Forthcoming in Cuirini, Luigi and Robert Franzese, eds. Handbook of Research Methods in Political Science and International Relations. Thousand Oaks: Sage.
[7]Loughran T, McDonald B. Textual analysis in accounting and finance: A survey[J]. *Journal of Accounting Research*, 2016, 54(4): 1187-1230. Author links open overlay panelComputational socioeconomics
[8]Berger, Jonah, Ashlee Humphreys, Stephan Ludwig, Wendy W. Moe, Oded Netzer, and David A. Schweidel. &#34;Uniting the tribes: Using text for marketing insight.&#34; *Journal of Marketing* 84, no. 1 (2020): 1-25.
[9]Banks, George C., Haley M. Woznyj, Ryan S. Wesslen, and Roxanne L. Ross. &#34;A review of best practice recommendations for text analysis in R (and a user-friendly app).&#34; *Journal of Business and Psychology* 33, no. 4 (2018): 445-459.
[10]Cohen, Lauren, Christopher Malloy, and Quoc Nguyen. &#34;Lazy prices.&#34; *The Journal of Finance* 75, no. 3 (2020): 1371-1415.
[11]孟庆斌, 杨俊华, 鲁冰. 管理层讨论与分析披露的信息含量与股价崩盘风险——基于文本向量化方法的研究[J]. *中国工业经济*, 2017 (12): 132-150.
[12]Wang, Quan, Beibei Li, and Param Vir Singh. &#34;Copycats vs. Original Mobile Apps: A Machine Learning Copycat-Detection Method and Empirical Analysis.&#34; *Information Systems Research* 29.2 (2018): 273-291.
[13]Hoberg, Gerard, and Gordon Phillips. 2016, Text-based network industries and endogenous product differentiation,?*Journal of Political Economy* 124, 1423-1465
[14]Loughran, Tim, and Bill McDonald. &#34;When is a liability not a liability? Textual analysis, dictionaries, and 10‐Ks.&#34; *The Journal of Finance* 66, no. 1 (2011): 35-65.
[15]Fairclough, Norman. 2003. Analysing discourse: Textual analysis for social research (Psychology Press)
[16]Grimmer, Justin, and Brandon M Stewart. 2013, Text as data: The promise and pitfalls of automatic content analysis methods for political texts, *Political analysis*21, 267-297.
[17]Markowitz, D. M., &amp; Shulman, H. C. (2021). The predictive utility of word familiarity for online engagements and funding. Proceedings of the National Academy of Sciences, 118(18).
[18]Packard, Grant, and Jonah Berger. “How concrete language shapes customer satisfaction.” Journal of Consumer Research 47, no. 5 (2021): 787-806.
[19]Chen, H., Yang, C., Zhang, X., Liu, Z., Sun, M. and Jin, J., 2021. From Symbols to Embeddings: A Tale of Two Representations in Computational Social Science. Journal of Social Computing, 2(2), pp.103-156.
</code></pre></div><br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Asent库 | 英文文本数据情感分析</title>
      <link>https://hidadeng.github.io/blog/asent_sentiment_analysis/</link>
      <pubDate>Sun, 10 Jul 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/asent_sentiment_analysis/</guid>
      <description>使用Python做英文情感分析，考虑否定词、程度副词对情感词的修饰作用。</description>
      <content:encoded><![CDATA[<p>Asent 是一个新的Python情感分析库， 依据情感词典，按照一定的规则，可用于评判词语、句子、文档的情感信息(正、负)。</p>
<p>目前与情感有关的规则有</p>
<ul>
<li>否定（即“不高兴”）</li>
<li>加强词（“非常高兴”）</li>
<li>对比共轭（即“但是”）</li>
<li>其他强调标记，如感叹号、大小写和问号。</li>
</ul>
<p>Asent目前仅支持<code>英语、丹麦、挪威、瑞典4种语言</code>。</p>
<br>
<h2 id="安装配置">安装配置</h2>
<p>学习课程之前，需要先下载并配置spacy模型， <a href="https://github.com/explosion/spacy-models/releases">https://github.com/explosion/spacy-models/releases</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pip3</span> <span class="n">install</span> <span class="n">spacy</span><span class="o">==</span><span class="mf">3.2.0</span>
<span class="n">pip3</span> <span class="n">install</span> <span class="n">asent</span><span class="o">==</span><span class="mf">0.4.2</span>

<span class="c1">#下载en_core_web_lg-3.3.0-py3-none-any.whl到桌面</span>
<span class="c1">#下载链接: https://pan.baidu.com/s/13hFWFjy9uRxzC-9lqrp7SQ 提取码: em8l </span>

<span class="c1">#然后使用如下安装命令</span>
<span class="n">pip3</span> <span class="n">install</span> <span class="n">Desktop</span><span class="o">/</span><span class="n">en_core_web_lg</span><span class="o">-</span><span class="mf">3.2.0</span><span class="o">-</span><span class="n">py3</span><span class="o">-</span><span class="n">none</span><span class="o">-</span><span class="nb">any</span><span class="o">.</span><span class="n">whl</span>
</code></pre></div><br>
<h2 id="快速上手">快速上手</h2>
<p>以下将带您逐步了解情绪是如何计算的。</p>
<p>首先，我们需要一个 spaCy 管道，并且我们需要向其中添加 asent 管道。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">asent</span>
<span class="kn">import</span> <span class="nn">spacy</span>

<span class="c1"># load spacy pipeline</span>
<span class="n">nlp</span> <span class="o">=</span> <span class="n">spacy</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s2">&#34;en_core_web_lg&#34;</span><span class="p">)</span>

<span class="c1"># add the rule-based sentiment model</span>
<span class="n">nlp</span><span class="o">.</span><span class="n">add_pipe</span><span class="p">(</span><span class="s2">&#34;asent_en_v1&#34;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>&lt;asent.component.Asent at 0x7fd6b3243130&gt;
</code></pre>
<br>
<h2 id="效价和极性">效价和极性</h2>
<p>如下所示， token的效价信息来自于人工标注的词典。例如<code>I am not very happy</code>中词语<code>happy</code>的人类情感评分是2.7。</p>
<p><img loading="lazy" src="img/token_polarity.png" alt=""  />
</p>
<p>首先我们查看每个词语对应的效价。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">doc</span> <span class="o">=</span> <span class="n">nlp</span><span class="p">(</span><span class="s2">&#34;I am not very happy.&#34;</span><span class="p">)</span>

<span class="k">for</span> <span class="n">token</span> <span class="ow">in</span> <span class="n">doc</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">token</span><span class="p">,</span> <span class="s2">&#34;</span><span class="se">\t</span><span class="s2">&#34;</span><span class="p">,</span> <span class="n">token</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">valence</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>I 	 0.0
am 	 0.0
not 	 0.0
very 	 0.0
happy 	 2.7
. 	 0.0
</code></pre>
<p>在该语境中， <code>happy</code>前面有否定词not修饰，所以情感极性方面应该被看做消极的。一般否定词和副词可以将形容词的情感进行反转和放大(缩小)。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">token</span> <span class="ow">in</span> <span class="n">doc</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">token</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">polarity</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>polarity=0.0 token=I span=I
polarity=0.0 token=am span=am
polarity=0.0 token=not span=not
polarity=0.0 token=very span=very
polarity=-2.215 token=happy span=not very happy
polarity=0.0 token=. span=.
</code></pre>
<p>注意到， 词语在<code>happy</code>拥有-2.215的极性分，该分是由<code>not very happy</code>确定的。</p>
<br>
<h2 id="可视化">可视化</h2>
<p>asent拥有多种情感极性可视化的方法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">asent</span><span class="o">.</span><span class="n">visualize</span><span class="p">(</span><span class="n">doc</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="s2">&#34;prediction&#34;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/fig1.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">asent</span><span class="o">.</span><span class="n">visualize</span><span class="p">(</span><span class="n">doc</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="s2">&#34;analysis&#34;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/fig2.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">sentence</span> <span class="ow">in</span> <span class="n">doc</span><span class="o">.</span><span class="n">sents</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sentence</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">polarity</span><span class="p">)</span>
</code></pre></div><pre><code>neg=0.391 neu=0.609 pos=0.0 compound=-0.4964 span=I am not very happy.
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">doc</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">polarity</span>
</code></pre></div><pre><code>DocPolarityOutput(neg=0.391, neu=0.609, pos=0.0, compound=-0.4964)
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">doc2</span> <span class="o">=</span> <span class="n">nlp</span><span class="p">(</span><span class="s2">&#34;I am not very happy.I am very very happy.It is awesome!!&#34;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;doc2情感极性信息: &#39;</span><span class="p">,</span> <span class="n">doc2</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">polarity</span><span class="p">)</span>
<span class="nb">print</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;doc2情感得分:&#39;</span><span class="p">,</span> <span class="n">doc2</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">polarity</span><span class="o">.</span><span class="n">compound</span><span class="p">)</span>
</code></pre></div><pre><code>doc2情感极性信息:  neg=0.13 neu=0.536 pos=0.333 compound=0.2794

doc2情感得分: 0.279353567721562
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#每个句子的情感极性信息</span>
<span class="k">for</span> <span class="n">sentence</span> <span class="ow">in</span> <span class="n">doc2</span><span class="o">.</span><span class="n">sents</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sentence</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">polarity</span><span class="p">)</span>
</code></pre></div><pre><code>neg=0.391 neu=0.609 pos=0.0 compound=-0.4964 span=I am not very happy.
neg=0.0 neu=0.539 pos=0.461 compound=0.6453 span=I am very very happy.
neg=0.0 neu=0.461 pos=0.539 compound=0.6892 span=It is awesome!!
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#每个句子的情感得分</span>
<span class="k">for</span> <span class="n">sentence</span> <span class="ow">in</span> <span class="n">doc2</span><span class="o">.</span><span class="n">sents</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sentence</span><span class="o">.</span><span class="n">_</span><span class="o">.</span><span class="n">polarity</span><span class="o">.</span><span class="n">compound</span><span class="p">)</span>
</code></pre></div><pre><code>-0.4964238981617178
0.6452764659402158
0.689208135386188
</code></pre>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>视频分享| Python数据挖掘与金融科技 </title>
      <link>https://hidadeng.github.io/blog/fintech_quant_with_python/</link>
      <pubDate>Fri, 24 Jun 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/fintech_quant_with_python/</guid>
      <description>应云南大学管理学院邀请，参加第一届中国研究生金融科技创新大赛讲座。做Python文本数据挖掘在金融科技中的应用。</description>
      <content:encoded><![CDATA[<blockquote>
<p>第一届中国研究生金融科技创新大赛讲座</p>
<p>2022/06/24 13:43</p>
<p>录制文件：https://dwz.win/ayS8</p>
</blockquote>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV1xW4y1r7L1&page=1"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h1 id="另类数据与投资算法">另类数据与投资算法</h1>
<blockquote>
<p>信息通信技术的创新、互联网和移动终端的普及，产生了了大量的区别于 传统财务数据的新型数据，这类非财务数据具有数据量大、实时性高、颗粒度细及“原始”等特点，影响着资本市场，在投资领域的应用受到了越来越多的关注。投资者可以用<strong>较低的成本</strong>获取大量的数据和信息，对这类信息进行筛选、分析，辅助制定投资决策。</p>
<p>能否选择一种尚未在资本市场广泛使用的另类数据，利用合适的算法把该数据应用于 A 股市场投资当中，并寻找合适的算法解决方案，研究其在投资中的价值，并构建出可行性的投资方案？</p>
</blockquote>
<br>
<p><img loading="lazy" src="img/unstructrueddata.png" alt=""  />
</p>
<br>
<br>
<h2 id="另类数据alternative-data">另类数据alternative data</h2>
<p>大数据思维， 快、多、大、异。</p>
<p>另类大数据产生的更多更快，与传统指标相关性小，能提供更多的信息增益。</p>
<p>另类数据alternative data主要包含以下三种:</p>
<table>
<thead>
<tr>
<th>另类数据</th>
<th>包括</th>
<th>结构化</th>
<th>类型</th>
<th>python技术</th>
</tr>
</thead>
<tbody>
<tr>
<td>个人产生的数据</td>
<td>社交媒体帖子、产品评论、互联网搜索趋势等</td>
<td>非结构</td>
<td>网页</td>
<td>爬虫</td>
</tr>
<tr>
<td>由业务流程产生的数据</td>
<td>公司工商数据、专利数据、尾气数据、招聘数据、商业交易、事件数据、招标数据、阿里巴巴、京东、美团等电商平台数据、app排行榜、直播和搜索指数数据等</td>
<td>结构化</td>
<td>数字</td>
<td>爬虫</td>
</tr>
<tr>
<td>传感器产生的数据</td>
<td>卫星图像数据、行人和车辆流量、船舶位置等，地图数据。</td>
<td>非结构</td>
<td>图像</td>
<td>图片分析</td>
</tr>
<tr>
<td>第三方数据</td>
<td>分析师研报情感数据、一致性预期。</td>
<td>结构</td>
<td>数字</td>
<td>付费</td>
</tr>
</tbody>
</table>
<p>国内提供另类数据的开源网站有:</p>
<ul>
<li><a href="https://tushare.pro/">tushare</a> 付费</li>
<li><a href="https://www.akshare.xyz/">akshare</a> 免费</li>
</ul>
<br>
<br>
<h2 id="文本">文本</h2>
<p>文化研究之父斯图亚特·霍尔（Stuart Hall）在《电视话语中的编码和解码》（<em>Encoding and decoding inthe television discourse</em>）一文中提出了“<strong>编码解码</strong>”理论。</p>
<ul>
<li><strong>编码（encoding）</strong>，信息传播者将所传递的讯息、意图或观点，转化为具有特定规则的代码。</li>
<li><strong>解码（decoding）</strong>，信息接受者，将上述代码按特定规则进行解读。</li>
</ul>
<p>信息传播学的编码解码理论</p>
<p><img loading="lazy" src="img/SenderReceiver.png" alt=""  />
<img loading="lazy" src="img/consumer_org_society.png" alt=""  />
</p>
<br>
<table>
<thead>
<tr>
<th>角度</th>
<th>解释</th>
<th>难度</th>
<th>python库</th>
</tr>
</thead>
<tbody>
<tr>
<td>信息检索</td>
<td>新闻咨询中是否出现某类信息(某类词)</td>
<td>低</td>
<td>re、jieba</td>
</tr>
<tr>
<td><strong>情感分析</strong></td>
<td>文本中正面词与负面词含量的对比</td>
<td>低</td>
<td>jieba、nltk</td>
</tr>
<tr>
<td>文本相似度</td>
<td>两文本向量化后的cosine余弦值的</td>
<td>中</td>
<td>jieba、scikit-learn</td>
</tr>
<tr>
<td>文本分类</td>
<td>标注数据，使用文本数据做类别预测(利好、利空)</td>
<td>中</td>
<td>scikit-learn</td>
</tr>
<tr>
<td>词向量</td>
<td>- 不同主体对同一概念的认知(偏见、刻板印象)等。<br><br />- 同一主体对不同概念的认知。</td>
<td>高</td>
<td>gensim</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="文本相似度提前预警股价暴跌">文本相似度提前预警股价暴跌。</h3>
<blockquote>
<p>Cohen, Lauren, Christopher Malloy, and Quoc Nguyen. &ldquo;Lazy prices.&rdquo; <em>The Journal of Finance</em> 75, no. 3 (2020): 1371-1415.</p>
</blockquote>
<p><img loading="lazy" src="img/%e8%82%a1%e4%bb%b7%e6%b3%a2%e5%8a%a8.png" alt=""  />
</p>
<p><img loading="lazy" src="img/%e7%9b%b8%e4%bc%bc%e5%ba%a6%e8%af%86%e5%88%ab.png" alt=""  />
</p>
<br>
<h2 id="图片">图片</h2>
<p>OCR图像识别，识别有没有、有多少。</p>
<ul>
<li>停车场汽车停放量，识别有多少量车，预测沃尔玛等商超的经营情况</li>
</ul>
<p><img loading="lazy" src="img/%e9%99%88%e7%a1%95-%e9%81%a5%e6%84%9f-%e8%b4%ab%e7%a9%b7%e5%9c%b0%e5%9b%be.png" alt=""  />
</p>
<br>
<h2 id="音频视频">音频、视频</h2>
<ul>
<li>演讲音频转文本，用到文本分析，度量讲话的语气语调。</li>
</ul>
<br>
<br>
<h2 id="金融资讯舆情分析">金融资讯舆情分析</h2>
<blockquote>
<p>新闻舆情作为金融投资市场上的重要信息可以及时披露上市公司的经营状 况或股价异动情况，常常可作为投资决策的重要参考，但市场中海量的舆情信息难以通过人工的方式逐一分析，往往只能主观挑选某些个人认为比较重要的 新闻媒体进行舆情的跟踪，并忽略和抛弃其他新闻媒体的舆情信息，这极有可能遗漏掉一部分有价值的重要信息。</p>
<p>请各参赛队伍根据赛方提供的上市公司新闻资讯数据，利用深度学习、自然语言处理算法进行建模分析，<strong>及时、准确地</strong>判断新闻资讯的 <strong>舆情倾向</strong>（利好、中性、利空等）</p>
</blockquote>
<p>新闻中的可以挖掘的金融指标</p>
<ul>
<li>
<p>分析师情绪    买在分歧，卖在一致。</p>
</li>
<li>
<p>新闻情绪  机构、媒体、散户。</p>
</li>
</ul>
<h2 id="测度算法">测度算法</h2>
<p>使用文本分析对咨询中的舆情倾向（利好、中性、利空等）进行分析。</p>
<table>
<thead>
<tr>
<th>算法</th>
<th>功能</th>
<th>类比</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>词典法</td>
<td>把文档转为某个数。<br>例如政府工作报告中提到&quot;创新&quot;、&ldquo;创业&quot;的个数。</td>
<td>原子</td>
<td></td>
</tr>
<tr>
<td>机器学习</td>
<td>把 文档 转为 vector</td>
<td>分子</td>
<td></td>
</tr>
<tr>
<td>词嵌入</td>
<td>比机器学习更深入彻底，将word看做vector。工程师，含有<code>男性、技术、高薪。。。</code></td>
<td>夸克</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><img loading="lazy" src="img/%e6%96%87%e6%9c%ac%e5%88%86%e6%9e%90%e5%a4%a7%e8%87%b4%e6%a1%86%e6%9e%b6.png" alt=""  />
</p>
<br>
<h2 id="需要的技术">需要的技术</h2>
<ol>
<li>
<p>词典法-构造金融情感词典</p>
<ul>
<li>
<p>共现法，上下文共同出现。</p>
</li>
<li>
<p>词向量法</p>
</li>
</ul>
</li>
<li>
<p>ML做文本分类</p>
</li>
</ol>
<br>
<br>
<h2 id="构造金融词典">构造金融词典</h2>
<h3 id="共现法">共现法</h3>
<p>物以类聚，词以群分。近义词更容易出现在同一个上下文中。</p>
<p>以「利好」「利空」为例</p>
<ol>
<li>人工选定「利好」「利空」初始词</li>
<li>构建语料内的词语共现矩阵</li>
<li>得到与「利好」「利空」共现得分较高的前n个候选词</li>
<li>分别输出到txt内</li>
<li>人工筛查剔除</li>
</ol>
<h3 id="词向量">词向量</h3>
<p><img loading="lazy" src="img/word2vec.png" alt=""  />
</p>
<p>以「利好」「利空」为例</p>
<ol>
<li>人工选定「利好」「利空」初始词</li>
<li>训练语料内的词向量模型</li>
<li>得到与「利好」「利空」向量相似度较高的前n个候选词</li>
<li>分别输出到txt内</li>
<li>人工筛选剔除</li>
</ol>
<br>
<br>
<h2 id="ml做预测利好1利空0步骤">ML做预测(利好1、利空0)步骤</h2>
<ol>
<li>&hellip;(标注数据)</li>
<li>导入数据</li>
<li>数据清洗(剔除停用词，杂乱字符等)</li>
<li>特征工程（文本转化为向量）</li>
<li>将数据分为训练集和测试集</li>
<li>选择某种ML算法训练模型</li>
<li>评价模型</li>
</ol>
<p><br><br></p>
<h2 id="ml算法">ML算法</h2>
<p>机器学习算法分为 <strong>监督式</strong> 和 <strong>非监督式</strong>。本节特指监督式，即同时含有x1, x2,&hellip;xn和y.</p>
<p>ML训练出的模型，实际上是通过数据，学习 y=f(x1, x2, &hellip;xn)中的 f。</p>
<p><img loading="lazy" src="img/ML/%e5%a4%9a%e5%85%83%e7%ba%bf%e6%80%a7%e5%9b%9e%e5%bd%92.png" alt=""  />
</p>
<table>
<thead>
<tr>
<th>监督学习算法</th>
<th>代码导入方法</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.linear_model">回归</a></td>
<td>from sklearn.linear_model import LinearRegression<br><br>from sklearn.linear_model import LogisticRegression<br>&hellip;</td>
</tr>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.neighbors">K近邻</a></td>
<td>from sklearn.neighbors import KNeighborsClassifier<br>&hellip;</td>
</tr>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.svm">支持向量机</a></td>
<td>from sklearn.svm import SVC<br/>&hellip;</td>
</tr>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.tree">决策树</a></td>
<td>from sklearn.tree import DecisionTreeClassifier<br/>&hellip;</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h1 id="投保反欺诈模型">投保反欺诈模型</h1>
<p>机器学习可以根据丰富的数据和监控模型，对数据进行多重处理分析，建立实时反欺诈规则和模型，结合当前用户特征，实时识别用户欺诈行为。</p>
<p>请参赛队伍在<strong>了解投保信息收集的基础上</strong>，基于<strong>机器学习技术</strong>，对投保过程中的信息进行收集和分析，从数据中提取客户多维度异常模式，探索大数据反欺诈规则，实现异常识别功能，提前检测投保人在交易过程中是否有欺诈行为，识别可能的欺诈行为，减少欺诈损害。</p>
<blockquote>
<p>了解投保信息收集的基础上&ndash;&gt;提取新的x</p>
</blockquote>
<h2 id="ml做预测步骤">ML做预测步骤</h2>
<ol>
<li>&hellip;(标注数据)</li>
<li>导入数据</li>
<li>数据清洗(剔除停用词，杂乱字符等)</li>
<li>特征工程（构造并加入新的x）</li>
<li>将数据分为训练集和测试集</li>
<li>选择某种ML算法训练模型</li>
<li>评价模型</li>
</ol>
<br>
<table>
<thead>
<tr>
<th>监督学习算法</th>
<th>代码导入方法</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.linear_model">回归</a></td>
<td>from sklearn.linear_model import LinearRegression<br><br>from sklearn.linear_model import LogisticRegression<br>&hellip;</td>
</tr>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.neighbors">K近邻</a></td>
<td>from sklearn.neighbors import KNeighborsClassifier<br>&hellip;</td>
</tr>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.svm">支持向量机</a></td>
<td>from sklearn.svm import SVC<br/>&hellip;</td>
</tr>
<tr>
<td><a href="https://scikit-learn.org/stable/modules/classes.html#module-sklearn.tree">决策树</a></td>
<td>from sklearn.tree import DecisionTreeClassifier<br/>&hellip;</td>
</tr>
</tbody>
</table>
<br>
<h2 id="kaggle代码httpswwwkagglecomcodeahmedmsoliman94-accuracy"><a href="https://www.kaggle.com/code/ahmedmsoliman/94-accuracy">Kaggle代码</a></h2>
<p><br><br></p>
<h1 id="公募产品个性化推荐系统">公募产品个性化推荐系统</h1>
<blockquote>
<p>在客户需求升级和金融市场的竞争环境下，数字化运营将是未来金融机构核心竞争力的来源，是构筑差异化优势的重要手段。</p>
<p>请参赛队伍结合金融行业的数字化运营需求，根据赛方提供的公募基金资讯数据、风险等级数据、用户行为点击序列、公募产品详情页的停留时长、公募产品的自选收藏等行为数据集，运用机器学习、深度学习、推荐算法等科技手段，分析预测用户的下一个兴趣点，在满足风险合规的条件下为合适的用户找到合适的产品。</p>
</blockquote>
<br>
<h2 id="方法论基础">方法论基础</h2>
<p>假设:  相似的人 喜欢做 相似的事情</p>
<p>有三种推荐算法</p>
<table>
<thead>
<tr>
<th>推荐系统算法思想</th>
<th>解释</th>
<th>特征向量化</th>
</tr>
</thead>
<tbody>
<tr>
<td>Demographic Filtering</td>
<td>相似人口特征的人 喜欢 相似的事(物)</td>
<td>将人向量化。[age、gendre、salary、consume、地理、、、]</td>
</tr>
<tr>
<td><a href="https://www.kaggle.com/code/muhammadhananasghar/imdb-movies-content-based-recomendation-system">Content Based Filtering</a></td>
<td>如果一个人喜欢某个特定事(物)，他或她也会喜欢与它相似的项目。</td>
<td>将事物向量化</td>
</tr>
<tr>
<td><a href="https://www.kaggle.com/code/omarkhald/recommendation-system-collaborative-filter">Collaborative Filtering</a> 协同(联合)</td>
<td>人与事(物) 的 配对匹配 存在模式</td>
<td>用户-评价-矩阵</td>
</tr>
</tbody>
</table>
<br>
<h2 id="collaborative-filtering--user-item-matrix">Collaborative Filtering | user-item-matrix</h2>
<p>以用户影评为例，挖掘构造出用户、产品的特点(特征向量）。</p>
<p><img loading="lazy" src="img/03-%e9%a2%84%e6%b5%8b%e7%94%a8%e6%88%b7%e5%af%b9%e7%94%b5%e5%bd%b1%e7%9a%84%e5%96%9c%e5%a5%bd.png" alt=""  />
</p>
<p><img loading="lazy" src="img/04-%e7%94%a8%e6%88%b7%e8%af%84%e4%bb%b7%e7%9f%a9%e9%98%b5.png" alt=""  />
</p>
<p><img loading="lazy" src="img/06-%e9%a2%84%e6%b5%8b%e8%ae%a1%e7%ae%97.png" alt=""  />
</p>
<p><img loading="lazy" src="img/07-%e7%94%a8%e6%88%b7%e7%9b%b8%e4%bc%bc%e5%ba%a6.png" alt=""  />
</p>
<br>
<h2 id="冷启动问题">冷启动问题</h2>
<p>如果某个用户，没有任何影评数据，如何预测该用户的偏好？</p>
<p>思路: 依然假设物以类聚，人以群分。</p>
<p>公募基金公司  有历史记录</p>
<table>
<thead>
<tr>
<th>user</th>
<th>类型</th>
<th>个人风险偏好考试</th>
<th>金额</th>
</tr>
</thead>
<tbody>
<tr>
<td>User1 (age/gender/edu/addr/intro)</td>
<td>债券</td>
<td>保守</td>
<td>5000</td>
</tr>
<tr>
<td>User2 (age/gender/edu/addr/intro)</td>
<td>股票</td>
<td>激进</td>
<td>10000</td>
</tr>
<tr>
<td>&hellip;</td>
<td>..</td>
<td>..</td>
<td>..</td>
</tr>
</tbody>
</table>
<br>
<br>
<h1 id="本文之外">本文之外</h1>
<h2 id="长期征稿">长期征稿</h2>
<div style="text-align: center;">
<figure >
    <a href="https://hidadeng.github.io/blog/call_for_paper/">
        <img src="/images/blog/call_for_paper.png" width="100%" />
    </a>
    <figcaption><small><i>点击了解投稿</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="招募小伙伴">招募小伙伴</h2>
<div style="text-align: center;">
<figure >
    <a href="https://hidadeng.github.io/blog/we_need_you/">
        <img src="/images/blog/we_need_you.png" width="100%" />
    </a>
    <figcaption><small><i>点击加入我们</i></small></figcaption>
</figure>
</div>
<h2 id="文本分析视频课">文本分析视频课</h2>
<p>想轻松而快捷的深刻了解一个领域，看视频(直播)学习是一个不错的方式。</p>
<ul>
<li>
<p>大邓每年会有4场直播，五一、十一、寒、暑假，如果时间点接近，可考虑报名参与<a href="https://hidadeng.github.io/blog/2022-05-workshop/7-Python.html">直播课</a>。</p>
</li>
<li>
<p>如果只意性价比，且已迫不及待想学，可以考虑直接报名大邓的<a href="https://hidadeng.github.io/blog/management_python_course">录播课</a>。</p>
</li>
<li>
<p>如果不想学，也可以考虑外包。更建议找淘宝，如果找我咨询，请先阅读<a href="https://hidadeng.github.io/blog/paid_for_service">有偿说明</a></p>
</li>
</ul>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>欢迎各位向cntext库分享情感词典</title>
      <link>https://hidadeng.github.io/blog/share_your_dict_to_cntext/</link>
      <pubDate>Sun, 12 Jun 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/share_your_dict_to_cntext/</guid>
      <description>随着cntext内置词典丰富了，使用cntext做文本分析会更好用、更易用。</description>
      <content:encoded><![CDATA[<p>前几天刚刚分享 <a href="https://hidadeng.github.io/blog/liwc_python_text_mining/">LIWC vs Python  | 文本分析之词典词频法略讲(含代码)</a>，<strong>借鉴LIWC，我觉得中文也需要有社科类的中文情感词典库，如果能汇聚已发表论文中的中文情感词典，如用户生成内容UGC那样，那么中文文本分析也会变的容易</strong>。下图是LIWC用户分享词典界面。</p>
<h2 id="liwc用户分享词典">LIWC用户分享词典</h2>
<p>没有购买LIWC是看不到截图中的「USER-CREATED LIWC DICTIONARIES」。涉及版权，英文词典文件不作分享，一起尊重知识。</p>
<p><img loading="lazy" src="liwc-ugc.png" alt=""  />
</p>
<p><strong>中文领域有很多发表出来的各研究领域的情感词典，如果有词典推荐，欢迎thunderhit@qq.com联系我，我可以将词典整理为cntext内置格式。</strong></p>
<br>
<p><strong>假设cntext内置词典丰富了，使用cntext做如下文本分析操作。</strong></p>
<br>
<h2 id="案例-cntext操作">案例: cntext操作</h2>
<h3 id="cntext内置词典">cntext内置词典</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#cntext版本</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;cntext版本: </span><span class="si">{}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">__version__</span><span class="p">))</span>

<span class="c1">#查看cntext内置词典</span>
<span class="n">ct</span><span class="o">.</span><span class="n">dict_pkl_list</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#39;cntext版本: 1.7.1&#39;

[&#39;DUTIR.pkl&#39;,
 &#39;HOWNET.pkl&#39;,
 &#39;sentiws.pkl&#39;,
 &#39;ChineseFinancialFormalUnformalSentiment.pkl&#39;,
 &#39;ANEW.pkl&#39;,
 &#39;LSD2015.pkl&#39;,
 &#39;NRC.pkl&#39;,
 &#39;geninqposneg.pkl&#39;,
 &#39;HuLiu.pkl&#39;,
 &#39;AFINN.pkl&#39;,
 &#39;ADV_CONJ.pkl&#39;,
 &#39;LoughranMcDonald.pkl&#39;,
 &#39;STOPWORDS.pkl&#39;,
 &#39;concreteness.pkl&#39;]
</code></pre></div><br>
<h3 id="导入内置pkl词典">导入内置pkl词典</h3>
<p>cntext内词典正在规范化，理想的规范词典应该含有词语列表、Desc简介和Referer参考文献三部分。例如，大连理工大学情感本体库词典DUTIR.pkl</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dutir</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;DUTIR.pkl&#39;</span><span class="p">)</span>
<span class="n">dutir</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;DUTIR&#39;: {&#39;哀&#39;: [&#39;怀想&#39;, &#39;治丝而棼&#39;, &#39;伤害&#39;,...],
           &#39;好&#39;: [&#39;进贤黜奸&#39;, &#39;清醇&#39;, &#39;放达&#39;, ...],
           &#39;惊&#39;: [&#39;惊奇不已&#39;, &#39;魂惊魄惕&#39;, &#39;海外奇谈&#39;,...],
           &#39;惧&#39;: [&#39;忸忸怩怩&#39;, &#39;谈虎色变&#39;, &#39;手忙脚乱&#39;,...],
           &#39;乐&#39;: [&#39;百龄眉寿&#39;, &#39;娱心&#39;, &#39;如意&#39;,...],
           &#39;怒&#39;: [&#39;饮恨吞声&#39;, &#39;扬眉瞬目&#39;,...],
           &#39;恶&#39;: [出逃&#39;, &#39;鱼肉百姓&#39;, &#39;移天易日&#39;,...]},
 
 &#39;Desc&#39;: &#39;大连理工大学情感本体库，细粒度情感词典。含七大类情绪，依次是哀, 好, 惊, 惧, 乐, 怒, 恶&#39;,
 
 &#39;Referer&#39;: &#39;徐琳宏,林鸿飞,潘宇,等.情感词汇本体的构造[J]. 情报学报, 2008, 27(2): 180-185.&#39;}
</code></pre></div><p>dutir返回了</p>
<ul>
<li>词典数据</li>
<li>Desc词典介绍</li>
<li>Referer词典文献出处</li>
</ul>
<br>
<br>
<h3 id="用cntext做情感计算">用cntext做情感计算</h3>
<p>情感分析，统计文本中某类词出现个数，使用cntext.sentiment函数即可实现。</p>
<p>sentiment(text, diction, lang=&lsquo;chinese&rsquo;)</p>
<ul>
<li>text:  文本字符串</li>
<li>diction:  情感词典</li>
<li>lang: 语言类型，&ldquo;chinese&rdquo; or &ldquo;english&rdquo;; 默认lang=&ldquo;chinese&rdquo;</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#自定义词典</span>
<span class="n">diy_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;pos&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;高兴&#39;</span><span class="p">,</span> <span class="s1">&#39;快乐&#39;</span><span class="p">,</span> <span class="s1">&#39;分享&#39;</span><span class="p">],</span>
           <span class="s1">&#39;neg&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;难过&#39;</span><span class="p">,</span> <span class="s1">&#39;悲伤&#39;</span><span class="p">],</span>
           <span class="s1">&#39;adv&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;很&#39;</span><span class="p">,</span> <span class="s1">&#39;特别&#39;</span><span class="p">]}</span>

<span class="c1">#cntext内置词典-DUTIR</span>
<span class="n">dutir</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;DUTIR.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;DUTIR&#39;</span><span class="p">]</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;我今天得奖了，很高兴，我要将快乐分享大家。&#39;</span>

<span class="c1">#使用diy_dict做情感分析</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
                   <span class="n">diction</span><span class="o">=</span><span class="n">diy_dict</span><span class="p">,</span> 
                   <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
<span class="c1">#使用DUTIR做情感分析    </span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
                   <span class="n">diction</span><span class="o">=</span><span class="n">dutir</span><span class="p">,</span> 
                   <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;pos_num&#39;: 3,
 &#39;neg_num&#39;: 0,
 &#39;adv_num&#39;: 1,
 &#39;stopword_num&#39;: 8,
 &#39;word_num&#39;: 14,
 &#39;sentence_num&#39;: 1}
 
 
 {&#39;哀_num&#39;: 0,
 &#39;好_num&#39;: 0,
 &#39;惊_num&#39;: 0,
 &#39;惧_num&#39;: 0,
 &#39;乐_num&#39;: 2,
 &#39;怒_num&#39;: 0,
 &#39;恶_num&#39;: 0,
 &#39;stopword_num&#39;: 8,
 &#39;word_num&#39;: 14,
 &#39;sentence_num&#39;: 1}
</code></pre></div><br>
<h2 id="liwc用户分享词典-1">LIWC用户分享词典</h2>
<p>以下内容整理自LIWC网站，我添加了doi及中文翻译。由于没有阅读每个词典对应的文献，词典简介翻译可能会有差错。</p>
<p>以下词典仅仅是介绍，有疑惑的可以点击doi，找到对应论文进行理解。</p>
<p><strong>由于版权问题，词典文件资源不作分享</strong>。</p>
<p><img loading="lazy" src="liwc-ugc.png" alt=""  />
</p>
<table>
<thead>
<tr>
<th>Dictionary</th>
<th>Desc</th>
<th>Author</th>
<th>Date</th>
<th>DOI</th>
</tr>
</thead>
<tbody>
<tr>
<td>Absolutist</td>
<td>Measure absolutist thinking in texts (eg, always, never)衡量文本中的绝对主义思维（例如，always、never）</td>
<td>Al-Mosaiwi &amp; Johnstone</td>
<td>2018</td>
<td><a href="https://doi.org/10.1177/2167702617747074">https://doi.org/10.1177/2167702617747074</a></td>
</tr>
<tr>
<td>Age_Stereotypes</td>
<td>Reflects eight broadly-defined stereotypes identified in past research as descriptive of older adults,such as <code>impaired, despondent, shrew,        recluse, vulnerable, golden, grandparent, conservative</code><br>反映过去研究中确定的八种广泛定义的刻板印象(用于描述老年人)，例如“受损、沮丧、泼妇、隐士、脆弱、黄金、祖父母、保守”</td>
<td>Jessica Remedios</td>
<td>2010</td>
<td><a href="https://doi.org/10.1080/15298860903054175">https://doi.org/10.1080/15298860903054175</a></td>
</tr>
<tr>
<td>Agitation&amp;Dejection</td>
<td>Based on studies linking promotion versus prevention focus with the emotions “Agitation” and “Dejection”<br>基于将促进与预防重点与情绪“激动”和“沮丧”联系起来的研究</td>
<td>Johnsen et al.</td>
<td>2014</td>
<td><a href="https://doi.org/10.2147/PRBM.S54947">https://doi.org/10.2147/PRBM.S54947</a></td>
</tr>
<tr>
<td>Behavioral_Activation</td>
<td>Captures linguistic indicators of planning and participation in enjoyable activities<br>捕捉规划和参与愉快活动的语言指标</td>
<td>Burkhardt et al.</td>
<td>2021</td>
<td><a href="https://doi.org/10.2196/28244">https://doi.org/10.2196/28244</a></td>
</tr>
<tr>
<td>Big_Two</td>
<td>Measure the degree to which a person is thinking in terms of <strong>Agency/Communion</strong>.<br>衡量一个人在<strong>机构/交流</strong>方面的思考程度。</td>
<td>Pietraszkiewicz et al.</td>
<td>2019</td>
<td><a href="https://doi.org/10.1002/ejsp.2561">https://doi.org/10.1002/ejsp.2561</a></td>
</tr>
<tr>
<td>Brand_Personality</td>
<td>Assesses Aaker’s five brand personality dimensions as well as 42 personality trait norms<br>评估 Aaker 的五个品牌个性维度以及 42 个个性特征规范</td>
<td>Opoku et al.</td>
<td>2008</td>
<td><a href="https://doi.org/10.1080/08841240802100386">https://doi.org/10.1080/08841240802100386</a></td>
</tr>
<tr>
<td>Controversial_Terms</td>
<td>A lexicon of terms that range in their degree of controversiality, particularly in terms of their use in the media.<br>具有争议程度的术语词典，特别是在媒体中的使用方面。</td>
<td>Mejova et al.</td>
<td>2014</td>
<td><a href="http://arxiv.org/abs/1409.8152">http://arxiv.org/abs/1409.8152</a></td>
</tr>
<tr>
<td>Corporate_Social_Responsibility</td>
<td>Reveals four dimensions of corporate social responsibility<br>揭示企业社会责任的四个维度</td>
<td>Nadra Pencle &amp; Irina Mălăescu</td>
<td>2016</td>
<td><a href="https://doi.org/10.2308/jeta-51615">https://doi.org/10.2308/jeta-51615</a></td>
</tr>
<tr>
<td>Cost_Benefit</td>
<td>Measures language related to perceived costs and benefits that result from a decision or behavior.<br>衡量与决策或行为导致的感知成本和收益相关的语言。</td>
<td>Michael McCullough</td>
<td>2006</td>
<td><a href="https://doi.org/10.1037/0022-006X.74.5.887">https://doi.org/10.1037/0022-006X.74.5.887</a></td>
</tr>
<tr>
<td>Creativity&amp;Innovation</td>
<td>Language describing creation and/or innovation<br>描述创造和/或创新的语言</td>
<td>Neufeld and Gaucher</td>
<td>2017</td>
<td></td>
</tr>
<tr>
<td>Crovitz_Innovator_Identification</td>
<td>Identify “innovators” and “non-innovators” using Hebert F. Crovitz’s 42 relational words<br>使用 Hebert F. Crovitz 的 42 个相关词识别“创新者”和“非创新者”</td>
<td>Greco et al.</td>
<td>2021</td>
<td><a href="https://doi.org/10.1007/s11135-020-01038-x">https://doi.org/10.1007/s11135-020-01038-x</a></td>
</tr>
<tr>
<td>extended_Moral_Foundations_Dictionary(eMFD)</td>
<td>The eMFD, unlike previous methods, is constructed from text annotations generated by a large sample of human coders.<br>与以前的方法不同，eMFD 是由大量人类编码人员生成的文本注释构成的。</td>
<td>Hopp et al.</td>
<td>2021</td>
<td><a href="https://doi.org/10.3758/s13428-020-01433-0">https://doi.org/10.3758/s13428-020-01433-0</a></td>
</tr>
<tr>
<td>Foresight</td>
<td>Measures the degree to which anticipation/foresight occurs. That is, words pointing to indicate where things are heading (often on the basis of recurrent behaviors).<br>衡量预期/预见发生的程度。 也就是说，指向事物前进方向的词语（通常基于反复出现的行为）。</td>
<td>Robert Hogenraad</td>
<td>2020</td>
<td><a href="https://doi.org/10.1007/s11135-020-01071-w">https://doi.org/10.1007/s11135-020-01071-w</a></td>
</tr>
<tr>
<td>Imagination</td>
<td>Digital lexicon of 627 entries relative to imagination and transfiguration, i.e., words pointing to the unbelievable and whatever is beyond the real.<br>与想象和变形相关的 627 个条目的数字词典，即指向令人难以置信的事物和超越真实事物的词语。</td>
<td>Robert Hogenraad</td>
<td>2019</td>
<td><a href="https://doi.org/10.1007/s11135-018-0813-7">https://doi.org/10.1007/s11135-018-0813-7</a></td>
</tr>
<tr>
<td>Global_Citizen</td>
<td>A dictionary to assess language usage related to global citizenship<br>用于评估与全球公民相关的语言使用情况的词典</td>
<td>Stephen Reysen et al.</td>
<td>2014</td>
<td><a href="https://doi.org/10.4018/ijcbpl.2014100101">https://doi.org/10.4018/ijcbpl.2014100101</a></td>
</tr>
<tr>
<td>Grant_Evaluation</td>
<td>Captures categories relevant to scientific grant review (ability, achievement, agentic, research, standout, pos eval, neg eval)<br>捕获与科学资助审查相关的类别（能力、成就、代理、研究、杰出、正面、负面）</td>
<td>Kaatz et al.</td>
<td>2015</td>
<td><a href="https://doi.org/10.1097/ACM.0000000000000442">https://doi.org/10.1097/ACM.0000000000000442</a></td>
</tr>
<tr>
<td>Home_Perceptions</td>
<td>Calculates the frequency of words describing clutter, a sense of the home as unfinished, restful words, and nature words<br>计算描述杂乱、未完成的家感、宁静的词和自然词的频率</td>
<td>Saxbe &amp; Repetti</td>
<td>2022-01-01</td>
<td><a href="https://doi.org/10.1177/0146167209352864">https://doi.org/10.1177/0146167209352864</a></td>
</tr>
<tr>
<td>Invective Dictionary</td>
<td>Use this dictionary to detect invective language in narrative<br/></td>
<td>A. T. Panter</td>
<td>2022-01-01</td>
<td></td>
</tr>
<tr>
<td>Linguistic_Category_Model</td>
<td>A computerized LCM analysis method<br/>使用这本词典检测叙事中的谩骂语言</td>
<td>Yi-Tai Seih</td>
<td>2017</td>
<td><a href="https://doi.org/10.1177/0261927X16657855">https://doi.org/10.1177/0261927X16657855</a></td>
</tr>
<tr>
<td>Loughran_McDonald_Financial_Sentiment</td>
<td>Dictionary for measuring positive and negative sentiment specifically in financial texts.This is the 2018 version of the dictionary.<br/>专门用于衡量金融文本中正面和负面情绪的字典。这是 2018 年版的字典。</td>
<td>Loughran &amp; McDonald</td>
<td>2011</td>
<td><a href="https://doi.org/10.1111/j.1540-6261.2010.01625.x">https://doi.org/10.1111/j.1540-6261.2010.01625.x</a></td>
</tr>
<tr>
<td>Masculine_and_Feminine</td>
<td>List of masculine and feminine words from Gaucher et al. (2011)<br/>Gaucher 等人的男性化和女性化词列表。 (2011)</td>
<td>Maureen McCusker</td>
<td>2011</td>
<td><a href="https://doi.org/10.1037/a0022530">https://doi.org/10.1037/a0022530</a></td>
</tr>
<tr>
<td>Mindfulness</td>
<td>Two categories of mindfulness language describing the mindfulness state and the more encompassing “mindfulness journey”<br/>描述正念状态的两类正念语言和更全面的“正念之旅”</td>
<td>Collins et al.</td>
<td>2009</td>
<td><a href="https://doi.org/10.1037/a0017579">https://doi.org/10.1037/a0017579</a></td>
</tr>
<tr>
<td>Mind_Perception</td>
<td>Measures linguistic use of mind perception (words related to “agency” and “experience”) in naturalistic settings<br/>在自然主义环境中测量心理感知（与“agency”和“experience”相关的词）的语言使用</td>
<td>Schweitzer &amp; Waytz</td>
<td>2020</td>
<td><a href="https://doi.org/10.1037/xge0001013">https://doi.org/10.1037/xge0001013</a></td>
</tr>
<tr>
<td>Moral_Foundations_v2.0</td>
<td>An updated version of the Moral Foundations Dictionary that is recommended over the original by its creators.<br/>道德词典的更新版本，由其创建者推荐。</td>
<td>Jeremy Frimer</td>
<td>2019</td>
<td><a href="https://doi.org/10.1016/j.jrp.2019.103906">https://doi.org/10.1016/j.jrp.2019.103906</a></td>
</tr>
<tr>
<td>Moral_Justification</td>
<td>Measures variation in justification content (deontological, consequentialist, or emotive) as a function of moral foundations<br/>衡量辩护内容（道义论、后果论或情感论）随道德基础的变化</td>
<td>Wheeler &amp; Laham</td>
<td>2016</td>
<td><a href="https://doi.org/10.1177/0146167216653374">https://doi.org/10.1177/0146167216653374</a></td>
</tr>
<tr>
<td>Personal_Values_Dictionary</td>
<td>Measures the 10 Schwartz Values (and 4 higher-order value dimensions).<br/>测量 10 个 Schwartz 值（和 4 个高阶值维度）。</td>
<td>Ponizovskiy et al.</td>
<td>2020</td>
<td><a href="https://doi.org/10.1002/per.2294">https://doi.org/10.1002/per.2294</a></td>
</tr>
<tr>
<td>Prosocial_Words</td>
<td>Calculates the density of prosocial words in anything that a person says<br/>计算一个人所说的任何内容中亲社会词的密度</td>
<td>Jeremy Frimer</td>
<td>2022-01-01</td>
<td><a href="https://doi.org/10.1073/pnas.1500355112">https://doi.org/10.1073/pnas.1500355112</a></td>
</tr>
<tr>
<td>Regulatory_Mode</td>
<td>Locomotion and Assessment States of Goal Pursuit<br/>目标追求的运动和评估状态</td>
<td>Dana Kanze, Mark A. Conley, and E. Tory Higgins</td>
<td>2019</td>
<td><a href="https://doi.org/10.1016/j.obhdp.2019.04.002">https://doi.org/10.1016/j.obhdp.2019.04.002</a></td>
</tr>
<tr>
<td>Security_Language</td>
<td>Provides a reference for the comparative study of security-related linguistic repertoires in political texts (speeches, policy documents, etc.).<br/>为政治文本（演讲、政策文件等）中与安全相关的语言库的比较研究提供参考。</td>
<td>Stephane Baele &amp; Olivier Sterck</td>
<td>2014</td>
<td><a href="https://doi.org/10.1111/1467-9248.12147">https://doi.org/10.1111/1467-9248.12147</a></td>
</tr>
<tr>
<td>Self-Care</td>
<td>Measures the degree to which self-care words are used (e.g., diet, yoga)<br/>衡量自我保健词的使用程度（例如，饮食、瑜伽）</td>
<td>Xunyi Wang et al.</td>
<td>2018</td>
<td><a href="https://doi.org/10.1093/jamia/ocy012">https://doi.org/10.1093/jamia/ocy012</a></td>
</tr>
<tr>
<td>Stereotype_Content</td>
<td>A stereotype content dictionary, made using a semi-automated method, to capture the Stereotype Content Model in text<br/>使用半自动化方法制作的刻板印象内容字典，用于捕获文本中的刻板印象内容模型</td>
<td>Nicolas et al.</td>
<td>2022-01-01</td>
<td><a href="https://doi.org/10.1002/ejsp.2724">https://doi.org/10.1002/ejsp.2724</a></td>
</tr>
<tr>
<td>Stress</td>
<td>A dictionary used to measure psychological stress. Created based on the LIWC2007 English Dictionary.<br/>用来测量心理压力的字典。 根据 LIWC2007 英语词典创建。</td>
<td>Wei Wang et al.</td>
<td>2022-01-01</td>
<td><a href="https://doi.org/10.1111/apps.12065">https://doi.org/10.1111/apps.12065</a></td>
</tr>
<tr>
<td>Well_Being</td>
<td>Words that might indicate the presence of purpose or meaning<br/>可能表明存在目的或意义的词</td>
<td>Ratner et al.</td>
<td>2019</td>
<td><a href="https://doi.org/10.1080/10888691.2019.1659140">https://doi.org/10.1080/10888691.2019.1659140</a></td>
</tr>
</tbody>
</table>
<br>
<h2 id="分享词典">分享词典</h2>
<p><strong>中文领域有很多发表出来的各研究领域的情感词典，如果有词典推荐，欢迎thunderhit@qq.com联系我，我会将词典整理为cntext内置格式。</strong></p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>实战 | 构建基于客户细分的 K-Means 聚类算法！</title>
      <link>https://hidadeng.github.io/blog/customer_segment_with_kmeans/</link>
      <pubDate>Thu, 09 Jun 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/customer_segment_with_kmeans/</guid>
      <description>客群细分对于企业了解目标受众非常重要。根据受众群体的不同，我们可以给采取不同的营销策略。目前有许多无监督的机器学习算法可以帮助公司识别他们的用户群并创建消费群体。</description>
      <content:encoded><![CDATA[<p>客群细分对于企业了解目标受众非常重要。根据受众群体的不同，我们可以给采取不同的营销策略。目前有许多无监督的机器学习算法可以帮助公司识别他们的用户群并创建消费群体。</p>
<p>在本文中，我将分享一种目前比较流行的 K-Means 聚类的无监督学习技术。K-Means的目标是将所有可用的数据分组为彼此不同的不重叠的子组。K-Means聚类是数据科学家用来帮助公司进行客户细分的常用技术。</p>
<p>在本文中，你将了解以下内容：</p>
<ul>
<li>K-Means聚类的数据预处理</li>
<li>从头构建K-Means聚类算法</li>
<li>用于评估聚类模型性能的指标</li>
<li>可视化构建簇类</li>
<li>簇类构建的解读与分析</li>
</ul>
<h2 id="代码下载">代码下载</h2>
<p><a href="customer_segment_with_kmeans.zip">点击下载</a></p>
<br>
<h2 id="预备知识">预备知识</h2>
<p>在开始之前安装以下库：pandas、numpy、matplotlib、seaborn、sciket learn、kneed。完成后，我们就可以开始制作模型了！</p>
<p>本文中要的数据集可以文末下载，运行以下代码行以导入必要的库并读取数据集：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;Mall_Customers.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>CustomerID</th>
      <th>Gender</th>
      <th>Age</th>
      <th>Annual Income (k$)</th>
      <th>Spending Score (1-100)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>Male</td>
      <td>19</td>
      <td>15</td>
      <td>39</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>Male</td>
      <td>21</td>
      <td>15</td>
      <td>81</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>Female</td>
      <td>20</td>
      <td>16</td>
      <td>6</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>Female</td>
      <td>23</td>
      <td>16</td>
      <td>77</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>Female</td>
      <td>31</td>
      <td>17</td>
      <td>40</td>
    </tr>
  </tbody>
</table>
</div>
<p>数据集中有五个变量。CustomerID是数据集中每个客户的唯一标识符，我们可以删除这个变量。它没有为我们提供任何有用的集群信息。由于 gender 是一个分类变量，它需要编码并转换成数字。</p>
<p>在输入模型之前，其他所有变量都将按正态分布进行缩放。我们将标准化这些变量，平均值为0，标准偏差为1。</p>
<br>
<h2 id="标准化变量">标准化变量</h2>
<p>首先，让我们标准化数据集中的所有变量，使它们在相同的范围内。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>

<span class="n">col_names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Annual Income (k$)&#39;</span><span class="p">,</span> <span class="s1">&#39;Age&#39;</span><span class="p">,</span> <span class="s1">&#39;Spending Score (1-100)&#39;</span><span class="p">]</span>
<span class="n">features</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col_names</span><span class="p">]</span>

<span class="n">scaler</span> <span class="o">=</span> <span class="n">StandardScaler</span><span class="p">()</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">features</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
<span class="n">features</span> <span class="o">=</span> <span class="n">scaler</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">features</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
<span class="n">scaled_features</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">features</span><span class="p">,</span> <span class="n">columns</span> <span class="o">=</span> <span class="n">col_names</span><span class="p">)</span>
<span class="n">scaled_features</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Annual Income (k$)</th>
      <th>Age</th>
      <th>Spending Score (1-100)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-1.738999</td>
      <td>-1.424569</td>
      <td>-0.434801</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-1.738999</td>
      <td>-1.281035</td>
      <td>1.195704</td>
    </tr>
    <tr>
      <th>2</th>
      <td>-1.700830</td>
      <td>-1.352802</td>
      <td>-1.715913</td>
    </tr>
    <tr>
      <th>3</th>
      <td>-1.700830</td>
      <td>-1.137502</td>
      <td>1.040418</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.662660</td>
      <td>-0.563369</td>
      <td>-0.395980</td>
    </tr>
  </tbody>
</table>
</div>
<p>我们可以看到所有的变量都被转换了，现在都以零为中心。</p>
<br>
<h2 id="热编码">热编码</h2>
<p>变量&quot;gender&quot;是分类变量，我们需要把它转换成一个数值变量，可以用pd.get_dummies()来处理。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">gender</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;Gender&#39;</span><span class="p">]</span>
<span class="n">newdf</span> <span class="o">=</span> <span class="n">scaled_features</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">gender</span><span class="p">)</span>

<span class="n">newdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">newdf</span><span class="p">,</span> <span class="n">prefix</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">prefix_sep</span><span class="o">=</span><span class="s1">&#39;_&#39;</span><span class="p">,</span> <span class="n">dummy_na</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">sparse</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">drop_first</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="kc">None</span><span class="p">)</span>

<span class="n">newdf</span> <span class="o">=</span> <span class="n">newdf</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s1">&#39;Gender_Male&#39;</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">newdf</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Annual Income (k$)</th>
      <th>Age</th>
      <th>Spending Score (1-100)</th>
      <th>Gender_Female</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-1.738999</td>
      <td>-1.424569</td>
      <td>-0.434801</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-1.738999</td>
      <td>-1.281035</td>
      <td>1.195704</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>-1.700830</td>
      <td>-1.352802</td>
      <td>-1.715913</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>-1.700830</td>
      <td>-1.137502</td>
      <td>1.040418</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>-1.662660</td>
      <td>-0.563369</td>
      <td>-0.395980</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<p>可以看到，性别变量已经发生了变化，从数据框中删除了“Gender_Male”。这是因为不需要再保留变量了。</p>
<br>
<h2 id="建立聚类模型">建立聚类模型</h2>
<p>让我们构建一个 K-means 聚类模型，并将其拟合到数据集中的所有变量上，我们用肘部图可视化聚类模型的性能，它会告诉我们在构建模型时使用的「最佳聚类数」。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.cluster</span> <span class="kn">import</span> <span class="n">KMeans</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>

<span class="n">SSE</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">cluster</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">):</span>
    <span class="n">kmeans</span> <span class="o">=</span> <span class="n">KMeans</span><span class="p">(</span><span class="n">n_clusters</span> <span class="o">=</span> <span class="n">cluster</span><span class="p">,</span> <span class="n">init</span><span class="o">=</span><span class="s1">&#39;k-means++&#39;</span><span class="p">)</span>
    <span class="n">kmeans</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">newdf</span><span class="p">)</span>
    <span class="n">SSE</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">kmeans</span><span class="o">.</span><span class="n">inertia_</span><span class="p">)</span>

<span class="c1"># converting the results into a dataframe and plotting them</span>

<span class="n">frame</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;Cluster&#39;</span><span class="p">:</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span> <span class="s1">&#39;SSE&#39;</span><span class="p">:</span><span class="n">SSE</span><span class="p">})</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">frame</span><span class="p">[</span><span class="s1">&#39;Cluster&#39;</span><span class="p">],</span> <span class="n">frame</span><span class="p">[</span><span class="s1">&#39;SSE&#39;</span><span class="p">],</span> <span class="n">marker</span><span class="o">=</span><span class="s1">&#39;o&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;Number of clusters&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;Inertia&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Text(0, 0.5, 'Inertia')
</code></pre>
<p>​ <br>
<img loading="lazy" src="output_9_1.png" alt="png"  />

​</p>
<p>根据上面的「肘部图」，我们可以看到最佳聚类数为「4」</p>
<br>
<h2 id="轮廓系数">轮廓系数</h2>
<p>轮廓系数或轮廓分数是用于评估该算法创建的簇的质量的方法。轮廓分数在-1到+1之间。轮廓分数越高，模型越好。轮廓分数度量同一簇中所有数据点之间的距离。这个距离越小，轮廓分数就越好。</p>
<p>让我们计算一下我们刚刚建立的模型的轮廓分数：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">silhouette_score</span>
<span class="c1"># First, build a model with 4 clusters</span>

<span class="n">kmeans</span> <span class="o">=</span> <span class="n">KMeans</span><span class="p">(</span><span class="n">n_clusters</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span> <span class="n">init</span><span class="o">=</span><span class="s1">&#39;k-means++&#39;</span><span class="p">)</span>
<span class="n">kmeans</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">newdf</span><span class="p">)</span>

<span class="c1"># Now, print the silhouette score of this model</span>

<span class="nb">print</span><span class="p">(</span><span class="n">silhouette_score</span><span class="p">(</span><span class="n">newdf</span><span class="p">,</span> <span class="n">kmeans</span><span class="o">.</span><span class="n">labels_</span><span class="p">,</span> <span class="n">metric</span><span class="o">=</span><span class="s1">&#39;euclidean&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>0.35027020434653977
</code></pre>
<p>轮廓线得分约为「0.35」。这是一个不错的模型，但我们可以做得更好，并尝试获得更高的簇群分离。</p>
<p>在我们尝试这样做之前，让我们将刚刚构建的聚类可视化，以了解模型的运行情况：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">clusters</span> <span class="o">=</span> <span class="n">kmeans</span><span class="o">.</span><span class="n">fit_predict</span><span class="p">(</span><span class="n">newdf</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,</span><span class="mi">1</span><span class="p">:])</span>

<span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;label&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">clusters</span>
 
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">21</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">111</span><span class="p">,</span> <span class="n">projection</span><span class="o">=</span><span class="s1">&#39;3d&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="p">[</span><span class="s1">&#39;Age&#39;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">0</span><span class="p">],</span> 
           <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">0</span><span class="p">],</span> 
           <span class="n">df</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">0</span><span class="p">],</span> 
           <span class="n">c</span><span class="o">=</span><span class="s1">&#39;blue&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>

<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="p">[</span><span class="s1">&#39;Age&#39;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">1</span><span class="p">],</span> 
           <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">1</span><span class="p">],</span> 
           <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">1</span><span class="p">],</span> 
           <span class="n">c</span><span class="o">=</span><span class="s1">&#39;red&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>

<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="p">[</span><span class="s1">&#39;Age&#39;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">2</span><span class="p">],</span> 
           <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">2</span><span class="p">],</span> 
           <span class="n">df</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">2</span><span class="p">],</span> 
           <span class="n">c</span><span class="o">=</span><span class="s1">&#39;green&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>

<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="p">[</span><span class="s1">&#39;Age&#39;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">3</span><span class="p">],</span> 
           <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">3</span><span class="p">],</span> 
           <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">3</span><span class="p">],</span> 
           <span class="n">c</span><span class="o">=</span><span class="s1">&#39;orange&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>

<span class="n">ax</span><span class="o">.</span><span class="n">view_init</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">185</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p>​ <br>
<img loading="lazy" src="output_13_0.png" alt="png"  />

​</p>
<p>从上图可以看出，簇类分离度不是很大。红点与蓝色混合，绿色与黄色重叠，这与轮廓分数一起向我们表明该模型表现不佳。现在，让我们创建一个比这个模型具有更好集群可分离性的新模型。</p>
<br>
<h2 id="建立聚类模型2">建立聚类模型2</h2>
<p>对于这个模型，让我们做一些特征选择。我们可以使用一种叫做主成分分析（PCA）的技术。</p>
<p>PCA 是一种帮助我们降低数据集维数的技术。现在，让我们在数据集上运行PCA：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.decomposition</span> <span class="kn">import</span> <span class="n">PCA</span>

<span class="n">pca</span> <span class="o">=</span> <span class="n">PCA</span><span class="p">(</span><span class="n">n_components</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
<span class="n">principalComponents</span> <span class="o">=</span> <span class="n">pca</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">newdf</span><span class="p">)</span>

<span class="n">features</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="n">pca</span><span class="o">.</span><span class="n">n_components_</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">bar</span><span class="p">(</span><span class="n">features</span><span class="p">,</span> <span class="n">pca</span><span class="o">.</span><span class="n">explained_variance_ratio_</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;PCA features&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;variance %&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">features</span><span class="p">)</span>

<span class="n">PCA_components</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">principalComponents</span><span class="p">)</span>
</code></pre></div><p>​ <br>
<img loading="lazy" src="output_15_0.png" alt="png"  />

​</p>
<p>这张图表显示了每个主成分分析的组成，以及它的方差。我们可以看到前两个主成分解释了大约70%的数据集方差。我们可以将这两个组件输入到模型中再次构建模型，并选择要使用的簇的数量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">ks</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">inertias</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">ks</span><span class="p">:</span>
    <span class="n">model</span> <span class="o">=</span> <span class="n">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="n">k</span><span class="p">)</span>
    <span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">PCA_components</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="mi">2</span><span class="p">])</span>
    <span class="n">inertias</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">inertia_</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">ks</span><span class="p">,</span> <span class="n">inertias</span><span class="p">,</span> <span class="s1">&#39;-o&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;number of clusters, k&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;inertia&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">ks</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="output_17_0.png" alt="png"  />

​</p>
<p>同样，看起来「最佳簇数是4」。我们可以用4个簇来计算此模型的轮廓分数：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">model</span> <span class="o">=</span> <span class="n">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">PCA_components</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="mi">2</span><span class="p">])</span>

<span class="c1"># silhouette score</span>
<span class="nb">print</span><span class="p">(</span><span class="n">silhouette_score</span><span class="p">(</span><span class="n">PCA_components</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="mi">2</span><span class="p">],</span> <span class="n">model</span><span class="o">.</span><span class="n">labels_</span><span class="p">,</span> <span class="n">metric</span><span class="o">=</span><span class="s1">&#39;euclidean&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>0.6025604455573874
</code></pre>
<p>这个模型的轮廓分数是「0.42」，这比我们之前创建的模型要好。我们可以像前面一样可视化此模型：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">model</span> <span class="o">=</span> <span class="n">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>

<span class="n">clusters</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">fit_predict</span><span class="p">(</span><span class="n">PCA_components</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="mi">2</span><span class="p">])</span>
<span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;label&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">clusters</span>
 
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">21</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">111</span><span class="p">,</span> <span class="n">projection</span><span class="o">=</span><span class="s1">&#39;3d&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="o">.</span><span class="n">Age</span><span class="p">[</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">0</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">0</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">0</span><span class="p">],</span> <span class="n">c</span><span class="o">=</span><span class="s1">&#39;blue&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="o">.</span><span class="n">Age</span><span class="p">[</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">1</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">1</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">1</span><span class="p">],</span> <span class="n">c</span><span class="o">=</span><span class="s1">&#39;red&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="o">.</span><span class="n">Age</span><span class="p">[</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">2</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">2</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">2</span><span class="p">],</span> <span class="n">c</span><span class="o">=</span><span class="s1">&#39;green&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>

<span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">newdf</span><span class="o">.</span><span class="n">Age</span><span class="p">[</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">3</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Annual Income (k$)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">3</span><span class="p">],</span> <span class="n">newdf</span><span class="p">[</span><span class="s2">&#34;Spending Score (1-100)&#34;</span><span class="p">][</span><span class="n">newdf</span><span class="o">.</span><span class="n">label</span> <span class="o">==</span> <span class="mi">3</span><span class="p">],</span> <span class="n">c</span><span class="o">=</span><span class="s1">&#39;orange&#39;</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>

<span class="n">ax</span><span class="o">.</span><span class="n">view_init</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">185</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p>​ <br>
<img loading="lazy" src="output_21_0.png" alt="png"  />

​</p>
<br> 
<h2 id="模型1与模型2">模型1与模型2</h2>
<p>让我们比较一下这个模型和第一个模型的聚类可分性：</p>
<p>第二个模型中的簇比第一个模型中的簇分离得好得多。此外，第二个模型的轮廓分数要高得多。基于这些原因，我们可以选择第二个模型进行分析。</p>
<br>
<h2 id="聚类分析">聚类分析</h2>
<p>首先，让我们将簇类映射回数据集，并查看数据帧。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;Mall_Customers.csv&#39;</span><span class="p">)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">drop</span><span class="p">([</span><span class="s1">&#39;CustomerID&#39;</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1"># map back clusters to dataframe</span>

<span class="n">pred</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">PCA_components</span><span class="o">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="mi">2</span><span class="p">])</span>
<span class="n">frame</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
<span class="n">frame</span><span class="p">[</span><span class="s1">&#39;cluster&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pred</span>
<span class="n">frame</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Gender</th>
      <th>Age</th>
      <th>Annual Income (k$)</th>
      <th>Spending Score (1-100)</th>
      <th>cluster</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Male</td>
      <td>19</td>
      <td>15</td>
      <td>39</td>
      <td>3</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Male</td>
      <td>21</td>
      <td>15</td>
      <td>81</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Female</td>
      <td>20</td>
      <td>16</td>
      <td>6</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Female</td>
      <td>23</td>
      <td>16</td>
      <td>77</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Female</td>
      <td>31</td>
      <td>17</td>
      <td>40</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<p>数据帧中的每一行现在都分配给一个集群。要比较不同群集的属性，请查找每个群集上所有变量的平均值：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">avg_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s1">&#39;cluster&#39;</span><span class="p">],</span> <span class="n">as_index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>

<span class="n">avg_df</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>cluster</th>
      <th>Age</th>
      <th>Annual Income (k$)</th>
      <th>Spending Score (1-100)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>25.521739</td>
      <td>26.304348</td>
      <td>78.565217</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>51.681818</td>
      <td>62.125000</td>
      <td>33.750000</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2</td>
      <td>32.904762</td>
      <td>84.380952</td>
      <td>80.500000</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>26.659574</td>
      <td>53.106383</td>
      <td>40.042553</td>
    </tr>
  </tbody>
</table>
</div>
<p>如果我们将这些簇可视化，我们可以更容易地解释它们。运行以下代码以获得每个变量的不同可视化效果：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="nn">sns</span>

<span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;cluster&#39;</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="s1">&#39;Age&#39;</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">avg_df</span><span class="p">)</span>
</code></pre></div><pre><code>&lt;AxesSubplot:xlabel='cluster', ylabel='Age'&gt;
</code></pre>
<p>​ <br>
<img loading="lazy" src="output_27_1.png" alt="png"  />

​</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;cluster&#39;</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="s1">&#39;Spending Score (1-100)&#39;</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">avg_df</span><span class="p">)</span>
</code></pre></div><pre><code>&lt;AxesSubplot:xlabel='cluster', ylabel='Spending Score (1-100)'&gt;
</code></pre>
<p>​ <br>
<img loading="lazy" src="output_28_1.png" alt="png"  />

​</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">sns</span><span class="o">.</span><span class="n">barplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;cluster&#39;</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="s1">&#39;Annual Income (k$)&#39;</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">avg_df</span><span class="p">)</span>
</code></pre></div><pre><code>&lt;AxesSubplot:xlabel='cluster', ylabel='Annual Income (k$)'&gt;
</code></pre>
<p>​ <br>
<img loading="lazy" src="output_29_1.png" alt="png"  />

​</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s1">&#39;cluster&#39;</span><span class="p">,</span><span class="s1">&#39;Gender&#39;</span><span class="p">])[</span><span class="s1">&#39;Gender&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">count</span><span class="p">())</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>Gender</th>
    </tr>
    <tr>
      <th>cluster</th>
      <th>Gender</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">0</th>
      <th>Female</th>
      <td>14</td>
    </tr>
    <tr>
      <th>Male</th>
      <td>9</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">1</th>
      <th>Female</th>
      <td>47</td>
    </tr>
    <tr>
      <th>Male</th>
      <td>41</td>
    </tr>
    <tr>
      <th>2</th>
      <th>Female</th>
      <td>23</td>
    </tr>
  </tbody>
</table>
</div>
<p>各细分市场的主要特点</p>
<p><strong>簇类0</strong>:</p>
<ul>
<li>年平均收入高，支出低。</li>
<li>平均年龄在40岁左右，性别以男性为主。</li>
</ul>
<p><strong>簇类1</strong>：</p>
<ul>
<li>中低收入，平均消费能力。</li>
<li>平均年龄在50岁左右，性别以女性为主。</li>
</ul>
<p><strong>簇类2</strong>：</p>
<ul>
<li>平均收入低，消费分数高。</li>
<li>平均年龄在25岁左右，性别以女性为主。</li>
</ul>
<p><strong>簇类3</strong>：</p>
<ul>
<li>平均收入高，消费分数高。</li>
<li>平均年龄在30岁左右，性别以女性为主。</li>
</ul>
<p>值得注意的是，计算年龄中位数将有助于更好地了解每个集群内的年龄分布。</p>
<p>而且，女性在整个数据集中的代表性更高，这就是为什么大多数集群中女性的数量比男性多。我们可以找到每个性别相对于整个数据集中的数字的百分比，以便更好地了解性别分布。</p>
<br>
<h2 id="为每个簇类构建角色">为每个簇类构建角色</h2>
<p>作为一名数据科学家，能够用你的分析讲述一个故事是一项重要的技能，这将帮助你的客户或利益相关者更容易理解你的发现。下面是一个基于创建的簇类构建消费者角色的示例：</p>
<p><strong>簇类0</strong></p>
<p>这个角色由对金钱非常谨慎的中年人组成。尽管与所有其他群体中的个人相比，他们的平均收入最高，但花费最少。这可能是因为他们有经济责任——比如为孩子的高等教育存钱。</p>
<p>建议：促销、优惠券和折扣代码将吸引这一领域的个人，因为他们倾向于少花钱。</p>
<p><strong>簇类1</strong></p>
<p>这部分人包括一个年龄较大的群体。他们挣的少，花的少，而且可能正在为退休储蓄。</p>
<p>建议：针对这些人的营销可以向这一领域的人推广医疗保健相关产品。</p>
<p><strong>簇类2</strong></p>
<p>这一部分由较年轻的年龄组组成。这部分人最有可能是第一批求职者。与其他人相比，他们赚的钱最少。然而，这些人都是热情的年轻人，他们喜欢过上好的生活方式，而且往往超支消费。</p>
<p>建议：由于这些年轻人花费很多，给他们提供旅游优惠券或酒店折扣可能是个好主意。为他们提供折扣的顶级服装和化妆品品牌也将很好地为这一部分。</p>
<p><strong>簇类3</strong></p>
<p>这部分人是由中年人组成的。这些人努力工作，积累了大量财富。他们也花大量的钱来过好的生活。</p>
<p>建议：由于他们的消费能力和人口结构，这些人很可能会寻找房产购买或投资。</p>
<br>
<h2 id="结论">结论</h2>
<p>在本文中，我已经详细的建立了一个用于客户细分的 K-Means 聚类模型。我们还探讨了聚类分析，并分析了每个聚类中个体的行为。最后，我们看了一些可以根据集群中每个人的属性提供的业务建议。</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>文本分析 | 中国企业高管团队创新注意力</title>
      <link>https://hidadeng.github.io/blog/how_chinese_tmtai_impact_corporate_inovation/</link>
      <pubDate>Thu, 09 Jun 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/how_chinese_tmtai_impact_corporate_inovation/</guid>
      <description>How does TMT attention to innovation of Chinese firms influence firm innovation activities? A study on the moderating role of corporate governance.</description>
      <content:encoded><![CDATA[<h2 id="代码下载">代码下载</h2>
<p><a href="%E9%AB%98%E7%AE%A1%E5%88%9B%E6%96%B0%E6%B3%A8%E6%84%8F%E5%8A%9B%E4%BB%A3%E7%A0%81.zip">点击下载本文代码</a></p>
<br>
<h2 id="title">Title</h2>
<p>中国企业高管团队创新注意力 对 如何影响企业创新活动？ 公司治理的调节作用研究</p>
<blockquote>
<p>Chen, Shouming, Miao Bu, Sibin Wu, and Xin Liang. &ldquo;How does TMT attention to innovation of Chinese firms influence firm innovation activities? A study on the moderating role of corporate governance.&rdquo; <em>Journal of Business Research</em> 68, no. 5 (2015): 1127-1135.</p>
</blockquote>
<br>
<h2 id="摘要">摘要</h2>
<p>本文借鉴高层梯队理论，探讨了高管团队创新注意力对中国企业创新活动的影响。本文预测 <strong>高管团队创新注意力</strong> 对企业创新活动的影响受到公司治理特征的调节作用。进一步利用从2006年至2011年6年间394家中国制造企业收集的1747个公司年度观察数据，实证检验上述假设。</p>
<p>研究结果表明:企业高管团队创新注意力与企业专利申请之间存在正相关关系，且当企业为民营企业、董事会规模较大或独立董事较少时，该正相关关系更强。</p>
<br>
<h2 id="tmtai指标构建">TMTAI指标构建</h2>
<p><strong>高管团队创新注意力TMTAI</strong>（ TMT attention to innovation）：利用6个创新相关的关键词对该指标进行测量，可以使用词典词频法， 计算TMTAI词在年报中的词频。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">innovations</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;知识产权&#39;</span><span class="p">,</span> <span class="s1">&#39;自主创新&#39;</span><span class="p">,</span> <span class="s1">&#39;专利保护&#39;</span><span class="p">,</span> <span class="s1">&#39;专利侵权&#39;</span><span class="p">,</span> <span class="s1">&#39;技术创新&#39;</span><span class="p">,</span> <span class="s1">&#39;核心技术&#39;</span><span class="p">]</span>
</code></pre></div><br>
<h2 id="待分析的数据">待分析的数据</h2>
<p><strong>原论文使用2006-2011年中国上市企业年报</strong>， 这里我自己随便找了点年报数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;reports.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
 <br>
<p>写代码，一定秉承先简单，再复杂，先局部后整体。只要在具体的局部成功了，就可以推而广之。</p>
<p>那么我们拿出一条文本，对一条文本做高管团队创新注意力tmtai词语的计算</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">jieba</span>

<span class="n">tmtai_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;知识产权&#39;</span><span class="p">,</span> <span class="s1">&#39;自主创新&#39;</span><span class="p">,</span> <span class="s1">&#39;专利保护&#39;</span><span class="p">,</span> <span class="s1">&#39;专利侵权&#39;</span><span class="p">,</span> <span class="s1">&#39;技术创新&#39;</span><span class="p">,</span> <span class="s1">&#39;核心技术&#39;</span><span class="p">]</span>
<span class="n">tmtai_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;tmtai&#39;</span><span class="p">:</span> <span class="n">tmtai_words</span><span class="p">}</span>

<span class="c1">#加入自定义词典，放置文本被错分</span>
<span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">tmtai_words</span><span class="p">:</span>
    <span class="n">jieba</span><span class="o">.</span><span class="n">add_word</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
    
<span class="c1"># 我瞎编的</span>
<span class="n">test_text</span> <span class="o">=</span> <span class="s1">&#39;我们公司尊重知识产权，但也要避免专利侵权，在下一阶段会加强自主创新，培育核心技术&#39;</span>


<span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">test_text</span><span class="p">,</span>
                       <span class="n">diction</span><span class="o">=</span><span class="n">tmtai_dict</span><span class="p">,</span>
                       <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">tmtai_num        4
stopword_num     9
word_num        19
sentence_num     1
dtype: int64
</code></pre></div><p>实验成功，接下来就可以推广到所有<strong>text</strong>这一列</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">jieba</span>

<span class="n">tmtai_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;知识产权&#39;</span><span class="p">,</span> <span class="s1">&#39;自主创新&#39;</span><span class="p">,</span> <span class="s1">&#39;专利保护&#39;</span><span class="p">,</span> <span class="s1">&#39;专利侵权&#39;</span><span class="p">,</span> <span class="s1">&#39;技术创新&#39;</span><span class="p">,</span> <span class="s1">&#39;核心技术&#39;</span><span class="p">]</span>
<span class="n">tmtai_dict</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;tmtai&#39;</span><span class="p">:</span> <span class="n">tmtai_words</span><span class="p">}</span>

<span class="c1">#加入自定义词典，放置文本被错分</span>
<span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">tmtai_words</span><span class="p">:</span>
    <span class="n">jieba</span><span class="o">.</span><span class="n">add_word</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
    
<span class="k">def</span> <span class="nf">tmtai_count</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span>
                                  <span class="n">diction</span><span class="o">=</span><span class="n">tmtai_dict</span><span class="p">,</span>
                                  <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">))</span>

<span class="c1">#选中text这列，统计其中每条文本中tmtai词出现次数</span>
<span class="n">tdf</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">tmtai_count</span><span class="p">)</span>
<span class="n">tdf</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#合并新旧两个dataframe</span>
<span class="n">result_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df</span><span class="p">,</span> <span class="n">tdf</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="c1">#tmtai指标是 词频，因此需要tmtai_num/word_num</span>
<span class="n">result_df</span><span class="p">[</span><span class="s1">&#39;tmtai_score&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">result_df</span><span class="p">[</span><span class="s1">&#39;tmtai_num&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">result_df</span><span class="p">[</span><span class="s1">&#39;word_num&#39;</span><span class="p">]</span>
<span class="n">result_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<p>查看结果，最后一列出现了我们感兴趣的 tmtai_score 指标</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">result_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<p>tmtai_score平均分</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#500家公司tmtai指标平均值</span>
<span class="n">result_df</span><span class="p">[</span><span class="s1">&#39;tmtai_score&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.0004088675846679111
</code></pre></div><p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>LIWC vs Python  | 文本分析之词典词频法略讲(含代码)</title>
      <link>https://hidadeng.github.io/blog/liwc_python_text_mining/</link>
      <pubDate>Wed, 08 Jun 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/liwc_python_text_mining/</guid>
      <description>语言查询和词数统计 (LIWC「Linguistic Inquiry and Word Count」) 数十年的实证研究——尤其是使用 LIWC 作为科学工具的研究——也为我们提供了理解、解释和量化心理、社会和行为现象的专业方法。</description>
      <content:encoded><![CDATA[<blockquote>
<p>本文原理介绍翻译自  <a href="https://www.liwc.app/help/howitworks">https://www.liwc.app/help/howitworks</a></p>
<p>对比及Python代码主要是自创作</p>
</blockquote>
<p><img loading="lazy" src="img/LIWC.png" alt=""  />
</p>
<p>LIWC是一种付费的文本分析软件，在学界知名度挺高的。今天翻译了LIWC: how it works <a href="https://www.liwc.app/help/howitworks">https://www.liwc.app/help/howitworks</a>  ，通过LIWC来侧面加深对 <strong>词典情感分析</strong> 的理解。</p>
<h2 id="词频可靠的指标">词频：可靠的指标</h2>
<p><strong>语言查询和词数统计 (LIWC「Linguistic Inquiry and Word Count」) 的核心逻辑来自数十年的科学研究表明，人们的语言可以提供极其丰富心理状态信息，包括情绪、思维方式和社会关注点</strong>。有时，这些见解是相当明显和直截了当的。例如，如果某人使用了很多像 <strong>「happy、excited、elated」</strong> 这样的词，他们可能会感到快乐，我们可以使用这些信息来可靠地估计他们当前的情绪状态。然而，<strong>言语行为和心理之间的关系往往不那么明显</strong>。例如，更自信、社会地位更高的人倾向于使用相对较高的 「you」 词，而使用 「me」词的频率相对较低。在这里，数十年的实证研究——尤其是使用 LIWC 作为科学工具的研究——也为我们提供了理解、解释和量化心理、社会和行为现象的专业方法。</p>
<p>但作为算法，实际上主要的计算方法是词频。而这点，借助Python可以完成从数据清洗到数据分析全部过程。</p>
<br>
<h2 id="丰富的词典">丰富的词典</h2>
<p>LIWC-22 带有 100 多个内置字典，用于捕捉人们的社会和心理状态。每本词典都包含一系列单词、词干、表情符号和其他特定的语言结构，这些结构已被识别为反映感兴趣的心理类别。例如，「认知过程cognitive processes」词典包括 1,000 多个条目，这些条目反映了一个人何时通过一般和更具体的方式积极处理信息。 「从属关系affiliation」词典包括超过 350 个条目，这些条目反映了一个人与他人联系的需要，其中包括 「community」 和 「together」 等词。</p>
<p>LIWC 读取给定文本并将文本中的每个单词与字典单词列表进行比较，并计算文本中与每个字典类别匹配的总单词的百分比。例如，如果 LIWC 使用内置的 LIWC-22 词典分析包含 1000 个单词的单个语音，它可能会发现其中 50 个单词与积极情绪有关，10 个单词与从属关系有关。 LIWC 会将这些数字转换为百分比：5.0% 的积极情绪和 1.0% 的从属关系。</p>
<p>请注意，许多 LIWC-22 类别是按层次结构组织的。根据定义，所有愤怒的词都被归类为负面情绪词，而负面情绪词又被归类为情绪词。另请注意，同一个词可能会被分类在多个字典中。例如，「celebrate」一词在积极情绪和成就词典中都有。</p>
<p>下图是liwc用户上传分享的自定义词典，目前有77个。好像需要购买liwc服务，才能下载里面的文件</p>
<p><img loading="lazy" src="img/liwc_user_diy_dict.png" alt=""  />
</p>
<br>
<h2 id="文本越长越好">文本越长越好</h2>
<p>不要忘记，LIWC 和所有文本分析工具一样，是一种相对粗糙的工具。它有时会在识别和计算单个单词时出错。考虑一下「mad」这个词——一个在愤怒词典中被计算在内的词。通常，今天，「mad」这个词确实反映了某种程度的愤怒。然而，有时它表达了喜悦（「he&rsquo;s mad for her.」）或精神不稳定（「mad as hatter」）。幸运的是，这很少成为问题，因为 LIWC 利用了语言使用的概率模型。是的，在给定的句子中，「mad」这个词可能被用来表达积极的情绪。然而，如果作者实际上正在经历积极情绪，他们通常会倾向于使用一个以上的积极情绪词，并且很可能很少使用其他愤怒词，这应该会导致积极情绪得分高而愤怒得分低。要记住的重要一点是，您分析的单词越多，结果就越值得信赖。 10,000 字的文本比 100 字的文本产生的结果可靠得多。任何少于 25-50 个单词的文本都应该以一定的怀疑态度来看待。</p>
<br>
<p>至此翻译结束</p>
<h2 id="简单对比python与liwc">简单对比：Python与LIWC</h2>
<table>
<thead>
<tr>
<th>工具</th>
<th>简介</th>
<th>算法</th>
<th>优势</th>
<th>劣势</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>编程语言</td>
<td>词频(典)法、词嵌入法</td>
<td>接近全能, 可以用Python搞定从数据采集、清洗、分析全流程<br><br/>可以把最新前沿应用到自己研究中 (nature、science、pnas相关文本分析方法的论文会大多会开源自己的Python代码)。</td>
<td>有一定的学习门槛<br></td>
</tr>
<tr>
<td>LIWC</td>
<td>软件</td>
<td>主要是词典法</td>
<td>学界认可<br><br>内置丰富的词典,  拿来即用。</td>
<td>不够灵活， 对中文支持不友好，内置词典几乎全是西方语言。</td>
</tr>
</tbody>
</table>
<br>
<h2 id="考虑数据清洗">考虑数据清洗</h2>
<p>综合来看，如果只使用 <strong>词频(词典)法</strong> 统计某一构念相关词语在文中出现的占比， LIWC 较 Python和R等编程语言有微弱优势。这里需要说明一下，完整的文本(数据)分析包含采集、清洗、分析。其中清洗部分工作量是最大的，数据科学家有个形象的统计，认为清洗占整个数据分析工作量的70%左右。</p>
<p>LIWC的上游环节往往需要借助Python和R等其他语言对原始数据做数据清洗和整理。</p>
<p>如果数据分析的代码量一共有100行，那么清洗的代码可能有70行，数据分析的代码只需再写30行。为了数据清洗任务，你可能不得不学Python，之后可再用LIWC；也可以  LIWC&amp;Python一起用。</p>
<br>
<h2 id="好消息">好消息</h2>
<p>大家可能觉得 <strong>词频(词典)法</strong> 算法过于粗暴， 通过对LIWC工作原理了解，我们知道LIWC软件底层算法也是词频(词典)法。</p>
<p>现在大家应该对 词频(词典)法 有了新的认识，更加有理论自信，技术自信。而Python对这种算法的运行其实很擅长的，</p>
<p>cntext是我一直在开发更新的一个包，一直想将常见的文本分析代码工作量压缩至 个位行数。</p>
<p>功能模块含</p>
<ul>
<li>
<p>stats 文本统计指标</p>
<ul>
<li>词频统计</li>
<li>可读性</li>
<li>内置pkl词典</li>
<li>情感分析</li>
</ul>
</li>
<li>
<p>dictionary构建词表(典)</p>
<ul>
<li>Sopmi 互信息扩充词典法</li>
<li>W2Vmodels 词向量扩充词典法</li>
<li>Glove Glove词向量模型</li>
</ul>
</li>
<li>
<p>similarity 文本相似度</p>
</li>
<li>
<p>cos相似度</p>
</li>
<li>
<p>jaccard相似度</p>
</li>
<li>
<p>编辑距离相似度</p>
</li>
<li>
<p>mind 计算文本中的认知方向（态度、偏见）</p>
</li>
</ul>
<p>比如对一条测试数据test_text， 使用 <strong>词频(词典)法</strong> 做情感分析，代码量不到5行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># 自定义情感词典</span>
<span class="n">diction</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;pos&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;高兴&#39;</span><span class="p">,</span> <span class="s1">&#39;快乐&#39;</span><span class="p">,</span> <span class="s1">&#39;分享&#39;</span><span class="p">],</span> <span class="s1">&#39;neg&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;难过&#39;</span><span class="p">,</span> <span class="s1">&#39;悲伤&#39;</span><span class="p">]}</span>

<span class="c1"># 测试数据</span>
<span class="n">test_text</span> <span class="o">=</span> <span class="s1">&#39;我今天得奖了，很高兴，我要将快乐分享大家。&#39;</span>

<span class="c1"># 情感计算</span>
<span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">test_text</span><span class="p">,</span>  <span class="n">diction</span><span class="o">=</span><span class="n">diction</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;pos_num&#39;: 3,
 &#39;neg_num&#39;: 0,
 &#39;stopword_num&#39;: 8,
 &#39;word_num&#39;: 14,
 &#39;sentence_num&#39;: 1}
</code></pre></div><br>
<p>即时对一个csv或excel文件，某一列文本做情感分析，代码量不超过10行。我们先看一下数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;test_sentiment_texts.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/res1.png" alt=""  />
</p>
<p>对text列做情感分析，使用自定义情感词典</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># 导入自定义情感词典</span>
<span class="n">diction</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;pos&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;高兴&#39;</span><span class="p">,</span> <span class="s1">&#39;快乐&#39;</span><span class="p">,</span> <span class="s1">&#39;分享&#39;</span><span class="p">],</span> <span class="s1">&#39;neg&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;难过&#39;</span><span class="p">,</span> <span class="s1">&#39;悲伤&#39;</span><span class="p">]}</span>

<span class="c1"># 情感计算</span>
<span class="k">def</span> <span class="nf">diy_senti</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span>  <span class="n">diction</span><span class="o">=</span><span class="n">diction</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">))</span>

<span class="c1">#读取数据</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;test_sentiment_texts.csv&#39;</span><span class="p">)</span>

<span class="c1">#选中text列，对该列进行情感计算，得到dataframe</span>
<span class="n">senti_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">diy_senti</span><span class="p">)</span>

<span class="c1">#将df和senti_df两个dataframe合并</span>
<span class="n">result_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df</span><span class="p">,</span> <span class="n">senti_df</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>


<span class="c1">#存储 &amp; 显示结果</span>
<span class="n">result_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;result_of_sentiment_texts.csv&#39;</span><span class="p">)</span>
<span class="n">result_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/res2.png" alt=""  />
</p>
<br>
<h2 id="本文代码">本文代码</h2>
<p><a href="liwc_python_text_mining.zip">点击下载</a></p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>招募小伙伴</title>
      <link>https://hidadeng.github.io/blog/we_need_you/</link>
      <pubDate>Wed, 08 Jun 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/we_need_you/</guid>
      <description>一人行快，众人行远。聚集热爱编程(Python、R)、数据挖掘技术、社科(经管)科研的小伙伴，一起做技术分享。</description>
      <content:encoded><![CDATA[<p>截止今日，「公众号: 大邓和他的Python」聚集了27000位Python爱好者。首先要感谢大家的信任和支持！</p>
<h2 id="引言">引言</h2>
<p>数据挖掘在社科、经管等领域中的应用已成为潮流和趋势。数据采集、数据分析、文本编码(清洗)、机器学习、深度学习等，借助Python一门语言可以全部搞定。互联网时代下，海量的、不规则的数据散落在各处，等待着大家去整理去探索。科学研究的进展离不开测量方法和工具的革新，在大数据时代，掌握Python会让我们的实证研究选题更广、更深、更新。</p>
<p>随着Python技术社区发展，针对不规则数据的处理，如网页文本、报告pdf、图片、音频、视频， 技术的可行性和有用性越来越高，学习Python的价值也在越来越大。大邓一直在学习和分享Python，如果要学习高质量的内容，还得翻出去查看英文社区资料。</p>
<p><strong>一人行快，众人行远。聚集热爱编程(Python、R)、数据挖掘技术、社科(经管)科研的小伙伴，一起做技术分享。</strong></p>
<br>
<h2 id="内容规划">内容规划</h2>
<p>未来公众号的选题内容规划</p>
<ol>
<li>网络爬虫(数据采集)</li>
<li>文本、音频、视频、文件等数据处理</li>
<li>机器学习、自然语言处理</li>
<li>经管、社科领域，借助数据挖掘的研究和技术</li>
<li>Python相关技术分享</li>
<li>其他(待定)</li>
</ol>
<br>
<h2 id="招募小伙伴">招募小伙伴</h2>
<h3 id="小伙伴气质">小伙伴气质</h3>
<ol>
<li>
<p>有Python、R基础</p>
</li>
<li>
<p>对数据分析感兴趣</p>
</li>
<li>
<p>高校社科(经管)专业 在读硕博</p>
</li>
</ol>
<br>
<h3 id="工作内容">工作内容</h3>
<p><strong>结合小伙伴兴趣、特长，划定工作内容：</strong></p>
<ol>
<li>
<p>技术：python或R相关资料收集、选题、代码整理。</p>
</li>
<li>
<p>运营：新媒体运营、社群、内容运营</p>
</li>
</ol>
<br>
<h2 id="福利">福利</h2>
<ul>
<li>
<p>尊重原作者署名权，并将为每篇被采纳的原创首发稿件，
提供业内具有竞争力稿酬，具体依据文章阅读量和文章质量阶梯制结算。</p>
</li>
<li>
<p>如作者内容分享成体系，文稿质量高，公众号可组织付费直播课。</p>
</li>
</ul>
<blockquote>
<p>根据小伙伴的工作绩效，大邓会从公众号产生的收益中，发放一定的补贴。</p>
</blockquote>
<br>
<h2 id="参与流程">参与流程</h2>
<ol>
<li>
<p>准备个人word简历：个人信息、科研经历、兴趣爱好、考/保研经历、技术分享等</p>
</li>
<li>
<p>投递个人简历至 <a href="mailto:thunderhit@qq.com">thunderhit@qq.com</a></p>
</li>
</ol>
]]></content:encoded>
    </item>
    
    <item>
      <title>NLP资源 | 汽车、金融等9大领域预训练词向量模型下载资源</title>
      <link>https://hidadeng.github.io/blog/pretained_nlp_models/</link>
      <pubDate>Wed, 25 May 2022 10:43:10 +0600</pubDate>
      
      <guid>/blog/pretained_nlp_models/</guid>
      <description>本文主要开放汽车、房产、教育、社会、娱乐、体育、金融、科技、游戏等9大领域预训练词向量，以及字符、依存、拼音与词性4类预训练向量地址，供大家一起使用</description>
      <content:encoded><![CDATA[<p>在前面的文章中，我们介绍了关于词向量的一些基础理论和训练方法，<strong>本文主要开放汽车、房产、教育、社会、娱乐、体育、金融、科技、游戏等9大领域预训练词向量，以及字符、依存、拼音与词性4类预训练向量地址，供大家一起使用</strong>。</p>
<h2 id="一汽车房产等9大领域预训练词向量">一、汽车、房产等9大领域预训练词向量</h2>
<p>通过收集多文本分类语料库，对汽车、房产、教育、社会、娱乐、体育、金融、科技、游戏等多个领域文本进行词向量训练，得到了如下预训练词向量的结果：</p>
<table>
<thead>
<tr>
<th>领域类型</th>
<th>模型类型</th>
<th>关键词集合</th>
<th>词的规模</th>
</tr>
</thead>
<tbody>
<tr>
<td>汽车</td>
<td>word_vector_auto.model.bin</td>
<td>117,510</td>
<td>200</td>
</tr>
<tr>
<td>房产</td>
<td>word_vector_house.model.bin</td>
<td>145,287</td>
<td>200</td>
</tr>
<tr>
<td>教育</td>
<td>word_vector_edu.model.bin</td>
<td>242,874</td>
<td>200</td>
</tr>
<tr>
<td>社会</td>
<td>word_vector_society.model.bin</td>
<td>221,395</td>
<td>200</td>
</tr>
<tr>
<td>娱乐</td>
<td>word_vector_ent.model.bin</td>
<td>230,665</td>
<td>200</td>
</tr>
<tr>
<td>体育</td>
<td>word_vector_sports.model.bin</td>
<td>95724</td>
<td>200</td>
</tr>
<tr>
<td>金融</td>
<td>word_vector_finance.model.bin</td>
<td>284035</td>
<td>200</td>
</tr>
<tr>
<td>科技</td>
<td>word_vector_tech.model.bin</td>
<td>108188</td>
<td>200</td>
</tr>
<tr>
<td>游戏</td>
<td>word_vector_games.model.bin</td>
<td>100821</td>
<td>200</td>
</tr>
</tbody>
</table>
<p><strong>开放地址：</strong></p>
<p><a href="https://pan.baidu.com/s/1jEHFoAmVXlB67Q28-CeTvw">https://pan.baidu.com/s/1jEHFoAmVXlB67Q28-CeTvw</a> 密码: 1pa6</p>
<h2 id="二预训练字符依存拼音与词性向量">二、预训练字符、依存、拼音与词性向量</h2>
<p>通过对字符、依存、拼音与词性进行切分，使用同样的方式，可以得到相应的预训练词向量。</p>
<table>
<thead>
<tr>
<th>向量名称</th>
<th style="text-align:center">向量含义</th>
<th style="text-align:center">词数</th>
<th style="text-align:center">维度</th>
<th style="text-align:center">例子</th>
</tr>
</thead>
<tbody>
<tr>
<td>de_vec_10</td>
<td style="text-align:center">依存关系向量</td>
<td style="text-align:center">13</td>
<td style="text-align:center">10</td>
<td style="text-align:center">SBV, ATT</td>
</tr>
<tr>
<td>pinyin_vec_300</td>
<td style="text-align:center">汉语拼音向量</td>
<td style="text-align:center">146242</td>
<td style="text-align:center">300</td>
<td style="text-align:center">ni, hao</td>
</tr>
<tr>
<td>postag_vec_30</td>
<td style="text-align:center">汉语词性向量</td>
<td style="text-align:center">59</td>
<td style="text-align:center">300</td>
<td style="text-align:center">n,v,a,d</td>
</tr>
<tr>
<td>token_vec_300</td>
<td style="text-align:center">汉语字向量</td>
<td style="text-align:center">20029</td>
<td style="text-align:center">300</td>
<td style="text-align:center">刘,焕,勇</td>
</tr>
<tr>
<td>word_vec_300</td>
<td style="text-align:center">汉语词向量</td>
<td style="text-align:center">673266</td>
<td style="text-align:center">300</td>
<td style="text-align:center">刘焕勇</td>
</tr>
</tbody>
</table>
<p><strong>开放地址：</strong></p>
<p><a href="https://github.com/liuhuanyong/ChineseEmbedding">https://github.com/liuhuanyong/ChineseEmbedding</a></p>
<p><strong>向量效果：</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> 
 ***********************字符向量************************
    token:刘
    (&#39;李&#39;, 0.7306396961212158),(&#39;陈&#39;, 0.7201231122016907)
    (&#39;赵&#39;, 0.6974461674690247),(&#39;杨&#39;, 0.6972213983535767)
    (&#39;吴&#39;, 0.6851627230644226),(&#39;徐&#39;, 0.6516467332839966)
    (&#39;郭&#39;, 0.6499480605125427),(&#39;蔡&#39;, 0.6175302267074585)
    (&#39;郑&#39;, 0.6092196106910706),(&#39;孙&#39;, 0.5950524210929871)
    token:丑
    (&#39;卯&#39;, 0.6074919700622559),(&#39;酉&#39;, 0.5910211801528931)
    (&#39;巳&#39;, 0.5581363439559937),(&#39;戌&#39;, 0.43932047486305237)
    (&#39;戊&#39;, 0.41449615359306335),(&#39;壬&#39;, 0.40456631779670715)
    (&#39;謤&#39;, 0.367109090089798),(&#39;绯&#39;, 0.3643313944339752),
    (&#39;寅&#39;, 0.36351141333580017),(&#39;旽&#39;, 0.3549465537071228)


***********************依存向量************************
    dependency rel:ATT
    (&#39;COO&#39;, 0.14239487051963806),(&#39;ADV&#39;, -0.16987691819667816)
    (&#39;RAD&#39;, -0.2357601821422577),(&#39;HED&#39;, -0.2401314228773117)
    (&#39;SBV&#39;, -0.25625932216644287),(&#39;WP&#39;, -0.27165737748146057)
    (&#39;LAD&#39;, -0.2902592420578003),(&#39;POB&#39;, -0.2990782558917999)
    (&#39;VOB&#39;, -0.37553706765174866),(&#39;IOB&#39;, -0.6669262647628784)
    dependency rel:POB
    (&#39;IOB&#39;, 0.16698899865150452),(&#39;DBL&#39;, 0.16678886115550995)
    (&#39;FOB&#39;, 0.1657436639070511),(&#39;CMP&#39;, 0.14784857630729675)
    (&#39;VOB&#39;, 0.1461176574230194),(&#39;SBV&#39;, 0.08011472970247269)
    (&#39;LAD&#39;, -0.022307466715574265),(&#39;WP&#39;, -0.022942926734685898)
    (&#39;HED&#39;, -0.037264980375766754),(&#39;RAD&#39;, -0.042251598089933395)

  
  ***********************拼音向量************************
    pinyin:wo
    (&#39;shei&#39;, 0.6129732131958008)(&#39;ta&#39;, 0.6081706285476685)
    (&#39;nin&#39;, 0.5819231867790222),(&#39;！&#39;, 0.5435523986816406)
    (&#39;……&#39;, 0.48428624868392944),(&#39;ai&#39;, 0.47832390666007996)
    (&#39;o&#39;, 0.4761071801185608),(&#39;。』&#39;, 0.4598163366317749)
    (&#39;...&#39;, 0.45207729935646057),(&#39;ni&#39;, 0.44975683093070984)
    pinyin:guo
    (&#39;dang&#39;, 0.3908974528312683),(&#39;yuan&#39;, 0.378823846578598)
    (&#39;zu&#39;, 0.35387369990348816),(&#39;hua&#39;, 0.3405681848526001)
    (&#39;zheng&#39;, 0.3355437219142914),(&#39;yi&#39;, 0.3333034813404083)
    (&#39;ren&#39;, 0.3194104731082916),(&#39;jun&#39;, 0.3187354505062103)
    (&#39;hui&#39;, 0.31342023611068726),(&#39;xin&#39;, 0.3096797466278076)

   
   ***********************词性向量************************
    word postag:a
    (&#39;d&#39;, 0.7203904986381531),(&#39;c&#39;, 0.6124969720840454)
    (&#39;v&#39;, 0.4963228106498718),(&#39;an&#39;, 0.4531499147415161)
    (&#39;uz&#39;, 0.4459834396839142),(&#39;ud&#39;, 0.42059916257858276)
    (&#39;r&#39;, 0.4090540111064911),(&#39;uj&#39;, 0.4061364233493805)
    (&#39;i&#39;, 0.38707998394966125),(&#39;l&#39;, 0.3551557660102844)
    word postag:n
    (&#39;b&#39;, 0.7030695676803589),(&#39;vn&#39;, 0.490166038274765)
    (&#39;p&#39;, 0.4858315885066986),(&#39;v&#39;, 0.4499088227748871)
    (&#39;nt&#39;, 0.44155171513557434),(&#39;f&#39;, 0.26609259843826294)
    (&#39;s&#39;, 0.2639649212360382),(&#39;l&#39;, 0.24365971982479095)
    (&#39;ns&#39;, 0.2278469204902649),(&#39;m&#39;, 0.202927365899086)
    
    ***********************词向量************************
    word:爱情
    (&#39;爱恋&#39;, 0.6931096315383911),(&#39;真爱&#39;, 0.6897798776626587)
    (&#39;婚姻&#39;, 0.6540514826774597),(&#39;浪漫爱情&#39;, 0.6535360813140869)
    (&#39;情感&#39;, 0.6501022577285767),(&#39;感情&#39;, 0.6403399705886841)
    (&#39;纯爱&#39;, 0.6394841074943542),(&#39;爱情故事&#39;, 0.6282097101211548)
    (&#39;校园爱情&#39;, 0.6078493595123291),(&#39;情爱&#39;, 0.5976818799972534)
    word:创新
    (&#39;技术创新&#39;, 0.7648976445198059),(&#39;不断创新&#39;, 0.7172579765319824)
    (&#39;创新型&#39;, 0.6573833227157593),(&#39;创新能力&#39;, 0.6533682942390442)
    (&#39;创新性&#39;, 0.6160774827003479),(&#39;革新&#39;, 0.6159394383430481)
    (&#39;人才培养&#39;, 0.6093565821647644),(&#39;开拓创新&#39;, 0.6015594601631165)
    (&#39;探索&#39;, 0.5987343788146973),(&#39;技术革新&#39;, 0.5949685573577881)
</code></pre></div><h2 id="关于作者">关于作者</h2>
<p>老刘，刘焕勇，NLP开源爱好者与践行者，主页：https://liuhuanyong.github.io。</p>
<p>就职于360人工智能研究院、曾就职于中国科学院软件研究所。</p>
<p><strong>老刘说NLP</strong>，将定期发布语言资源、工程实践、技术总结等内容，欢迎关注。</p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Wordify | 发现和区分消费者词汇的工具</title>
      <link>https://hidadeng.github.io/blog/jcr_wordify/</link>
      <pubDate>Sun, 15 May 2022 10:43:10 +0600</pubDate>
      
      <guid>/blog/jcr_wordify/</guid>
      <description>工具介绍； 在不同上下文中，消费者的单词使用如何变化</description>
      <content:encoded><![CDATA[<p>JCR2021一篇软件介绍，支持中英文在内的多种语言。</p>
<blockquote>
<p>Hovy, D., Melumad, S. and Inman, J.J., 2021. Wordify: a tool for discovering and differentiating consumer vocabularies. <em>Journal of Consumer Research</em>, <em>48</em>(3), pp.394-414.</p>
</blockquote>
<br>
<h2 id="摘要">摘要:</h2>
<p>这项工作介绍了一个免费易用的在线文本分析工具<strong>Wordify</strong>，用于了解”<strong>在不同上下文中，消费者的单词使用如何变化</strong>“。Wordify 使用随机逻辑回归 (RLR) 来识别最能区分来自不同预分类文本的用词差异，例如男性与女性撰写的帖子用词差异，或好评与差评的用词差异。我们提供了说明性示例，以展示该工具如何用于多种用途，例如 (1) 揭示消费者在智能手机和 PC 上撰写评论时使用的独特词汇，(2) 发现推文中使用的词语在假定的支持者和反对有争议的广告，以及 (3) 扩展基于字典的情绪测量工具的字典。我们凭经验表明，Wordify 的 RLR 算法在区分词汇方面比支持向量机和卡方选择器表现更好，同时在计算时间上具有显着优势。还讨论了 Wordify 与其他文本分析工具的结合使用，例如概率主题建模和情感分析，以更深入地了解语言在消费者行为中的作用。</p>
<p><strong>关键词</strong>：文本分析，自然语言处理，语言，情感分析</p>
<br>
<h2 id="本地wordify配置">本地wordify配置</h2>
<p>作者在github公开了wordify的代码，仓库地址 <a href="https://github.com/MilaNLProc/wordify-webapp-streamlit">https://github.com/MilaNLProc/wordify-webapp-streamlit</a></p>
<p>大致的使用步骤</p>
<ol>
<li>wordify要配置spacy语言模型，配置方法参照以前分享的<a href="https://hidadeng.github.io/blog/spacy_industry_application/">spacy产业级自然语言处理包</a></li>
<li>到github仓库下载代码，解压至桌面</li>
<li>打开命令行, 执行命令<code>cd desktop/wordify-webapp-streamlit-main</code></li>
<li>命令行执行<code>pip3 install -r requirements.txt</code></li>
<li>命令行执行<code>streamlit run app.py</code>， 此时命令行中出现本地服务地址(类似于网站)，浏览器打开这个地址即可</li>
</ol>
<p><strong>本地配置比较有难度，建议使用在线版https://wordify.unibocconi.it/</strong></p>
<br>
<h2 id="在线展示网站">在线展示网站</h2>
<h3 id="网址">网址</h3>
<p><a href="https://wordify.unibocconi.it/">https://wordify.unibocconi.it/</a></p>
<p><img loading="lazy" src="img/wordify_streamilit_website.png" alt=""  />
</p>
<h3 id="使用方法">使用方法</h3>
<ul>
<li>
<p>表格文件需含两个字段名，分别为<strong>text</strong>和<strong>label</strong>, 中文数据需要先为用空格间隔词语的文本样式。<a href="test_chinese.xlsx">中文样例文件</a></p>
</li>
<li>
<p>表格文件支持csv、xlsx、tsv、parquet，10M以内。数据上传成功后，页面会发生变化</p>
</li>
<li>
<p>在线页面在运行时一定不要刷新，这样会中断数据分析的过程</p>
</li>
<li>
<p>Wordify 的性能取决于文件中各个文本的长度。</p>
</li>
</ul>
<p><img loading="lazy" src="img/wordify_chinese_process.png" alt=""  />
</p>
<br>
<h2 id="点评">点评</h2>
<p>以往的文本分析思路，大多无视<strong>混杂效应Confound</strong>，主要从文本中抽取一些变量，如情感值，用于后期计量建模，试图挖掘<strong>文本指标(如情感值)<strong>与</strong>Outcome</strong>之间的因果关系。</p>
<blockquote>
<p>混杂效应，例如研究推文正负面情感对网友点击行为的影响。</p>
<p>研究的机制可以简化为<strong>不同的文本情感&ndash;&gt;产生不同的网友点击</strong></p>
<p>但是有可能不全是情感影响了网友的点击，作者存在性别差异，女性比男性更容易表达积极文本信息，而且在互联网世界女性比男性可能更有吸引力。</p>
</blockquote>
<p>论文中没提及Confound效应，但粗略浏览下，wordify创新地考虑了confound场景，通过文本分析，看看不同群体用词的差异。</p>
<p>wordify的缺点本地版配置太难，网页版运行太慢。0.6M的中文数据，我等了20min，还是没有跑出结果，果断关闭在线网页。总之感觉没有文中说的那么易用，门槛还是太高了。有耐心的朋友，如果感兴趣，可以去试试。</p>
<p>如果研究考虑文本的confound效应，可以参考<strong>causalnlp包</strong>，虽然配置难，但是运行速度还是有保证。</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>karateclub库 | 计算社交网络中节点的向量</title>
      <link>https://hidadeng.github.io/blog/karateclub_tutorial/</link>
      <pubDate>Tue, 10 May 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/karateclub_tutorial/</guid>
      <description>使用karateclub计算社交网络中节点的向量，有了节点的向量，就可以基于向量思维比较节点异同</description>
      <content:encoded><![CDATA[<p><a href="https://karateclub.readthedocs.io/en/latest">karateclub</a>是小规模图挖掘研究的一把瑞士军刀， 可以对图形结构化数据进行无监督学习。</p>
<ul>
<li>首先，可以计算出节点、图的特征向量</li>
<li>其次，它包括多种重叠和非重叠的社区发现方法。</li>
</ul>
<br>
<h2 id="代码下载">代码下载</h2>
<p><a href="karateclub_example_code.zip">click to download</a></p>
<br>
<h2 id="数据格式">数据格式</h2>
<p>karateclub假设用户提供的用于<strong>节点嵌入</strong>和<strong>社区检测</strong>的 NetworkX 图具有以下重要属性：</p>
<ul>
<li>节点用整数索引</li>
<li>节点索引从零开始，索引是连续的</li>
</ul>
<p><strong>节点的属性矩阵</strong>可以提供为 scipy sparse 和 numpy 数组。返回的社区成员字典和嵌入矩阵使用相同的数字连续索引。</p>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pip3</span> <span class="n">install</span> <span class="n">karateclub</span>
</code></pre></div><br>
<h2 id="准备数据">准备数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;karate_club_graph.csv&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>

<span class="nb">print</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span><span class="o">.</span><span class="n">to_markdown</span><span class="p">())</span>

<span class="nb">print</span><span class="p">()</span>

<span class="n">edges</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;src&#39;</span><span class="p">],</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;tgt&#39;</span><span class="p">]))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">edges</span><span class="p">)</span>

</code></pre></div><p>Run</p>
<pre><code>Index(['src', 'tgt'], dtype='object')

|    |   src |   tgt |
|---:|------:|------:|
|  0 |     0 |     1 |
|  1 |     0 |     2 |
|  2 |     0 |     3 |
|  3 |     0 |     4 |
|  4 |     0 |     5 |

[(0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 10), (0, 11), (0, 12), (0, 13), (0, 17), (0, 19), (0, 21), (0, 31), (1, 2), (1, 3), (1, 7), (1, 13), (1, 17), (1, 19), (1, 21), (1, 30), (2, 3), (2, 7), (2, 8), (2, 9), (2, 13), (2, 27), (2, 28), (2, 32), (3, 7), (3, 12), (3, 13), (4, 6), (4, 10), (5, 6), (5, 10), (5, 16), (6, 16), (8, 30), (8, 32), (8, 33), (9, 33), (13, 33), (14, 32), (14, 33), (15, 32), (15, 33), (18, 32), (18, 33), (19, 33), (20, 32), (20, 33), (22, 32), (22, 33), (23, 25), (23, 27), (23, 29), (23, 32), (23, 33), (24, 25), (24, 27), (24, 31), (25, 31), (26, 29), (26, 33), (27, 33), (28, 31), (28, 33), (29, 32), (29, 33), (30, 32), (30, 33), (31, 32), (31, 33), (32, 33)]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">networkx</span> <span class="k">as</span> <span class="nn">nx</span>

<span class="n">graph</span> <span class="o">=</span> <span class="n">nx</span><span class="o">.</span><span class="n">Graph</span><span class="p">()</span>
<span class="n">graph</span><span class="o">.</span><span class="n">add_edges_from</span><span class="p">(</span><span class="n">edges</span><span class="p">)</span>
<span class="n">nx</span><span class="o">.</span><span class="n">draw</span><span class="p">(</span><span class="n">graph</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<p>​ <br>
<img loading="lazy" src="output_4_0.png" alt="png"  />

​</p>
<br>
<h2 id="社区发现">社区发现</h2>
<p>现在让我们使用LabelPropagation算法来发现网络中的社区结构。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">karateclub</span> <span class="kn">import</span> <span class="n">LabelPropagation</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">LabelPropagation</span><span class="p">()</span>
<span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">graph</span><span class="p">)</span>
<span class="n">cluster_membership</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">get_memberships</span><span class="p">()</span>
<span class="n">cluster_membership</span>
</code></pre></div><p>Run</p>
<pre><code>{23: 8,
 33: 8,
 5: 10,
 7: 1,
 28: 31,
 4: 10,
 3: 1,
 31: 31,
 20: 8,
 19: 1,
 6: 10,
 32: 8,
 29: 8,
 9: 1,
 14: 8,
 2: 1,
 0: 1,
 17: 1,
 25: 31,
 22: 8,
 11: 1,
 13: 1,
 1: 1,
 24: 31,
 15: 8,
 18: 8,
 26: 8,
 27: 8,
 16: 10,
 12: 1,
 30: 8,
 21: 1,
 8: 8,
 10: 10}
</code></pre>
<p>在有34个节点的图中，发现了4个社区，分别是1、8、10、31。</p>
<br>
<h2 id="node-embeddings">Node embeddings</h2>
<p>计算节点的向量。​使用 Diff2vec 拟合数据的节点嵌入(向量)，具有少量维度、每个源节点的扩散和短欧拉游走。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">karateclub</span> <span class="kn">import</span> <span class="n">Diff2Vec</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">Diff2Vec</span><span class="p">(</span><span class="n">diffusion_number</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> 
                 <span class="n">diffusion_cover</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> 
                 <span class="n">dimensions</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

<span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">graph</span><span class="p">)</span>
<span class="n">X</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">get_embedding</span><span class="p">()</span>
<span class="n">X</span><span class="o">.</span><span class="n">shape</span>
</code></pre></div><p>Run</p>
<pre><code>(34, 5)
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">X</span>
</code></pre></div><p>Run</p>
<pre><code>array([[ 1.3687179 , -0.33502993, -0.3294797 ,  0.40154558,  1.0270709 ],
       [ 0.88167036, -0.3201618 , -0.34293872,  0.41519755,  0.71964073],
       [ 0.8756805 , -0.21934716, -0.33261183,  0.33785722,  0.51631075],
       [ 0.9768452 , -0.39260587, -0.39460638,  0.28851682,  0.8665034 ],
       [ 0.4809215 , -0.28729865, -0.19276802,  0.22588767,  0.07305563],
       [ 0.5580538 , -0.28137547, -0.1947159 ,  0.23712516,  0.49257705],
       [ 0.23477663,  0.04262228,  0.07154325,  0.02909669,  0.33999097],
       [ 1.1882199 , -0.21742308, -0.26985615,  0.44171503,  0.6679048 ],
       [ 1.0287609 , -0.27409104, -0.04119629,  0.30143994,  0.704676  ],
       [ 0.5700088 , -0.26341844,  0.01560158, -0.08039217,  0.41796318],
       [ 0.5753763 , -0.2242508 , -0.1795436 ,  0.0705331 ,  0.46571913],
       [ 0.46763912, -0.17108741, -0.22459361,  0.03058788,  0.05998428],
       [ 0.5500626 , -0.12745889, -0.28661036,  0.16889155,  0.48200938],
       [ 0.6217582 , -0.10251168, -0.0713837 ,  0.13550574,  0.60422456],
       [ 0.9797377 , -0.46282482, -0.09380057,  0.2749968 ,  0.7020155 ],
       [ 0.38830167, -0.30841848, -0.20950563, -0.02130592,  0.0836651 ],
       [ 0.57225037, -0.04150235, -0.1246101 ,  0.06918757,  0.23083903],
       [ 0.6431406 , -0.04898892, -0.05708801,  0.1311793 ,  0.46377632],
       [ 0.541667  , -0.16031542, -0.33119023,  0.10385639,  0.39525154],
       [ 0.65543544, -0.27534947, -0.28757   ,  0.2080029 ,  0.5288213 ],
       [ 0.46381798, -0.07729273, -0.09209982,  0.11292508,  0.36836028],
       [ 0.53826964, -0.09915172, -0.09243581,  0.15036733,  0.5449071 ],
       [ 0.31599265, -0.22078821, -0.02872767,  0.07436654,  0.28573534],
       [ 1.0706906 , -0.27783617, -0.16653039,  0.2631594 ,  0.6408689 ],
       [ 0.67875004, -0.34441757, -0.10262538,  0.2588695 ,  0.38405937],
       [ 0.41786563, -0.10344986, -0.19508548,  0.19657765,  0.22006002],
       [ 0.7855942 , -0.27200857,  0.02204541,  0.09168041,  0.42220354],
       [ 0.7773458 , -0.11727296, -0.24145149,  0.04537854,  0.5737133 ],
       [ 0.75732976, -0.314953  , -0.15383345,  0.02065313,  0.51843405],
       [ 0.7226543 , -0.31919608, -0.18878649,  0.15413427,  0.42012522],
       [ 0.43411565, -0.17342259, -0.28042233,  0.26853496,  0.49947587],
       [ 1.1565564 , -0.36802933, -0.12613232,  0.32381424,  0.75113887],
       [ 1.1192797 , -0.162529  , -0.17195942,  0.39265418,  0.83656436],
       [ 1.2231556 , -0.5336606 , -0.14015286,  0.14054438,  0.5695296 ]],
      dtype=float32)
</code></pre>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>cntext库 |  Python文本分析包更新</title>
      <link>https://hidadeng.github.io/blog/cntext_tutorial/</link>
      <pubDate>Mon, 09 May 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/cntext_tutorial/</guid>
      <description>扩展词典、情感分析、可阅读性，内置9种情感词典，涵盖中英文</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/hidadeng/cntext"><img loading="lazy" src="https://img.shields.io/badge/cntext-%e4%b8%ad%e6%96%87%e6%96%87%e6%9c%ac%e5%88%86%e6%9e%90%e5%ba%93-orange?style=for-the-badge&amp;logo=appveyor" alt=""  />
</a></p>
<p><a href="version1.2.md">旧版cntext入口</a></p>
<p>中文文本分析库，可对文本进行词频统计、词典扩充、情绪分析、相似度、可读性等</p>
<ul>
<li><a href="https://github.com/hidadeng/cntext">github地址</a> <code>https://github.com/hidadeng/cntext</code></li>
<li><a href="https://pypi.org/project/cntext/">pypi地址</a>  <code>https://pypi.org/project/cntext/</code></li>
<li><a href="https://ke.qq.com/course/482241?tuin=163164df">视频课-<strong>Python网络爬虫与文本数据分析</strong></a></li>
</ul>
<p>功能模块含</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> <strong>stats</strong>  文本统计指标
<ul>
<li><input checked="" disabled="" type="checkbox"> 词频统计</li>
<li><input checked="" disabled="" type="checkbox"> 可读性</li>
<li><input checked="" disabled="" type="checkbox"> 内置pkl词典</li>
<li><input checked="" disabled="" type="checkbox"> <strong>情感分析</strong></li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> <strong>dictionary</strong> 构建词表(典)
<ul>
<li><input checked="" disabled="" type="checkbox"> Sopmi 互信息扩充词典法</li>
<li><input checked="" disabled="" type="checkbox"> W2Vmodels 词向量扩充词典法</li>
<li><input checked="" disabled="" type="checkbox"> Glove Glove词嵌入模型</li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> <strong>similarity</strong>   文本相似度
<ul>
<li><input checked="" disabled="" type="checkbox"> cos相似度</li>
<li><input checked="" disabled="" type="checkbox"> jaccard相似度</li>
<li><input checked="" disabled="" type="checkbox"> 编辑距离相似度</li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> <strong>mind.py</strong> 计算文本中的认知方向（态度、偏见）</li>
</ul>
<br>
<h2 id="代码下载">代码下载</h2>
<p><a href="cntext_examples.zip">click to download</a></p>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install cntext
</code></pre></div><br>
<h2 id="quickstart">QuickStart</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">help</span><span class="p">(</span><span class="n">ct</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="nx">Help</span> <span class="nx">on</span> <span class="kn">package</span> <span class="nx">cntext</span><span class="p">:</span>

<span class="nx">NAME</span>
    <span class="nx">cntext</span>

<span class="nx">PACKAGE</span> <span class="nx">CONTENTS</span>
    <span class="nx">mind</span>
    <span class="nx">dictionary</span>
    <span class="nx">similarity</span>
    <span class="nx">stats</span>
</code></pre></div><br>
<h2 id="一stats">一、stats</h2>
<p>目前stats内置的函数有</p>
<ul>
<li><strong>readability</strong>  文本可读性</li>
<li><strong>term_freq</strong> 词频统计函数</li>
<li><strong>dict_pkl_list</strong>  获取cntext内置词典列表(pkl格式)</li>
<li><strong>load_pkl_dict</strong> 导入pkl词典文件</li>
<li><strong>sentiment</strong> 情感分析</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">term_freq</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Counter({&#39;看待&#39;: 1,
         &#39;网文&#39;: 1,
         &#39;作者&#39;: 1,
         &#39;黑客&#39;: 1,
         &#39;大佬&#39;: 1,
         &#39;盗号&#39;: 1,
         &#39;改文因&#39;: 1,
         &#39;万分&#39;: 1,
         &#39;惭愧&#39;: 1,
         &#39;停&#39;: 1})
</code></pre></div><br>
<h3 id="11--readability">1.1  readability</h3>
<p>文本可读性，指标越大，文章复杂度越高，可读性越差。</p>
<p>readability(text, lang=&lsquo;chinese&rsquo;)</p>
<ul>
<li>text: 文本字符串数据</li>
<li>lang: 语言类型，&ldquo;chinese&quot;或&quot;english&rdquo;，默认&quot;chinese&quot;</li>
</ul>
<p><strong>中文可读性</strong> 算法参考自</p>
<blockquote>
<p>徐巍,姚振晔,陈冬华.中文年报可读性：衡量与检验[J].会计研究,2021(03):28-44.</p>
<ul>
<li>readability1 &mdash;每个分句中的平均字数</li>
<li>readability2  &mdash;每个句子中副词和连词所占的比例</li>
<li>readability3  &mdash;参考Fog Index， readability3=(readability1+readability2)×0.5</li>
</ul>
</blockquote>
<p>​</p>
<p>以上三个指标越大，都说明文本的复杂程度越高，可读性越差。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text1</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>


<span class="n">ct</span><span class="o">.</span><span class="n">readability</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;readability1&#39;: 28.0,
 &#39;readability2&#39;: 0.15789473684210525,
 &#39;readability3&#39;: 14.078947368421053}
</code></pre></div><br>
<p>句子中的符号变更会影响结果</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text2</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>
<span class="n">ct</span><span class="o">.</span><span class="n">readability</span><span class="p">(</span><span class="n">text2</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;readability1&#39;: 27.0,
 &#39;readability2&#39;: 0.16666666666666666,
 &#39;readability3&#39;: 13.583333333333334}
</code></pre></div><p><br><br></p>
<h3 id="12--term_freq">1.2  term_freq</h3>
<p>词频统计函数，返回Counter类型</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span> 

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">term_freq</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Counter({&#39;看待&#39;: 1,
         &#39;网文&#39;: 1,
         &#39;作者&#39;: 1,
         &#39;黑客&#39;: 1,
         &#39;大佬&#39;: 1,
         &#39;盗号&#39;: 1,
         &#39;改文因&#39;: 1,
         &#39;万分&#39;: 1,
         &#39;惭愧&#39;: 1,
         &#39;停&#39;: 1})
</code></pre></div><br>
<h3 id="13-dict_pkl_list">1.3 dict_pkl_list</h3>
<p>获取cntext内置词典列表(pkl格式)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># 获取cntext内置词典列表(pkl格式)</span>
<span class="n">ct</span><span class="o">.</span><span class="n">dict_pkl_list</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;DUTIR.pkl&#39;,
 &#39;HOWNET.pkl&#39;,
 &#39;sentiws.pkl&#39;,
 &#39;ChineseFinancialFormalUnformalSentiment.pkl&#39;,
 &#39;ANEW.pkl&#39;,
 &#39;LSD2015.pkl&#39;,
 &#39;NRC.pkl&#39;,
 &#39;geninqposneg.pkl&#39;,
 &#39;HuLiu.pkl&#39;,
 &#39;AFINN.pkl&#39;,
 &#39;ADV_CONJ.pkl&#39;,
 &#39;LoughranMcDonald.pkl&#39;,
 &#39;STOPWORDS.pkl&#39;, 
 &#39;concreteness.pkl&#39;]
</code></pre></div><p>词典对应关系, 部分情感词典资料整理自 <a href="https://github.com/quanteda/quanteda.sentiment">quanteda.sentiment</a></p>
<table>
<thead>
<tr>
<th>pkl文件</th>
<th>词典</th>
<th>语言</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>DUTIR.pkl</td>
<td>大连理工大学情感本体库</td>
<td>中文</td>
<td>七大类情绪，<code>哀, 好, 惊, 惧, 乐, 怒, 恶</code></td>
</tr>
<tr>
<td>HOWNET.pkl</td>
<td>知网Hownet词典</td>
<td>中文</td>
<td>正面词、负面词</td>
</tr>
<tr>
<td>sentiws.pkl</td>
<td>SentimentWortschatz (SentiWS)</td>
<td>英文</td>
<td>正面词、负面词；<br>效价</td>
</tr>
<tr>
<td>ChineseFinancialFormalUnformalSentiment.pkl</td>
<td>金融领域正式、非正式；积极消极</td>
<td>中文</td>
<td>formal-pos、<br>formal-neg；<br>unformal-pos、<br>unformal-neg</td>
</tr>
<tr>
<td>ANEW.pkl</td>
<td>英语单词的情感规范Affective Norms for English Words (ANEW)</td>
<td>英文</td>
<td>词语效价信息</td>
</tr>
<tr>
<td>LSD2015.pkl</td>
<td>Lexicoder Sentiment Dictionary (2015)</td>
<td>英文</td>
<td>正面词、负面词</td>
</tr>
<tr>
<td>NRC.pkl</td>
<td>NRC Word-Emotion Association Lexicon</td>
<td>英文</td>
<td>细粒度情绪词；</td>
</tr>
<tr>
<td>geninqposneg.pkl</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>HuLiu.pkl</td>
<td>Hu&amp;Liu (2004)正、负情感词典</td>
<td>英文</td>
<td>正面词、负面词</td>
</tr>
<tr>
<td>AFINN.pkl</td>
<td>尼尔森 (2011) 的“新 ANEW”效价词表</td>
<td>英文</td>
<td>情感效价信息valence</td>
</tr>
<tr>
<td>LoughranMcDonald.pkl</td>
<td>会计金融LM词典</td>
<td>英文</td>
<td>金融领域正、负面情感词</td>
</tr>
<tr>
<td>ADV_CONJ.pkl</td>
<td>副词连词</td>
<td>中文</td>
<td></td>
</tr>
<tr>
<td>STOPWORDS.pkl</td>
<td></td>
<td>中、英</td>
<td>停用词</td>
</tr>
<tr>
<td>concreteness.pkl</td>
<td>Brysbaert, M., Warriner, A. B., &amp; Kuperman, V. (2014). Concreteness ratings for 40 thousand generally known English word lemmas. Behavior Research Methods, 46, 904–911</td>
<td>English</td>
<td>word &amp; concreateness score</td>
</tr>
</tbody>
</table>
<h3 id="注意">注意:</h3>
<ul>
<li>
<p>如果用户情绪分析时使用DUTIR词典发表论文，请在论文中添加诸如“使用了大连理工大学信息检索研究室的情感词汇本体” 字样加以声明。参考文献中加入引文“徐琳宏,林鸿飞,潘宇,等.情感词汇本体的构造[J]. 情报学报, 2008, 27(2): 180-185.”</p>
</li>
<li>
<p>如果大家有制作的词典，可以上传至百度网盘，并在issue中留下词典的网盘链接。如词典需要使用声明，可连同文献出处一起issue</p>
</li>
</ul>
<br>
<h3 id="14-load_pkl_dict">1.4 load_pkl_dict</h3>
<p>导入pkl词典文件，返回字典样式数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># 导入pkl词典文件,</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;DUTIR.pkl&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;DUTIR&#39;: {&#39;哀&#39;: [&#39;怀想&#39;, &#39;治丝而棼&#39;, ...],
           &#39;好&#39;: [&#39;进贤黜奸&#39;, &#39;清醇&#39;, &#39;放达&#39;, ...], 
           &#39;惊&#39;: [&#39;惊奇不已&#39;, &#39;魂惊魄惕&#39;, &#39;海外奇谈&#39;,...],
           &#39;惧&#39;: [&#39;忸忸怩怩&#39;, &#39;谈虎色变&#39;, &#39;手忙脚乱&#39;, &#39;刿目怵心&#39;,...],
           &#39;乐&#39;: [&#39;百龄眉寿&#39;, &#39;娱心&#39;, &#39;如意&#39;, &#39;喜糖&#39;,...],
           &#39;怒&#39;: [&#39;饮恨吞声&#39;, &#39;扬眉瞬目&#39;,...],
           &#39;恶&#39;: [&#39;出逃&#39;, &#39;鱼肉百姓&#39;, &#39;移天易日&#39;,]
           }
</code></pre></div><br>
<h3 id="15-sentiment">1.5 sentiment</h3>
<p>sentiment(text, diction, lang=&lsquo;chinese&rsquo;)
使用diy词典进行情感分析，计算各个情绪词出现次数; 未考虑强度副词、否定词对情感的复杂影响，</p>
<ul>
<li>text:  待分析中文文本</li>
<li>diction:  情感词字典；</li>
<li>lang: 语言类型，&ldquo;chinese&quot;或&quot;english&rdquo;，默认&quot;chinese&quot;</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;我今天得奖了，很高兴，我要将快乐分享大家。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span>
             <span class="n">diction</span><span class="o">=</span><span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;DUTIR.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;DUTIR&#39;</span><span class="p">],</span>
             <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;哀_num&#39;: 0,
 &#39;好_num&#39;: 0,
 &#39;惊_num&#39;: 0,
 &#39;惧_num&#39;: 0,
 &#39;乐_num&#39;: 2,
 &#39;怒_num&#39;: 0,
 &#39;恶_num&#39;: 0,
 &#39;stopword_num&#39;: 8,
 &#39;word_num&#39;: 14,
 &#39;sentence_num&#39;: 1}
</code></pre></div><p>如果不适用pkl词典，可以自定义自己的词典，例如</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">diction</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;pos&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;高兴&#39;</span><span class="p">,</span> <span class="s1">&#39;快乐&#39;</span><span class="p">,</span> <span class="s1">&#39;分享&#39;</span><span class="p">],</span>
           <span class="s1">&#39;neg&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;难过&#39;</span><span class="p">,</span> <span class="s1">&#39;悲伤&#39;</span><span class="p">],</span>
           <span class="s1">&#39;adv&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;很&#39;</span><span class="p">,</span> <span class="s1">&#39;特别&#39;</span><span class="p">]}</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;我今天得奖了，很高兴，我要将快乐分享大家。&#39;</span>
<span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
             <span class="n">diction</span><span class="o">=</span><span class="n">diction</span><span class="p">,</span> 
             <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;pos_num&#39;: 3,
 &#39;neg_num&#39;: 0,
 &#39;adv_num&#39;: 1,
 &#39;stopword_num&#39;: 8,
 &#39;word_num&#39;: 14,
 &#39;sentence_num&#39;: 1}
</code></pre></div><br>
<h3 id="16-sentiment_by_valence">1.6 sentiment_by_valence</h3>
<p>sentiment函数默认所有情感词权重均为1，只需要统计文本中情感词的个数，即可得到文本情感得分。</p>
<p>sentiment_by_valence(text, diction, lang=&lsquo;english&rsquo;)函数考虑了词语的效价(valence)</p>
<ul>
<li>text 待输入文本</li>
<li>diction 带效价的词典，DataFrame格式。</li>
<li>lang 语言类型&rsquo;chinese' 或 &lsquo;english&rsquo;，默认&rsquo;english'</li>
</ul>
<p>这里我们以文本具体性度量为例， <strong>concreteness.pkl</strong> 整理自 Brysbaert2014的文章。</p>
<blockquote>
<p>Brysbaert, M., Warriner, A. B., &amp; Kuperman, V. (2014). Concreteness ratings for 40 thousand generally known English word lemmas. Behavior Research Methods, 46, 904–911</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># load the concreteness.pkl dictionary file</span>
<span class="n">concreteness_df</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;concreteness.pkl&#39;</span><span class="p">)</span>
<span class="n">concreteness_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<table>
<thead>
<tr>
<th style="text-align:right"></th>
<th style="text-align:left">word</th>
<th style="text-align:right">valence</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:left">roadsweeper</td>
<td style="text-align:right">4.85</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:left">traindriver</td>
<td style="text-align:right">4.54</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:left">tush</td>
<td style="text-align:right">4.45</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:left">hairdress</td>
<td style="text-align:right">3.93</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:left">pharmaceutics</td>
<td style="text-align:right">3.77</td>
</tr>
</tbody>
</table>
<br>
<p>先看一条文本的具体性度量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">reply</span> <span class="o">=</span> <span class="s2">&#34;I&#39;ll go look for that&#34;</span>

<span class="n">score</span><span class="o">=</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_valence</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">reply</span><span class="p">,</span> 
                              <span class="n">diction</span><span class="o">=</span><span class="n">concreteness_df</span><span class="p">,</span> 
                              <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
<span class="n">score</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1.85
</code></pre></div><br>
<p>很多条文本的具体性度量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">employee_replys</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;I&#39;ll go look for that&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that top&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that t-shirt&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go look for that t-shirt in grey&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that t-shirt in grey&#34;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">reply</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">employee_replys</span><span class="p">):</span>
    <span class="n">score</span><span class="o">=</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_valence</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">reply</span><span class="p">,</span> 
                                  <span class="n">diction</span><span class="o">=</span><span class="n">concreteness_df</span><span class="p">,</span> 
                                  <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
    
    <span class="n">template</span> <span class="o">=</span> <span class="s2">&#34;Concreteness Score: </span><span class="si">{score:.2f}</span><span class="s2"> | Example-</span><span class="si">{idx}</span><span class="s2">: </span><span class="si">{exmaple}</span><span class="s2">&#34;</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">template</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">score</span><span class="o">=</span><span class="n">score</span><span class="p">,</span> 
                          <span class="n">idx</span><span class="o">=</span><span class="n">idx</span><span class="p">,</span> 
                          <span class="n">exmaple</span><span class="o">=</span><span class="n">reply</span><span class="p">))</span>
    
<span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_valence</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> <span class="n">diction</span><span class="o">=</span><span class="n">concreteness_df</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Concreteness Score: 1.55 | Example-0: I&#39;ll go look for that
Concreteness Score: 1.55 | Example-1: I&#39;ll go search for that
Concreteness Score: 1.89 | Example-2: I&#39;ll go search for that top
Concreteness Score: 2.04 | Example-3: I&#39;ll go search for that t-shirt
Concreteness Score: 2.37 | Example-4: I&#39;ll go look for that t-shirt in grey
Concreteness Score: 2.37 | Example-5: I&#39;ll go search for that t-shirt in grey
</code></pre></div><br>
<p><br><br></p>
<h2 id="二dictionary">二、dictionary</h2>
<p>本模块用于构建词表(典),含</p>
<ul>
<li>SoPmi 共现法扩充词表(典)</li>
<li>W2VModels 词向量word2vec扩充词表(典)</li>
</ul>
<h3 id="21-sopmi">2.1 SoPmi</h3>
<p>SoPmi 共现法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="n">sopmier</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">SoPmi</span><span class="p">(</span><span class="n">cwd</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">(),</span>
                   <span class="n">input_txt_file</span><span class="o">=</span><span class="s1">&#39;data/sopmi_corpus.txt&#39;</span><span class="p">,</span>  <span class="c1">#原始数据，您的语料</span>
                   <span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/sopmi_seed_words.txt&#39;</span><span class="p">,</span> <span class="c1">#人工标注的初始种子词</span>
                   <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span>
                   <span class="p">)</span>   

<span class="n">sopmier</span><span class="o">.</span><span class="n">sopmi</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step 1/4:...Preprocess   Corpus ...
Step 2/4:...Collect co-occurrency information ...
Step 3/4:...Calculate   mutual information ...
Step 4/4:...Save    candidate words ...
Finish! used 44.49 s
</code></pre></div><br>
<h3 id="22-w2vmodels">2.2 W2VModels</h3>
<p>W2VModels 词向量</p>
<p><strong>特别要注意代码需要设定lang语言参数</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="c1">#初始化模型,需要设置lang参数。</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2VModels</span><span class="p">(</span><span class="n">cwd</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">(),</span> 
                     <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>  <span class="c1">#语料数据 w2v_corpus.txt</span>
<span class="n">model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">input_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_corpus.txt&#39;</span><span class="p">)</span>


<span class="c1">#根据种子词，筛选出没类词最相近的前100个词</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/integrity.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/innovation.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/quality.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/respect.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/teamwork.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step 1/4:...Preprocess   corpus ...
Step 2/4:...Train  word2vec model
            used   174 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s

</code></pre></div><br>
<h3 id="需要注意">需要注意</h3>
<p>训练出的w2v模型可以后续中使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">w2v</span><span class="o">.</span><span class="n">model路径</span><span class="p">)</span>
<span class="c1">#找出word的词向量</span>
<span class="c1">#w2v_model.get_vector(word)</span>
<span class="c1">#更多w2_model方法查看</span>
<span class="c1">#help(w2_model)</span>
</code></pre></div><p>例如本代码，运行生成的结果路径<code>output/w2v_candi_words/w2v.model</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s1">&#39;output/w2v_candi_words/w2v.model&#39;</span><span class="p">)</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">most_similar</span><span class="p">(</span><span class="s1">&#39;innovation&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;technology&#39;, 0.689210832118988),
 (&#39;infrastructure&#39;, 0.669672966003418),
 (&#39;resources&#39;, 0.6695448160171509),
 (&#39;talent&#39;, 0.6627111434936523),
 (&#39;execution&#39;, 0.6549549102783203),
 (&#39;marketing&#39;, 0.6533523797988892),
 (&#39;merchandising&#39;, 0.6504817008972168),
 (&#39;diversification&#39;, 0.6479553580284119),
 (&#39;expertise&#39;, 0.6446896195411682),
 (&#39;digital&#39;, 0.6326863765716553)]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#获取词向量</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;innovation&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([-0.45616838, -0.7799563 ,  0.56367606, -0.8570078 ,  0.600359  ,
       -0.6588043 ,  0.31116748, -0.11956959, -0.47599426,  0.21840936,
       -0.02268819,  0.1832016 ,  0.24452794,  0.01084935, -1.4213187 ,
        0.22840202,  0.46387577,  1.198386  , -0.621511  , -0.51598716,
        0.13352732,  0.04140598, -0.23470387,  0.6402956 ,  0.20394802,
        0.10799981,  0.24908689, -1.0117126 , -2.3168423 , -0.0402851 ,
        1.6886286 ,  0.5357047 ,  0.22932841, -0.6094084 ,  0.4515793 ,
       -0.5900931 ,  1.8684244 , -0.21056202,  0.29313338, -0.221067  ,
       -0.9535679 ,  0.07325   , -0.15823542,  1.1477109 ,  0.6716076 ,
       -1.0096023 ,  0.10605699,  1.4148282 ,  0.24576302,  0.5740349 ,
        0.19984631,  0.53964925,  0.41962907,  0.41497853, -1.0322098 ,
        0.01090925,  0.54345983,  0.806317  ,  0.31737605, -0.7965337 ,
        0.9282971 , -0.8775608 , -0.26852605, -0.06743863,  0.42815775,
       -0.11774074, -0.17956367,  0.88813037, -0.46279573, -1.0841943 ,
       -0.06798118,  0.4493006 ,  0.71962464, -0.02876493,  1.0282255 ,
       -1.1993176 , -0.38734904, -0.15875885, -0.81085825, -0.07678922,
       -0.16753489,  0.14065655, -1.8609751 ,  0.03587054,  1.2792674 ,
        1.2732009 , -0.74120265, -0.98000383,  0.4521185 , -0.26387128,
        0.37045383,  0.3680011 ,  0.7197629 , -0.3570571 ,  0.8016917 ,
        0.39243212, -0.5027844 , -1.2106236 ,  0.6412354 , -0.878307  ],
      dtype=float32)
</code></pre></div><p><br><br></p>
<h3 id="23-co_occurrence_matrix">2.3 co_occurrence_matrix</h3>
<p>词共现矩阵</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">documents</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;I go to school every day by bus .&#34;</span><span class="p">,</span>
         <span class="s2">&#34;i go to theatre every night by bus&#34;</span><span class="p">]</span>

<span class="n">ct</span><span class="o">.</span><span class="n">co_occurrence_matrix</span><span class="p">(</span><span class="n">documents</span><span class="p">,</span> 
                        <span class="n">window_size</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> 
                        <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="/Users/thunderhit/Desktop/Coding/Python/diyPython/cntext/img/co_occurrence1.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">documents2</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;编程很好玩&#34;</span><span class="p">,</span>
             <span class="s2">&#34;Python是最好学的编程&#34;</span><span class="p">]</span>

<span class="n">ct</span><span class="o">.</span><span class="n">co_occurrence_matrix</span><span class="p">(</span><span class="n">documents2</span><span class="p">,</span> 
                        <span class="n">window_size</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> 
                        <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="/Users/thunderhit/Desktop/Coding/Python/diyPython/cntext/img/co_occurrence2.png" alt=""  />
</p>
<p><br><br></p>
<h3 id="24--glove">2.4  Glove</h3>
<p>构建Glove词嵌入模型，使用英文数据<code>data/brown_corpus.txt</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">Glove</span><span class="p">(</span><span class="n">cwd</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">(),</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">create_vocab</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s1">&#39;data/brown_corpus.txt&#39;</span><span class="p">,</span> <span class="n">min_count</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">cooccurrence_matrix</span><span class="p">()</span>
<span class="n">model</span><span class="o">.</span><span class="n">train_embeddings</span><span class="p">(</span><span class="n">vector_size</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step 1/4: ...Create vocabulary for Glove.
Step 2/4: ...Create cooccurrence matrix.
Step 3/4: ...Train glove embeddings. 
             Note, this part takes a long time to run
Step 3/4: ... Finish! Use 175.98 s
</code></pre></div><p>生成的Glove词嵌入文件位于<code>output/Glove</code> 。</p>
<p><br><br></p>
<h2 id="三similarity">三、similarity</h2>
<p>四种相似度计算函数</p>
<ul>
<li>cosine_sim(text1, text2)  cos余弦相似</li>
<li>jaccard_sim(text1, text2)     jaccard相似</li>
<li>minedit_sim(text1, text2)  最小编辑距离相似度；</li>
<li>simple_sim(text1, text2) 更改变动算法</li>
</ul>
<p>算法实现参考自 <code>Cohen, Lauren, Christopher Malloy, and Quoc Nguyen. Lazy prices. No. w25084. National Bureau of Economic Research, 2018.</code></p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span> 


<span class="n">text1</span> <span class="o">=</span> <span class="s1">&#39;编程真好玩编程真好玩&#39;</span>
<span class="n">text2</span> <span class="o">=</span> <span class="s1">&#39;游戏真好玩编程真好玩啊&#39;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">cosine_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">jaccard_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">minedit_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">simple_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.82
0.67
2.00
0.87
</code></pre></div><p><br><br></p>
<h2 id="四text2mind">四、Text2Mind</h2>
<p>词嵌入中蕴含着人类的认知信息，以往的词嵌入大多是比较一个概念中两组反义词与某对象的距离计算认知信息。</p>
<p>- <strong>多个对象在某概念的远近</strong>，职业与性别，某个职业是否存在亲近男性，而排斥女性</p>
<p>- 多个对象在某<strong>概念的分量(fen，一声)的多少</strong>， 人类语言中留存着对不同动物体积的认知记忆，如小鼠大象。动物词在词向量空间中是否能留存着这种大小的记忆</p>
<p>这两种认知分别可以用向量距离、向量语义投影计算得来。</p>
<ul>
<li>tm.sematic_distance(words, c_words1, c_words2)  向量距离</li>
<li>tm.sematic_projection(words, c_words1, c_words2)  向量语义投影</li>
</ul>
<h3 id="41-tmsematic_distancewords-c_words1-c_words2">4.1 tm.sematic_distance(words, c_words1, c_words2)</h3>
<p>分别计算words与c_words1、c_words2语义距离，返回距离差值。</p>
<p>例如</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">male_concept = [&#39;male&#39;, &#39;man&#39;, &#39;he&#39;, &#39;him&#39;]
female_concept = [&#39;female&#39;, &#39;woman&#39;, &#39;she&#39;, &#39;her&#39;]
software_engineer_concept  = [&#39;engineer&#39;,  &#39;programming&#39;,  &#39;software&#39;]
d1 = distance(male_concept,  software_engineer_concept)
d2 = distance(female_concept,  software_engineer_concept)
</code></pre></div><p>如果d1-d2&lt;0，说明在语义空间中，software_engineer_concept更接近male_concept，更远离female_concept。</p>
<p>换言之，在该语料中，人们对软件工程师这一类工作，对女性存在刻板印象(偏见)。</p>
<p><strong>下载glove_w2v.6B.100d.txt</strong>链接: <a href="https://pan.baidu.com/s/1MMfQ7M0YCzL9Klp4zrlHBw">https://pan.baidu.com/s/1MMfQ7M0YCzL9Klp4zrlHBw</a> 提取码: 72l0</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#Note: this is a word2vec format model</span>
<span class="n">tm</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">Text2Mind</span><span class="p">(</span><span class="n">w2v_model_path</span><span class="o">=</span><span class="s1">&#39;glove_w2v.6B.100d.txt&#39;</span><span class="p">)</span>

<span class="n">engineer</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;program&#39;</span><span class="p">,</span> <span class="s1">&#39;software&#39;</span><span class="p">,</span> <span class="s1">&#39;computer&#39;</span><span class="p">]</span>
<span class="n">mans</span> <span class="o">=</span>  <span class="p">[</span><span class="s2">&#34;man&#34;</span><span class="p">,</span> <span class="s2">&#34;he&#34;</span><span class="p">,</span> <span class="s2">&#34;him&#34;</span><span class="p">]</span>
<span class="n">womans</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;woman&#34;</span><span class="p">,</span> <span class="s2">&#34;she&#34;</span><span class="p">,</span> <span class="s2">&#34;her&#34;</span><span class="p">]</span>

<span class="c1">#在语义空间中，工程师更接近于男人，而不是女人。</span>
<span class="c1">#in semantic space, engineer is closer to man, other than woman.</span>
<span class="n">tm</span><span class="o">.</span><span class="n">sematic_distance</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">animals</span><span class="p">,</span> 
                    <span class="n">c_words1</span><span class="o">=</span><span class="n">mans</span><span class="p">,</span> 
                    <span class="n">c_words2</span><span class="o">=</span><span class="n">womans</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">-0.38
</code></pre></div><p>-0.38 意味着工程师更接近于男人，而不是女人。</p>
<br>
<h3 id="42-tmsematic_projectionwords-c_words1-c_words2">4.2 tm.sematic_projection(words, c_words1, c_words2)</h3>
<p><strong>语义投影</strong>，根据两组反义词c_words1, c_words2构建一个概念(认知)向量, words中的每个词向量在概念向量中投影，即可得到认知信息。</p>
<p>分值越大，word越位于c_words2一侧。</p>
<p>下图是语义投影示例图，本文算法和图片均来自 &ldquo;Grand, G., Blank, I.A., Pereira, F. and Fedorenko, E., 2022. Semantic projection recovers rich human knowledge of multiple object features from word embeddings. <em>Nature Human Behaviour</em>, pp.1-13.&rdquo;</p>
<p><img loading="lazy" src="img/Nature_Semantic_projection_recovering_human_knowledge_of.png" alt=""  />
</p>
<p>例如，人类的语言中，存在尺寸、性别、年龄、政治、速度、财富等不同的概念。每个概念可以由两组反义词确定概念的向量方向。</p>
<p>以尺寸为例，动物在人类认知中可能存在体积尺寸大小差异。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">animals</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;mouse&#39;</span><span class="p">,</span> <span class="s1">&#39;cat&#39;</span><span class="p">,</span> <span class="s1">&#39;horse&#39;</span><span class="p">,</span>  <span class="s1">&#39;pig&#39;</span><span class="p">,</span> <span class="s1">&#39;whale&#39;</span><span class="p">]</span>
<span class="n">smalls</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;small&#34;</span><span class="p">,</span> <span class="s2">&#34;little&#34;</span><span class="p">,</span> <span class="s2">&#34;tiny&#34;</span><span class="p">]</span>
<span class="n">bigs</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;large&#34;</span><span class="p">,</span> <span class="s2">&#34;big&#34;</span><span class="p">,</span> <span class="s2">&#34;huge&#34;</span><span class="p">]</span>

<span class="c1"># In size conception, mouse is smallest, horse is biggest.</span>
<span class="c1"># 在大小概念上，老鼠最小，马是最大的。</span>
<span class="n">tm</span><span class="o">.</span><span class="n">sematic_projection</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">animals</span><span class="p">,</span> 
                      <span class="n">c_words1</span><span class="o">=</span><span class="n">smalls</span><span class="p">,</span> 
                      <span class="n">c_words2</span><span class="o">=</span><span class="n">bigs</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;mouse&#39;, -1.68),
 (&#39;cat&#39;, -0.92),
 (&#39;pig&#39;, -0.46),
 (&#39;whale&#39;, -0.24),
 (&#39;horse&#39;, 0.4)]
</code></pre></div><p>在这几个动物尺寸的感知上，人类觉得老鼠体型是最小，马的体型是最大。</p>
<p><br><br></p>
<h2 id="引用说明">引用说明</h2>
<p>如果研究中使用cntext，请使用以下格式进行引用</p>
<h3 id="apalike">apalike</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Deng X., Nan P. (2022). cntext: a Python tool for text mining (version 1.7.9). DOI: 10.5281/zenodo.7063523 URL: https://github.com/hiDaDeng/cntext
</code></pre></div><h3 id="bibtex">bibtex</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">@misc{YourReferenceHere,
author = {Deng, Xudong and Nan, Peng},
doi = {10.5281/zenodo.7063523},
month = {9},
title = {cntext: a Python tool for text mining},
url = {https://github.com/hiDaDeng/cntext},
year = {2022}
}
</code></pre></div><h3 id="endnote">endnote</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">%0 Generic
%A Deng, Xudong
%A Nan, Peng
%D 2022
%K text mining
%K text analysi
%K social science
%K management science
%K semantic analysis
%R 10.5281/zenodo.7063523
%T cntext: a Python tool for text mining
%U https://github.com/hiDaDeng/cntext
</code></pre></div><br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>sentence-transformer库 | 句子语义向量化</title>
      <link>https://hidadeng.github.io/blog/sentence-transformer-tutorial/</link>
      <pubDate>Mon, 09 May 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/sentence-transformer-tutorial/</guid>
      <description>使用sentence-transformer库BERT技术，将句子语义向量化</description>
      <content:encoded><![CDATA[<blockquote>
<p>内容摘自</p>
<p>刘焕勇博客: <a href="https://liuhuanyong.github.io/">https://liuhuanyong.github.io/</a></p>
<p>原文地址: <a href="https://mp.weixin.qq.com/s/fkgk8l_Vd4YDU_K6G54F4Q">https://mp.weixin.qq.com/s/fkgk8l_Vd4YDU_K6G54F4Q</a></p>
<p>公众号: 老刘说NLP</p>
</blockquote>
<p>word2vec、glove是两种静态的词向量模型，即每个词语只有一个固定的向量表示。但在不同语境中，词语的语义会发生变化，按道理词向量也应该动态调整。相比word2vec、glove生成的静态词向量， BERT是一种动态的技术，可以根据上下文情景，得到语义变化的词向量。</p>
<p>HuggingFace网站提供了简易可用的数据集、丰富的预训练语言模型， 通过sentence-transformer库，我们可以使用HuggingFace内的预训练模型，得到不同情景的文本的语义向量。</p>
<p>HuggingFace网站  <a href="https://huggingface.co/">https://huggingface.co/</a></p>
<p><img loading="lazy" src="img/HuggingFace.png" alt=""  />
</p>
<br>
<h2 id="动态句向量">动态句向量</h2>
<p>sentence-transformer框架提供了一种简便的方法来计算句子和段落的向量表示（也称为句子嵌入）</p>
<p><img loading="lazy" src="img/sentence-transformer.png" alt=""  />
</p>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pip3</span> <span class="n">install</span> <span class="o">-</span><span class="n">U</span> <span class="n">sentence</span><span class="o">-</span><span class="n">transformers</span>
</code></pre></div><br>
<h2 id="代码">代码</h2>
<p><a href="sentence-transformer-tutorial.zip">click to download the code</a></p>
<p>使用huggingface中的distiluse-base-multilingual-cased与训练模型，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sentence_transformers</span> <span class="kn">import</span> <span class="n">SentenceTransformer</span><span class="p">,</span> <span class="n">util</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">SentenceTransformer</span><span class="p">(</span><span class="s1">&#39;distiluse-base-multilingual-cased&#39;</span><span class="p">)</span>
</code></pre></div><p>第一次运行上方的代码，需要运行一定的时间用于下载。下载完成后，我们使用同种语义的中英文句子，分别计算得到emb1和emb2两个句向量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">emb1 = model.encode(&#39;Natural language processing is a hard task for human&#39;)

emb2 = model.encode(&#39;自然语言处理对于人类来说是个困难的任务&#39;)
emb1
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([ 2.58186590e-02,  4.65703346e-02,  4.25276496e-02, -1.67875513e-02,
        5.56012690e-02, -3.44308838e-02, -6.53978735e-02,  1.77450478e-02,
       -3.47155109e-02,  2.86140274e-02,  2.48657260e-02,  7.94188876e-04,
        5.09755425e-02, -1.76107027e-02, -1.04308855e-02,  7.61642214e-03,
        ...
        4.28482369e-02,  1.76657233e-02, -5.83355911e-02,  1.92921527e-03,
        2.81221420e-02,  5.24400780e-03,  2.10703332e-02,  7.96715263e-03,
       -6.80630878e-02, -2.05304120e-02, -2.43293475e-02, -1.87458862e-02],
      dtype=float32)
</code></pre></div><p>在distiluse-base-multilingual-cased这种模型中， 不同语言的同义句应该具有类似的语义，那么cos相似度应该是很大的。越接近于1越相似；越接近于0，越不相似。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cos_sim</span> <span class="o">=</span> <span class="n">util</span><span class="o">.</span><span class="n">pytorch_cos_sim</span><span class="p">(</span><span class="n">emb1</span><span class="p">,</span> <span class="n">emb2</span><span class="p">)</span>
<span class="n">cos_sim</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">tensor([[0.8960]])
</code></pre></div><p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>转载 | 从符号到嵌入：计算社会科学的两种文本表示</title>
      <link>https://hidadeng.github.io/blog/from_sysbol_to_embeddings_in_computational_social_science/</link>
      <pubDate>Mon, 25 Apr 2022 10:40:10 +0600</pubDate>
      
      <guid>/blog/from_sysbol_to_embeddings_in_computational_social_science/</guid>
      <description>如何有效地表示数据以挖掘我们想要的计算社会科学的含义？为了探索答案，我们对 CSS 中文本和网络的数据表示进行了彻底的回顾，我们将现有的表示总结为两个方案，即基于符号的表示和基于嵌入的表示</description>
      <content:encoded><![CDATA[<p>B站看到大牛刘知远关于文本分析在计算社会科学领域应用的分享，解答了我对文本表示的疑惑，看完了能对文本的特征工程加深理解，同时也能更清晰未来如何借助计算机科学技术开展社会科学研究。</p>
<blockquote>
<p><strong>全文摘抄自</strong></p>
<p>Chen, H., Yang, C., Zhang, X., Liu, Z., Sun, M. and Jin, J., 2021. From Symbols to Embeddings: A Tale of Two Representations in Computational Social Science. Journal of Social Computing, 2(2), pp.103-156.</p>
</blockquote>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV1qi4y1Q7qj&page=1"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<h2 id="摘要">摘要</h2>
<p><strong>计算社会科学</strong>（CSS），旨在利用计算方法来解决社会科学问题，是一个新兴和快速发展的领域。 CSS 的研究是数据驱动的，并且显着受益于在线用户生成内容和社交网络的可用性，其中包含用于调查的富文本和网络数据。然而，这些大规模、多模态的数据也给研究人员带来了很大的挑战：<strong>如何有效地表示数据以挖掘我们想要的 CSS 含义</strong>？为了探索答案，<strong>我们对 CSS 中文本和网络的数据表示进行了彻底的回顾，我们将现有的表示总结为两个方案，即基于符号的表示和基于嵌入的表示</strong>，并为每个方案介绍了一系列典型的方法。随后，我们基于对来自 6 个涉及 CSS 的顶级场所的 400 多篇研究文章的调查，展示了上述表示的应用。从这些应用程序的统计数据中，<strong>我们挖掘出每种表示的强度，并发现基于嵌入的表示在过去十年中出现并获得越来越多的关注的趋势</strong>。最后，我们讨论了几个关键挑战和未来方向的开放性问题。本调查旨在为 CSS 研究人员提供对数据表示的更深入理解和更明智的应用。</p>
<p><strong>关键词</strong>：计算社会科学；基于符号的表示；基于嵌入的表示；社交网络</p>
<br>
<h2 id="一计算社会学数据分析流程">一、计算社会学数据分析流程</h2>
<p>其中第二步，数据表示目前有两大类表示(特征工程)方法</p>
<ul>
<li><strong>基于符号的文本表示</strong>；符号可以是单词(或词组)，也可以是概念(如正面情感、负面情感)</li>
<li><strong>基于嵌入(分布式)的文本表示</strong>；相比于符号法，将词(词组)看做一个点。嵌入表示认为词是存在更多浅藏含义，存在亲疏远近，是可以比较的词向量。词向量可以有v(king)-v(queen)约等于v(man)-v(woman)</li>
</ul>
<p><img loading="lazy" src="img/fig1.png" alt=""  />
</p>
<br>
<h2 id="二基于符号的文本表示">二、基于符号的文本表示</h2>
<p>基于符号的文本表示一般来说默认词语是不可分的符号，每个词能根据词频统计出现次数的多与少，或是否存在。</p>
<h3 id="21-词语层面">2.1 词语层面</h3>
<ul>
<li>
<p>基于词频表示</p>
<ul>
<li>是否出现，出现标位1，反之标位0。</li>
<li>出现多少，词语出现几次，标为几个。</li>
</ul>
</li>
<li>
<p>基于特征表示，如每个词带有权重(得分)</p>
</li>
<li>
<p>基于网络表示，如词语共现网络(矩阵)</p>
</li>
</ul>
<h3 id="22-句子层面">2.2 句子层面</h3>
<ul>
<li>
<p>基于词频的表示</p>
<ul>
<li>one-hot 将文本转为向量，向量中每个数，词语出现标位1，反之标位0</li>
<li>bag-of-words，将文本转为向量，向量中每个数，词语出现n次标记为n</li>
<li>n-grams，对词组的处理，将词组看做一个单词(整体)。</li>
<li>Tf-Idf ,该算法分为tf和idf两部分。其中tf与bag-of-words类似，考虑词语出现次数。而idf还考虑词语在语料中出现场景的稀缺性程度。</li>
</ul>
</li>
<li>
<p>基于语法特征，如句法依存关系，类似于英语语法，将句子分为主谓宾、动词、名词等。</p>
</li>
<li>
<p>词典法，如使用正、负情感词典，对文本数据进行情感分析，可以得到pos和neg的各自得分</p>
</li>
</ul>
<p><img loading="lazy" src="img/fig2.png" alt=""  />
</p>
<br>
<h2 id="三基于嵌入的文本表示">三、基于嵌入的文本表示</h2>
<h3 id="31词语层面">3.1词语层面</h3>
<p>嵌入表示认为词是存在更多浅藏含义，存在亲疏远近，是可以比较的词向量。词向量可以有v(best)-v(good)约等于v(worst)-v(bad)</p>
<h3 id="32-句子层面">3.2 句子层面</h3>
<p>词语是向量，那么由词语组成的句子也会加权得到一个向量。含有相似话题或含义相近的句子在多维向量空间中会比较接近。</p>
<p><img loading="lazy" src="img/fig7.png" alt=""  />
</p>
<br>
<h2 id="四任务分类文本的用法">四、任务分类：文本的用法</h2>
<p><img loading="lazy" src="img/fig16.png" alt=""  />
</p>
<p>有了文本数据，刚刚解决了如何表示文本。接下来，需要明确，我们使用文本目的是为了做哪类分析，得到哪些信息。有8种常见的文本分析图式</p>
<ul>
<li>描述性。如随时间推移，词频的发展趋势是变大的</li>
<li>相关性。</li>
<li>聚类。如lda话题分析、k-means聚类</li>
<li>相似度。两个文档转为向量后，可以通过cosine计算相似度</li>
<li>分类。机器学习分类，判断某文本隶属于哪个类别</li>
<li>回归。例如根据文本，判断某件事发生的概率</li>
<li>语言模型。</li>
<li>排序。</li>
</ul>
<br>
<h2 id="五发文趋势-符号vs嵌入">五、发文趋势-符号vs嵌入</h2>
<p>基于上一节中对应用程序的介绍，可以观察到基于符号和基于嵌入的表示在 <strong>计算社会科学</strong>中都得到了相当大的采用。为了明确研究它们的覆盖范围，我们计算了每年使用两种表示中的一种或两种的作品数量，如图 17 所示。通过比较nature、science、pnas三大顶级期刊，我们可以发现使用<strong>基于嵌入表示</strong>的文章比例在过去几年中逐渐。这表明越来越多的 计算社会科学文章 已经考虑并受益于基于嵌入表示。</p>
<p>图 18 显示了在 计算机领域ACL、WWW 和 KDD 的会议上中，发现使用基于嵌入的表示的文章数量已大大超过使用基于符号的表示的文章数量。然而，与图 17 相比，计算机科学会议中基于嵌入的表示的数量与三个多学科期刊之间存在很大差距。</p>
<p><img loading="lazy" src="img/3_top_journals.png" alt=""  />
</p>
<p><img loading="lazy" src="img/nlp.png" alt=""  />
</p>
<p>总而言之，在过去十年中，基于嵌入的表示已经出现并在 计算社会科学 中发挥着越来越重要的作用。</p>
<br>
<h2 id="六趋势解读">六、趋势解读</h2>
<p>基于它们的内部机制和现有应用，对趋势解读，我们总结出以下三个关键点。</p>
<p>基于符号的表示因其明确性和可解释性而擅长描述和关系的任务。</p>
<p>基于符号的表示中的每个值都表示一定的人类可读的含义，因此我们可以直接使用它来观察数据的分布，以及提取对象之间的关系。例如，基于频率的词表示用于观察文化变化并捕捉新闻中提及次数与公司股票交易量之间的关系。虽然基于主题模型的表示和一些基于神经的表示在一定程度上具有实际意义，但它们对于社会科学研究人员来说仍然是模糊的并且不那么引人注目。</p>
<p>由于神经网络具有强大的拟合数据和提取深度语义的能力，基于嵌入的表示在预测（例如分类和回归）和相似性任务中表现更好。一方面，神经网络通过大规模神经元的连接实现高效的输入输出映射功能。另一方面，通过多层网络的构建，实现深层语义和抽象概念的提取。现有研究表明，深层捕获相对于浅层更抽象的特征。诸如社会偏见和道德化之类的抽象概念都可以通过基于嵌入的表示来很好地衡量。虽然我们提到基于符号的表示可以通过一些定义的符号来代表抽象概念，但这种表示仍然是部分和肤浅的，很难捕捉到它们的全貌。</p>
<p>基于嵌入的表示需要更少的人力。基于符号的表示通常需要大量的专家知识来定义研究对象的特征，这是劳动密集型的。此外，对于一些没有充分特征的抽象概念或对象，它们的表现将受到限制。与它们不同的是，基于嵌入的表示是从数据中自动提取的，几乎不需要人工干预，甚至可以补充人类知识。例如，可以使用神经网络来自动恢复丢失的巴比伦文本，这即使对专家来说也是具有挑战性的。此外，基于嵌入的表示可以在没有手动定义的情况下描述语言的复杂性和歧义性。</p>
<br> 
<h2 id="七未来展望">七、未来展望</h2>
<p>尽管在过去十年中出现了从符号到嵌入的趋势，但仍有许多挑战和悬而未决的问题有待探索。展望未来，我们列出了一些与计算社会科学 中的数据表示相关的基本和潜在的未来方向。</p>
<p>预训练的语言模型。近年来，预训练的语言模型受到了相当大的关注，并在处理文本数据方面取得了巨大的成功 [100, 240]。这些模型从百科全书和书籍等海量文本数据中学习丰富的语义信息，仅在下游任务中进行微调以实现有效的基于嵌入的表示。因此，对于 计算社会科学，我们可以借助预训练的语言模型获得更通用、更健壮的文本表示。与从传统神经网络模型中学习的表示相比，这些表示不仅可以更广泛、更准确地从文本中分析社会现象，而且还可以减少那些需要大量标记数据的任务的人工注释。</p>
<p>图神经网络。通过消息传递机制，图神经网络 [461] 可以同时有效地对网络拓扑和节点/边缘特征（例如文本信息）进行建模，从而提供一个统一的框架来利用来自异构来源的信息。 计算社会科学 中的许多场景需要处理社交网络以及个人特征。因此，图神经网络技术在 计算社会科学 研究中具有很大的应用潜力，可以学习融合文本和网络信息的表示。事实上，计算机科学中的各种应用，例如自然语言处理 [418] 和推荐系统 [439]，已经采用图神经网络进行建模。</p>
<p>设计为预测和相似性。基于嵌入的表示以丰富和深层次的语义而闻名，而基于符号的表示通常保留在部分和浅层语义中。同时，基于嵌入的表示擅长预测和相似性的任务。因此，为了充分利用嵌入中的强语义，鼓励 计算社会科学 研究人员尽可能将研究问题设计为预测或相似性任务。例如，我们可以将社会偏见问题设计为性别词和中性词嵌入之间的相似性度量 [59, 133]。此外，人类语言的复杂性可以设计为一项预测任务，它以语言模型为指标查看单词或句子的预测概率[155]。</p>
<p>可解释性。诚然，基于嵌入的方法的一个缺点是缺乏可解释性。这个问题会损害与道德、安全或隐私相关的决策关键系统的应用。尽管嵌入模型，尤其是神经网络模型的可解释性尚未完全解决，但计算机科学领域的研究人员已经做出了一些努力，以提高基于神经模型的可解释性 [16]。因此，利用基于嵌入的模型和可解释性分析方法进行有效和（部分）可解释的预测将是一个有趣的方向。</p>
<br>
<h2 id="结论">结论</h2>
<p>计算社会科学作为一个新兴且有前途的跨学科领域，近年来吸引了相当多的研究兴趣。 计算社会科学 研究中广泛使用两种主要类型的数据，即文本数据和网络数据。在本次调查中，我们首先将数据表示总结为基于符号和基于嵌入的表示，并在构建这些表示时进一步介绍典型的方法。之后，我们基于来自 6 个经典期刊和会议的 400 多篇高被引文献，对这两类表示的应用进行了全面回顾。根据对这些应用的统计，发现了 计算社会科学 中基于嵌入的文本和网络表示正在出现和增长的趋势，我们进一步讨论了其中的原因。最后，我们提出了 计算社会科学 中的四个挑战和未解决的问题，它们是需要探索的基本和潜在方向。</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>中文词向量资源汇总 &amp; 使用方法</title>
      <link>https://hidadeng.github.io/blog/embeddings_resource_usage_method/</link>
      <pubDate>Thu, 21 Apr 2022 15:40:10 +0600</pubDate>
      
      <guid>/blog/embeddings_resource_usage_method/</guid>
      <description>数十种中文词向量模型资源下载&amp;amp;使用方法</description>
      <content:encoded><![CDATA[<br>
<h2 id="项目地址">项目地址</h2>
<p><a href="https://github.com/Embedding/Chinese-Word-Vectors">https://github.com/Embedding/Chinese-Word-Vectors</a></p>
<p>Chinese-Word-Vectors项目提供超过100种中文词向量，其中包括不同的表示方式（稠密SGNS和稀疏PPMI）、不同的上下文特征（词、N元组、字等等）、以及不同的训练语料。获取预训练词向量非常方便，下载后即可用于下游任务。</p>
<br>
<h2 id="参考文献">参考文献</h2>
<p>如果使用了本项目的词向量和CA8数据集请进行如下引用：</p>
<p>Shen Li, Zhe Zhao, Renfen Hu, Wensi Li, Tao Liu, Xiaoyong Du, <a href="http://aclweb.org/anthology/P18-2023"><em>Analogical Reasoning on Chinese Morphological and Semantic Relations</em></a>, ACL 2018.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">@InProceedings{P18-2023,
  author =  &#34;Li, Shen
    and Zhao, Zhe
    and Hu, Renfen
    and Li, Wensi
    and Liu, Tao
    and Du, Xiaoyong&#34;,
  title =   &#34;Analogical Reasoning on Chinese Morphological and Semantic Relations&#34;,
  booktitle =   &#34;Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers)&#34;,
  year =  &#34;2018&#34;,
  publisher =   &#34;Association for Computational Linguistics&#34;,
  pages =   &#34;138--143&#34;,
  location =  &#34;Melbourne, Australia&#34;,
  url =   &#34;http://aclweb.org/anthology/P18-2023&#34;
}
</code></pre></div><br>
<h3 id="不同领域">不同领域</h3>
<p>下列词向量基于不同的表示方式、不同的上下文特征以及不同领域的语料训练而成。</p>
<table align="center">
    <tr align="center">
        <td colspan="5"><b>Word2vec / Skip-Gram with Negative Sampling (SGNS)</b></td>
    </tr>
    <tr align="center">
        <td rowspan="2">语料</td>
        <td colspan="4">上下文特征</td>
    </tr>
    <tr  align="center">
      <td>词</td>
      <td>词 + N元组</td>
      <td>词 + 字</td>
      <td>词 + 字 + N元组</td>
    </tr>
    <tr  align="center">
      <td>Baidu Encyclopedia 百度百科</td>
      <td><a href="https://pan.baidu.com/s/1Rn7LtTH0n7SHyHPfjRHbkg">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1XEmP_0FkQwOjipCjI2OPEw">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1eeCS7uD3e_qVN8rPwmXhAw">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1IiIbQGJ_AooTj5s8aZYcvA">300d</a> / PWD: 5555</td>
    </tr>
    <tr  align="center">
      <td>Wikipedia_zh 中文维基百科</td>
      <td><a href="https://pan.baidu.com/s/1AmXYWVgkxrG4GokevPtNgA">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1ZKePwxwsDdzNrfkc6WKdGQ">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1ZBVVD4mUSUuXOxlZ3V71ZA">300d</a></td>
      <td><a href="https://pan.baidu.com/s/19wQrclyynOnco3JBvnI5pA">300d</td>
    </tr>
    <tr  align="center">
      <td>People's Daily News 人民日报</td>
      <td><a href="https://pan.baidu.com/s/19sqMz-JAhhxh3o6ecvQxQw">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1upPkA8KJnxTZBfjuNDtaeQ">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1BvKk2QjbtQMch7EISppW2A">300d</a></td>
      <td><a href="https://pan.baidu.com/s/19Vso_k79FZb5OZCWQPAnFQ">300d</a></td>
    </tr>
    <tr  align="center">
      <td>Sogou News 搜狗新闻</td>
      <td><a href="https://pan.baidu.com/s/1tUghuTno5yOvOx4LXA9-wg">300d</a></td>
      <td><a href="https://pan.baidu.com/s/13yVrXeGYkxdGW3P6juiQmA">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1pUqyn7mnPcUmzxT64gGpSw">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1svFOwFBKnnlsqrF1t99Lnw">300d</a></td>
    </tr>
    <tr  align="center">
      <td>Financial News 金融新闻</td>
      <td><a href="https://pan.baidu.com/s/1EhtsbDa3ekzZPODWNLHcXA">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1FcPHv7S4vUgnL7WeWf4_PA">300d</a></td>
      <td><a href="https://pan.baidu.com/s/13CAxY5ffRFuOcHZu8VmArw">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1sqvrUtGBAZ7YWEsGz41DRQ">300d</a></td>
    </tr>
    <tr  align="center">
      <td>Zhihu_QA 知乎问答 </td>
      <td><a href="https://pan.baidu.com/s/1VGOs0RH7DXE5vRrtw6boQA">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1OQ6fQLCgqT43WTwh5fh_lg">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1_xogqF9kJT6tmQHSAYrYeg">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1Fo27Lv_0nz8FXg-xbOz14Q">300d</a></td>
    </tr>
    <tr  align="center">
      <td>Weibo 微博</td>
      <td><a href="https://pan.baidu.com/s/1zbuUJEEEpZRNHxZ7Gezzmw">300d</a></td>
      <td><a href="https://pan.baidu.com/s/11PWBcvruXEDvKf2TiIXntg">300d</a></td>
      <td><a href="https://pan.baidu.com/s/10bhJpaXMCUK02nHvRAttqA">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1FHl_bQkYucvVk-j2KG4dxA">300d</a></td>
    </tr>
    <tr  align="center">
      <td>Literature 文学作品</td>
      <td><a href="https://pan.baidu.com/s/1ciq8iXtcrHpu3ir_VhK0zg">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1Oa4CkPd8o2xd6LEAaa4gmg">300d</a> / PWD: z5b4</td>
      <td><a href="https://pan.baidu.com/s/1IG8IxNp2s7vVklz-vyZR9A">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1SEOKrJYS14HpqIaQT462kA">300d</a> / PWD: yenb</td>
    </tr>
    <tr  align="center">
      <td>Complete Library in Four Sections<br />四库全书<sup>*</sup></td>
      <td><a href="https://pan.baidu.com/s/1vPSeUsSiWYXEWAuokLR0qQ">300d</a></td>
      <td><a href="https://pan.baidu.com/s/1sS9E7sclvS_UZcBgHN7xLQ">300d</a></td>
      <td>NAN</td>
      <td>NAN</td>
    </tr>
    <tr  align="center">
      <td>Mixed-large 综合<br>Baidu Netdisk / Google Drive</td>
      <td>
        <a href="https://pan.baidu.com/s/1luy-GlTdqqvJ3j-A4FcIOw">300d</a><br>
        <a href="https://drive.google.com/open?id=1Zh9ZCEu8_eSQ-qkYVQufQDNKPC4mtEKR">300d</a>
      </td>
      <td>
        <a href="https://pan.baidu.com/s/1oJol-GaRMk4-8Ejpzxo6Gw">300d</a><br>
        <a href="https://drive.google.com/open?id=1WUU9LnoAjs--1E_WqcghLJ-Pp8bb38oS">300d</a>
      </td>
      <td>
        <a href="https://pan.baidu.com/s/1DjIGENlhRbsVyHW-caRePg">300d</a><br>
        <a href="https://drive.google.com/open?id=1aVAK0Z2E5DkdIH6-JHbiWSL5dbAcz6c3">300d</a>
      </td>
      <td>
        <a href="https://pan.baidu.com/s/14JP1gD7hcmsWdSpTvA3vKA">300d</a><br>
        <a href="https://drive.google.com/open?id=1kSAl4_AOg3_6ayU7KRM0Nk66uGdSZdnk">300d</a>
      </td>
    </tr>
</table>
<table align="center">
    <tr align="center">
        <td colspan="5"><b>Positive Pointwise Mutual Information (PPMI)</b></td>
    </tr>
    <tr align="center">
        <td rowspan="2">语料</td>
        <td colspan="4">上下文特征</td>
    </tr>
    <tr  align="center">
      <td>词</td>
      <td>词 + N元组</td>
      <td>词 + 字</td>
      <td>词 + 字 + N元组</td>
    </tr>
    <tr  align="center">
      <td>Baidu Encyclopedia 百度百科</td>
      <td><a href="https://pan.baidu.com/s/1_itcjrQawCwcURa7WZLPOA">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1cEZzN1S2senwWSyHOnL7YQ">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1KcfFdyO0-kE9S9CwzIisfw">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1FXYM3CY161_4QMgiH8vasQ">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>Wikipedia_zh 中文维基百科</td>
      <td><a href="https://pan.baidu.com/s/1MGXRrc54nITPzQ7sfEUjMA">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1mtxZna8UJ7xBIxhBFntumQ">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1dDImpAx41V73Byl2julOGA">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1bsBQHXFpxMHGBexYof1_rw">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>People's Daily News 人民日报</td>
      <td><a href="https://pan.baidu.com/s/1NLr1K7aapU2sYBvzbVny5g">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1LJl3Br0ccGDHP0XX2k3pVw">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1GQQXGMn1AHh-BlifT0JD2g">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1Xm9Ec3O3rJ6ayrwVwonC7g">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>Sogou News 搜狗新闻</td>
      <td><a href="https://pan.baidu.com/s/1ECA51CZLp9_JB_me7YZ9-Q">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1FO39ZYy1mStERf_b53Y_yQ">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1lLBFBk8nn3spFAvKY9IJ6A">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1f-dLQZlZo_-B5ZKcPIc6rw">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>Financial News 金融新闻</td>
      <td><a href="https://pan.baidu.com/s/10wtgdmrTsTrjpSDvI0KzOw">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1b6zjvhOIqTdACSSbriisVw">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1w24vCfgqcoJvPxsB5VrRvw">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1b9BPiDRhiEZ-6ybTcovrqQ">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>Zhihu_QA 知乎问答 </td>
      <td><a href="https://pan.baidu.com/s/1VaUP3YJC0IZKTbJ-1_8HZg">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1g39PKwT0kSmpneKOgXR5YQ">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1d8Bsuak0fyXxQOVUiNr-2w">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1D5fteBX0Vy4czEqpxXjlrQ">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>Weibo 微博</td>
      <td><a href="https://pan.baidu.com/s/15O2EbToOzjNSkzJwAOk_Ug">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/11Dqywn0hfMhysto7bZS1Dw">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1wY-7mfV6nwDj_tru6W9h4Q">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1DMW-MgLApbQnWwDd-pT_qw">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>Literature 文学作品</td>
      <td><a href="https://pan.baidu.com/s/1HTHhlr8zvzhTwed7dO0sDg">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1jAuGJBxKqgapt__urGsBOQ">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/173AJfCoAV0ZA8Z31tKBdTA">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1dFCxke_Su3lLsuwZr7co3A">Sparse</a></td>
    </tr>
    <tr  align="center">
      <td>Complete Library in Four Sections<br />四库全书<sup>*</sup></td>
      <td><a href="https://pan.baidu.com/s/1NJ1Gc99oE0-GV0QxBqy-qw">Sparse</a></td>
      <td><a href="https://pan.baidu.com/s/1YGEgyXIbw0O4NtoM1ohjdA">Sparse</a></td>
      <td>NAN</td>
      <td>NAN</td>
    </tr>
    </tr>
    <tr  align="center">
      <td>Mixed-large 综合</td>
      <td>Sparse</td>
      <td>Sparse</td>
      <td>Sparse</td>
      <td>Sparse</td>
    </tr>
</table>
<p><sup>*</sup>由于古汉语中绝大部份词均为单字词，因此只需字向量。</p>
<br>
<h2 id="语料">语料</h2>
<p>项目花费了大量精力来收集了来自多个领域的语料。所有的文本数据均移除了html和xml标记，仅保留了纯文本。之后采用了<a href="https://github.com/hankcs/HanLP">HanLP(v_1.5.3)</a>对文本进行了分词。此外，我们将繁体中文用<a href="https://github.com/BYVoid/OpenCC">Open Chinese Convert (OpenCC)</a>转换为了简体中文。更详细的语料信息如下所示：</p>
<table align="center">
	<tr align="center">
		<td><b>语料</b></td>
		<td><b>大小</b></td>
		<td><b>词数量</b></td>
		<td><b>词汇量</b></td>
		<td><b>详情</b></td>
	</tr>
	<tr align="center">
		<td>Baidu Encyclopedia<br />百度百科</td>
		<td>4.1G</td>
		<td>745M</td>
		<td>5422K</td>
		<td>中文百科<br />https://baike.baidu.com/</td>
	</tr>
	<tr align="center">
		<td>Wikipedia_zh<br />中文维基百科</td>
		<td>1.3G</td>
		<td>223M</td>
		<td>2129K</td>
		<td>中文维基百科<br />https://dumps.wikimedia.org/</td>
	</tr>
	<tr align="center">
		<td>People's Daily News<br />人民日报</td>
		<td>3.9G</td>
		<td>668M</td>
		<td>1664K</td>
		<td>人民日报新闻数据(1946-2017)<br />http://data.people.com.cn/</td>
	</tr>
	<tr align="center">
		<td>Sogou News<br />搜狗新闻</td>
		<td>3.7G</td>
		<td>649M</td>
		<td>1226K</td>
		<td>Sogou labs的新闻数据<br />http://www.sogou.com/labs/</td>
	</tr>
  <tr align="center">
    <td>Financial News<br />金融新闻</td>
    <td>6.2G</td>
    <td>1055M</td>
    <td>2785K</td>
    <td>从多个网站收集到的金融新闻</td>
  </tr>
	<tr align="center">
		<td>Zhihu_QA<br />知乎问答</td>
		<td>2.1G</td>
		<td>384M</td>
		<td>1117K</td>
		<td>中文问答数据<br />https://www.zhihu.com/</td>
	</tr>
	<tr align="center">
		<td>Weibo<br />微博</td>
		<td>0.73G</td>
		<td>136M</td>
		<td>850K</td>
		<td>NLPIR Lab提供的微博数据<br />http://www.nlpir.org/wordpress/download/weibo.7z</td>
	</tr>
	<tr align="center">
		<td>Literature<br />文学作品</td>
		<td>0.93G</td>
		<td>177M</td>
		<td>702K</td>
		<td>8599篇现代文学作品</td>
	</tr>
	<tr align="center">
		<td>Mixed-large<br />综合</td>
		<td>22.6G</td>
    <td>4037M</td>
    <td>10653K</td>
		<td>上述所有数据的汇总</td>
	</tr>
  <tr align="center">
    <td>Complete Library in Four Sections<br />四库全书</td>
    <td>1.5G</td>
    <td>714M</td>
    <td>21.8K</td>
    <td>目前最大的古代文献汇总</td>
  </tr>
</table>
上述统计结果中，所有词都被计算在内，包括低频词。
<br>
<h2 id="导入模型代码">导入模型(代码)</h2>
<p>例如我下载了多个词模型，下载得到bz2结尾的文件名，例如<code>sgns.financial.bigram.bz2</code>。</p>
<p><img loading="lazy" src="models.png" alt=""  />
</p>
<p>使用方式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models.keyedvectors</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="c1">#以金融sgns.financial.bigram.bz2为例</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load_word2vec_format</span><span class="p">(</span><span class="s1">&#39;embeddings/sgns.financial.bigram.bz2&#39;</span><span class="p">,</span> 
                                          <span class="n">binary</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> 
                                          <span class="n">unicode_errors</span><span class="o">=</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>


<span class="n">model</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&lt;gensim.models.keyedvectors.KeyedVectors at 0x7fe7fad79d60&gt;
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;投资&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([-0.084635,  0.890228, -0.23223 , -0.308985,  0.058241,  0.458777,
       -0.152547, -0.413471,  0.269701, -0.078043, -0.4155  ,  0.074735,
        0.35714 ,  0.103431,  0.601784, -0.390854,  0.814801, -0.122664,
       -1.076744,  0.516941, -0.293319, -0.310251, -0.407794,  0.003898,
       -0.210962,  0.378095, -0.345955, -0.223848,  0.700162,  0.207644,
        0.426249, -0.272832, -0.110305, -0.701062, -0.173407, -0.172121,
       -0.682592,  0.593414,  0.279591, -0.408284, -0.166693,  0.753402,
        0.037375,  0.141865, -0.246024, -0.108663, -0.225255, -0.856601,
        0.381026,  0.401248,  0.012108, -0.126305, -0.374255,  0.728795,
        0.219549, -0.354029, -0.353131,  0.064867,  0.49565 , -0.503267,
       -0.304075,  0.145036,  0.688948,  0.063382, -0.223243,  0.474251,
        0.80543 ,  0.683178,  0.118159,  0.408411, -0.020066,  0.009045,
       -0.135446, -0.069633,  0.206357,  0.482845, -0.075307,  0.06433 ,
       -0.112367,  0.011816,  0.87427 , -0.120287, -0.31036 ,  0.369985,
        0.560386, -0.215248,  0.389631,  0.042943, -0.319149,  0.951551,
       -0.335188,  0.642246, -0.55546 ,  0.322397,  0.659618, -0.213124,
        0.346696, -0.342239,  0.31479 ,  0.078533, -0.345148,  0.815577,
       -0.530134,  0.303419, -0.158916, -0.190564,  0.436046, -0.112251,
       -0.339966,  0.253645,  0.181076,  0.122875, -0.310951, -0.126253,
        1.641405,  0.357906,  0.165796,  0.398656, -0.330591,  0.20328 ,
       -0.077191, -0.421248, -0.078504, -0.734519,  0.146212,  0.535727,
        0.014134,  0.040322, -0.44809 , -0.758205, -0.151237,  0.248258,
       -0.319704,  0.656033, -0.518857,  0.932356, -1.01786 , -0.46354 ,
        0.160921, -0.243597,  0.106666, -0.03404 ,  0.010672,  0.260243,
        0.899813,  0.171735, -0.108209, -0.009843, -0.18113 ,  0.302494,
        0.187285,  0.064669, -0.502041, -0.724377, -0.294312, -0.522256,
        0.334543,  0.740455, -0.357653,  0.540747,  0.256146,  0.513839,
        1.116628, -0.626111,  0.505574,  0.089774, -0.381137, -0.282352,
       -0.457542,  0.198909,  0.313638,  0.560809,  0.25295 ,  0.878158,
       -0.289311, -0.629047,  0.011103,  0.041058, -0.291302, -0.014001,
       -0.027697, -0.445817, -0.070086,  0.159816, -0.120071,  1.280489,
       -0.108866,  0.01586 , -0.505574, -0.679772, -0.343165,  0.595633,
        0.438108, -0.364066, -0.393667,  0.442285,  0.24979 , -0.191607,
        0.425692,  0.535577, -0.480332, -0.737461,  0.588498, -0.380264,
        0.151292,  0.077519, -0.221384,  0.699436,  0.401642,  0.509026,
       -0.411141,  0.206719, -0.097051, -0.451834, -0.825617,  0.602984,
        0.2853  ,  0.46055 ,  0.96472 ,  0.322712, -0.373446,  0.207944,
        0.236688,  0.566523,  0.037644,  1.241091,  0.025682,  0.373211,
        0.097712, -0.195355,  0.264579, -0.072992, -0.121629,  0.041688,
        0.213666,  0.329652, -0.015182,  0.396307,  0.117955,  0.119577,
       -0.334761, -0.135917,  0.409983,  0.512367, -0.292204,  0.302897,
       -0.325733,  0.383173, -0.92419 , -0.377535, -0.059801, -0.606275,
       -0.240482,  0.054021, -0.581386, -0.555691,  0.158354,  0.103765,
        0.107681,  0.248877, -0.597925,  0.193332,  0.844085,  0.00584 ,
        0.041622, -0.111235,  0.617778,  0.234883, -0.09562 ,  0.408324,
       -0.107121,  0.717875,  0.674794,  0.127214, -0.178357,  0.331436,
        0.417898, -0.650833, -0.428309, -0.576132,  0.210533, -0.057879,
       -0.578397,  0.468586,  0.103365, -0.403216, -0.398776,  0.094514,
       -0.130387,  0.628187, -0.463082, -0.951649,  0.561544,  0.118903,
        0.448327, -0.171685, -0.672348,  0.069471,  0.556452, -0.335425],
      dtype=float32)
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">model.similar_by_key(&#39;投资&#39;)
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;长期投资&#39;, 0.5135656595230103),
 (&#39;投资规模&#39;, 0.5089880228042603),
 (&#39;智百扬&#39;, 0.49565914273262024),
 (&#39;投资总额&#39;, 0.4955061078071594),
 (&#39;洛辉&#39;, 0.489188551902771),
 (&#39;337409&#39;, 0.48917514085769653),
 (&#39;洛盛&#39;, 0.4819018244743347),
 (&#39;洛腾&#39;, 0.4728960692882538),
 (&#39;394150&#39;, 0.4704836308956146),
 (&#39;投资额&#39;, 0.4685181975364685)]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">model</span><span class="o">.</span><span class="n">similar_by_key</span><span class="p">(</span><span class="s1">&#39;风险&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;提示&#39;, 0.6549968123435974),
 (&#39;经营风险&#39;, 0.6316577792167664),
 (&#39;景气衰退&#39;, 0.544153094291687),
 (&#39;风险分析&#39;, 0.5439289212226868),
 (&#39;遇宏观&#39;, 0.5435716509819031),
 (&#39;信用风险&#39;, 0.5345730185508728),
 (&#39;承受能力&#39;, 0.5291797518730164),
 (&#39;防范&#39;, 0.5271924138069153),
 (&#39;系统性&#39;, 0.5178108811378479),
 (&#39;不确定性&#39;, 0.5173759460449219)]
</code></pre></div><p>向量运行效果还行，感兴趣的同学也可以根据自己的数据训练word2vec模型，训练及使用的办法参照文章</p>
<p><a href="https://hidadeng.github.io/blog/douban_w2v/">豆瓣影评 | 探索词向量妙处</a></p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>将年报数据汇总至xlsx文件中</title>
      <link>https://hidadeng.github.io/blog/sh_market/</link>
      <pubDate>Thu, 21 Apr 2022 10:40:10 +0600</pubDate>
      
      <guid>/blog/sh_market/</guid>
      <description>分散在各处的pdf很难分析，如何将pdf汇总至excel。本文将pdf汇总与excel分析结合。</description>
      <content:encoded><![CDATA[<h2 id="整理到csv中">整理到csv中</h2>
<p>将70G定期报告披露数据集下载</p>
<p>链接: <a href="https://pan.baidu.com/s/1oboFUswiAMdA_Wn3xCh6YQ">https://pan.baidu.com/s/1oboFUswiAMdA_Wn3xCh6YQ</a> 提取码: g7bd</p>
<p><img loading="lazy" src="img/sh_marketing.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">pdfdocx</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">re</span>

<span class="k">def</span> <span class="nf">clean</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s1">&#39;\s&#39;</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>

<span class="c1">#文件夹列表</span>
<span class="n">dirs</span> <span class="o">=</span> <span class="p">[</span><span class="n">d</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="s1">&#39;reports&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="s1">&#39;DS&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">d</span><span class="p">]</span>
<span class="k">for</span> <span class="n">di</span> <span class="ow">in</span> <span class="n">dirs</span><span class="p">:</span>
    <span class="n">datas</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">files</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="s1">&#39;reports/</span><span class="si">{d}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">d</span><span class="o">=</span><span class="n">di</span><span class="p">))</span> <span class="k">if</span> <span class="s1">&#39;z&#39;</span> <span class="ow">in</span> <span class="n">f</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">file</span> <span class="o">=</span> <span class="s1">&#39;reports/</span><span class="si">{di}</span><span class="s1">/</span><span class="si">{f}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">di</span><span class="o">=</span><span class="n">di</span><span class="p">,</span> <span class="n">f</span><span class="o">=</span><span class="n">file</span><span class="p">)</span>
            <span class="n">code</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">year</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;_(\d</span><span class="si">{4}</span><span class="s1">)_&#39;</span><span class="p">,</span> <span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">text</span> <span class="o">=</span> <span class="n">clean</span><span class="p">(</span><span class="n">pdfdocx</span><span class="o">.</span><span class="n">read_pdf</span><span class="p">(</span><span class="n">file</span><span class="p">))</span>
            <span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;code&#39;</span><span class="p">:</span> <span class="n">code</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">:</span> <span class="n">text</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="p">:</span><span class="n">year</span><span class="p">}</span>
            <span class="n">datas</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">pass</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">datas</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">])</span>
    <span class="c1">#将每家公司的年报导出到csv中</span>
    <span class="n">df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;data.csv&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
    
    
<span class="c1">#读取</span>
<span class="n">ndf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data.csv&#39;</span><span class="p">)</span>
<span class="c1">#去重</span>
<span class="n">ndf</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="c1">#清洗</span>
<span class="n">ndf</span> <span class="o">=</span> <span class="n">ndf</span><span class="p">[</span><span class="n">ndf</span><span class="o">.</span><span class="n">code</span><span class="o">=!=</span><span class="s1">&#39;code&#39;</span><span class="p">]</span>
<span class="c1">#导出到xlsx</span>
<span class="n">ndf</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;data.xlsx&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h2 id="导入数据">导入数据</h2>
<p>excel数据下载链接: <a href="https://pan.baidu.com/s/1r4YRyxb7bTsx-_ayT4GDKQ">https://pan.baidu.com/s/1r4YRyxb7bTsx-_ayT4GDKQ</a> 提取码: ew4v</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;data.xlsx&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>code</th>
      <th>year</th>
      <th>text</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>603859</td>
      <td>2017</td>
      <td>2017年半年度报告1/116公司代码：603859公司简称：能科股份能科节能技术股份有限公...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>603859</td>
      <td>2019</td>
      <td>2019年半年度报告1/141公司代码：603859公司简称：能科股份能科科技股份有限公司2...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>603859</td>
      <td>2018</td>
      <td>2018年半年度报告1/120公司代码：603859公司简称：能科股份能科科技股份有限公司2...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>601500</td>
      <td>2017</td>
      <td>2017年半年度报告1/114公司代码：601500公司简称：通用股份江苏通用科技股份有限公...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>601500</td>
      <td>2019</td>
      <td>2019年半年度报告1/140公司代码：601500公司简称：通用股份江苏通用科技股份有限公...</td>
    </tr>
  </tbody>
</table>
</div>
<br>
<h3 id="查看数据量">查看数据量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><pre><code>16984
</code></pre>
<br>
<h3 id="公司数">公司数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><pre><code>1476
</code></pre>
<br>
<h3 id="含有的年份">含有的年份</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">sorted</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>
</code></pre></div><pre><code>[2002,
 2003,
 2004,
 2005,
 2006,
 2007,
 2008,
 2009,
 2010,
 2011,
 2012,
 2013,
 2014,
 2015,
 2016,
 2017,
 2018,
 2019]
</code></pre>
<br>
<h3 id="每家公司年报数">每家公司年报数</h3>
<p>数据集中，平均每家公司的年报数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">avg</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="o">/</span><span class="n">df</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
<span class="nb">round</span><span class="p">(</span><span class="n">avg</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</code></pre></div><pre><code>11.51
</code></pre>
<br>
<h2 id="说明">说明</h2>
<p>数据是19年获取的，数据不全，下载过程中有部分pdf是破损的文件。</p>
<p>大家可以尝试该数据集训练会计年报词向量，看看有没有有趣的应用。</p>
<p>本数据可作探索实验性质，如果想在会计领域深入挖掘，建议找更全更精准的数据集。</p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>豆瓣影评 | 探索词向量妙处</title>
      <link>https://hidadeng.github.io/blog/douban_w2v/</link>
      <pubDate>Thu, 21 Apr 2022 10:40:10 +0600</pubDate>
      
      <guid>/blog/douban_w2v/</guid>
      <description>使用cntext训练、使用词向量。</description>
      <content:encoded><![CDATA[<p>本文要点</p>
<ul>
<li>读取csv</li>
<li>cntext训练词向量模型</li>
<li>cntext扩展pos、neg词典</li>
<li>导入词向量模型</li>
<li>运用词向量模型</li>
</ul>
<br>
<h2 id="代码下载">代码下载</h2>
<p>链接: <a href="https://pan.baidu.com/s/1BFUb7myg6svTUZJfnvZfAg">https://pan.baidu.com/s/1BFUb7myg6svTUZJfnvZfAg</a> 提取码: og9t</p>
<p><br><br></p>
<h2 id="一读取数据">一、读取数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;douban.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;电影  : </span><span class="si">{}</span><span class="s2"> 部&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">Movie_Name_CN</span><span class="o">.</span><span class="n">nunique</span><span class="p">()))</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;评论  : </span><span class="si">{}</span><span class="s2"> 条&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)))</span>
</code></pre></div><pre><code>电影  : 28 部
评论  : 2125056 条
</code></pre>
<br>
<h2 id="二训练模型">二、训练模型</h2>
<p>使用<a href="https://hidadeng.github.io/blog/cntext_simplification/">cntext库</a>训练词向量word2vec模型,这里我把csv数据整理为txt</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">cntext</span> <span class="kn">import</span> <span class="n">W2VModels</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="c1">#训练word2vec模型</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">W2VModels</span><span class="p">(</span><span class="n">cwd</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">())</span>  <span class="c1">#语料数据</span>
<span class="n">model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">input_txt_file</span><span class="o">=</span><span class="s1">&#39;douban.txt&#39;</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step 1/4:...预处理    语料 ...
Step 2/4:...训练   word2vec模型
            耗时   2001 s
        
</code></pre></div><p>cntext可以用于扩展词典</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;pos.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;neg.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step 3/4:...准备 每个seed在word2vec模型中的相似候选词...
Step 4/4 完成! 耗时 2302 s
Step 3/4:...准备 每个seed在word2vec模型中的相似候选词...
Step 4/4 完成! 耗时 2303 s
</code></pre></div><p>在代码所在文件夹内可以找到</p>
<ul>
<li>output/w2v_candi_words/w2v.model</li>
<li>新的  pos.txt</li>
<li>新的  neg.txt</li>
</ul>
<p>新的pos.txt是对pos.txt词典的扩展。</p>
<br>
<br>
<h2 id="三导入w2v模型">三、导入w2v模型</h2>
<p>有的时候数据量特别大，模型训练十分不易。</p>
<p>这时，保存已训练好的模型，不止下次不用再同样的数据再次训练，也可分享给其他人使用。</p>
<p>训练结束后，在代码所在文件夹内可以找到 <code>output/w2v_candi_words/w2v.model</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s1">&#39;output/w2v_candi_words/w2v.model&#39;</span><span class="p">)</span>
<span class="n">w2v_model</span>
</code></pre></div><pre><code>&lt;gensim.models.keyedvectors.KeyedVectors at 0x7face0574880&gt;
</code></pre>
<p>w2v_models数据类型为KeyedVectors， 在本文中使用w2v_models代指KeyedVectors</p>
<br>
<h2 id="四玩转词向量">四、玩转词向量</h2>
<p>用户级的数据(如在线评论)感觉生成的向量会准一些，<strong>词向量的方向，近义反义在向量中都有体现</strong>。</p>
<p><img loading="lazy" src="man-woman.png" alt=""  />
</p>
<p>例如本文使用的是28部电影的2125056条影评， 一般评论内容包含电影相关信息，如电影题材、是否值的观影等。</p>
<p>而在我们训练出模型w2v_models存在一些常用的方法</p>
<ul>
<li><strong>w2v_model.get_vector(key)</strong> 获取key的词向量</li>
<li><strong>w2v_model.most_similar_to_given(key1, keys_list)</strong>  从 keys_list 中获取与 key1 最相似的词</li>
<li><strong>w2v_model.n_similarity(ws1, ws2)</strong> 两组词ws1, ws2 的相似度</li>
<li><strong>w2v_model.closer_than(key1, key2)</strong> 更接近于key1的词向量(相比于key2)</li>
<li><strong>w2v_model.most_similar(positive, negative)</strong> 找出与positive同方向，与negative反向相反的词。</li>
</ul>
<h3 id="41-get_vectorkey">4.1 get_vector(key)</h3>
<p>w2v_model.get_vector(key) 获取key的词向量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#获取某词语的向量</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;给力&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>array([ 0.06488553,  0.74188954,  0.25468495,  0.89755714,  1.8139195 ,
       -0.6950082 ,  0.24339403, -1.2188634 ,  0.543618  , -0.9988698 ,
        0.27471313,  0.9325699 , -0.5860608 , -0.5081917 ,  1.6423215 ,
       -0.0490295 , -0.3927043 ,  0.659067  ,  0.03185922, -1.021391  ,
       -1.3214804 , -0.28208104, -0.7819419 , -0.30637202, -1.5944146 ,
       -0.12383854, -0.70463836,  0.45689437,  1.223081  , -1.9453759 ,
       -0.5538997 , -0.9750523 , -0.10031194, -0.9568689 ,  0.30341247,
        1.1102395 ,  0.667315  , -1.1600997 , -0.26674765, -0.55144155,
       -0.3246094 ,  0.82902473, -0.47339582, -0.9009957 ,  1.7722464 ,
        0.28959563, -0.03453476,  0.4786787 , -0.48074463, -0.23090109,
       -0.49390873,  0.71246386,  2.1557336 ,  2.4899387 , -0.51481706,
        0.5579966 , -0.6973235 , -1.1408254 ,  0.72495663, -1.0326954 ,
       -0.5455598 ,  0.98941576, -1.2155218 , -0.9088408 ,  1.9184568 ,
       -0.21800426, -1.2009395 ,  0.29684314,  1.3672423 , -2.269391  ,
        0.6188098 , -0.02714545, -0.44811317,  1.4397241 , -1.0594722 ,
       -0.08088647, -0.13015983, -0.99255013,  0.62044877,  2.5046496 ,
        0.4054545 , -0.38767585, -0.6956541 ,  0.22991426,  0.5928579 ,
       -0.12684819, -0.17408212,  0.25033692, -1.4419957 , -0.27390227,
        1.166638  , -0.00624323, -1.6046506 ,  2.1633575 , -0.395548  ,
       -1.1297956 , -3.1474566 ,  0.38729438, -2.0434535 , -1.5511289 ],
      dtype=float32)
</code></pre>
<br>
<h3 id="42-most_similar_to_givenkey1-keys_list">4.2 most_similar_to_given(key1, keys_list)</h3>
<p>从 keys_list 中获取与 key1 最相似的词。例如在212w影评中，从<code>'爱情', '悬疑', '飞船', '历史', '战争'</code>找出最接近<code>'太空'</code>，最后返回<code>'飞船'</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#从 `keys_list` 中获取与 `key1` 最相似的 `key`。</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">most_similar_to_given</span><span class="p">(</span><span class="n">key1</span><span class="o">=</span><span class="s1">&#39;太空&#39;</span><span class="p">,</span> 
                                <span class="n">keys_list</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;爱情&#39;</span><span class="p">,</span> <span class="s1">&#39;悬疑&#39;</span><span class="p">,</span> <span class="s1">&#39;飞船&#39;</span><span class="p">,</span> <span class="s1">&#39;历史&#39;</span><span class="p">,</span> <span class="s1">&#39;战争&#39;</span><span class="p">])</span>
</code></pre></div><pre><code>'飞船'
</code></pre>
<br> 
<h3 id="43-w2v_modeln_similarityws1-ws2">4.3 w2v_model.n_similarity(ws1, ws2)</h3>
<p>两组词ws1, ws2 的相似度。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.metrics.pairwise</span> <span class="kn">import</span> <span class="n">cosine_similarity</span>

<span class="n">cosine_similarity</span><span class="p">([</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;理想&#39;</span><span class="p">)],</span>  
                  <span class="p">[</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;现实&#39;</span><span class="p">)])[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div><pre><code>0.5371934
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#cosine算法</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="s1">&#39;理想&#39;</span><span class="p">],</span> 
                       <span class="p">[</span><span class="s1">&#39;现实&#39;</span><span class="p">])</span>
</code></pre></div><pre><code>0.5371934
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#计算两组键之间的余弦相似度。</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="s1">&#39;给力&#39;</span><span class="p">,</span> <span class="s1">&#39;精彩&#39;</span><span class="p">,</span> <span class="s1">&#39;赞&#39;</span><span class="p">,</span> <span class="s1">&#39;推荐&#39;</span><span class="p">],</span> 
                       <span class="p">[</span><span class="s1">&#39;无聊&#39;</span><span class="p">,</span> <span class="s1">&#39;尴尬&#39;</span><span class="p">,</span> <span class="s1">&#39;垃圾&#39;</span><span class="p">])</span>
</code></pre></div><pre><code>0.35008422
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">w2v_model</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="s1">&#39;理想&#39;</span><span class="p">,</span> <span class="s1">&#39;梦想&#39;</span><span class="p">],</span> 
                       <span class="p">[</span><span class="s1">&#39;现实&#39;</span><span class="p">,</span> <span class="s1">&#39;生活&#39;</span><span class="p">])</span>
</code></pre></div><pre><code>0.48020104
</code></pre>
<br>
<h3 id="44-w2v_modelcloser_thankey1-key2">4.4 w2v_model.closer_than(key1, key2)</h3>
<p>更接近于key1的词向量(相比于key2)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#获取所有更接近 `key1` 的键，而不是 `key2` 。</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">closer_than</span><span class="p">(</span><span class="n">key1</span><span class="o">=</span><span class="s1">&#39;理想&#39;</span><span class="p">,</span> 
                      <span class="n">key2</span><span class="o">=</span><span class="s1">&#39;现实&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>['梦想', '妥协', '追梦', '愿望', '骨感']
</code></pre>
<br>
<h3 id="45-w2v_modelmost_similarpositive-negative">4.5 w2v_model.most_similar(positive, negative)</h3>
<p>找出与positive同方向，与negative反向相反的词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">w2v_model</span><span class="o">.</span><span class="n">most_similar</span><span class="p">(</span><span class="n">positive</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;给力&#39;</span><span class="p">,</span> <span class="s1">&#39;精彩&#39;</span><span class="p">,</span> <span class="s1">&#39;过瘾&#39;</span><span class="p">],</span>
                       <span class="n">negative</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;垃圾&#39;</span><span class="p">],</span>
                       <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><pre><code>[('激动人心', 0.6859163045883179),
 ('惊心动魄', 0.6767394542694092),
 ('带感', 0.6723690032958984),
 ('惊险刺激', 0.667783796787262),
 ('刺激', 0.6445038318634033),
 ('燃', 0.6429688930511475),
 ('爽快', 0.6287934184074402),
 ('带劲', 0.6254130005836487),
 ('爽', 0.624543309211731),
 ('酣畅淋漓', 0.6140543818473816)]
</code></pre>
<br>
<h3 id="46-类比king-manwomanqueen">4.6 类比king-man+woman~queen</h3>
<p><img loading="lazy" src="kingqueenformular.png" alt=""  />
</p>
<p>每个词是高维向量空间中的一个点， 两个点可以组成有方向的向量，而向量可以比较方向。</p>
<p>这里是推理过程，受限于数据，公式不一定完全成立， 但是思维可以类比。</p>
<p>这两个词相减，按感觉应该得到的是性别方向，雄性-&gt;雌性。</p>
<p>gender_direction_1 = vector(man)-vector(woman)</p>
<p>gender_direction_2 = vector(king)-vector(queen)</p>
<p>那两个性别方向应该近似，假设这里将其gender_direction_1=gender_direction_2，则对于公式中任意一个词，都可以由等式中的其他三个词经过运算得到。例如</p>
<p>vector(queen) =  vector(king)-vector(man)+vector(woman)</p>
<p>这里构造了一个情绪的公式，计算如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 开心 - 难过 ~=  享受 - d</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;开心&#39;</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;难过&#39;</span><span class="p">)</span>
<span class="n">c</span> <span class="o">=</span> <span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;享受&#39;</span><span class="p">)</span>

<span class="c1">#d = a-b+c</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">similar_by_vector</span><span class="p">(</span><span class="n">a</span><span class="o">-</span><span class="n">b</span><span class="o">+</span><span class="n">c</span><span class="p">)</span>
</code></pre></div><pre><code>[('享受', 0.7833479046821594),
 ('开心', 0.6825607419013977),
 ('愉快', 0.6298696994781494),
 ('娱乐', 0.6215130090713501),
 ('感官', 0.6085000038146973),
 ('图个', 0.6052624583244324),
 ('图一乐', 0.6039161682128906),
 ('休闲', 0.60273677110672),
 ('视觉享受', 0.6006160378456116),
 ('轻松愉快', 0.5961319804191589)]
</code></pre>
<p>很遗憾，d没有运算出煎熬之类的词语，但好在都是形容词，而且是快乐居多的形容词，类别是对的，就是方向是反的。</p>
<br>
<h3 id="词向量总结">词向量总结</h3>
<p>需要注意的是经典的运算king-man+woman~queen来自glove模型，而不是本文使用的word2vec模型。两者相同点，glove与word2vec均为词嵌入embeddings技术。区别在于glove获取的词的全局语义空间，而word2vec一般是某个词前后n个词(例如前后5个词)范围内的语义。做概念四则运算，以后如可能，建议用glove。</p>
<p>此外，即时使用glove，尽量使用概念的词组均值向量。首先要训练数据要存在这些人类认知的线索。其次，认知概念往往不是由一个词决定的，可能需要相关的很多词。例如人类社会中的<code>雄雌(没有贬义，包含了男女在内的概念)</code>，</p>
<ul>
<li>雄性概念词有<code>他、男人、男孩、父亲、爷爷、爸爸、姥爷...</code></li>
<li>雌性概念词有<code>她、女人、女孩、母亲、奶奶、妈妈、姥姥...</code></li>
<li>国王概念词有<code>查理n世、乔治、路易...</code></li>
<li>女王概念词有<code>伊丽莎白n世、维多利亚女王、叶卡捷琳娜二世...</code></li>
</ul>
<p>或许改成概念向量四则运算，公式可能更容易成立。</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>WordBias库 | 发现偏见(刻板印象)的交互式工具</title>
      <link>https://hidadeng.github.io/blog/wordbias/</link>
      <pubDate>Thu, 14 Apr 2022 22:43:10 +0600</pubDate>
      
      <guid>/blog/wordbias/</guid>
      <description>一种用于发现偏见(刻板印象)的交互式可视化工具</description>
      <content:encoded><![CDATA[<p>词嵌入做为一种词向量模型，可以从文本中计算出隐含的上下文情景信息，态度及偏见。通过词向量距离的测算，就可以间接测得不同群体对某概念(组织、群体、品牌、地域等)的态度偏见。偏见(刻板印象)的介绍有</p>
<p><a href="https://hidadeng.github.io/blog/wordembeddingsinsocialscience/">大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用</a></p>
<p><em><strong>计算机科学家，正研究如何在AI中减弱甚至剔除刻板印象；但在社会科学领域，接受已有数据中存在的刻板印象，在数据中测量Bias，发现Bias，应用Bias，也能更好的认识和改造社会</strong></em> 。今天介绍一个挺好玩的工具WordBias。</p>
<br>
<h2 id="wordbias">WordBias</h2>
<p><a href="https://github.com/bhavyaghai/WordBias"><strong>WordBias</strong></a>：一种用于发现词嵌入偏见(刻板印象)的交互式可视化工具， 旨在探索子群体（intersectional groups，直译为交叉群体）（如黑人女性、黑人穆斯林男性等）在词嵌入中的编码偏见。 我们的工具认为一个词与一个交叉组相关联，例如“Christian Males”，如果它与它的每个构成子集（Christians 和 Males）密切相关。 我们的工具旨在为专家提供有效的<i>审核</i>工具，为非专家提供<i>教育工具</i>，并增强领域专家的<i>可访问性</i>。</p>
<blockquote>
<p>例如对“黑人男性”的刻板印象，是由“男人”和“黑人”两类刻板印象加上一些其他线索组成的。</p>
<p>所以这里intersectional groups，直译为交叉群体, 感觉不太好理解， 我把intersectional groups理解为群体中的子群体。个人理解，不一定合理，欢迎留言。</p>
</blockquote>
<ul>
<li>
<p><a href="https://arxiv.org/abs/2103.03598"><strong>Read paper</strong> </a></p>
</li>
<li>
<p><a href="https://www.youtube.com/watch?v=LcwlyU3QT0w"><strong>视频演示(5min)</strong></a></p>
</li>
<li>
<p><a href="http://130.245.128.219:6999/"><strong>在线Demo</strong></a></p>
</li>
</ul>
<br>
<h2 id="安装">安装</h2>
<ul>
<li>
<p><a href="https://github.com/hiDaDeng/WordBias.git">下载这个仓库</a></p>
</li>
<li>
<p>命令行切换至WordBias文件夹,安装依赖包</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd Path_of_WordBias_Directory
pip3 install -r req.txt
</code></pre></div></li>
<li>
<p>运行WordBias，命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">python3 app.py
</code></pre></div></li>
<li>
<p>在浏览器中打开打开链接</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">https://localhost:6999
</code></pre></div></li>
</ul>
<p>浏览器中会出现界面，如下图</p>
<p><img loading="lazy" src="img/teaser.png" alt=""  />
</p>
<br>
<h2 id="界面">界面</h2>
<p>上图为WordBias的可视化界面。 图片可以分为3部分：<br />
(A) 控制面板提供选择要投影到平行坐标图上的单词的选项<br />
(B) 主视图显示所选单词（蓝线）沿不同偏见类型（轴）的偏差分数<br />
(C) 搜索面板使用户能够搜索单词并显示搜索/刷新结果。 <br /></p>
<br>
<h2 id="案例1-极端主义">案例1-极端主义</h2>
<p><img loading="lazy" src="img/teaser.jpg" alt=""  />
</p>
<p>在上图A位置选择恐怖主义类别词<strong>Extremism</strong></p>
<p>在图中B位置，可以看到这些负面词在不同维度上存在不同的偏见。</p>
<ul>
<li>性别: 这类词主要倾向于男性</li>
<li>地区： 这类词倾向于伊斯兰地区</li>
<li>年龄: 这类词倾向于年轻人</li>
<li>经济:  这类词倾向于贫穷</li>
</ul>
<p>这表明 Word2vec 嵌入包含对穆斯林地区的贫困男性存在偏见。 <br /></p>
<br>
<h2 id="案例2-prettybeautifull">案例2-pretty/beautifull</h2>
<p>根据WordBias，描述女性美丽，可能不同的词使用范围不太一样。</p>
<p><img loading="lazy" src="img/pretty.png" alt=""  />
</p>
<p><img loading="lazy" src="img/beautiful.png" alt=""  />
</p>
<p>在年龄维度，pretty更适合描述小女生，而beautifull适合成熟女性。</p>
<p>岁月从不败美人，说的就是beautifull woman吧。</p>
<br>
<h2 id="论文">论文</h2>
<p>使用到wordbias，请注明出处</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">@inproceedings{ghai2021wordbias,
  title={WordBias: An Interactive Visual Tool for Discovering Intersectional Biases Encoded in Word Embeddings},
  author={Ghai, Bhavya and Hoque, Md Naimul and Mueller, Klaus},
  booktitle={Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems},
  pages={1--7},
  year={2021}
}
</code></pre></div><p>基于训练好的词嵌入模型，WordBias计算每个词与性别、宗教等不同社会分类（<strong>类别词典</strong>）的<strong>偏见分数</strong>（关联系数），研究者定义了多个类别，如子类别，</p>
<table>
<thead>
<tr>
<th>类</th>
<th>子类</th>
<th>词表</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Gender</strong></td>
<td>Male</td>
<td>he, son, his, him, father, man, boy, himself, male, brother, sons, fathers, men, boys, males, brothers, uncle, uncles, nephew, nephews</td>
</tr>
<tr>
<td><strong>Gender</strong></td>
<td>Femal</td>
<td>she, daughter, hers, her, mother, woman, girl, herself, female, sister, daughters, mothers, women, girls, sisters, aunt, aunts, niece, nieces</td>
</tr>
<tr>
<td><strong>Age</strong></td>
<td>Young</td>
<td>Taylor, Jamie, Daniel, Aubrey, Alison, Miranda, Jacob, Arthur, Aaron, Ethan</td>
</tr>
<tr>
<td><strong>Age</strong></td>
<td>Old</td>
<td>Ruth, William, Horace, Mary, Susie, Amy, John, Henry, Edward, Elizabeth</td>
</tr>
<tr>
<td><strong>Religion</strong></td>
<td>Islam</td>
<td>allah, ramadan, turban, emir, salaam, sunni, koran, imam, sultan, prophet, veil, ayatollah, shiite, mosque, islam, sheik, muslim, muhammad</td>
</tr>
<tr>
<td><strong>Religion</strong></td>
<td>Christainity</td>
<td>baptism, messiah, catholicism, resurrection, christianity, salvation, protestant, gospel, trinity, jesus, christ, christian, cross, catholic, church</td>
</tr>
<tr>
<td><strong>Race</strong></td>
<td>Black</td>
<td>black, blacks, Black, Blacks, African, african, Afro</td>
</tr>
<tr>
<td><strong>Race</strong></td>
<td>White</td>
<td>white, whites, White, Whites, Caucasian, caucasian, European, european, Anglo</td>
</tr>
<tr>
<td><strong>Economic</strong></td>
<td>Rich</td>
<td>rich, richer, richest, affluence, advantaged, wealthy, costly, exorbitant, expensive, exquisite, extravagant, flush, invaluable, lavish, luxuriant, luxurious, luxury, moneyed, opulent, plush, precious, priceless, privileged, prosperous, classy</td>
</tr>
<tr>
<td><strong>Economic</strong></td>
<td>Poor</td>
<td>poor, poorer, poorest, poverty, destitude, needy, impoverished, economical, inexpensive, ruined, cheap, penurious, underprivileged, penniless, valueless, penury, indigence, bankrupt, beggarly, moneyless, insolvent</td>
</tr>
</tbody>
</table>
<p>其中偏见分数使用了Relative Norm Difference算法。设向量g1、g2分别表示一个类别中的两个子群体(如黑人，g1黑女 g2黑男) ，给定一个词w， 分别计算w与g1、g2的距离。如果不等距，则表示存在刻板印象，距离差值越大，偏见得分(BiasScore)越深。<br></p>
<p>$$𝐵𝑖𝑎𝑠S𝑐𝑜𝑟𝑒(𝑤) = 𝑐𝑜𝑠𝑖𝑛𝑒D𝑖𝑠𝑡𝑎𝑛𝑐𝑒(𝑤, 𝑔1) − 𝑐𝑜𝑠𝑖𝑛𝑒D𝑖𝑠𝑡𝑎𝑛𝑐𝑒(𝑤, 𝑔2) $$</p>
<br>
<p>然后使用新颖的交互式界面将它们可视化。</p>
<p><img loading="lazy" src="img/teaser.jpg" alt=""  />
</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Python实证指标构建与文本分析</title>
      <link>https://hidadeng.github.io/blog/management_python_course/</link>
      <pubDate>Mon, 11 Apr 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/management_python_course/</guid>
      <description>如何高效地采集数据？如何从杂乱的文本数据中抽取文本信息(变量)？如何挖掘文本中的认知？</description>
      <content:encoded><![CDATA[<h2 id="python实证指标构建与文本分析httpsmqlchatcomwechatpagechannel-introchannelid2000015158133596"><a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">Python实证指标构建与文本分析</a></h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="概览">概览</h2>
<h3 id="为何要学python">为何要学Python？</h3>
<p>在科学研究中，数据的获取及分析是最重要的也是最棘手的两个环节！</p>
<p>在<strong>前大数据时代</strong>，一般使用实验法、调查问卷、访谈或者二手数据等方式，将数据整理为结构化的表格数据，之后再使用各种计量分析方法，对这些表格数据进行分析。但<strong>大数据时代</strong>，网络数据成为各方学者亟待挖掘的潜在宝藏，大量商业信息、社会信息以文本等非结构化、异构型数据格式存储于海量的网页中。那么对于经管为代表的人文社科类专业科研工作者而言，通过Python可以帮助学者解决使用Web数据进行科研面临的两个问题：</p>
<ol>
<li><strong>网络爬虫技术</strong> 解决 如何从网络世界中高效地 <strong>采集数据</strong>？</li>
<li><strong>文本分析技术</strong> 解决 如何从杂乱的文本数据中<strong>实证指标(情感、态度、刻板印象等)</strong>？</li>
</ol>
<br>
<h3 id="发票事项">发票事项</h3>
<p>如需发票，请先加微信372335839， 咨询发票细节，再作购买</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 企业名称：哈尔滨所以然信息技术有限公司 
- 企业税号：91230109MABT7KBC4M 
- 银行账户:  6228400176412884160
- 开户行:   中国农业银行哈尔滨香坊支行
</code></pre></div><p><img loading="lazy" src="img/dadeng_wechat.jpg" alt=""  />
</p>
<br>
<h3 id="课程纲要">课程纲要</h3>
<ul>
<li><strong>课程目标：</strong> 掌握Python语法、网络爬虫、数据分析Pandas、文本分析、机器学习、词嵌入与认知</li>
<li><strong>核心知识点：</strong> 爬虫原理及应用、 非结构化文本数据挖掘的思路及方法、机器学习应用等</li>
<li><strong>环境配置:</strong>  本文使用Anaconda作为Python的软件安装包，注意安装过程中勾选<strong>Add Anaconda 3.x to PATH</strong></li>
<li><strong>课件资料：</strong> 本课程全部使用jupyter notebook文件作为课程课件</li>
</ul>
<br>
<h3 id="课程特色">课程特色</h3>
<ul>
<li><strong>接地气：</strong> 以经管学术需求为导向， 将Python分为语法篇、采集数据篇、文本分析篇、机器学习篇四大部分</li>
<li><strong>好理解：</strong> 知识点力求通俗易懂，少了晦涩的计算机术语，多了通俗易懂的使用场景和实战讲解</li>
<li><strong>上手快：</strong> 所有知识点均有可重复使用的代码块，犹如一块块的积木，课后您可以根据分析需要，快速搭建出自己的Python代码</li>
<li><strong>技术新</strong>： 最新词嵌入，可挖掘文本中的态度、偏见、刻板印象等。</li>
</ul>
<br>
<h2 id="经管-经典文本分析方法">经管-经典文本分析方法</h2>
<p>在这里我把技术细分为词频、词袋、w2v建词典、w2v认知变迁四个维度，这四大技术方法在本课程中均有体现。为了直观了解课程价值，这里附上7篇文献，大家可以购课前以做参考。</p>
<table>
<thead>
<tr>
<th>文献</th>
<th>定性</th>
<th>词频</th>
<th>词袋</th>
<th>W2V建词典</th>
<th>W2V认知变迁</th>
</tr>
</thead>
<tbody>
<tr>
<td>王伟, 陈伟, 祝效国 and 王洪伟, 2016. 众筹融资成功率与语言风格的说服性&ndash;基于 Kickstarter 的实证研究. <em>管理世界</em>, (5), pp.81-98.</td>
<td>Y</td>
<td>Y</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="https://hidadeng.github.io/blog/jcr_concreteness_computation/">语言具体性如何影响顾客满意度</a><br>Packard, Grant, and Jonah Berger. “How concrete language shapes customer satisfaction.” <em>Journal of Consumer Research</em> 47, no. 5 (2021): 787-806.</td>
<td></td>
<td>Y</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Wang, Quan, Beibei Li, and Param Vir Singh. &ldquo;Copycats vs. original mobile apps: A machine learning copycat-detection method and empirical analysis.&rdquo; Information Systems Research 29, no. 2 (2018): 273-291.</td>
<td></td>
<td></td>
<td>Y</td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="https://hidadeng.github.io/blog/2019-12-08-lazy-prices/">文本相似度</a><br>Cohen, L., Malloy, C. and Nguyen, Q., 2020. Lazy prices. <em>The Journal of Finance</em>, <em>75</em>(3), pp.1371-1415.</td>
<td></td>
<td></td>
<td>Y</td>
<td></td>
<td></td>
</tr>
<tr>
<td>胡楠, 薛付婧 and 王昊楠, 2021. <a href="https://hidadeng.github.io/blog/text_mining_in_2021_management_world/">管理者短视主义</a>影响企业长期投资吗———基于文本分析和机器学习. <em>管理世界</em>, <em>37</em>(5), pp.139-156.</td>
<td></td>
<td>Y</td>
<td></td>
<td>Y</td>
<td></td>
</tr>
<tr>
<td>Kai Li, Feng Mai, Rui Shen, Xinyan Yan, <a href="https://github.com/MS20190155/Measuring-Corporate-Culture-Using-Machine-Learning">Measuring Corporate Culture Using Machine Learning</a>, The Review of Financial Studies, 2020</td>
<td></td>
<td></td>
<td>Y</td>
<td>Y</td>
<td></td>
</tr>
<tr>
<td>女性就职高管改变组织内性别偏见<br>Lawson, M. Asher, Ashley E. Martin, Imrul Huda, and Sandra C. Matz. &ldquo;Hiring women into senior leadership positions is associated with a reduction in gender stereotypes in organizational language.&rdquo; <em>Proceedings of the National Academy of Sciences</em> 119, no. 9 (2022): e2026443119.</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Y</td>
</tr>
<tr>
<td>使用词嵌入技术，量化近百年以来性别和族群的刻板印象<br>Garg, Nikhil, Londa Schiebinger, Dan Jurafsky, and James Zou. &ldquo;Word embeddings quantify 100 years of gender and ethnic stereotypes.&rdquo; Proceedings of the National Academy of Sciences 115, no. 16 (2018): E3635-E3644.</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Y</td>
</tr>
</tbody>
</table>
<br>
<h2 id="一课件下载">一、课件下载</h2>
<ol>
<li>
<p>课程介绍</p>
</li>
<li>
<p>Win中的Anaconda软件配置</p>
</li>
<li>
<p>Mac中的Anaconda软件配置</p>
</li>
</ol>
<br>
<h2 id="二python语法入门">二、Python语法入门</h2>
<ol>
<li>Python跟英语一样是一门语言</li>
<li>数据类型之字符串</li>
<li>数据类型之列表元组集合</li>
<li>数据类型之字典</li>
<li>数据类型之布尔值、None</li>
<li>逻辑语句(if&amp;for&amp;tryexcept)</li>
<li>列表推导式</li>
<li>理解函数</li>
<li>常用的内置函数</li>
<li>内置库文件路径pathlib库</li>
<li>内置库csv文件库</li>
<li>内置库正则表达式re库</li>
<li>初学python常出错误汇总</li>
</ol>
<br>
<h2 id="三数据采集">三、数据采集</h2>
<ol>
<li>网络爬虫原理</li>
<li>网络访问requests库</li>
<li>网页解析pyquery库</li>
<li><strong>「案例」</strong> 豆瓣读书</li>
<li><strong>「案例」</strong> Boss直聘</li>
<li>如何解析json数据</li>
<li><strong>「案例」</strong> 豆瓣电影</li>
<li><strong>「案例」</strong> 京东商城</li>
<li><strong>「案例」</strong> 用爬虫下载文档及多媒体文件</li>
<li><strong>「案例」</strong> 上市公司定期报告pdf批量下载</li>
<li><strong>「案例」</strong> 上交所招股说明pdf批量下载</li>
<li><strong>「案例」</strong> 深交所招股说明pdf批量下载</li>
<li>爬虫知识点总结</li>
</ol>
<br>
<h2 id="四数据分析">四、数据分析</h2>
<ol>
<li>Pandas基础知识</li>
<li>数据去重与缺失值处理</li>
<li>合并数据</li>
<li>重塑数据</li>
<li>选取表中指定记录(行)</li>
<li>选取表中指定字段(列)</li>
<li>描述性统计</li>
<li>在表中创建新字段(列)</li>
<li>批操作apply与agg</li>
<li>透视表pivot_table</li>
<li>数据分组groupby</li>
<li>时间序列时间点创建</li>
<li>日期数据的dt属性</li>
<li>日期行索引操作(选取指定日期的数据)</li>
<li>时间序列date_range</li>
<li>时间序列重采样resample</li>
<li>时间序列时间窗口rolling</li>
<li><strong>「案例」</strong> Kaggle titanic数据集探索性分析</li>
<li><strong>「案例」</strong> Boss直聘Python岗位分析</li>
</ol>
<br>
<h2 id="五初识文本分析">五、初识文本分析</h2>
<ol>
<li>
<p>从编码/解码视角重新理解文本</p>
</li>
<li>
<p>读取不同格式文件中的数据</p>
</li>
<li>
<p>如何将多个年报整理到一个excel中</p>
</li>
<li>
<p><strong>「案例」</strong> 中文分词及数据清洗</p>
</li>
<li>
<p><strong>「案例」</strong> 词频统计&amp;词云图</p>
</li>
<li>
<p><strong>「案例」</strong> 共现法扩展情感词典(领域词典)</p>
</li>
<li>
<p><strong>「案例」</strong> 词向量word2vec扩展领域词典</p>
</li>
<li>
<p><strong>「案例」</strong> 中文情感分析(词典法)</p>
</li>
<li>
<p>cntext库 情感分析代码操作</p>
</li>
<li>
<p><strong>「案例」</strong> 对excel中的文本进行情感分析  91</p>
</li>
<li>
<p><strong>「案例」</strong>:  语言具体性与心理距离 | 以JCR2021论文为例</p>
</li>
<li>
<p><strong>「案例」</strong>: 使用LM金融词典对年报进行「语调分析」 | 2018管理世界</p>
</li>
<li>
<p><strong>「案例」</strong>:  使用md&amp;a数据测量企业数字化 | 管理世界、财经研究</p>
</li>
<li>
<p><strong>「案例」</strong>:  使用md&amp;a数据构建标准信息、信息含量  |  中国工业经济</p>
</li>
</ol>
<br>    
<h2 id="六机器学习与文本分析">六、机器学习与文本分析</h2>
<ol>
<li>了解机器学习ML</li>
<li>使用机器学习做文本分析的流程</li>
<li>scikit-learn机器学习库简介</li>
<li>文本特征抽取(特征工程)</li>
<li><strong>「案例」</strong> 在线评论文本分类</li>
<li>使用标注工具对数据进行标注</li>
<li><strong>「案例」</strong> 计算文本情感分析(有权重)</li>
<li><strong>「案例」</strong>  文本相似性计算</li>
<li><strong>「案例」</strong> 使用文本相似性识别变化(政策连续性)</li>
<li><strong>「案例」</strong> 央行货币政策报告文本相似度计算与可视化 | 金融研究</li>
<li><strong>「案例」</strong> Kmeans聚类算法</li>
<li><strong>「案例」</strong> LDA话题模型</li>
<li>使用机器学习从图片中提取文本信息</li>
</ol>
<br>
<h2 id="七词嵌入与认知">七、词嵌入与认知</h2>
<ol>
<li>词嵌入原理及应用概述</li>
<li><strong>「案例」</strong>  豆瓣影评-训练词向量&amp;使用词向量</li>
<li><strong>「案例」</strong>  使用词向量做话题建模</li>
<li><strong>「案例」</strong>  认知指标(态度、偏见等)的测量</li>
<li>总结-文本分析在社科(经管)领域中的应用</li>
</ol>
<p><br><br></p>
<h2 id="相关应用">相关应用</h2>
<p>参照两篇论文的摘要，可以通过场景化等的方式帮助我们迅速理解上面两个问题。摘要部分的加粗内容是论文用到的分析技术，在我们的课程中均有与之对应的知识点和代码。</p>
<p><strong>曾庆生,周波,张程,陈信元.年报语调与内部人交易:“表里如一”还是“口是心非”?[J].管理世界,2018,34(09):143-160.</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">该文汉化了LM金融词典，并使用LM中文词典进行语调分析。 课程已整理了 LM中英文词典 及 对应代码。
</code></pre></div><blockquote>
<p><strong>摘要</strong>: 基于中国A股非金融公司2007～2014年年报语调的文本分析,本文研究了年报语调与年报披露后的内部人交易行为之间的关系。研究发现,年报语调越积极,公司高管在年报公布后一段期间内的卖出股票规模越大,净买入股票规模越小,表明公司高管编制年报时存在**「口是心非」** 的操纵嫌疑。进一步研究发现,年报披露后中期市场表现差、信息透明度低、非国有控股的公司高管交易与年报语调的反向关系分别显著强于年报披露后中期市场表现好、信息透明度高、国有控股的公司;而公司盈余管理程度、交易者职位（是否核心高管）对年报语调与高管交易关系的影响不显著。此外,<strong>年报语调越积极,高管亲属卖出股票的规模也越大,但未发现公司重要股东交易与  「年报语调」 相关</strong>。上述结果表明,中国上市公司年报存在语调管理行为,年报语调成为除会计报表以外另一种可以被内部人管理或操纵的信息。</p>
<p><strong>关键词：</strong> 年报; 语调管理; 内部人交易; 信息不对称;</p>
</blockquote>
<br>
<p><strong>王伟,陈伟,祝效国,王洪伟.众筹融资成功率与语言风格的说服性——基于Kickstarter的实证研究[J].管理世界,2016(05):81-98.</strong></p>
<blockquote>
<p><strong>摘要</strong>：众筹融资效果决定着众筹平台的兴衰。众筹行为很大程度上是由投资者的主观因素决定的，而影响主观判断的一个重要因素就是语言的说服性。而这又是一种典型的用 户产生内容（UGC），项目发起者可以采用任意类型的语言风格对项目进行描述。不同的语 言风格会改变投资者对项目前景的感知，进而影响他们的投资意愿。首先，依据 Aristotle 修 辞三元组以及 Hovland 说服模型，采用扎根理论，将众筹项目的语言说服风格分为 5 类：诉诸可信、诉诸情感、诉诸逻辑、诉诸回报和诉诸夸张。</p>
<p>然后，<strong>借助文本挖掘方法，构建说服风格语料库，并对项目摘要进行分类。</strong></p>
<p>最后，建立语言说服风格对项目筹资影响的计量模型，并对 <strong>Kickstarter 平台上的 128345 个项目进行实证分析</strong>。总体来说，由于项目性质的差异，不同 的项目类别对应于不同的最佳说服风格。</p>
</blockquote>
<br>
<p><strong>胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.</strong></p>
<blockquote>
<p><strong>摘要</strong> : 在可持续发展战略导向下，秉持长远理念是企业抵御外部环境威胁和拥有可持续经营能力的基 石。然而，作为企业掌舵人的管理者并非都具有长远的目光。本文基于高层梯队理论和社会心理学中的时间 导向理论，提出了管理者内在的短视主义特质与企业资本支出和研发支出的关系，并<strong>采用文本分析和机器学习技术构建出管理者短视主义指标从而对其进行实证检验</strong>。研究结果发现，<strong>年报 MD&amp;A 中披露的「短期视域」 语言</strong> 能够反映管理者内在的短视主义特质，管理者短视会导致企业减少资本支出和研发支出。当公司治理水平、监督型机构投资者的持股比例以及分析师关注度越高时，管理者短视主义对这些长期投资的负向影响越易受到抑制。最终，管理者短视主义导致的研发支出减少和资本投资效率降低会损害企业的未来绩效。本文拓宽了管理者短视主义的行为后果分析，对企业高层次管理人才的聘任以及企业和政府的监管具有重要的实践启示。<strong>同时，本文将文本分析和机器学习方法引入管理者短视主义的研究，为未来该领域的研究提供了参考和借鉴。</strong></p>
<p><strong>关键词</strong>: 管理者短视; 长期投资; 文本分析; 机器学习</p>
</blockquote>
<br>
<h2 id="相关文献">相关文献</h2>
<p>在这里我把技术细分为词频、词袋、w2v建词典、w2v认知变迁四个维度，整理了经管7篇论文。大家可以阅读这7篇论文，掌握文本分析的应用场景。</p>
<table>
<thead>
<tr>
<th>文献</th>
<th>定性</th>
<th>词频</th>
<th>词袋</th>
<th>W2V建词典</th>
<th>W2V认知变迁</th>
</tr>
</thead>
<tbody>
<tr>
<td>王伟, 陈伟, 祝效国 and 王洪伟, 2016. 众筹融资成功率与语言风格的说服性&ndash;基于 Kickstarter 的实证研究. <em>管理世界</em>, (5), pp.81-98.</td>
<td>Y</td>
<td>Y</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="https://hidadeng.github.io/blog/jcr_concreteness_computation/">语言具体性如何影响顾客满意度</a><br>Packard, Grant, and Jonah Berger. “How concrete language shapes customer satisfaction.” <em>Journal of Consumer Research</em> 47, no. 5 (2021): 787-806.</td>
<td></td>
<td>Y</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Wang, Quan, Beibei Li, and Param Vir Singh. &ldquo;Copycats vs. original mobile apps: A machine learning copycat-detection method and empirical analysis.&rdquo; Information Systems Research 29, no. 2 (2018): 273-291.</td>
<td></td>
<td></td>
<td>Y</td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="https://hidadeng.github.io/blog/2019-12-08-lazy-prices/">文本相似度</a><br>Cohen, L., Malloy, C. and Nguyen, Q., 2020. Lazy prices. <em>The Journal of Finance</em>, <em>75</em>(3), pp.1371-1415.</td>
<td></td>
<td></td>
<td>Y</td>
<td></td>
<td></td>
</tr>
<tr>
<td><a href="https://hidadeng.github.io/blog/2023-01-10-similarity-of-cental-bank-monetary-policy/">文本相似度</a><br>姜富伟,胡逸驰,黄楠.央行货币政策报告文本信息、宏观经济与股票市场[J].金融研究,2021,(06):95-113.</td>
<td></td>
<td></td>
<td>Y</td>
<td></td>
<td></td>
</tr>
<tr>
<td>胡楠, 薛付婧 and 王昊楠, 2021. <a href="https://hidadeng.github.io/blog/text_mining_in_2021_management_world/">管理者短视主义</a>影响企业长期投资吗———基于文本分析和机器学习. <em>管理世界</em>, <em>37</em>(5), pp.139-156.</td>
<td></td>
<td>Y</td>
<td></td>
<td>Y</td>
<td></td>
</tr>
<tr>
<td>Kai Li, Feng Mai, Rui Shen, Xinyan Yan, <a href="https://github.com/MS20190155/Measuring-Corporate-Culture-Using-Machine-Learning">Measuring Corporate Culture Using Machine Learning</a>, The Review of Financial Studies, 2020</td>
<td></td>
<td></td>
<td>Y</td>
<td>Y</td>
<td></td>
</tr>
<tr>
<td>女性就职高管改变组织内性别偏见<br>Lawson, M. Asher, Ashley E. Martin, Imrul Huda, and Sandra C. Matz. &ldquo;Hiring women into senior leadership positions is associated with a reduction in gender stereotypes in organizational language.&rdquo; <em>Proceedings of the National Academy of Sciences</em> 119, no. 9 (2022): e2026443119.</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Y</td>
</tr>
<tr>
<td>使用词嵌入技术，量化近百年以来性别和族群的刻板印象<br>Garg, Nikhil, Londa Schiebinger, Dan Jurafsky, and James Zou. &ldquo;Word embeddings quantify 100 years of gender and ethnic stereotypes.&rdquo; Proceedings of the National Academy of Sciences 115, no. 16 (2018): E3635-E3644.</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>Y</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]沈艳, 陈赟, &amp; 黄卓. (2019). 文本大数据分析在经济学和金融学中的应用: 一个文献综述. 经济学 (季刊), 18(4), 1153-1186.
[2]王伟,陈伟,祝效国,王洪伟. 众筹融资成功率与语言风格的说服性-基于Kickstarter的实证研究.*管理世界*.2016;5:81-98.
[3]胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.
[4]孟庆斌, 杨俊华, 鲁冰. 管理层讨论与分析披露的信息含量与股价崩盘风险——基于文本向量化方法的研究[J]. *中国工业经济*, 2017 (12): 132-150.
[5]曾庆生,周波,张程,陈信元.年报语调与内部人交易:“表里如一”还是“口是心非”?[J].管理世界,2018,34(09):143-160.
[6]彭红枫, &amp; 林川. (2018). 言之有物: 网络借贷中语言有用吗?——来自人人贷借款描述的经验证据[J]. 金融研究, 461(11), 133-153.
[7]吴非, 胡慧芷, 林慧妍, and 任晓怡. “企业数字化转型与资本市场表现——来自股票流动性的经验证据[J].” 管理世界 (2021).
[8]姜富伟,胡逸驰,黄楠.央行货币政策报告文本信息、宏观经济与股票市场[J].金融研究,2021,(06):95-113.
[9]陈霄,叶德珠,邓洁.借款描述的可读性能够提高网络借款成功率吗[J].中国工业经济,2018,(03):174-192.
[10]冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J].南开管理评论:1-27.
[11]罗勇根,饶品贵,陈灿.高管宏观认知具有管理者“烙印”吗?——基于管理者风格效应的实证检验[J].金融研究,2021(05):171-188.
[12]吴胜涛,茅云云,吴舒涵,冯健仁,张庆鹏,谢天,陈浩,朱廷劭.基于大数据的文化心理分析[J].心理科学进展:1-13.
[13]Cohen, Lauren, Christopher Malloy, and Quoc Nguyen. &#34;Lazy prices.&#34; *The Journal of Finance* 75, no. 3 (2020): 1371-1415.
[14]Wang, Quan, Beibei Li, and Param Vir Singh. &#34;Copycats vs. Original Mobile Apps: A Machine Learning Copycat-Detection Method and Empirical Analysis.&#34; *Information Systems Research* 29.2 (2018): 273-291.
[15]Packard, Grant, and Jonah Berger. “How concrete language shapes customer satisfaction.” _Journal of Consumer Research_ 47, no. 5 (2021): 787-806.
[16]Kai Li, Feng Mai, Rui Shen, Xinyan Yan, Measuring Corporate Culture Using Machine Learning, *The Review of Financial Studies*,2020
[17]Loughran T, McDonald B. Textual analysis in accounting and finance: A survey[J]. *Journal of Accounting Research*, 2016, 54(4): 1187-1230. Author links open overlay panelComputational socioeconomics
[18]Berger, Jonah, Ashlee Humphreys, Stephan Ludwig, Wendy W. Moe, Oded Netzer, and David A. Schweidel. &#34;Uniting the tribes: Using text for marketing insight.&#34; *Journal of Marketing* 84, no. 1 (2020): 1-25.
</code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>结构模型|DSGE|Stata实证前沿|空间计量|Python数据挖掘2022五一工作坊</title>
      <link>https://hidadeng.github.io/blog/2022-05-workshop/</link>
      <pubDate>Mon, 11 Apr 2022 03:43:10 +0600</pubDate>
      
      <guid>/blog/2022-05-workshop/</guid>
      <description>为推动我国经济、统计等社会科学量化研究方法学习与应用，培养和训练社会科学相关领域的青年学者、硕博士研究生，促进社会科学相关领域研究方法科学化规范化，“结构模型、DSGE、Stata实证前沿、空间计量、Python数据挖掘”五一工作坊为广大学者提供了一个高水平学术交流、研究方法普及与研究经验分享的平台。工作坊采用模块式教学方法，不仅侧重经济、统计等社会科学量化基本方法的介绍，而且更加注重研究设计与研究选题训练，注重理论实践相结合，培养学员社会科学量化分析研究的综合能力。</description>
      <content:encoded><![CDATA[<p>大家好，五一劳动节假期我们将迎来了新的一期“结构模型、DSGE、Stata实证前沿、空间计量、Python数据挖掘”工作坊，欢迎大家报名参加。我们将分七次为大家介绍本次工作坊的详细内容，敬请期待。</p>
<br>
<h2 id="关于我们">关于我们</h2>
<p>为推动我国经济、统计等社会科学量化研究方法学习与应用，培养和训练社会科学相关领域的青年学者、硕博士研究生，促进社会科学相关领域研究方法科学化规范化，“<strong>结构模型、DSGE、Stata实证前沿、空间计量、Python数据挖掘</strong>”五一工作坊为广大学者提供了一个高水平学术交流、研究方法普及与研究经验分享的平台。工作坊采用模块式教学方法，不仅侧重经济、统计等社会科学量化基本方法的介绍，而且更加注重研究设计与研究选题训练，注重理论实践相结合，培养学员社会科学量化分析研究的综合能力。</p>
<p><strong>结构模型又称为结构计量模型</strong>，是将经济学模型和统计模型结合，用于估计描述现实的深层参数，模拟现实世界，<strong>以便合理地评估政策效果的实证工具</strong>。结构模型通过建立引起因果关系的数据生成具体方式（机制）的模型来解决简化型中的问题。模型中明确地指明了一些重要的外部因素（如政策）是如何影响通过某些参数来影响参与人决策的，那么通过改变这些外部因素并结合现有数据所估计出来的参数，结构模型便可以提供一系列反事实推断，<strong>对政策的制定有重要的意义</strong>。政策评估需要建立在理解对政策不变的“深层”参数之上。在结构式方法中，理论和实证的联系是紧密的。由于其建模技术的优雅和深刻，不仅是当今经济政策评估领域的前沿，也是发展经济理论的有力武器，<strong>在世界顶级期刊中，采用结构模型建模的文章引起广泛关注和引用，为所在学科的理论发展和政策评估带来深刻影响</strong>。</p>
<p>实证研究过程中学者普遍面临<strong>数据获取、清洗和编码</strong>的两大问题。在前大数据时代，一般使用实验法、调查问卷、访谈或者二手数据等方式，将数据整理为结构化的表格数据，之后再使用计量分析方法对数据进行分析。但大数据时代，网络数据成为亟待挖掘的潜在宝藏，大量商业信息、社会信息以<strong>文本等非结构化、异构型数据格式</strong>存储于海量网页中。那么对于经管为代表的人文社科类专业科研工作者而言，通过Python可以帮助学者解决使用Web数据进行科研面临的两大问题，即：<strong>①从网络世界中高效地采集数据  ②从纷杂的文本数据抽取文本信息</strong>。</p>
<p>在获取数据及文本信息后，需要使用计量方法对数据进行分析处理。Stata、ArcGIS、Matlab等软件功能日益强大，理论也与时俱进。前沿分析固然可能会给你的Paper加分，但不理解其理论依据，会导致前沿方法的滥用, 使你的研究大为失色。</p>
<p><strong>DSGE</strong>，全称是dynamic stochastic general equilibrium，即<strong>动态随机一般均衡模型</strong>。是目前在宏观经济学研究占重要地位（甚至是主导地位）的模型方法，主要用于讨论<strong>经济增长、经济周期</strong>以及讨论<strong>政策工具效果</strong>（财政和货币政策）。我们需要对DSGE的深入学习。</p>
<p>为此，本次五一工作坊特别邀请七位走在理论实证、数据分析前沿的学者，为广大热爱经济学的学生、青年教师，讲解当下前沿模型的核心思想，基于Matlab、ArcGIS、Stata、Python等软件的实践操作。在这个知识与思想碰撞的时代，<strong>我们将与您分享最前沿的思想与实践技巧</strong>！为您带来最前沿计量经济理论与扎实操作并重的高质量课程。</p>
<br>
<h2 id="工作坊详情页">工作坊详情页</h2>
<p>由<strong>刘文革</strong>老师总筹划、<strong>谢杰</strong>老师协调发起工作坊，工作坊由7位老师分讲。</p>
<p><strong>点击下方链接</strong>，进入课程详情页，<strong>每门课程费用2000元(邓建鹏老师课程1000元)</strong>。</p>
<ul>
<li><a href="1_structural_model_1.html"><font color=blue>结构模型(一) -邹建文(中南财经政法大学)</font></a></li>
<li><a href="2_structural_model_2.html"><font color=blue>结构模型(二) -邓建鹏(上海财经大学)</font></a></li>
<li><a href="3-DSGE.html"><font color=blue>DSGE-王文甫(四川大学)</font></a></li>
<li><a href="4-Stata1.html"><font color=blue>Stata实证前沿(一)-王非(中国人民大学)</font></a></li>
<li><a href="5-Stata2.html"><font color=blue>Stata实证前沿(二)-司继春(上海对外经贸大学)</font></a></li>
<li><a href="6-Geo.html"><font color=blue>空间计量-李光勤(安徽财经大学)</font></a></li>
<li><a href="7-Python.html"><font color=blue>Python数据挖掘-邓旭东(哈尔滨工业大学)</font></a></li>
</ul>
<br>
<h2 id="授课方式">授课方式</h2>
<ul>
<li><strong>时间</strong>
<ul>
<li>2022年<strong>五一</strong>期间（<strong>具体时间待定</strong>）</li>
<li>每天6小时（8:30 — 11:30；14:00 — 17:00）+ <strong>30分钟答疑</strong>（部分课程晚间18:30-21:30进行）</li>
</ul>
</li>
<li>地点: 小鹅通平台（<strong>线上直播</strong>）</li>
<li><strong>每门课程2000元，视频保留10天</strong>；<strong>邓建鹏老师课程1000元</strong></li>
</ul>
<p><br><br></p>
<h2 id="报名信息">报名信息</h2>
<p>全国高等院校及研究机构从事经济科学研究的青年师生。尤其适合那些希望掌握高级实证方法，提升量化研究设计能力和国家课题申报能力的研究者。</p>
<h3 id="费用">费用</h3>
<ul>
<li><strong>每门课程2000元(每位老师讲授一门)</strong>；<strong>邓建鹏老师课程1000元</strong></li>
</ul>
<h3 id="优惠政策">优惠政策</h3>
<ul>
<li><strong>个人报名优惠</strong>：报名两位老师的课程9折；三位老师的课程8折；四位及以上老师的课程7.5折；老学员9折；学生优惠200元/人。</li>
<li><strong>团队报名优惠</strong>：三人成团及以上9折；五人成团及以上8折。</li>
</ul>
<h3 id="报名时间">报名时间</h3>
<p>从即日起</p>
<h3 id="报名咨询">报名咨询</h3>
<ul>
<li>17816181460（同微信）（汪老师）</li>
</ul>
<img src="img/wechat.png" style="zoom:40%;" />
<h3 id="缴费信息">缴费信息</h3>
<ul>
<li>单位：杭州国商智库信息技术服务有限公司</li>
<li>开户银行： 中国银行杭州大学城支行</li>
<li>银行账户：6232636200100260588</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>文献汇总 | 词嵌入 与 社会科学中的偏见(态度)</title>
      <link>https://hidadeng.github.io/blog/literatureembeddings/</link>
      <pubDate>Sat, 09 Apr 2022 22:43:10 +0600</pubDate>
      
      <guid>/blog/literatureembeddings/</guid>
      <description>人类在留下语言、文字的过程中，也留下了自己的偏见、态度等主观认知信息（偏见、态度）。通过词向量距离的测算，就可以间接测得不同群体 对 某概念(组织、群体、品牌、地域等)的态度偏见。</description>
      <content:encoded><![CDATA[<h2 id="词嵌入">词嵌入</h2>
<p>前几天刚刚分享了，</p>
<p><a href="https://hidadeng.github.io/blog/wordembeddingsinsocialscience/">大数据时代下社会科学研究方法的拓展—基于词嵌入技术的文本分析的应用</a></p>
<p>人类在书信、网络论坛留下语言、文字的过程中，也留下了自己的偏见、态度等主观认知信息（偏见、态度）。</p>
<p>词嵌入做为一种词向量模型，可以从文本中计算出隐含的上下文情景信息，态度及偏见。通过词向量距离的测算，就可以间接测得不同群体对某概念(组织、群体、品牌、地域等)的态度偏见。感觉<strong>词嵌入</strong>技术用处很大，最近整理了下pnas、nature、science中的文献，<em>对了，相当部分的pnas关于词嵌入的论文经常会提供原始数据及代码。</em></p>
<p><strong>目前有些Python库可以使用词嵌入模型展示人类认知偏见， 如:</strong></p>
<ul>
<li><a href="https://github.com/koaning/whatlies/">whatlies</a></li>
<li><a href="https://github.com/uber-research/parallax">parallax</a></li>
<li><a href="https://github.com/bhavyaghai/WordBias">wordbias</a></li>
</ul>
<br>
<h2 id="相关文献">相关文献</h2>
<ul>
<li>
<p>冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J/OL].南开管理评论:1-27[2022-04-08].http://kns.cnki.net/kcms/detail/12.1288.F.20210905.1337.002.html</p>
</li>
<li>
<p>Kozlowski, A.C., Taddy, M. and Evans, J.A., 2019. The geometry of culture: Analyzing the meanings of class through word embeddings. American Sociological Review, 84(5), pp.905-949.</p>
</li>
<li>
<p>Toubia, O., Berger, J. and Eliashberg, J., 2021. How quantifying the shape of stories predicts their success. <em>Proceedings of the National Academy of Sciences</em>, <em>118</em>(26).</p>
</li>
<li>
<p>Caliskan A, Bryson JJ, Narayanan A. Semantics derived automatically from language corpora contain human-like biases. Science. 2017;356: 183–186.</p>
</li>
<li>
<p>Garg N, Schiebinger L, Jurafsky D, Zou J. Word embeddings quantify 100 years of gender and ethnic stereotypes . Proceedings of the National Academy of Sciences. 2018. pp. E3635–E3644. doi:10.1073/pnas.1720347115</p>
</li>
<li>
<p>Garg, N., Schiebinger, L., Jurafsky, D. and Zou, J., 2018. Word embeddings quantify 100 years of gender and ethnic stereotypes. <em>Proceedings of the National Academy of Sciences</em>, <em>115</em>(16), pp.E3635-E3644.</p>
</li>
<li>
<p>Peng, H., Ke, Q., Budak, C., Romero, D.M. and Ahn, Y.Y., 2021. Neural embeddings of scholarly periodicals reveal complex disciplinary organizations. <em><strong>Science Advances</strong></em>, <em>7</em>(17), p.eabb9004.</p>
</li>
<li>
<p>Waller, I. and Anderson, A., 2021. Quantifying social organization and political polarization in online platforms. <em>Nature</em>, <em>600</em>(7888), pp.264-268.</p>
</li>
<li>
<p>Arseniev-Koehler, A., Cochran, S.D., Mays, V.M., Chang, K.W. and Foster, J.G., 2022. Integrating topic modeling and word embedding to characterize violent deaths. <em>Proceedings of the National Academy of Sciences</em>, <em>119</em>(10), p.e2108801119.</p>
</li>
<li>
<p>Bollen, J., Ten Thij, M., Breithaupt, F., Barron, A.T., Rutter, L.A., Lorenzo-Luaces, L. and Scheffer, M., 2021. Historical language records reveal a surge of cognitive distortions in recent decades. <em>Proceedings of the National Academy of Sciences</em>, <em>118</em>(30).</p>
</li>
<li>
<p>Kim, L., Smith, D.S., Hofstra, B. and McFarland, D.A., 2022. Gendered knowledge in fields and academic careers. <em>Research Policy</em>, <em>51</em>(1), p.104411.</p>
</li>
<li>
<p>Lawson, M.A., Martin, A.E., Huda, I. and Matz, S.C., 2022. Hiring women into senior leadership positions is associated with a reduction in gender stereotypes in organizational language. <em>Proceedings of the National Academy of Sciences</em>, <em>119</em>(9), p.e2026443119.</p>
</li>
<li>
<p>Brady, W.J., McLoughlin, K., Doan, T.N. and Crockett, M.J., 2021. How social learning amplifies moral outrage expression in online social networks. <em>Science Advances</em>, <em>7</em>(33), p.eabe5641.</p>
</li>
<li>
<p>Bailey, A.H., Williams, A. and Cimpian, A., 2022. Based on billions of words on the internet, people= men. <em>Science Advances</em>, <em>8</em>(13), p.eabm2463.</p>
</li>
<li>
<p>Lewis, M. and Lupyan, G., 2020. Gender stereotypes are reflected in the distributional structure of 25 languages. <em>Nature human behaviour</em>, <em>4</em>(10), pp.1021-1028.</p>
</li>
<li>
<p>Schramowski, P., Turan, C., Andersen, N., Rothkopf, C.A. and Kersting, K., 2022. Large pre-trained language models contain human-like biases of what is right and wrong to do. <em>Nature Machine Intelligence</em>, <em>4</em>(3), pp.258-268.</p>
</li>
<li>
<p>Costa-jussà, M.R., 2019. An analysis of gender bias studies in natural language processing. <em>Nature Machine Intelligence</em>, <em>1</em>(11), pp.495-496.</p>
</li>
<li>
<p>Rodman, E., 2020. A timely intervention: Tracking the changing meanings of political concepts with word vectors. <em><strong>Political Analysis</strong></em>, <em>28</em>(1), pp.87-111.</p>
</li>
<li>
<p>Bhatia, S., 2017. Associative judgment and vector space semantics. <em><strong>Psychological review</strong></em>, <em>124</em>(1), p.1.</p>
</li>
<li>
<p>Kurdi, B., Mann, T.C., Charlesworth, T.E. and Banaji, M.R., 2019. The relationship between implicit intergroup attitudes and beliefs. <em>Proceedings of the National Academy of Sciences</em>, <em>116</em>(13), pp.5862-5871.</p>
</li>
<li>
<p>Charlesworth, T.E., Yang, V., Mann, T.C., Kurdi, B. and Banaji, M.R., 2021. Gender stereotypes in natural language: Word embeddings show robust consistency across child and adult language corpora of more than 65 million words. <em><strong>Psychological Science</strong></em>, <em>32</em>(2), pp.218-240.</p>
</li>
<li>
<p>Bhatia, S., 2019. Predicting risk perception: New insights from data science. <em><strong>Management Science</strong></em>, <em>65</em>(8), pp.3800-3823.</p>
</li>
<li>
<p>Rheault, L. and Cochrane, C., 2020. Word embeddings for the analysis of ideological placement in parliamentary corpora. <em>Political Analysis</em>, <em>28</em>(1), pp.112-133.</p>
</li>
<li>
<p>Yang, K., Lau, R.Y. and Abbasi, A., 2022. Getting Personal: A Deep Learning Artifact for Text-Based Measurement of Personality. <em><strong>Information Systems Research</strong></em>.</p>
</li>
<li>
<p>Rodman, E., 2020. A timely intervention: Tracking the changing meanings of political concepts with word vectors. <em>Political Analysis</em>, <em>28</em>(1), pp.87-111.</p>
</li>
<li>
<p>Margulis, E.H., Wong, P.C., Turnbull, C., Kubit, B.M. and McAuley, J.D., 2022. Narratives imagined in response to instrumental music reveal culture-bounded intersubjectivity. <em>Proceedings of the National Academy of Sciences</em>, <em>119</em>(4).</p>
</li>
<li>
<p>Thompson, B., Roberts, S.G. and Lupyan, G., 2020. Cultural influences on word meanings revealed through large-scale semantic alignment. <em>Nature Human Behaviour</em>, <em>4</em>(10), pp.1029-1038.</p>
</li>
</ul>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>计算文本的语言具体性 | 以JCR2021论文为例</title>
      <link>https://hidadeng.github.io/blog/jcr_concreteness_computation/</link>
      <pubDate>Thu, 07 Apr 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/jcr_concreteness_computation/</guid>
      <description>语言具体性描述了一个词在多大程度上是指一个实际的、有形的或“真实的”实体，以一种更具体、更熟悉、更容易被眼睛或心灵感知的方式描述对象和行为（即，可想象或生动；Brysbaert, Warriner, and Kuperman 2014; Semin and Fiedler 1988). 我找了三篇论文，简单分享一下。</description>
      <content:encoded><![CDATA[<p>前不久分享了一篇JCR2018的综述 <a href="https://hidadeng.github.io/blog/automatetextanalysisinmarket/">营销研究中文本分析应用概述(含案例及代码) </a></p>
<p>最近看到一篇JCR2021的实证 <strong>语言具体性如何影响消费者态度</strong> ，研究者从一个现象, 即消费者可以通过感知店员的表达具体(例如，更多的名词而非代词)，判断店员是否用心倾听自己的需求。这有点像三十年前， 在服务态度不好的百货商场，店员往往爱答不理。</p>
<p><img loading="lazy" src="img/Concreteness_JCR_computation.png" alt=""  />
</p>
<p>大邓作为消费者，相比1、2、3三种表达方式，我会更喜欢会觉得4、5、6句子中使用**较多细节、具体词的店员。**而简短表达，代词过多，表明店员连嘴都懒得张口服务我，似乎对我们的切身需求关注不足，态度好不端正的感觉。文中对店员言语具体性表达给出了建议及原因，例子如下图。</p>
<p><img loading="lazy" src="img/Concreteness_JCR_Explaination.png" alt=""  />
</p>
<ul>
<li><a href="https://hidadeng.github.io/blog/2022-05-workshop/">结构模型、DSGE、Stata实证前沿、空间计量、Python数据挖掘|2022五一工作坊</a></li>
<li>想随时随地系统学习Python文本分析，可以选择
<ul>
<li><a href="https://hidadeng.github.io/blog/management_python_course/"><strong>Python网络爬虫与文本分析 | 2021录播课(虽是录播，但章节更多一些)</strong></a>。</li>
</ul>
</li>
<li>更喜欢有互动感通过直播学习，可以考虑
<ul>
<li><a href="https://hidadeng.github.io/blog/2022-05-workshop/7-Python.html"><strong>Python网络爬虫与文本分析 | 2022五一直播</strong></a></li>
</ul>
</li>
</ul>
<p>我找了三篇文本具体性的论文，<strong>文章结尾附有具体性的Python案例代码</strong>，希望能对大家有帮助。</p>
<h2 id="语言具体性">语言具体性</h2>
<p><strong>语言具体性Concreteness</strong>描述了一个词在多大程度上是指一个实际的、有形的或“真实的”实体，以一种更具体、更熟悉、更容易被眼睛或心灵感知的方式描述对象和行为（即，可想象或生动；Brysbaert, Warriner, and Kuperman 2014; Semin and Fiedler 1988). 我找了三篇文本具体性的论文，文章结尾附有具体性的Python案例代码，希望能对大家有帮助。</p>
<br>
<h2 id="具体性词典">具体性词典</h2>
<p>Brysbaert, Warriner, A. B., &amp; Kuperman, V. (2014) 找4000人，网络众包标注，开发了英文40000词的<strong>具体性词典</strong>。下图是对应的词典excel文件，字段Conc.M就是对应词语的具体性得分。</p>
<p><img loading="lazy" src="img/Concreteness_Wordlist.png" alt=""  />
</p>
<br>
<h2 id="心理距离与语言具体性">心理距离与语言具体性</h2>
<p>Snefjella, Bryor, and Victor Kuperman(2015)挖掘了<strong>心理距离</strong>与<strong>语言具体性</strong>之间的<strong>数学关系</strong>， 第一次将心理距离看做连续性变量进行度量(而之前的研究几乎只把心理距离设置为高、低二分类变量)，计算过程使用了Brysbaert2014的语言具体性词典度量。</p>
<p>实验结果与我们认知相吻合，基本上心理距离越大， 具体性得分越小；反之，也成立。下面我列出在地理、时间、社会三个维度的量化可视化结果。</p>
<h3 id="地理维度">地理维度</h3>
<p><img loading="lazy" src="img/Concreteness_psychological_distance1.png" alt=""  />
</p>
<h3 id="时间维度">时间维度</h3>
<p><img loading="lazy" src="img/Concreteness_psychological_distance2.png" alt=""  />
</p>
<h3 id="社会维度">社会维度</h3>
<p><img loading="lazy" src="img/Social-Distance-Groups.png" alt=""  />
</p>
<p><img loading="lazy" src="img/Concreteness_psychological_distance3.png" alt=""  />
</p>
<br>
<h2 id="代码实现-以jcr为例">代码实现-以JCR为例</h2>
<p><img loading="lazy" src="img/Concreteness_JCR.png" alt=""  />
</p>
<p>消费者经常对客户服务感到沮丧。 但是语言的简单转变是否有助于提高客户满意度？ 我们认为，<strong>语言具体性linguistic concreteness</strong>——员工在与客户交谈时使用的词语的<strong>有形性tangibility、具体性speciﬁcity或可想象性imaginability</strong>——可以塑造消费者的态度和行为。 五项研究，包括对两个不同领域环境中超过 1,000 次真实消费者-员工互动的文本分析，表明当员工与他们具体交谈时，客户会更满意、更愿意购买和购买。 这是因为客户推断使用更具体语言的员工正在倾听（即关注并理解他们的需求)。 这些发现加深了对语言如何塑造消费者行为的理解，揭示了具体性影响人们感知的心理机制，并为管理者帮助提高客户满意度提供了一种直接的方法。</p>
<p>假设我们作为消费者，看到员工对同一个意思使用如下不同表达，</p>
<p><img loading="lazy" src="img/jcr_attitude.png" alt=""  />
</p>
<p>相比4、5、6这三种表达方式，会觉得句子中使用**较多代词的店员懒得说话(态度不端正)。**而使用较多名词和形容词，会表明店员关注我们的切身需求。这篇JCR就是从这个角度切入的研究。</p>
<br>
<p>JCR文中具体性计算说明</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">We computed a concreteness score for each conversational turn (averaging across all words in that turn) and for each conversational participant (averaging across all words over all their turns). Results were the same whether or not stop words commonly excluded from linguistics analyses (e.g., but, and) were included. We report results excluding stop words.
</code></pre></div><p>按照我的理解， 设计如下算法</p>
<ol>
<li>对文本(会话)使用nltk分词，得到词语列表</li>
<li>在具体性词典中查询对应的具体性得分</li>
<li>得到文本的具体性得分(句子所有词的具体性得分加总除以词数)</li>
</ol>
<h3 id="方法一">方法一</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">nltk.tokenize</span> <span class="kn">import</span> <span class="n">word_tokenize</span>

<span class="c1">#JCR文中使用的Paetzold2016的词典</span>
<span class="c1"># Paetzold2016文中的词典下载链接失效。这里使用Brysbaert2014的词典</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s2">&#34;Concreteness_ratings_Brysbaert_et_al_BRM.xlsx&#34;</span><span class="p">)</span>

<span class="kn">from</span> <span class="nn">nltk.tokenize</span> <span class="kn">import</span> <span class="n">word_tokenize</span>

<span class="k">def</span> <span class="nf">query_concreteness</span><span class="p">(</span><span class="n">word</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    查询word的具体性得分
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s2">&#34;Word&#34;</span><span class="p">]</span><span class="o">==</span><span class="n">word</span><span class="p">][</span><span class="s1">&#39;Conc.M&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">0</span>
    
 

<span class="k">def</span> <span class="nf">concreteness_score</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    计算文本的具体性得分
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
    
    <span class="k">try</span><span class="p">:</span>
        <span class="n">words</span> <span class="o">=</span> <span class="n">word_tokenize</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;你的电脑nltk没配置好，请观看视频https://www.bilibili.com/video/BV14A411i7DB&#39;</span><span class="p">)</span>
        <span class="n">words</span> <span class="o">=</span> <span class="n">text</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
        
    <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">score</span> <span class="o">+=</span> <span class="n">query_concreteness</span><span class="p">(</span><span class="n">word</span><span class="o">=</span><span class="n">word</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="n">score</span> <span class="o">+=</span> <span class="mi">0</span>
            
    <span class="k">return</span> <span class="n">score</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
    
  
<span class="c1"># 案例</span>
<span class="n">employee_replys</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;I&#39;ll go look for that&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that top&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that t-shirt&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go look for that t-shirt in grey&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that t-shirt in grey&#34;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">reply</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">employee_replys</span><span class="p">):</span>
    <span class="n">score</span><span class="o">=</span><span class="n">concreteness_score</span><span class="p">(</span><span class="n">reply</span><span class="p">)</span>
    <span class="n">template</span> <span class="o">=</span> <span class="s2">&#34;Concreteness Score: </span><span class="si">{score:.2f}</span><span class="s2"> | Example-</span><span class="si">{idx}</span><span class="s2">: </span><span class="si">{exmaple}</span><span class="s2">&#34;</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">template</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">score</span><span class="o">=</span><span class="n">score</span><span class="p">,</span> 
                          <span class="n">idx</span><span class="o">=</span><span class="n">idx</span><span class="p">,</span> 
                          <span class="n">exmaple</span><span class="o">=</span><span class="n">reply</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Concreteness Score: 1.55 | Example-0: I&#39;ll go look for that
Concreteness Score: 1.55 | Example-1: I&#39;ll go search for that
Concreteness Score: 1.89 | Example-2: I&#39;ll go search for that top
Concreteness Score: 2.04 | Example-3: I&#39;ll go search for that t-shirt
Concreteness Score: 2.37 | Example-4: I&#39;ll go look for that t-shirt in grey
Concreteness Score: 2.37 | Example-5: I&#39;ll go search for that t-shirt in grey
</code></pre></div><p>员工的表达越具体，具体性得分越高。</p>
<p>跟JCR中的得分不一样，但是案例的得分趋势是一致的。基本上从上至下，每个员工回复对应的具体性得分越来越高。</p>
<p><img loading="lazy" src="img/Concreteness_JCR_computation.png" alt=""  />
</p>
<br>
<h3 id="方法二">方法二</h3>
<p>cntext内置了效价情感分析函数和Concreteness词典，因此本任务实际上可以用cntext完成。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install cntext==1.7.7
</code></pre></div><p>代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># load the concreteness.pkl dictionary file</span>
<span class="n">concreteness_df</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;Concreteness.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;Concreteness&#39;</span><span class="p">]</span>
<span class="n">concreteness_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<table>
<thead>
<tr>
<th style="text-align:right"></th>
<th style="text-align:left">word</th>
<th style="text-align:right">valence</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:left">roadsweeper</td>
<td style="text-align:right">4.85</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:left">traindriver</td>
<td style="text-align:right">4.54</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:left">tush</td>
<td style="text-align:right">4.45</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:left">hairdress</td>
<td style="text-align:right">3.93</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:left">pharmaceutics</td>
<td style="text-align:right">3.77</td>
</tr>
</tbody>
</table>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">reply</span> <span class="o">=</span> <span class="s2">&#34;I&#39;ll go look for that&#34;</span>

<span class="n">score</span><span class="o">=</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_valence</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">reply</span><span class="p">,</span> 
                              <span class="n">diction</span><span class="o">=</span><span class="n">concreteness_df</span><span class="p">,</span> 
                              <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
<span class="n">score</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1.85
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">employee_replys</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;I&#39;ll go look for that&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that top&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that t-shirt&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go look for that t-shirt in grey&#34;</span><span class="p">,</span>
                   <span class="s2">&#34;I&#39;ll go search for that t-shirt in grey&#34;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">reply</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">employee_replys</span><span class="p">):</span>
    <span class="n">score</span><span class="o">=</span><span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_valence</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">reply</span><span class="p">,</span> 
                                  <span class="n">diction</span><span class="o">=</span><span class="n">concreteness_df</span><span class="p">,</span> 
                                  <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
    
    <span class="n">template</span> <span class="o">=</span> <span class="s2">&#34;Concreteness Score: </span><span class="si">{score:.2f}</span><span class="s2"> | Example-</span><span class="si">{idx}</span><span class="s2">: </span><span class="si">{exmaple}</span><span class="s2">&#34;</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">template</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">score</span><span class="o">=</span><span class="n">score</span><span class="p">,</span> 
                          <span class="n">idx</span><span class="o">=</span><span class="n">idx</span><span class="p">,</span> 
                          <span class="n">exmaple</span><span class="o">=</span><span class="n">reply</span><span class="p">))</span>
    
<span class="n">ct</span><span class="o">.</span><span class="n">sentiment_by_valence</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> <span class="n">diction</span><span class="o">=</span><span class="n">concreteness_df</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Concreteness Score: 1.55 | Example-0: I&#39;ll go look for that
Concreteness Score: 1.55 | Example-1: I&#39;ll go search for that
Concreteness Score: 1.89 | Example-2: I&#39;ll go search for that top
Concreteness Score: 2.04 | Example-3: I&#39;ll go search for that t-shirt
Concreteness Score: 2.37 | Example-4: I&#39;ll go look for that t-shirt in grey
Concreteness Score: 2.37 | Example-5: I&#39;ll go search for that t-shirt in grey
</code></pre></div><p><br><br></p>
<h2 id="代码获取">代码获取</h2>
<p><font color=blue><a href="JCR_Concreteness_Computation.zip">点击下载本文代码</a></font></p>
<ul>
<li>
<p><a href="https://hidadeng.github.io/blog/2022-05-workshop/">结构模型、DSGE、Stata实证前沿、空间计量、Python数据挖掘|2022五一工作坊</a></p>
</li>
<li>
<p>想随时随地系统学习Python文本分析，可以选择</p>
<ul>
<li><a href="https://hidadeng.github.io/blog/management_python_course/"><strong>Python网络爬虫与文本分析 | 2021录播课(虽是录播，但章节更多一些)</strong></a>。</li>
</ul>
</li>
<li>
<p>更喜欢有互动感通过直播学习，可以考虑</p>
<ul>
<li><a href="https://hidadeng.github.io/blog/2022-05-workshop/7-Python.html"><strong>Python网络爬虫与文本分析 | 2022五一直播</strong></a></li>
</ul>
</li>
</ul>
<br>
<h2 id="相关文献">相关文献</h2>
<p>Brysbaert, M., Warriner, A. B., &amp; Kuperman, V. (2014). Concreteness ratings for 40 thousand generally known English word lemmas. Behavior Research Methods, 46, 904–911</p>
<p>Snefjella, Bryor, and Victor Kuperman. &ldquo;Concreteness and psychological distance in natural language use.&rdquo; <em>Psychological science</em> 26, no. 9 (2015): 1449-1460.</p>
<p>Paetzold, G. H., and L. Specia (2016), “Inferring Psycholinguistic Properties of Words,” in Proceedings of the North American Association for Computational Linguistics-Human Language Technologies 2016, 435–40.</p>
<p>Packard, Grant, and Jonah Berger. &ldquo;How concrete language shapes customer satisfaction.&rdquo; <em>Journal of Consumer Research</em> 47, no. 5 (2021): 787-806.</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>转载|大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用</title>
      <link>https://hidadeng.github.io/blog/wordembeddingsinsocialscience/</link>
      <pubDate>Thu, 07 Apr 2022 18:43:10 +0600</pubDate>
      
      <guid>/blog/wordembeddingsinsocialscience/</guid>
      <description>在大数据时代的背景下，基于大数据的分析处理技术为以“数据驱动”的社会科学研究创造了新的发 展契机。其中，词嵌入(Word Embeddings)技术借势大数据浪潮，以其高效的词表征能力和强大的迁移学习 能力在文本分析领域受到越来越多的关注。不同于传统的文本分析路径，词嵌入技术不仅实现了对非结构 化文本数据的表征，还保留了丰富的语义信息，可以实现对跨时间、跨文化文本中深层次文化信息的挖掘， 极大丰富了传统的社会科学实证的研究方法。文章总结了词嵌入技术的基本原理及特点，系统地梳理了词 嵌入技术的六大应用主题：社会偏见、概念联想、语义演变、组织关系、文本情感和个体决策机制。随后， 文章归纳了词嵌入技术的基本应用流程。词嵌入技术还面临文本数据的选择、中文文本的分词处理、单词 语义信息的表征层次三种挑战，文章归纳了相应的应对思路与方法。最后，基于词嵌入技术的强大适应能 力，未来研究可以进一步关注该技术在管理领域的应用前景，包括政策效应评估、用户推荐系统、品牌管 理、企业关系管理、组织内部管理、中国传统智慧与管理问题六个方面。</description>
      <content:encoded><![CDATA[<h2 id="活动预告">活动预告</h2>
<ul>
<li>想随时随地系统学习Python文本分析，可以选择
<ul>
<li><a href="https://hidadeng.github.io/blog/management_python_course/"><strong>Python网络爬虫与文本分析 | 2021录播课(虽是录播，但章节更多一些)</strong></a>。</li>
</ul>
</li>
<li>更喜欢有互动感通过直播学习，可以考虑
<ul>
<li><a href="https://hidadeng.github.io/blog/2022-05-workshop/7-Python.html"><strong>Python网络爬虫与文本分析 | 2022五一直播</strong></a></li>
</ul>
</li>
</ul>
<br>
<h2 id="文献">文献</h2>
<p>本文全文摘自</p>
<p>冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J/OL].南开管理评论:1-27[2022-04-08].http://kns.cnki.net/kcms/detail/12.1288.F.20210905.1337.002.html</p>
<br>
<h2 id="词嵌入亮点">词嵌入亮点</h2>
<p>词嵌入技术是文本分析中技术含量较高，可从文本中测量出人类认知信息。而即时是有一定学习能力的人，当阅读大量文本很难察觉文中是否有内置(预置)的信息，如作者的偏见、态度、刻板印象，等人类复杂认知。词嵌入技术可以将这类难以察觉的线索挖掘、测量。</p>
<br>
<h2 id="摘要">摘要</h2>
<p>在大数据时代的背景下，基于大数据的分析处理技术为以“数据驱动”的社会科学研究创造了新的发 展契机。其中，词嵌入(Word Embeddings)技术借势大数据浪潮，以其高效的词表征能力和强大的迁移学习能力在文本分析领域受到越来越多的关注。不同于传统的文本分析路径，词嵌入技术不仅实现了对非结构化文本数据的表征，还保留了丰富的语义信息，可以实现对跨时间、跨文化文本中深层次文化信息的挖掘， 极大丰富了传统的社会科学实证的研究方法。文章总结了词嵌入技术的基本原理及特点，系统地梳理了词 嵌入技术的六大应用主题：社会偏见、概念联想、语义演变、组织关系、文本情感和个体决策机制。随后， 文章归纳了词嵌入技术的基本应用流程。词嵌入技术还面临文本数据的选择、中文文本的分词处理、单词 语义信息的表征层次三种挑战，文章归纳了相应的应对思路与方法。最后，基于词嵌入技术的强大适应能 力，未来研究可以进一步关注该技术在管理领域的应用前景，包括政策效应评估、用户推荐系统、品牌管 理、企业关系管理、组织内部管理、中国传统智慧与管理问题六个方面。</p>
<br>
<p><strong>关键词</strong>: 词嵌入；自然语言处理；文本分析；社会科学；管理领域应用</p>
<p><br><br></p>
<h2 id="引言">引言</h2>
<p>作为人类开展文化交流和情感沟通的基本载体，语言承担了重要的信息交换功能。借助 于各类语言表达形式，人们将诸如知觉、思维、态度和情感等复杂的心理活动转化成特定的 语言。 而作为语言的典型载体之一，文本既能够在个体层面上反映人们的内心活动，也能 够在组织和社会层面上反映集体文化。 因此，从文本内容挖掘个体深层次的心理活动和 人类社会的文化沿革是社会科学的基本研究路径。</p>
<p>长期以来，<strong>在社会科学尤其是管理学和心理学等领域，实证研究多以针对实验、问卷和结构化的二手数据的量化分析为主导，而对于非结构化的文本材料(如访谈记录)仍以质性分析为主</strong>。[5] 在大数据时代，“数据+行为+交叉学科”已成为社会科学发展的必然方向。而<strong>计算社会科学</strong>的兴起则为我们理解人类行为、探讨社会现象提供了新的研究素材、视角和手段[6] 。随着互联网技术的飞速发展，人们在网络上发表<strong>大量包含思维、情感、观点的文本信息，这些井喷式爆发的文本为“以数据驱动”的社会科学研究提供了可及的信息来源</strong>。若能对之加以利用，无疑将拓宽社会科学研究的方法。[7 - 9] 然而，社会科学领域的<strong>传统文本研究方法以人工编码为主，其时间投入过大、成本较高、客观性相对较弱等不足极大地限制了文本数据 [10] 在实证研究中的应用</strong>。 所幸的是，以自然语言处理(Natural Language Processing; NLP)为核心的计算机文本分析技术(Computerized Text Analysis)的发展为大数据文本在社会科学领域 中的应用带来了契机。 “词”作为文本的最小单元，是计算机进行文本分析的基础。在自然语言处理领域，“词” 主要以向量(vector)的形式表示。而<strong>词嵌入(Word Embeddings)技术，即是一种可以把高维词 向量映射进低维向量空间，以此来实现词义理解的计算机文本分析技术</strong>。相较于其他自然语 言技术，词嵌入技术不仅展现出了高效的学习能力，而且<strong>允许计算机从更高的意义单元(即 目标词的上下文)出发理解词义、刻画“词”之间的相对关系</strong>，因此逐渐成为了自然语言处理的重要工具，<strong>在管理学、心理学等社会科学领域取得了丰富的研究进展</strong>。相比于传统的、以人工编码和词频统计为主导的文本分析方式，词嵌入的独特优势在于：</p>
<ul>
<li>借助计算机分析技术，可以在短时间内、以较低成本，实现对大规模文本数据的高效处理；</li>
<li>在挖掘文本特征和理解文本内容时，更多地依赖文本自身的分布规律，具有较强的客观性，其背后“数据驱动”的分析逻辑也使这一技术在探索性研究中具有较大的应用优势；</li>
<li>面对<strong>跨时间、跨文化比较</strong>的研究话题、以及在<strong>挖掘社会学、行为学变量</strong>及变量关系等领域展现出广阔的应用前景。</li>
</ul>
<p>词嵌入技术已在社会科学领域得到了广泛的应用，主要包括：<strong>社会偏见 、概念联想[14] 、关系网络和判断机制</strong>[16] 等六大主题，大量研究见诸 Nature、Science、PNAS、Academy Management Journal、American Sociological Review、Management Science 等国际期刊。反观国内的社会科学领域，词嵌入方法的应用价值还未得到足够重视和讨论。据此，本文通过介绍词嵌入技术的基本原理、梳理国外社会科学领域对词嵌入的应用情况，以期帮助国内社会科学研究者了解该技术独特的应用价值，推动词嵌入技术在大数据时代背景下对我国社会科学研究方法的丰富和推动。具体而言，本文：</p>
<ul>
<li>梳理了词嵌入技术原理，以帮助学者深入了解词嵌入在文本分析方面的技术优势；</li>
<li>梳理了现有文献中社会科学研究者们利用这一技术的相关应用研究，展现了在面对实际问题时可以如何利用词嵌入技术进行实证分析，以帮助学者了解该技术的适用领域；</li>
<li>总结词嵌入技术的基本应用流程，提供方法指引；</li>
<li>归纳了词嵌入技术面临的三方面挑战 ——文本数据的选择、中文文本的分词处理、语义信息表征，并提出了相应的应对思路；</li>
<li>从政策效应 评估、用户推荐系统、品牌管理、企业关系管理、组织管理与中国传统智慧和管理问题这六个方面出发，探讨词嵌入技术在以管理为代表的社会科学研究中的应用潜力和价值，以期丰富大数据时代背景下我国的管理科学研究方法。</li>
</ul>
<p><br><br></p>
<h2 id="一词嵌入技术的基本原理">一、词嵌入技术的基本原理</h2>
<p>不同于基于词频统计的文本分析方法，词嵌入技术的核心特征在于从文本的全局语义信息出发对“词”进行表征学习， 即<strong>大规模利用文本中“词”的上下文信息，将文本词汇映射至高维向量空间以实现词的向量化表示，使得词向量之间既保留着“词”在语义层面的关联，又满足向量所适用的代数运算性质</strong>。 在此基础上，通过度量词向量之间的几何关系(即“距 离”)便能够刻画“词”在现实语义中的关系。 进一步地，我们利用词与词之间这种可被量化的语义关系来探讨社会科学领域下的概念之间的相似性或相关性，并由此反映特定的社会文化和认知现象，乃至刻画社会、心理变量与其它行为变量间的相关关系。因此，<strong>词嵌入技术的应用主要包含两大步骤，即首先利用词嵌入模型从文本数据中获得对“词”的向量表征，再计算词向量距离进行相关性分析。</strong></p>
<br>
<h3 id="1-1-词的向量表征">1. 1 “词”的向量表征</h3>
<p>“词”的向量化表征是计算机进行文本分析的基础，也是词嵌入技术的本质属性。纵观计算机文本分析的历史，词向量的表征方法主要经历了以下两个发展阶段：</p>
<h4 id="第一个阶段-假设词语之间相互独立br"><strong>第一个阶段： 假设词语之间相互独立</strong><br></h4>
<p>第一个阶段是从词典出发、基于词频统计规则对“词”的离散型表征。例如，热向量编码(one-hot vector)通过</p>
<p>建立基于目标文本(“猫很可爱，狗也很可爱”)的分词词典({“猫”: 0，“狗”: 1，“也”: 2，“很”: 3，“可爱”: 4})，将每个“词”都表示为一个向量，使其维度与词典长度相当，且每个元素取值为0 或 1。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">“猫”   = (1, 0, 0, 0, 0)
“狗”   = (0, 1, 0, 0, 0)
“也”   = (0, 0, 1, 0, 0)
“很”   = (0, 0, 0, 1, 0)
“可爱” = (0, 0, 0, 0, 1))
</code></pre></div><p>这一类词表征方法虽然简单直观，但是在面对大规模文本时，词典长度的激增易造成参数空间的“<strong>维度灾难</strong>”问题(Curse of Dimension)① 。并且，粗糙的信息表征思路<strong>忽视了“词”的频率、上下文以及“词”之间的关联，使得这一类词向量无法反映“词”的语义信息</strong>。</p>
<br>
<h4 id="第二阶段-认为词语之间有千丝万缕的联系br">第二阶段: 认为词语之间有千丝万缕的联系<br></h4>
<p>为了提升词向量的表征质量，Deerwester 等[20] 主张从更高的文本意义单元理解文本词汇的含义。由此，分布式表征(distributional representation)[18] 成为了第二阶段的词表征方法。<strong>分布式假设(distributional hypothesis)是分布式表征方法的理论支撑，也是词嵌入技术背后的核心逻辑基础——即上下文相似的“词”拥有相似的或相关的语义，它能够反映了人类的语言使用习惯，也符合人的现实认知逻辑。[16,18,21] 人们倾向于对具有相似或者相关特征的对象产生认知关联，体现在文本层面则是相近的语言表达或高度的共现频率，即相似的上下文语境</strong>。基于此，通过分析目标词与其上下文词汇之间的统计分布规律可以学习到目标词的众多文本信息，使得词表征结果囊括文本语境的特征。因此，分布式表征的思想被广泛应用于后续的语义学习中，成为了词嵌入技术的基本逻辑。</p>
<p>其中，较为出色且经典的是 Mikolov 等人在 2013 年提出的 <strong>Word2Vec 模型</strong>，[18] 它标志 着 词嵌入模型 的 正 式 诞 生 。除了 Word2Vec 词嵌入模型外， Pennington 等 [23] 提出了同样具有高效学习能力的 <strong>GloVe</strong>(Global Vectors for Word Representation)学习框架，通过对词共现矩阵的矩阵分解，实 现对“词”的表征。此外，为了提升训练速度、适应海量文本学习，后 多对于词的分布式表征的改进算法，包括：<strong>fastText 算法</strong>、 谷歌的 <strong>ELMo</strong>(Embedding from Language Models)语言模型[25] 和 <strong>BERT</strong>(Bidirectional Encoder Representation from Transform) 语言模型[26]等。</p>
<p>在将文本信息嵌入进每一个“词”之后，我们<strong>获得了“词”的向量表示，即在词向量空间中的位置，而词与词之间的语义关联可以通过向量空间中点与点的位置距离来反映</strong>。词嵌入技 [27,28] 术下的向量具有两项重要的几何性质——<strong>“聚类”(clustering)和“并行”(parallel)</strong>。 其中，</p>
<ul>
<li>“聚类”性质是指，现实语义相近的“词”在向量空间中的位置也相近。 例如， “挪威”与“瑞 典”的词向量更接近，而“意大利”和“德国”的词向量更接近。</li>
<li>而“并行”性质是指，向量空 间中的词向量之间满足基本的代数运算性质，且这种运算逻辑基本符合“词”的现实语义逻辑。</li>
</ul>
<p>[18] 例如，从语义逻辑来看，“国王(King)”和“王后(Queen)”的区别平行于“男人(Man)”和“女人 (Woman)”的区别，反映到对应词向量上即可以得到“King−Man+Woman=Queen”的代数形式。</p>
<p><img loading="lazy" src="img/kingqueen.png" alt=""  />
</p>
<p>综合以上内容可知，词嵌入虽然聚焦在“词”这一最小的文本单位上，但是看到的是丰富的全局文本语义信在“词”上的投射和体现。这不仅与传统的、基于词频的文本分析方法在逻辑上有着本质的区别，更能够为文本分析提供更深刻、更生动的洞察，构成了词嵌入文本分析技术在大数据时代的社会科学领域相关研究中的独特应用优势。</p>
<p><br><br></p>
<h3 id="12-词向量的距离计算">1.2 词向量的距离计算</h3>
<p>在词嵌入领域，词向量间的“距离”是词与词之间相关程度的度量指标，是分析概念之间的相关性的基础。词嵌入技术将文本中的“词”映射为 N 维欧式空间中的“点”，“词”在空间中 的位置坐标即用其对应的 N 维向量来标识。由于点的位置反映了词语的语义，因而点与点之间的空间距离即反映了词与词之间的语义相似性，对词向量进行特定的代数运算(如加减、 内积等)<strong>能够用以度量词与词之间、概念与概念之间乃至文档与文档之间的相关性</strong>。</p>
<h4 id="121-词与词之间的距离">1.2.1 词与词之间的距离</h4>
<p>设在 n 维语义空间中，单词 A 和 B 分别对应词向量 vA=vA1,&hellip;, vAn 和 vB=vB1,&hellip;, vBn， vA 与 vB 之间的距离计算方式主要有以下两种：</p>
<ul>
<li>余弦相似度(cosine similarity)：。余弦相似度衡量词向量 vA 和 vB 之间的向量夹角的余弦值，其取值范围为[-1,1]。余弦相似度取值为 0，则代表单词 A 和 B 之间不存在语义关系；而取值越靠近 1，表明单词 A 和 B 之间具有正相关性；反之，取值越 靠近-1，则表明单词 A 和 B 之间具有负相关性</li>
<li>欧式距离(euclidean distance)：欧式距离越小表明单词 A 和单词 B 在词向量空间中的位置越近，之间的语义关系越强；反之，欧式距离越大表明单 词 A 和 B 语义关系越弱。</li>
</ul>
<br>
<h4 id="122-概念与概念之间的距离">1.2.2 概念与概念之间的距离</h4>
<p>在词嵌入分析领域，一个概念是由一系列“相关词”组合而成，例如，“<strong>女性</strong>”概念可以通过“<strong>女人</strong>”、“女生”、“<strong>母亲</strong>”等名词来表达。<code>而在对比不同属性概念(如“女性”vs.“男性”与“智慧”)之间的相关性时，需要逐个计算概念间的相对距离(“女性”与“智慧”的距离 vs.“男性”与“智慧”的距离)</code>。Garg 等[13] 、Caliskan 等[17] 分别构建了以下两种相对距离的计算方法，并为众多后续研究所采用：</p>
<ul>
<li>
<p><strong>相对范数差函数</strong>(relative norm distance)：</p>
<ul>
<li>$$vm∈Mvm−vA−vm−vB $$</li>
</ul>
</li>
<li>
<p>该函数用于衡量两项目标词概念与某一项特征概念的相对距离。其中，M 代表特征概念(如“智慧”)，vm 为所属概念的相关词向量(如“聪明”)；vA 和 vB 分别代表两类目标词向量(如“男性”vs.“女性”)。该函数的含义为：在“男性”和“女性”两类群体中，哪一类群体与“智慧”这一概念更相关。若函数值为正，则代表“女性”与“智慧”更相近；若函数值为负，则代表“男性”与“智慧”更相近；若函数值靠近 0，则表明“智慧”不存在明显的性别偏向。</p>
</li>
<li>
<p><strong>词嵌入相关性检验</strong> (Word Embeddings Association Test; WEAT)：</p>
<ul>
<li>$$s(X,Y,A,B)=vx∈Xs(vx,A,B)−vy∈Ys(vy,A,B)$$</li>
<li>$$s(vw,A,B)=meanva∈Acos(vw,va)−meanvb∈Bcos(vw,vb)$$</li>
<li>该框架用于衡量两组目标词 X,Y(Target Words，如“男性”vs.“女性”)与两组属性词 A,B(Attribute Words，如“事业”vs.“家庭”)在语义上的相对距离差异，其中 vw 为所属概念的相关词向量(如在描述“男性”概念时，人们往往会使用“男生”、“父亲”、“男人”等词语)。s(vw,A,B)表示单词 vw 与两类属性词 A 和 B 的相对距离，正值代表其与 A 属性距离更近、语义更相关，反之则反；而 s(X,Y,A,B)则衡量了两项目标词 X,Y 和两项属性词 A,B 相对距离的差异，即在 “ 男性 ” 和 “ 女性 ” 两类群体中， 哪一类群体与 “ 事业 ” 或 “ 家庭 ” 的文化概念更相关。 若s(X,Y,A,B)为正值，则表明相比于“女性”，“男性”与“事业”的语义相关性更高，反之则表明“女性”与“事业”的语义相关性更高。此外，WEAT 框架还提供了相应结果的显著性检验方式以及效应量指标。</li>
</ul>
</li>
<li>
<p><strong>文档与文档之间的距离—词移距离</strong>(Word Mover’s Distance) minT≥0i,j=1nTij∙ci,j, s.t. jnTij=di , ∀iϵ1,&hellip;,n</p>
</li>
<li>
<p>除了概念间的相关性分析，我们可以通过文档间的相似性来探讨如文本主题、个体及组织之间的相关性问题，Kusner 等[31] 提出“词移距离”这一计算方法能够实现文档间的相似 性度量。词移距离即一个向量空间移动到另一向量空间所需的最小距离，通过对两个向量语 义空间中所有词向量间的欧式距离进行加权求和，以此来衡量两个文本间的相似性，如上式 所示。其中，c(i, j)为词向量间的欧式距离；Tij 为词向量之间的权重(由 TF-IDF② 计算加权值)。 函数值越大代表两个文本的相关程度越低，反之越高。</p>
</li>
</ul>
<p><br><br></p>
<h2 id="二词嵌入技术的优势">二、词嵌入技术的优势</h2>
<p>传统的社会科学研究通常需要借助科学实验、社会调查和人工编码等方法，依赖于专家学者的领域知识和实践直觉，存在主观性较强、耗时、耗资源的缺点。 另外，传统的社会科学研究局限于小样本数据和历史数据的不足，通常关注当下的、有限范围的社会情景， 难以进行跨时间、跨文化的分析。 反观，以词嵌入为代表的计算机化的文本分析：</p>
<ul>
<li>可处理大文本数据，不仅极大地节省人力和时间投入，而且可以拓宽现有社会科学研究的素材；</li>
<li>能够利用现有数据和先验知识改进学习算法，可拓展性和重复性强；</li>
<li>能依据文本内在的分布规律和领域知识，<strong>挖掘人们内隐层面的认知信息，结果更加客观真实</strong>；</li>
<li>能够从大规模文本中挖掘代表整体社会的认知，<strong>尤其擅长进行跨时间、跨文化的文本研究</strong>，结论不仅具有广泛的样本代表性，而且<strong>可以展示相关文化概念、思想观念等研究对象的纵向历时演化</strong>。 这些优点极大地丰富了社会科学的研究方法，拓展了社会科学的研究视野。传统的社会科学 研究方法与词嵌入技术的具体区别见表 1。</li>
</ul>
<br>
<p><strong>表 1 传统的社会科学研究与词嵌入技术的区别</strong></p>
<table>
<thead>
<tr>
<th>对比维度</th>
<th>传统的社会科学研究路径</th>
<th>基于词嵌入技术的社会科学研究路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>研究工具</td>
<td>问卷、访谈、实验、案例分析等</td>
<td>Word2Vec、GloVe 等词嵌入模型，以及词向量、概念及文本的相关性计算</td>
</tr>
<tr>
<td>方法依据</td>
<td>基于实践经验和严格的理论推断，依赖于特定学科内专家学者的领域知识和实践直觉，是以人为中心的研究方法；围绕研究假设进行数据检验的分析路径</td>
<td>基于语言文本来理解文化概念和思想观念，综合利用社会科学理论、计算机科学等探讨社会、心理和行为层面的问题，是人智与计算机相结合的分析方法 ；不依赖严格的假设，利用数据挖掘展开探索性的研究</td>
</tr>
<tr>
<td>检验标准</td>
<td>大部分研究结论缺少严格客观的评断标准，主观性较强</td>
<td>有多项较为成熟的指标及评价流程，具体包括：检验词嵌入模型的训练效度 ( 模型在特定的测试任务集上的表现 ) 和检验研究结论的外部效度(将结论与其他社会调查数据、其他研究方法的结果展开对比)</td>
</tr>
<tr>
<td>数据来源</td>
<td>调研记录、实验数据、二手数据、文献等；受限于成本投入，数据来源较为单一且体量较小</td>
<td>数据来源广泛，能够熟练处理包括会议记录、网络文本、新闻书籍等非结构化的文本数据；在处理大规模、跨文化、跨时间的文本数据时有极大的优势</td>
</tr>
<tr>
<td>信息层次</td>
<td>以基于自我报告的外显认知为主，在获取被访者内隐认知时依赖于间接的方法设计；研究较大地依赖于样本选择，结论在跨时间、跨文化上的代表性有限</td>
<td>允许研究者直接挖掘文本所反映的内隐社会认知；研究较多从社会、集体层面的文本范围着手，结论具有较强的代表性和普适性</td>
</tr>
<tr>
<td>其他特点</td>
<td>应用过程中耗时长、成本较高；主观性较强；结论的可复现性较弱</td>
<td>针对大数据文本的无监督训练、时间人力投入小；客观性较强；结论的可复现性较强</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="三词嵌入技术在社会科学领域的应用话题">三、词嵌入技术在社会科学领域的应用话题</h2>
<h3 id="31-社会偏见刻板印象">3.1 社会偏见/刻板印象</h3>
<p><strong>文本语言能够反映人类对世界的认知和态度，基于词嵌入的文本分析方法可以有效地挖掘社会偏见和刻板印象</strong>。Garg 等[13] 采用词嵌入技术分析了来自纽约时报、谷歌新闻、谷歌图书及美国历史文本库(Corpus of Historical American English; COHA③ )的文本数据，揭示了 1900～1990 年间美国社会在性别和种族两大议题上的刻板印象及其历史变化。Garg 等[13] 首先以十年为单位将文本数据分为 9 份，并针对每一份文本数据使用词嵌入技术，以获得“词” 的向量表征。然后，他们整理了相应概念的单词列表，其中包括：与“性别”维度相关的“男性”词汇[如 he]和“女性”词汇[如 she]；“白人”词汇[如 Harris]、“亚裔”词汇[如 Huang]和“拉丁 裔”词汇[如 Ruiz]。进一步，他们构建了相对范数差(relative norm difference)函数，用以计算 一组词向量(如“男性”vs.“女性”)与目标词(如专业工作)的相对距离，以此度量社会刻板印象 的程度。Garg 等[13] 发现近百年间在美国社会的认知中始终存在着较为明显的性别偏见和种 族偏见。例如，“女性”往往和护士、保洁、舞者、秘书等职业联系更为紧密，而与工程师、 木匠、技术人员等职业更为疏远。此外，亚裔姓名和教授、科学家、化学家和工程师等学术职位联系更紧密，白人姓名往往与警察、统计学家、摄影家等职位联系更紧密。通过纵向分析概念间距离随时间推移的动态演化，Garg 等[13] 发现，这两类刻板印象随着时间呈减弱势 态，结合相关社会科学理论和历史事件，他们进一步提出 60、70 年代的美国民权运动是改善刻板印象的关键事件，而基于词嵌入的概念间相对距离也如实地反映了美国民权运动对于 国民性别、种族认知的深刻影响。 <br></p>
<p>作为文化的产物之一，歌曲也能反映社会认知中的偏见/刻板印象。Boghrati 和 Berger[12]  利用 Word2Vec 词嵌入技术，挖掘了自 1965 年至 2018 年的近 60 年间美国公告榜(Billboard) 上流行歌曲歌词文本中所隐含的性别偏见。一方面，他们在流行音乐中发现了显著的“<strong>厌女症(misogyny)”刻板印象(如图 2)，相比“男性”词汇，人们更少将“女性”词汇和“能力/ 成功/热情”等具有积极属性的词汇相关联</strong>。但另一方面，歌曲中所反映的性别偏见随时间的推移呈现逐渐减弱的趋势。进一步地，Boghrati 和 Berger[12] 通过控制歌曲创作者的性别因素，发现男性作词人是影响歌曲“厌女症”现象变化的关键因素。<br></p>
<p><img loading="lazy" src="img/musicSuccessGenderbias.png" alt=""  />
</p>
<p>为了检测词嵌入技术是否能够有效挖掘文本中的社会偏见，Caliskan 等[17] 对比了词嵌入模型和<strong>内隐联想测试</strong>(Implicit Association Test; IAT)④ ——<strong>一种社会科学领域中最常用的社会 偏见/刻板印象等内隐认知的测量方法</strong>—的差异。虽然 IAT 能够有效捕捉个体的社会偏见的内隐认知，但是该方法需要严格的实验环境、耗时较长且测量样本往往受到时间和空间的局限。Caliskan 等[17] 利用 GloVe 词嵌入模型构建了 <strong>WEAT(Word Embedding Association Test) 分析框架</strong>，并利用这一框架研究了 8 项内隐认知，如“科学-男性”和“艺术-女性”，并将其与 基于 IAT 的研究结果进行了对比。[17] 他们的研究表明，基于词嵌入技术的结论与基于 IAT 的结论具有高度且稳定的一致性。Caliskan 等[17] 进一步指出，在未来的内隐态度研究中，词嵌入技术不仅能够作为 IAT 测量方法的补充，更能够在样本代表性、研究成本和研究视野等方面展现出 IAT 所不具备的独特优势。<br></p>
<p>除了探讨<strong>社会偏见</strong>与刻板印象的跨时特征之外，词嵌入技术还适用于<strong>跨文化</strong>的对比分析。 Defranza 等 [33] 利用词嵌入技术探讨了不同地域在性别偏见方面的程度差异。 他们利用 fastText 模型和 WEAT 分析框架， 从 49 类不同语种的文本中分别挖掘不同社会文化下的性别偏见现象。 结果显示，当一个地区的性别语言(Gendered language)——即语言中更加区分词汇的性别属性和使用者的性别身份(如泰语、芬兰语)更强时，该地区的性别偏见更加明显(图 3)，具体表现为男性与积极属性词汇的关联性更强，而女性与积极属性的联系更弱。 这一结果在一定程度上验证了萨皮尔-沃夫假说(Sapir-Whorf hypothesis)，即<strong>语言能够塑造的思维和认知</strong>。<br></p>
<p><img loading="lazy" src="img/languageBiasGender.png" alt=""  />
</p>
<p><br><br></p>
<h3 id="32-文化认知">3.2 文化认知</h3>
<p><strong>历史无法复刻，但承载历史痕迹的文本资料能够帮助人们窥探特定时代背景下的文化内涵</strong>。Kozlowski 等[28] 利用词嵌入技术分析了自 1900～1999 年来 100 余年间公开发表的书籍， <strong>探讨了 20 世纪美国社会对七大等级文化(财富、道德、职业、性别、教育、品味、身份地位) 的共识和演变规律</strong>。首先，作者利用 Word2Vec 模型，构建了一系列标度等级文化维度(如“贫 穷-富有”、“道德-不道德”、“男性-女性”等)的词向量空间(如“性别-财富”、“职业-道德”、“品 味-职业”、“教育-地位”等)。进一步，作者将一系列目标词分别映射进相应的等级维度空间， 以此标度这些目标词的多元等级属性。例如，在被映射进如图 4 所展示的“性别—财富”等级 维度空间后，“volleyball(排球运动)”一词表现出更靠近“feminine(女性气质)”和“rich(富有)”的 等级特征。此外，标度不同等级维度的向量之间的夹角也具有一定的社会文化含义。例如， <strong>“教育”与“道德”和“品味”的相关性较强且保持历时的稳定性，但与“职业”这一维度的相关性 相对较弱，这说明教育水平的提升能够提升人的修养和品味，但对职位状态和等级(如“失业” 和“就业”)的影响较小</strong>。Kozlowski 等[28] 的研究结果表明，词向量不仅可以反映特定概念间的语义关联和相互作用，还能够用于探讨多元文化维度之间的语义结构，从而推动实现更高层次构念的表征。</p>
<p><img loading="lazy" src="img/americanClass.jpeg" alt=""  />
</p>
<p><strong>作为文化概念的关键形式，社会认知(social cognition)是人们对各种社会刺激的综合加工过程， 是人们的社会动机系统和社会情感系统形成变化的基础</strong> 。</p>
<p><strong>社会认知包括社会信念 (social belief)和社会态度(social attitude)</strong>。而根据内隐—外显双系统理论， 社会认知可进一步分为外显社会认知(explicit social cognition)和内隐社会认知(implicit social cognition) 两类</p>
<ul>
<li><strong>外显社会认知</strong>强调个体可以通过自省的方式(如问卷法)报告的社会认知</li>
<li><strong>内隐社会认知</strong>描述个体无法内省的、潜意识层面的社会认知。</li>
</ul>
<p>然而，受限于现有对<strong>内隐认知</strong>的挖掘手段，有关内隐信念 (Implicit belief，如“亚洲人很聪明”)和内隐态度(Implicit attitude，如“我喜欢亚洲人”)的关系，已有研究要么将其混为一谈，要么将其作为互不干涉的独立构念。为了厘清该问题，Kurdi 等[14] 利用基于预训练的 fastText 词嵌入技术，分析了内隐态度和内隐信念的关联，并对比其与外显态度和外显信念的差异。具体而言，基于被试自我报告的实验结果显示，个体的外显态度与外显信念存在方向上的不一致性，例如，亚裔群体常被白人给予负面的评价(外显态 度)，但在智商、能力方面被认为有突出优势(外显信念)；而基于词嵌入技术的分析结果则表 明内隐态度与内隐信念具有一致性，内隐态度驱使内隐信念的产生。[14 ] 例如，白人群体有 较高的自我评价(内隐态度)，也认为本群体的智商高于亚裔群体(内隐信念)。另外，Kurdi 等[14] 发现人们对同一类属性词的认知也存在差异，例如，人们倾向于认为“book-smart(有学 问的)”优于“street-smart(生存力强的)”。综合可知，词嵌入技术可以作为挖掘文化概念认知以及社会认知的有效工具。</p>
<br>
<br>
<h3 id="33-语义内涵演变">3.3 语义内涵演变</h3>
<p><strong>语言的涵义会随着时代发生改变，而词嵌入技术的一大突出优势即表现为处理跨时段的大文本数据。文本语言的运用具有系统规律性，[35] 词嵌入模型训练生成的词向量能够有效 表征词的语义信息，通过针对来自不同历史时段的文本训练词嵌入模，有助于学者在时间维度上分析词义演变</strong>。Hamilton 等[36] 通过测量目标词的向量表示的时间位移值，来描述历史文本中高频词汇与多义词汇的词义历时变化。例如，如图 5 所示，“gay”作为一个多义词，在 1900 年代的文本中和“cheerful(开心)”和“frolicsome(玩闹)”词义更接近，而到 1990 年代则与“homosexual(同性恋)”、“lesbian(女性同性恋)”等更接近。进一步，Hamilton 等[36] 依据词嵌入技术的分析结果，提出了两条语义演化法则：(1)一致性，高频词汇会保持词义相对一致的历时演化规律；(2)新颖性，多义词汇的语义演化会更加快速。</p>
<p><img loading="lazy" src="img/DiachronicWordEmbeddings.png" alt=""  />
</p>
<p><strong>除了对普遍意义上的词汇含义的演变规律进行探讨，某些具体词汇的演化情况同样引起了学者们的关注，尤其是那些能反映特定文化背景或时代发展的词汇</strong>。 Rodman 等[11] 基于1855～2016 年间的纽约时报、路透社报道、美联社报道三大新闻文本集，挖掘并追踪了美国一个多世纪以来围绕“平等”一词的词义演变，其中包含了使用环境、指代对象等。他们发现，在上世纪 50 年代之前，即美国民权运动前，“平等”的词义与“社会”话题相关的词汇的关联度整体较高，但随着历史发展呈现减弱趋势，这一结果与美国民权运动前普遍存在的社会不公平现象相符合(如种族歧视)。而自上世纪 70 年代，即民权运动基本结束以来，“社会”与“经济”、“教育”等概念下的词汇的关联程度不断增强，反映了本世纪以来美国社会对“教育公平”，“经济公平”等热门话题的高度关注。可见，基于词嵌入的文本分析能够敏锐地捕捉到社会文化演变的信息线索，并能为社会、文化等领域的运动发展提供预示。</p>
<p><br><br></p>
<h3 id="34-文本情感分析">3.4 文本情感分析</h3>
<p>文本信息不仅包含词义，还表达情感。现有部分词嵌入模型在关注语义语法层面的表征 的同时，还进一步关注了词的情感信息，尤其是某些单词具有相似的上下文环境但所含的情 感态度截然相反 ( 如 “good” 和 “bad”) 。 例如， Tang 等 [37] 提出了 情感嵌入模型 (Sentiment Embeddings)，该模型不仅可以如词嵌入模型一样反映词义信息，还能识别词所包含的情感 信息，进而可以对文本(如在线评论)中的情感信息做出推断。</p>
<p><strong>情感的丰富性和语言的灵活性使得单词在不同文本环境下会呈现出差异化的情感特征</strong>。 例如，“I’m gonna put something offensive to some people.”中的“offensive(冒犯)”一词在该句话 中带有消极负面的情绪；而“#FSU offensive coordinator Sanders coached for Tennessee 1st  [37] #BCS title game.”中的“offensive(矛盾)”一词则不含明显的情感信息。 Xiang 和 Zhou[38] 藉此 指出，在推断词的情感信息时加入对文本 主题(topic)的考量将有效提高情感推断的准确性。 Ren 等[39] 基于 Word2Vec 词嵌入模型，结合主题模型(Latent Dirichlet Allocation; LDA)的方法， 提出了主题增强的词嵌入模型(Topic-Enhanced Word Embeddings; TEWE)。作者使用支持向 量机(Support Vector Machine; SVM)作为文本情感分类器，发现 TEWE 模型在文本情感分类 任务有突出表现。 例如，该模型能更有效地区分含有负面情感态度的词汇(如 insane)与正 面情感词汇(如 sane)的差异。在此基础上，Xiong 等[40] 进一步考虑了文本情感信息的多元化 特征 ， 构建了多元层次情感词嵌入模型 (Multi-level Sentiment-enriched Word Embeddings; MSWE)。他们发现，在标注“积极[#happy; :-)]—消极[#angry; :-(]”的情感标签任务中，MSWE 情感嵌入模型能够实现 85.75%的分类水平，表明基于词的情感表征能够更有效地挖掘文本 背后的情感。</p>
<p><br><br></p>
<h3 id="35-组织关系分析">3.5 组织关系分析</h3>
<p><strong>词嵌入技术在挖掘社会内隐认知方面展现出强大的效力，因而词嵌入技术可用于挖掘不 同组织在价值观和意识形态层面的关联，以此作为组织关系的推断依据</strong>。在此思路基础上， Spirling 和 Rodriguez[41] 采用 GloVe 和 Word2Vec 的词嵌入模型，分析了美国共和党和民主党两大政党在其各自的公开发言稿中对部分政治议题的所表达的态度。例如，对于“堕胎”议题， 两政党的理解存在较大争议：民主党认为“堕胎”是一种自愿选择，而共和党认为“堕胎”与“绝 育”、“公平”的话题相关；对于“税收”议题，两政党的理解则存在更多共识。由此可见，词嵌入技术不仅可以帮助我们了解政党组织在哪些政治议题上存在冲突，还可进一步衡量不同党派的政治关系。</p>
<p>Rheault 和 Cochrane[42] 分析了英国、加拿大和美国 20 世纪以来的议会记录文本，并依 据政党派别关系构建了“党派嵌入”(Party Embeddings)模型。学者利用词嵌入模型量化了不同党派在不同年代的议会观点中与特定“意识形态”维度(如自由 vs.保守、北部 vs.南部)的相关性，从而对比不同党派组织的意识形态差异。从整体上看，美国民主党的意识形态更靠近自 由派思想(如“民权”、“种族”、“枪支管控”)，而美国共和党的意识形态更具保守派和南部 [42] 州色彩(如“官僚”、“果农”、“烟草”)，且两党的意识形态差异随着时间不断扩大。 同样地， 对于加拿大，新民主党派与联盟党在意识形态上的政治冲突最为严重，魁北克政团与联邦主 [42] 义政团在事关“联盟”的政治议题上观点不同。 Pomeroy 等[15] 利用 GloVe 词嵌入模型分析了各个国家在联合国论坛的公开演讲文本，并使用词移距离(Word Mover’s Distance)来量化国 家讲演文本间的总体相似性，以此来反映国家立场及偏好的相似性。 作者发现，基于词嵌入技术的分析结果能够很好地反映国家间的政治关系。例如，虽然土耳其和希腊两国在投 票议程中表现出态度相似性(即一致的国家关系)，但实则两国在当年发生了边境军事冲突， 而这一冲突能从两国的联合国讲演文本中捕捉到线索。本研究指出，有关词嵌入在主体网络 关系的应用集中于党派关系和国际关系的研究，未来研究还可以考虑分析其他情景下的主体关系，如社交网络关系、品牌竞争关系、组织内部关系等。</p>
<p><br><br></p>
<h3 id="36-个体的判断与决策心理">3.6 个体的判断与决策心理</h3>
<p><strong>决策结果和决策信息线索之间具有表征关系，因而词嵌入技术能够通过挖掘概念间的内在关联，在一定程度上揭示个体在决策任务中的思维过程和决策依据</strong>。Bhatia[16] 在自然语言处理的框架下，验证了以往决策研究中的相关性判断机制，即人们在进行判断性任务(如：“A 多大可能属于 B?”)时，会出于直觉性心理去思考问题与选项间的相关性或相似性，并以 作为判断依据。具体而言，作者综合 Word2Vec、CCA、GloVe 几项词嵌入技术，基于谷歌 新闻和 GigaWord 文本库⑤ 训练生成词向量。进一步，作者通过对句子中每个“词”的向量求 取平均值，分别对判断问题(如“在以下的两座德国城市中，哪一个人口最多？”)与选项(如“汉堡”和“科隆”)实现表征。作者依据两者间的语义相关性来预测答案选项的概率分布，并据此模拟一般决策者的选择。例如，针对上述问题，基于词嵌入模型的预测结果为“汉堡”，与被试的选择高度相似。此外，词嵌入模型在其它测试任务(如经典的“Linda 问题”⑥ )下也预测了 [16] 决策者的选择倾向， 这一现象与代表性启发理论(representativeness heuristic)——一种依赖人的相关性感知进行识别和判断的心理决策过程——相符。这说明词嵌入模型在很大程度上 能够解释人的相关性判断机制， 甚至对其中常见的认知偏差 ， 如 <strong>合取谬误</strong> (conjunction fallacy)⑦ 、<strong>基础概率忽略</strong>(base rate neglect)⑧ 也能够予以反映。[16] 实证结果表明，词嵌入技术为我们理解人的直觉性判断心理提供了信息参考，能够帮助实现相对精准的决策预测。</p>
<p>另外，个体的风险感知和风险判断也是个体决策研究中的重要组成部分。Bhatia[43] 利用词嵌入技术探讨了人们面对各类风险源时的风险评估机制。作者通过基于谷歌新闻文本的预 训练 Word2Vec 模型，量化了不同风险源(技术性风险源：“新兴技术”、“能源”等；活动性风 险源：“运动”、“职业”等)与相关概念的语义联系，进一步 揭示了人们进行风险评估时的知 识表征内容(即内隐联想)。例如，当评估药物风险时，人们在潜意识里会联想到“毒品(drug)”、 “无序(disorder)”等具有高风险含义的概念(如图 6a 的词云图)；而评估运动风险时，人们容易 联想到“碰撞(crash)”、“斗争(combat)”等风险事件(如图 6b)。作者弥补了以往有关风险评估 的研究方法中难以预测样本外数据(如新型风险源)的缺陷，展现了词嵌入技术在理解和预测个体判断决策机制中的应用优势。</p>
<blockquote>
<p>⑥ “Linda 问题”是指“琳达，31 岁，单身，一位直率又聪明的女士，主修哲学。在学生时代，它就对歧视 问题和社会公正问题较为关心，还参加了反核示威游行。请问琳达更有可能是下面哪种情况？”有两个选 项：“A.琳达是银行出纳；B.琳达是银行出纳，同时她还积极参与女权运动”。相比于 A 选项，B 选项所 塑造的女性形象更贴近问题所提供的信息，因而人们会倾向于选择 B 选项。</p>
<p>⑦合取谬误是指人们总是认为两个事件的联合出现比只出现其中一件事的可能性要大。以“Linda 问题”为例， 人们会更多地选择 B，虽然从实际概率角度来讲，B 选项的概率应低于 A 选项。</p>
<p>⑧基础概率忽略是人们在进行主观概率判断时倾向于使用当下的具体信息而忽略掉一般常识的现象。</p>
</blockquote>
<p><img loading="lazy" src="img/EmbeddingsThemes1.png" alt=""  />
<img loading="lazy" src="img/EmbeddingsThemes2.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四词嵌入分析的基本流程">四、词嵌入分析的基本流程</h2>
<p>词向量的表征学习存在两条路径：一是采用本地化的训练模型(local-trained model)。二是使用预训练的词嵌入模型(pre-trained model)。针对第一条路径，通常需要经历如下预处理和模型训练步骤(见图 7)：</p>
<h3 id="41-选择合适的语料库corpus">4.1 选择合适的语料库(corpus)</h3>
<p>语料库是用于训练词嵌入模型的文本集，“词”的表征效果以及后续的相关性分析依赖于训练文本的规模、质量及其所处的语言环境。对文本语料的选择需严格依研究者的具体问题而定，使研究主题/情景与文本主题/情景相对应，[41] 进而推动单词间的语义关系聚焦于特定的领域和视角上。例如，<strong>以探讨社会文化现象的研究可以选择新闻时报、社交媒体动态等社会文本作为主要语料；探讨消费者心理及行为的研究则可以将线上评论等商业沟通文本作为语料；关注组织行为的研究则以会议 记录、公司年报等组织内部的官方文本为主</strong>。</p>
<p>文本数据的获取主要有以下三种途径：</p>
<ul>
<li>第一， 国内外由政府、企业及其他组织或个人提供的公开的、已初步整理规范的文本数据库。如， 人民日报文本集(1946 年至今) ⑬ 、谷歌图书(包含 1500 年～2012 年期间公开出版的书籍，约占人类历史所有出版书目总数的 6%) ⑭ 、亚马逊评论集(包含 1996 年～2018 年亚马逊平台用 户对近 30 个产品品类的超过 2 亿条评论) ⑮ 、维基百科数据库(包含来自 400 多万篇文章的近 19 亿个单词的维基百科全文) ⑯ 等。</li>
<li>第二，借助“爬虫”程序收集文本数据。根据研究需要， 研究者可以在特定的网站上爬取一定的文本。例如，众筹平台的项目申报文本材料、微博平台的历时推文、论坛用户间的互动文本、企业员工在 Glassdoor ⑰ 等职业资讯网的日志评论等文本。</li>
<li>第三，纸质版文本转换成电子文本。必要时，研究者还可以将纸质文本录入为电子文 本形式，如员工日记、会议记录、线下心理咨询文稿等。</li>
</ul>
<h3 id="42-语料预处理pre-processing">4.2 语料预处理(pre-processing)</h3>
<p>常规的预处理流程包括：</p>
<ul>
<li>删除与文本内容无关的标点符号、特殊字符(如：数字，空格符，分行符，“©”)和其它停用词(如：代词、连词)。</li>
<li>此外，中文文本的预处理中还需要对文本分词 (segmentation)，从而将语料处理成由“词”这一最小的文本分析单位所构成的列表(如将语 句“我很开心”分词为“我”/“很”/“开心”)。现今常用的中文分词工具有“Jieba”、“HanLP”、 “THULAC”、“TopWORDS”等。</li>
</ul>
<h3 id="43-模型训练">4.3 模型训练</h3>
<p>在预处理后的语料文本中训练词嵌入模型，最终实现文本词的向量表征。当前主流的词嵌入模型有 Word2Vec、GloVe、fastText 等， 而在 Python 环境下，大量与自然语言处理相关的成熟的开源工具包(如，Gensim)中提供了相关的算法模块，并允许研究者对相关参数(词向量的维度、单词上下文的观测窗口的大小 等)进行调整。</p>
<p>此外，基于词嵌入模型的迁移学习能力，也可直接使用预训练的词嵌入模型(如，谷歌 的 GloVe 和 BERT )，从而获得基于其它大型语料库充分训练得到的词向量表示，并根据自身的文本特征对模型或表征结果进行微调(finetune)。但无论采用何种词向量表征路径， 在正式的词向量相关性分析之前，都<strong>有必要对词嵌入模型的训练结果，即词向量的表征效度进行评估</strong>。<strong>常见的评估方式是通过与人工标注的词相关性评分进行对比，检验二者是否一致， 以此判断词嵌入模型是否能够捕捉一般化的语义关系</strong>。目前，已有大量成熟的针对“词对” (word pairs)相似性的人工标注的测试集，如 MEN-3000(英文)[47] 、Wordsim240/297(中文)[48 ] [12,41]。</p>
<p><strong>词嵌入模型训练完成后，可以进一步依据研究目的进行词向量间的“距离”的几何计算， 主要包括词列表构建、相关性计算、有效性检验和稳健性检验四个步骤</strong> 。</p>
<ul>
<li>(1)<strong>构建词列表</strong>。 在词嵌入的文本分析中，特定概念通常由一系列近义词或同属性词列表构成。例如，在 Garg 等[13] 的研究中，他们构建的“男性”概念词列表包括“male”、“men”、“father”、“brother”等 20 个单词。</li>
<li>(2)计算词向量的相关性。针对具体研究问题，衡量“词”或者概念之间的语义关联(即 词向量间的“距离”)，主要包括余弦相似度(cosine similarity)、欧式距离(euclidean distance)两 种基本的计算方法(详见上文第一部分内容)。</li>
<li>(3)<strong>有效性检验</strong>。针对词嵌入的分析结果，我们 有必要进行进一步的检验，以保证结论的可靠性以及方法的有效性。具体包括两类检验方法： ①与对应年代的相关社会调查数据 (如，社会职业性别占比调查、社会偏见大调查 ) [13,49-51] 进行比对，以检验词与词的相关程度、变化是否与相应的指标数据、社会事件相吻合； ②与其它研究方法进行对比，如内隐联想测试(IAT)、主题模型(LDA)，以检验词嵌入模型能 否重复已有研究结果。[11,14]</li>
<li>(4)稳健性检验。作为一种无监督的探索性分析方法，词嵌入的 分析结果会因文本、模型等因素的不同而产生差异。通过变换词嵌入模型、参数、文本语料 或相关性计算方法，以检验研究结果的一致性。稳健性程度越高则代表基于词嵌入分析方法 的结论可靠性越高。</li>
</ul>
<p><img loading="lazy" src="img/EmbeddingApplicationProcess.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="五词嵌入分析方法的挑战与应对">五、词嵌入分析方法的挑战与应对</h2>
<p>作为一种计算机化的文本分析方法，词嵌入技术在文本数据的预处理、文本表征效果等方面有一定的条件限制，因而该技术面临着以下几个方面的挑战。学界一直致力于词嵌入分析方法的完善，并就下述问题提出了针对性的应对方案和解决思路，详见表 3。</p>
<p><strong>(1)词嵌入技术的分析效果依赖于文本数据的体量、质量和语言环境</strong>。 <br></p>
<p>①通常来说，文本数据规模越大越有利于词嵌入学习和提取更充分的语义信息，[11] 而体量较小的文本，可能会限制词嵌入模型的训练效果，难以将文本的全局语义信息嵌入到单词上。[11,18] 对此，Rodman[11] 提出了两种解决思路：一是采用预训练的词嵌入模型。预训练词向量通常基于超大型文本数据训练而来， 使模型具备较好且广泛的语义表征能力。 二是采取“自举法”(Bootstrapping)⑱ 。通过该方法生成规模更大的文本数据集，并针对不同的抽样过程生成不同的词向量结果，随后求取其平均值以增强词向量的稳定性和有效性。<br></p>
<p>②除此以外，文本语料的选择应考虑到其依存的文本情景、社会文化环境等背景信息。文本所依存的语言环境、文化观念和观点立场在很大程度上影响着文本词汇的分布方式(即单词上下文)，因此利用不同文化背景的文本训练词嵌入模型，可能会产生不同的研究结论。Spirling 和 Rodriguez[41] 对美国国会议事文本的分析所示，不同的党派组织对同一政治 议题的理解存在“冲突”(如，“堕胎(abortion)” &amp; “福利(welfare)”)。再如，在研究组织员工的 幸福观时，企业的官方书面文本(更具指导性和应然性)以及员工的口述文本(更具真实性)可 能潜藏不同的结论。然而，如何权衡和选择合适的语料、如何处理不同文本下的结论不一致 等问题仍缺乏统一的解决标准。就学者的普遍实践来看，文本选择需要“有的放矢”，即依据 研究问题对文本的背景信息(如，表达视角、代表阶层、文本性质 )进行必要地分析和筛选， 在扩大语料库规模和类型的同时也要尽可能使之聚焦在同一视角和语境上。[11,28,41] <br><br></p>
<p><strong>(2)“词”是词嵌入分析的基本单位，中文文本的分析需要预先进行“分词”处理</strong>。<br>对于某些特定领域的文本而言，如专业学术文章、古代汉语文本等，由于其文本内容及结构与标准的训练语料存在较大差异，[46] 使得文本分词的过程存在一定困难。近年来，大量学者就优化文本预处理技术展开了探讨，例如，Deng 等[46] 开发了“TopWORDS”分词软件，在小型训练文本中实现了部分低频词的精确识别，亦能处理含有大量未知专业语汇的文本，该方法的有效性在古汉语文本的分词任务上得到了进一步验证。在突破文本预处理中的困难后，可以应用词嵌入的实践流程对文言文展开分析，探讨古代社会文背景下的社会科学课题，如围绕权力、阶层、性别、宗教等的社会规范以及其它社会价值观念的演变。</p>
<br>
<p><strong>(3)在由“词”构成的文本结构中，词与词之间的组合搭配能够创造出更加丰富且抽象的语义信息，这一类信息难以通过词向量间简单的结构化公式运算来体现。</strong> <br>词嵌入技术对文本中的“词”展开语义分析，所建构的是词与词之间的关联，侧重于表达“单词级别”的语义信息。因此，基于词向量的简单几何计算难以直接反映 “单词级别”以外的语义信息，[18,5 2 ] 如词组概念、段落含义、文本主题等。学界也在积极探索“组合式分布语义”的实现方法，即如何利用词表征的组合实现对短语、段落和文档的有效表示。[18,53 ] 在自然语言处理领域，以LDA 为代表的主题模型从整个语言系统分布中学习“词”的含义，侧重于建模词与文档的关系，体现的是词的主题信息。相比于词嵌入模型下的单词之间的关联，包含主题特征的词向量之间能够反映相对丰富的语义关联。鉴于词嵌入模型具有较强的扩展能力，大量学者针对词嵌入模型的算法和训练过程进行优化，即将有关文本整体特征的信息或其他的领域知识融入词嵌入的学习过程。例如，Liu 等[54] 基于 Word2Vec 词嵌入模型，并结合 LDA 算法，使词向量包含更多的主题特征，如 “apple(苹果)”在电子产品的背景信息下表示“苹果公司”，而在食品背景信息下表示“苹果”这 类水果。此外，词嵌入技术的基本原理在文本表征领域也得到了长足发展。例如， Le 和 Mikolov[55] 将 Word2Vec(skip-gram)的算法运用至句子和短文本的表征学习；词嵌入模型界的 新秀——BERT 模型，能够有效表征句子等“单词级别”以上的文本语义概念，推动了对更 高文本单位的关系层面的理解。<br></p>
<br>
<p><strong>(4)传统的社会科学研究方法具备词嵌入技术所无法提供的分析视角，尤其是相对于“文本细读法(close reading)”，词嵌入这一计算机化的分析方法难以捕捉更加细微的语义差别</strong>。<br></p>
<p>基于上下文分布来表示单词的方法也难以学习单词的细粒度语义， 例如，同义词、反义词、多义词、上下位词等词义的区分和表征还有待优化。据此，相关学者提出利用有监督的学习过程，在词嵌入的算法层面引入某些先验知识库(如，描述词义关联信息的“WordNet”语义网[5 7 ] )，帮助模型更好地捕捉单词多元的属性信息，从而有助于避免词嵌入表征词义的逻辑偏离实践认知。[19]</p>
<p><img loading="lazy" src="img/ChallengeEmbeddings.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="六词嵌入技术在管理学领域的应用展望">六、词嵌入技术在管理学领域的应用展望</h2>
<h3 id="61-政策效应评估">6.1 政策效应评估</h3>
<p>已有政策效应评估主要采用定量分析工具(如，双差分法)分析显性的数据指标(如，人均收入)，而对于政策的隐式效应(如，社会心理、文化认知)的判断还较为局限。本研究提出， 词嵌入技术可以结合因果推断，[5 8 ] 分析公共政策的有效性。具体而言，词嵌入技术可以研 究：①政策对社会文化认知的影响，如“2020 年禁塑令”实施对公民“环保”、“健康”等概念的 认知的影响；“2021 年惠游湖北”政策对武汉城市污名化的缓释作用等。②衡量政策创新性， 探讨政策带来的创新性影响。例如，Perren 和 Sapsed[5 9 ] 分析了英国在过去近 50 年间的议会 记录，发现在其实施“国家创新计划”之后，“创新”这一概念在社会文本的出现频率显著上升， 有关科技领域的词汇与“创新”一词的共现频率显著增加。未来研究可以利用词嵌入技术来挖 掘“创新”与具体领域，例如，“知识”、“科技”、“法律”的相关度，并比对其在政策实施节点 前后的变化。</p>
<br>
<h3 id="62-用户推荐系统">6.2 用户推荐系统</h3>
<p>以往的线上推荐系统多基于用户行为数据来判断个体偏好， 以矩阵分解 (Matrix Factorization)和协同过滤(Collaborative Filtering)为代表的技术被广泛应用于线上推荐场景。 然而相比上述几项技术，词嵌入能实现更高水平的用户偏好预测， [ 60 , 6 1 ] 这意味着文本数据 将是我们了解用户的重要渠道。现如今，电商评论和社交媒体的动态文本记录了大量消费者 认知、态度及其它表现个人特征的信息。利用词嵌入技术，平台能够挖掘用户对特定领域话 题的偏好、对产品的偏好和评价，以及用户之间的相似特征等。例如，通过计算“产品/品牌” 与积极、消极属性词汇的相对“距离”，[13] 来衡量个体用户的内隐偏好和真实的消费感受，并 据此展开产品推荐和广告投放。</p>
<br>
<h3 id="63-数智品牌管理">6.3 数“智”品牌管理</h3>
<p>鉴于词嵌入技术在挖掘社会内隐认知上的突出表现，因而能用于刻画企业—消费者关系， 辅助企业的品牌管理战略。 借助词嵌入的分析方法， 企业可以透过用户生成文本 (user-generated content)(如，社交媒体、网络论坛和线上评论)纵观消费者对企业品牌形象的 态度、评价，也可以用于挖掘影响消费者满意度的关键因素和市场潜在需求。[8, 6 2 ] 作为品牌 形象的内核，企业品牌个性(brand personality)及其历时演变同样也可以使用词嵌入的分析方 法对其进行挖掘，[12] 从不同时期的社会文本中测量相应的语义关系，即品牌与个性维度间 的相关性(如，品牌与“真诚型”vs.“粗犷型”)。在跨文化视角下，词嵌入技术能够帮助企业考 察不同文化背景下的市场对其品牌的认知差异，并据此助推企业品牌的形象定位与国际化进 程。[6 3 ] 再如，利用词嵌入技术能够帮助企业动态追踪新产品的市场评价，为企业评估产品 的市场表现提供新的分析工具。其它的相关话题，诸如品牌依恋(brand attachment)、品牌文 化(brand culture)和品牌联想(brand association)等研究也将受益于词嵌入的分析方法。</p>
<br>
<h3 id="64-企业关系管理">6.4 企业关系管理</h3>
<p>文本作为企业对外传达信息、价值观，以及企业间进行交流的重要载体之一，蕴含了大量的、足以表征企业特征的信息。以往从文本层面探讨企业关系的研究相对较少，而利用词嵌入的基本原理，未来研究可以考虑利用文本来刻画企业间的关系(如竞争、合作、信任等)， 进而更有效地描绘企业在网络中的嵌入式角色(embedded role)。例如，学界一直致力于研究 企业间关系网络的结构特点及其对企业绩效、企业间联合研发效率的潜在影响，探讨了社会 网络嵌入视角下的企业组织的合作范式。例如，基于知识理论视角，企业合作网络的形成及 演变动机在很大程度上取决于知识的互补性与相似性特征。[64 ] 未来研究可以利用文本刻画 企业的关系网络及其节点特征，探索企业的合作策略和市场战略。尤其在信息不对称的商业环境下，基于文本的社会关系分析能够为企业的战略伙伴选择、市场表现等提供新的分析路 径和信息参考。</p>
<br>
<h3 id="65-组织内部管理">6.5 组织内部管理</h3>
<p>在管理学领域，有关组织行为的研究大多依赖于问卷访谈和自然观察等形式的调查方法， 以及基于组织管理目标开展特定的田野实验。这些研究路径在理解和预测个体行为的过程中 存在较强的主观性和外显性，难以挖掘组织成员真实的内隐认知。此外，以往对组织场景内 的文本分析在很大程度上受限于专家学者的领域知识和实践经验，耗时、低效且准确率低。 本研究提出，词嵌入技术可以用于分析组织内成员的心理及行为规律，通过挖掘组织内的文本(如会议记录、员工评述、领导讲演文本)，揭示员工的内隐认知信息(如动机、信念、情绪)， 甚至包括领导力(leadership)、员工创新力、员工的组织支持感(organizational support)和企业文化等主题。</p>
<br>
<h3 id="66-中国传统智慧与管理问题">6.6 中国传统智慧与管理问题</h3>
<p>社会科学研究者不仅需要关注当下的社会情景，也需要从历史中洞察现象、以史为鉴。 中国社会文化背景下的众多管理问题、思想乃至组织行为领域的话题，均能够从历史事件中窥知和借鉴。例如，Huang 等[6 5 ] 基于《资治通鉴》这一古籍中的记载，探讨了中国家族式企 业内的领导—员工关系。他们以古代的皇帝与太子间的关继承案例作为样本，并在长时间的 人工阅读和变量编码后发现，家庭组织在权力转移的过程中，子女继任的可能性与其父母在 位者对其的压制行为存在“U 型”关系。同样地，词嵌入技术可以挖掘在位者对继任者的评价， 以此判断与继任可能性之间的关系。此外，通过对《二十四史》展开词嵌入分析，也能帮助学者了解中国各个朝代的管理层在应对人事、外部环境、组织治理等方面的管理思想与策略。 对此，本文展望利用词嵌入方法对中华古籍文本展开必要的分析，挖掘诸如组织领导风格、 组织文化、组织竞争力、管理者与下属间关系、人员激励政策等研究话题，进而探索中国本土的管理智慧和组织话题。[65]</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>营销研究中的图像分析</title>
      <link>https://hidadeng.github.io/blog/image_analytics_in_marketing_code_examples_book_chapter/</link>
      <pubDate>Tue, 05 Apr 2022 22:43:10 +0600</pubDate>
      
      <guid>/blog/image_analytics_in_marketing_code_examples_book_chapter/</guid>
      <description>营销研究中的图像分析</description>
      <content:encoded><![CDATA[<h2 id="heading"></h2>
<p>这个笔记本是教程中的部分方法</p>
<blockquote>
<p>Dzyabura, El Kihal and Peres (2020), &ldquo;Image Analytics in Marketing&rdquo;, in <em>The Handbook of Market Research</em>, Ch 14, Editors: Christian Homburg, Martin Klarmann, Arnd Vomberg. Springer, 2021.</p>
</blockquote>
<br>
<h2 id="安装">安装</h2>
<p>代码是用 Python 编写的。 用于编程和运行代码的理想界面是通过 Anaconda 的 Jupyter Notebook。</p>
<p>除了标准 Anaconda 库之外，还需要安装几个额外的库。 我们在代码中标记它们。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">opencv</span><span class="o">-</span><span class="n">contrib</span><span class="o">-</span><span class="n">python</span><span class="o">==</span><span class="mf">4.5.5.64</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">opencv</span><span class="o">-</span><span class="n">python</span><span class="o">==</span><span class="mf">4.5.5.62</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">scikit</span><span class="o">-</span><span class="n">image</span><span class="o">==</span><span class="mf">0.18.3</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">cv2</span> <span class="c1"># needs to be installed separately</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">skimage.io</span> <span class="kn">import</span> <span class="n">imread</span><span class="p">,</span> <span class="n">imshow</span>
<span class="kn">import</span> <span class="nn">matplotlib.image</span> <span class="k">as</span> <span class="nn">mpimg</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
</code></pre></div><br>
<h2 id="预定义特征提取">预定义特征提取</h2>
<p>我们从可以从图像中提取基本特征,如亮度、颜色等。</p>
<p>首先，我们加载一张图片并显示它。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">img</span> <span class="o">=</span> <span class="n">mpimg</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="s1">&#39;azreali.jpg&#39;</span><span class="p">)</span>
<span class="n">imgplot</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><div style="text-align: center;">
<figure >
    
        <img src="img/output_5_0.png" width="100%" />
    
    
</figure>
</div>
<br>
<h2 id="颜色提取">颜色提取</h2>
<h3 id="灰度直方图">灰度直方图</h3>
<p>颜色是基本的图像特征。 以下是创建颜色直方图的一些示例，这些直方图捕获图像的颜色组成。</p>
<p>将彩色招照片转为灰度照片</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">img_gray</span> <span class="o">=</span> <span class="n">imread</span><span class="p">(</span><span class="s1">&#39;azreali.jpg&#39;</span><span class="p">,</span><span class="n">as_gray</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">imshow</span><span class="p">(</span><span class="n">img_gray</span><span class="p">)</span>
</code></pre></div><pre><code>&lt;matplotlib.image.AxesImage at 0x7fd5ffe7c910&gt;
</code></pre>
<p>​    <div style="text-align: center;">
<figure >
    
        <img src="img/output_7_1.png" width="100%" />
    
    
</figure>
</div></p>
<p>​</p>
<p>我们可以为灰度图像创建一个颜色直方图，计算每个像素的强度，范围在 0 为黑色和 256 为白色之间。</p>
<p>你能猜出直方图的样子吗？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">image</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="s1">&#39;azreali.jpg&#39;</span><span class="p">)</span>
<span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">cv2</span><span class="o">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
<span class="n">hist</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">calcHist</span><span class="p">([</span><span class="n">gray</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="kc">None</span><span class="p">,</span> <span class="p">[</span><span class="mi">256</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">256</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s2">&#34;Grayscale Histogram&#34;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s2">&#34;Bins&#34;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s2">&#34;# of Pixels&#34;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">hist</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">256</span><span class="p">])</span>
</code></pre></div><pre><code>(0.0, 256.0)
</code></pre>
<p>​ <br>
<div style="text-align: center;">
<figure >
    
        <img src="img/output_9_1.png" width="100%" />
    
    
</figure>
</div> <br>
​</p>
<h3 id="rgb直方图">RGB直方图</h3>
<p>实际上，直方图向右倾斜。 图片主要包含刻度亮侧的像素和相对较少的暗像素。</p>
<p>接下来，我们可以为 RGB 颜色空间创建颜色直方图，0 表示颜色的最低强度，256 表示最高强度。</p>
<p>你能猜出三座塔图片中的主要颜色是什么吗？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">color</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;b&#39;</span><span class="p">,</span><span class="s1">&#39;g&#39;</span><span class="p">,</span><span class="s1">&#39;r&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">col</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">color</span><span class="p">):</span>
    <span class="n">histr</span> <span class="o">=</span> <span class="n">cv2</span><span class="o">.</span><span class="n">calcHist</span><span class="p">([</span><span class="n">image</span><span class="p">],[</span><span class="n">i</span><span class="p">],</span><span class="kc">None</span><span class="p">,[</span><span class="mi">256</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">256</span><span class="p">])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">histr</span><span class="p">,</span><span class="n">color</span> <span class="o">=</span> <span class="n">col</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xlim</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="mi">256</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><div style="text-align: center;">
<figure >
    
        <img src="img/output_11_0.png" width="100%" />
    
    
</figure>
</div>
<p>确实。 图片中有很多蓝色，直方图检测到这些蓝色像素。</p>
<p>今天讲的都是很简单的图片处理，图片是一种比文本体积更大的文件数据，受限制于个人技术水平以及电脑性能，大邓无法展示机器学习、深度学习的图片分析算法。感兴趣的同学可以阅读论文，了解图片分析在营销中的新应用新进展。</p>
<blockquote>
<p>Dzyabura, El Kihal and Peres (2020), &ldquo;Image Analytics in Marketing&rdquo;, in The Handbook of Market Research, Ch 14, Editors: Christian Homburg, Martin Klarmann, Arnd Vomberg. Springer, 2021.</p>
</blockquote>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>whatlies库|可视化词向量</title>
      <link>https://hidadeng.github.io/blog/whatlies_word2vec/</link>
      <pubDate>Sat, 02 Apr 2022 16:40:10 +0600</pubDate>
      
      <guid>/blog/whatlies_word2vec/</guid>
      <description>词语之间可以比较亲疏远近</description>
      <content:encoded><![CDATA[<h2 id="代码下载">代码下载</h2>
<blockquote>
<p>链接:https://pan.baidu.com/s/1vJohEJ0pc6t4PBK04PiZbg  密码:t7a6</p>
</blockquote>
<br>
<h2 id="whatlies">whatlies</h2>
<p>可以与spacy语言模型结合，可视化词向量。安装zh_core_web_md、en_core_web_md和whatlies。具体文档可以查看https://github.com/RasaHQ/whatlies</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">zh_core_web_md</span><span class="o">-</span><span class="mf">3.0.0</span><span class="o">-</span><span class="n">py3</span><span class="o">-</span><span class="n">none</span><span class="o">-</span><span class="nb">any</span><span class="o">.</span><span class="n">whl</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">en_core_web_md</span><span class="o">-</span><span class="mf">3.0.0</span><span class="o">-</span><span class="n">py3</span><span class="o">-</span><span class="n">none</span><span class="o">-</span><span class="nb">any</span><span class="o">.</span><span class="n">whl</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">whatlies</span>
</code></pre></div><br>
<h2 id="快速上手">快速上手</h2>
<p>spacy模型中的词向量均为几十上百维度的词向量，通过压缩映射至二维空间后，横坐标man，纵坐标woman，就可以将词语的性别倾向可视化出来。</p>
<p>词向量语言模型会学习到人类的<strong>刻板印象</strong>，</p>
<p><a href="https://hidadeng.github.io/blog/wordembeddingsinsocialscience/">大数据时代下社会科学研究方法的拓展—基于词嵌入技术的文本分析的应用</a></p>
<p><a href="https://hidadeng.github.io/blog/embeddingsandattitude/">词嵌入测量不同群体对某概念的态度(偏见)</a></p>
<p>例如nurse是女性，doctor是男性。</p>
<p>制作两维度画轴，其中以woman作纵轴，man作横轴。 nurse、queen一般更多的是女性从业者，因此更接近y轴。 king国王多为男性，所以更接近x轴。</p>
<p>至于动物，女性喜欢养猫，男性喜欢养狗，所以也能体现出词语的性别倾向。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">whatlies</span> <span class="kn">import</span> <span class="n">EmbeddingSet</span>
<span class="kn">from</span> <span class="nn">whatlies.language</span> <span class="kn">import</span> <span class="n">SpacyLanguage</span>

<span class="n">lang</span> <span class="o">=</span> <span class="n">SpacyLanguage</span><span class="p">(</span><span class="s2">&#34;en_core_web_md&#34;</span><span class="p">)</span>

<span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;cat&#34;</span><span class="p">,</span> <span class="s2">&#34;dog&#34;</span><span class="p">,</span> <span class="s2">&#34;fish&#34;</span><span class="p">,</span> <span class="s2">&#34;kitten&#34;</span><span class="p">,</span> <span class="s2">&#34;man&#34;</span><span class="p">,</span> <span class="s2">&#34;woman&#34;</span><span class="p">,</span>
         <span class="s2">&#34;king&#34;</span><span class="p">,</span> <span class="s2">&#34;queen&#34;</span><span class="p">,</span> <span class="s2">&#34;doctor&#34;</span><span class="p">,</span> <span class="s2">&#34;nurse&#34;</span><span class="p">]</span>

<span class="n">emb</span> <span class="o">=</span> <span class="n">EmbeddingSet</span><span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="n">lang</span><span class="p">[</span><span class="n">w</span><span class="p">]</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">words</span><span class="p">])</span>
<span class="n">emb</span><span class="o">.</span><span class="n">plot_interactive</span><span class="p">(</span><span class="n">x_axis</span><span class="o">=</span><span class="n">emb</span><span class="p">[</span><span class="s2">&#34;man&#34;</span><span class="p">],</span> <span class="n">y_axis</span><span class="o">=</span><span class="n">emb</span><span class="p">[</span><span class="s2">&#34;woman&#34;</span><span class="p">])</span>
</code></pre></div>
<figure >
    
        <img src="img/gif-zero.gif" width="100%" />
    
    
</figure>

<p>whatlies也可以对中文进行操作。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">whatlies</span> <span class="kn">import</span> <span class="n">EmbeddingSet</span>
<span class="kn">from</span> <span class="nn">whatlies.language</span> <span class="kn">import</span> <span class="n">SpacyLanguage</span>

<span class="n">zh_lang</span> <span class="o">=</span> <span class="n">SpacyLanguage</span><span class="p">(</span><span class="s2">&#34;zh_core_web_md&#34;</span><span class="p">)</span>

<span class="n">zh_words</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;猫&#34;</span><span class="p">,</span> <span class="s2">&#34;狗&#34;</span><span class="p">,</span> <span class="s2">&#34;鱼&#34;</span><span class="p">,</span> <span class="s2">&#34;鲤鱼&#34;</span><span class="p">,</span> <span class="s2">&#34;男人&#34;</span><span class="p">,</span> <span class="s2">&#34;女人&#34;</span><span class="p">,</span>
         <span class="s2">&#34;国王&#34;</span><span class="p">,</span> <span class="s2">&#34;王后&#34;</span><span class="p">,</span> <span class="s2">&#34;医生&#34;</span><span class="p">,</span> <span class="s2">&#34;护士&#34;</span><span class="p">]</span>

<span class="n">zh_emb</span> <span class="o">=</span> <span class="n">EmbeddingSet</span><span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="n">zh_lang</span><span class="p">[</span><span class="n">w</span><span class="p">]</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">zh_words</span><span class="p">])</span>
<span class="n">zh_emb</span><span class="o">.</span><span class="n">plot_interactive</span><span class="p">(</span><span class="n">x_axis</span><span class="o">=</span><span class="n">zh_emb</span><span class="p">[</span><span class="s2">&#34;男人&#34;</span><span class="p">],</span> <span class="n">y_axis</span><span class="o">=</span><span class="n">zh_emb</span><span class="p">[</span><span class="s2">&#34;女人&#34;</span><span class="p">])</span>
</code></pre></div>
<figure >
    
        <img src="img/chinese.png" width="100%" />
    
    
</figure>

<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>营销研究中文本分析应用概述(含案例及代码)</title>
      <link>https://hidadeng.github.io/blog/automate_text_analysis_in_market/</link>
      <pubDate>Fri, 01 Apr 2022 10:43:10 +0600</pubDate>
      
      <guid>/blog/automate_text_analysis_in_market/</guid>
      <description>总结和探索了在营销研究中的应用，如情感分析、主题建模和研究组织沟通，包括对产品发布的口碑反应的案例研究。</description>
      <content:encoded><![CDATA[<h2 id="摘要">摘要</h2>
<p>在过去的二十年里，可供营销研究人员分析的文本数据量呈指数级增长。 然而，书面语言充满了复杂的含义、歧义和细微差别。 营销研究人员如何才能将这种丰富的语言表示转化为可量化的数据以进行统计分析和建模？ 本章介绍了文本分析各种方法。 在涵盖了文本分析的一些基础知识后，总结和探索了在<strong>营销研究</strong>中的应用，如<strong>情感分析、主题建模和研究组织沟通</strong>，包括对产品发布的口碑反应的案例研究。<br></p>
<h2 id="本文相关资料">本文相关资料</h2>
<blockquote>
<p><a href="2022_Book_HandbookOfMarketResearch.pdf">Christian Homburg, Martin Klarmann, and Arnd Vomberg. 2022. <em>Handbook of Market Research</em>.</a></p>
<p><a href="2019_AutomatedTextAnalysis.pdf">Humphreys A. (2019) Automated Text Analysis. In: Homburg C., Klarmann M., Vomberg A. (eds) Handbook of Market Research. Springer, Cham. https://doi.org/10.1007/978-3-319-05542-8_26-1</a></p>
<p><a href="https://academic.oup.com/jcr/article-abstract/44/6/1274/4283031">Humphreys, Ashlee, and Rebecca Jen-Hui Wang. &ldquo;Automated text analysis for consumer research.&rdquo; Journal of Consumer Research 44.6 (2018): 1274-1306.</a></p>
</blockquote>
<br>
<h2 id="关键词">关键词</h2>
<ul>
<li>
<p>文本分析Text analysis</p>
</li>
<li>
<p>计算机辅助文本分析computer-assisted text analysis</p>
</li>
<li>
<p>自动内容分析automated content analysis</p>
</li>
<li>
<p>内容分析content analysis</p>
</li>
<li>
<p>主题建模topic modeling</p>
</li>
<li>
<p>情感分析sentiment analysis</p>
</li>
<li>
<p>LDA主题分析LDA</p>
</li>
<li>
<p>口碑word-of-mouth</p>
</li>
</ul>
<br>
<h1 id="一引言">一、引言</h1>
<p>要了解<strong>自动文本分析(后文均简称文本分析)</strong>，首先要回顾一下它与<strong>传统内容分析</strong>的关系。<strong>内容分析</strong>是社会科学中用于系统地评估和分析消息内容的一种方法，通常以文本的形式，最早的内容分析传统可以追溯到 16 世纪的修道院生活，但现代内容分析是由 Max Weber (1924) 首次提出来研究新闻的。从那时起，<strong>社会学和传播学</strong>的学者就使用<strong>人类编码</strong>的内容分析来调查媒体内容的差异，<strong>描述传播随时间的趋势，揭示组织或个人关注的模式，并检查个人的态度、兴趣、意图或价值观或一组</strong>（例如，Berelson 1971；Gamson 和 Modigliani 1989）。</p>
<p>传统的内容分析首先通过 Kassarjian (1977) 的方法大纲引入<strong>消费者行为领域</strong>，然后由 Kolbe 和 Burnett (1991) 进行再创新，以提高可靠性和客观性，主要关注<strong>计算编码间一致性的标准</strong>（参见也格雷森和锈 2001）。在消费者研究和营销中，传统的内容分析已被用于分析<strong>杂志广告</strong>（Belk 和 Pollay 1985）、<strong>直邮direct mail</strong>（Stevenson 和 Swayne 1999）、<strong>报纸文章</strong>（Garrett 1987）和<strong>口碑传播</strong>（Moore 2015；菲尔普斯等人 2004）。虽然文本分析可以提高传统内容分析的效率和可靠性，但它也有局限性。例如，计算机化的文本分析可能会遗漏文本中的细微之处，并且无法编码更精细的含义。</p>
<p>文本分析并不是什么新鲜事，但自从个人计算机广泛采用以来，它已经变得更容易实现了。 <strong>General Inquirer</strong> (Stone 1966) 是最早用于消费者研究的计算机内容分析工具之一 (Kranz 1970)。 Kranz (1970) 对营销中内容分析涉及<strong>字典创建</strong>，但没有解决<strong>类别创建</strong>、<strong>有效性</strong>等。从那时起，在文本分析方面取得了长足的进步。</p>
<br>
<h1 id="二文本分析的方法">二、文本分析的方法</h1>
<p>在当前实践中，自动化文本分析基本上有词典法、机器学习法（分类方法、主题模型）。</p>
<h2 id="21-词典法">2.1 词典法</h2>
<p><strong>研究者测度文本中某些构念(概念)前，首先需要寻找到文本中存在的规律，通过构建单词列表或一组规则来完成(识别或)测量</strong>（Rayson 2009）。该方法已广泛用于社会科学，如消费者研究（Humphreys 和 Wang 2018）、心理学（Chung 和 Pennebaker 2013；Mehl 和 Gill 2008；Pennebaker 和 King 1999）、社会学（Van de Rijt 等人） . 2013) 和政治学 (Grimmer and Stewart 2013; Lasswell and Leites 1949)，<strong>因为词典法能够将理论构念转化为可测度的文本元素，并且算法具有可靠的透明度(相比而言，机器学习算法更像是黑箱)</strong>。另一方面，自下而上的方法在工程、计算机科学和营销科学中得到了更广泛的应用。营销策略借鉴了这两种方法，尽管基于字典的方法似乎更常见（Ertimur 和 CoskunerBalli 2015；Humphreys 2010；Ludwig 等人 2013；Packard 等人 2014）。</p>
<p>基于字典的文本分析方法基于预先开发的单词列表或字典，用于计算文本中单词的出现次数。标准化词典可用于许多构造，例如情绪（例如，Hutto 和 Gilbert 2014）、与营销相关的构造，例如真实性和品牌个性（Kovács 等人 2013；Opoku 等人 2006），以及心理学中的许多标准概念(Pennebaker et al. 2001; Snefjella and Kuperman 2015) 和其他领域，如政治学 (Dunphy et al. 1974; Stone 1966)。除了使用标准字典外，许多研究人员选择创建自己的字典以适应特定的上下文，尽管只有在标准字典不可用时才应该这样做。</p>
<p><strong>字典创建最归纳的方法是根据研究问题和假设的相关类别，先从文档中按频率列出的所有单词和词组（Chung and Pennebaker 2013）</strong>。如果研究人员事先不知道哪些类别是相关的，则可以使用在词典开发之前，使用定性研究方法，编码过程中创建一组相关概念及对应的单词列表，（Humphreys 2010）。例如，为了研究报纸文章中与瑜伽行业有关的制度逻辑，Ertimur 和Coskuner-Balli (2015) 首先主轴编码了报纸文章和其他历史文本的数据集。通常，数据集中随机选取10-20% 的样本足以进行编码（Humphreys 和 Wang 2018），但研究人员应注意数据量，根据类别或时间段的不均匀性，相应地进行分层处理（Humphreys 2010）。</p>
<p><strong>字典创建的最演绎方法是从理论概念或类别创建一个词表</strong>。然而，应该注意研究人员和作家倾向于选择比文本数据中普遍存在的更抽象的词（Palmquist 等人，2009 年）。出于这个原因，仔细的<strong>后测验证</strong>是必要的，以确保词典结构的有效性。在清理和存储文本并创建字典后，研究人员使用 Python、Diction、LIWC、WordStat 或 R 等程序来执行计数。然后可以使用传统的统计包保存和分析数据。</p>
<p>词典构建过程中，如果要进行<strong>后测验证</strong>，有很多方法检验方法。</p>
<ol>
<li>彭内贝克等人 (2001) 推荐了一种验证字典的方法，但不推荐结果测量。在这里，三个研究助理将一个词视为该类别的代表或不代表，如果三个编码员中有两个同意，则保留该词。如果他们不这样做，则应从字典中删除该词。然后可以计算和报告字典类别的百分比协议，一般阈值与 Krippendorf 的 alpha 相似，高于 75%。</li>
<li>Weber (2005) 提出了一个饱和程序，研究人员从一个概念的 10 或 20 个实例中抽取样本，并让研究助理将它们编码为准确地代表类别（或不代表）。如果比率低于 80%，则应修改字典类别，直到达到阈值。</li>
<li>最后一种方法是将计算机编码的结果与来自两个或更多编码器的大量人工编码结果进行比较。为此，人们从数据集中选择一个随机样本（数量可能会因数据集的大小而异），然后人工编码人员根据类别描述对文本进行编码，并像在传统内容分析中一样计算可靠性。然后可以将其与计算机的附加“编码器”进行比较以产生相似度分数。尽管这种最终方法具有与传统内容分析比较的优势，但它并不总是必要的，并且在某些情况下会产生错误的结果。人类编码员能够理解计算机无法获得的微妙含义，同样，计算机能够一致且均匀地在整个数据集上对概念进行编码，而不会出现遗漏或偏见。出于这个原因，在某些情况下，将人类编码与计算机编码进行比较就像将苹果与橙子进行比较。</li>
</ol>
<p>基于词典的分析已研究了很多领域的理论概念，例如<strong>情感emotion</strong>（Berger 和 Milkman 2012）、<strong>解释水平construal level</strong>（Snefjella 和 Kuperman 2015）、<strong>制度逻辑institutional logics</strong>（Ertimur 和 Coskuner-Balli 2015）、<strong>风险risk</strong>（Humphreys 和 Thompson 2014）、 <strong>言语行为speech acts</strong>（Ludwig et al. 2016; Villarroel Ordenes et al. 2017）和<strong>框架framing</strong>（Fiss and Hirsch 2005; Humphreys and Latour 2013; Jurafsky et al. 2014）。 <strong>可以通过基于词典的分析来探索各种上下文</strong>，例如产品和餐厅评论（Barasch 和 Berger 2014，Jurafsky 等人 2014；Kovács 等人 2013）、推文（Mogilner 等人 2010）、客户服务电话 (Packard et al. 2014)、博客 (Arsel and Bean 2013) 和新闻文章 (Humphreys 2010; Humphreys and Thompson 2014)。</p>
<br>
<h2 id="23-机器学习法">2.3 机器学习法</h2>
<p><strong>机器学习法又细分为分类算法和主题建模</strong>。</p>
<h3 id="231-分类方法">2.3.1 分类方法</h3>
<p><strong>分类方法基于将文档分类为不同的“类型”，然后进一步描述（计算）文本中哪些元素为该条文本数据的成为某“类型”贡献了多少权重(可能性)</strong>。例如，Tirunillai 和 Tellis (2012) 使用分类来训练一个机器模型，以根据星级来识别正面和负面评论。研究者对训练数据集，使用朴素贝叶斯和支持向量机 (SVM) 分类器来找出哪些词可以预测星级，然后使用这些信息对整个评论集进行分类，达到精确度——这意味着他们的算法预测真阳性——68-85% 的时间，取决于产品类别。 Villarroel Ordenes 等人（2017 年）通过使用文本中显式和隐式情绪指标来衡量情绪和情绪强度，进一步完善情绪测量，还在 Tripadvisor、亚马逊和 Barnes and Noble 的一组星级评论上测试了他们的框架。<strong>分类模型算法的复杂程度各不相同</strong>；例如，这些方法的情绪准确性从 55% 到 96% 不等（Hutto and Gilbert 2014）。</p>
<p>分类模型已被用于研究评论 (Tirunillai and Tellis 2012; Van Laer et al. 2017)、在线论坛 (Homburg et al. 2015)、电子邮件 (Ludwig et al. 2016) 和文学文本 (Boyd and Pennebaker 2015b; Plaisant 等人，2006 年）。例如，为了衡量留言板帖子的情绪，Homburg 等人（2015）对明确的正面和负面帖子的训练数据集进行分类。然后，他们使用情绪作为一个独立的衡量标准来了解公司参与实际上增加了多少积极的消费者情绪，发现参与的回报是递减的。</p>
<h3 id="232-主题建模">2.3.2 主题建模</h3>
<p>主题建模是一种方法，它首先将文本解析为离散的单词，然后假设单词出现是独立的情况下找到在统计上不太可能出现的共现模式（看不懂没关系，继续阅读）。通过这种方式，分析识别出可能由明显存在的词潜在表示的类别，然后标记这些词组以表示数据中有意义的概念或特征，就像在因子分析中所做的那样。例如，在酒店评论研究中，Mankad 等人。 (2016) <strong>使用潜在狄利克雷分配 (LDA) 来识别用户 TripAdvisor 评论中出现的五个主题，将便利设施、位置、交易、价值和体验确定为评论者提到的关键主题</strong>。潜在语义分析 (LSA)、k-means 聚类 (Lee and Bradlow 2011)、概率潜在语义分析 (PLSA) 和 LDA (Blei et al. 2003) 都是主题建模的方法，其中 LDA 是最新和最常见的方法主题建模的分析方法。</p>
<p>LDA 是一种分层贝叶斯模型，用于确定给定文档中存在的主题概率分布组合。 <strong>LDA主题建模前需要研究者设定主题的数量</strong>。假设主题的选择存在一定的概率分布，并且在该分布中选择表示该主题的词有一定的分布，LDA 会生成最终的主题列表（由该主题中的词列表表示）和给定主题在文档中的概率。尽管大多数方法都是基于单词或短语的，但 Büschken 和 Allenby (2016) 使用句子作为分析单位进行了 LDA 分析，并发现这产生的结果比基于单词的 LDA 更能预测评分。基于句子的模型假设句子中的所有单词都是同一主题的一部分，考虑到 Grice 的关系和方式准则（Grice 1975），这是合理的。 Büschken 和 Allenby (2016) 使用此模型从 Expedia 和 we8there.com 上的评论中识别意大利餐厅和酒店的主题。</p>
<p>LDA 已在广泛的应用中使用（Büschken 和 Allenby 2016；Tirunillai 和 Tellis 2014）。<strong>与词典法一样，后测验证，在这种情况下，使用保留样本或其他预测技术（例如，外部 DV）是非常可取的</strong>。机器只会读取字面意思，因此同音异义词和包括讽刺在内的其他口语可能会出现问题，因为它们是过于笼统和过于具体的词。此外，仔细清理和准备文本可以减少错误，因为有时可以在数据收集期间添加文本标记（例如，页眉、页脚等）。</p>
<br>
<h1 id="三文本分析的市场研究应用">三、文本分析的市场研究应用</h1>
<h2 id="31-情感分析">3.1 情感分析</h2>
<p>许多文本分析程序和从业者声称可以衡量情绪，但并不总是清楚这个关键指标的内涵。在讨论情感的文本分析之前，首先要讨论<strong>什么是情感</strong>、<strong>情感能体现文本中的什么信息</strong>。在大多数营销环境中，研究人员和从业者都对消费者对品牌、产品或服务的态度感兴趣。然而，<strong>态度是复杂的心理结构，不仅由情感组成，还包括认知信念和意图</strong>（Fishbein 和 Ajzen 1972）。此外，对于任何给定产品的最终购买态度和未来行为（如忠诚度）的重要性在很大程度上取决于上下文和参与（Petty 和 Cacioppo 1979）。人们在网上表达的态度可能并不能完全反映他们的潜在态度，他们选择表达的态度可能存在选择偏差，并且他们的行为也可能与他们所支持的态度不同。<strong>尽管如此，以情感表达的在线话语可以反映对品牌、产品或服务的某种潜在态度，并且重要的是可以影响其他消费者之间共享的社会共识</strong>。情绪已被证明可以预测电影销量（Krauss et al. 2008; Mestyán et al. 2013）和股票市场回报（Bollen et al. 2011; De Choudhury et al. 2008; Tirunillai and Tellis 2012）。</p>
<p><strong>情感得分的计算方法</strong></p>
<ul>
<li>
<p>大多数方法试图将文本分类或测量为具有积极、消极或有时是中性的情绪</p>
</li>
<li>
<p>另一些方法将其转化为净情绪，从积极的词中减去消极词（例如，Ludwig et al. 2013; Homburg et al. 2015 ）。</p>
</li>
</ul>
<p>除了<strong>情感效价valence，情绪也可以有强度strength和确定性certainty</strong>。先前的研究使用了明确的、语义的情感指标以及隐含的、更实用的情感指标，如**言语行为speech acts（委托、断言和方向）**来成功测量情感强度（Villarroel Ordenes 等人，2017 年）。进一步研究表明，其他类型言语，如指示语 (Potts and Schwarz 2010) 和其他语用标记可以指示表达性内容，通常在产品评论中表达 (Constant et al. 2009)。</p>
<p>使用预先开发的标准化词典是衡量跨上下文情绪的最可靠方法之一，因为这些词汇表已经开发并在广泛的文本数据上进行了测试。例如，<strong>VADAR</strong>(一种英文情感词典)使用带有基于规则的方法的字典来测量情绪。具体来说，Hutto 和 Gilbert (2014) 使用了基于以前标准化词典（如 LIWC 和 General Inquirer）的词典组合，但随后还开发了五个规则，这些规则考虑了句法和语法来衡量强度。使用词典法衡量情绪产生的准确率从 55% 到 96% 不等，具体取决于上下文（Hutto 和 Gilbert 2014）。 例如，Tirunillai 和 Tellis (2012) 使用星级来创建情绪分类系统，准确率为 68-85%。<br></p>
<h2 id="32-通过文本分析研究口碑">3.2 通过文本分析研究口碑</h2>
<p>迄今为止，文本分析在营销研究中的主要用途是研究在线口碑传播。消费者总是通过人际交流来分享产品信息（Arndt 1967），这种交流已被证明比商业信息更有效（Brown 和 Reingen 1987；另见 Godes 和 Mayzlin 2004；Money 等人 1998）。然而，虽然口碑传播以前是通过面对面或电话进行的，但现在它可以在社交购物网站（Stephen 和 Toubia 2010）、社交媒体（Humphreys 2015）和第三方评论网站上看到并存档和平台。亚马逊上的产品评论、TripAdvisor 上的酒店评论和 Yelp 上的餐厅评论！都提供了营销见解，以更好地了解评级与销售额和股价之间的关系（Moe 和 Schweidel 2014；Schweidel 和 Moe 2014；Moe 和 Trusov 2011）。例如，Moe 和 Trusov (2011) 发现正面评论对销售有直接影响，但这种影响在某种程度上是短暂的，因为随着人们发布更多评分（即，帖子的社会动态导致评论变得相对更加负面）随着时间的推移）。此外，积极性可能因平台而异（Schweidel 和 Moe 2014；Villarroel Ordenes 等人 2017）。</p>
<p><strong>在线口碑可以通过测量情感效价、评论数量和评分分布的方差来表示</strong>（Godes 和 Mayzlin 2004）。评论数量和评分方差与现有的建模测量相对兼容，因为评论数可以聚合，评分的方差可以通过开始评级或其他用户输入来测量。<strong>情感效价虽然部分由星标衡量，但最好用情感衡量，这需要文本分析作为一种方法，将语言描述的非结构化数据转换为可纳入定量模型的数据</strong>。应该指出的是，<strong>除了情感效价之外，还有广泛的语言属性和语义内容可以为营销研究提供有用的信息</strong>（Humphreys and Wang 2018）。例如，Kovács 等人。 (2013) 表明，如果评论者在评论中提及<strong>真实性</strong>，即使在控制餐厅质量的情况下，餐厅的评分也会更高。</p>
<p>情感在口碑传播中的作用是一个关键话题。在一项关于分享新闻文章的研究中，Berger 和 Milkman (2012) 发现积极情绪会增加病毒式传播，但文章中存在强烈的负面情绪（如愤怒或焦虑）也会增加病毒式传播。还通过使用代词的文本分析研究了发送者和言语上下文的影响。使用第一人称人称代词（“I”、“me”）的标准字典，Packard 和 Wooten（2013 年）发现，消费者通过口耳相传更多地自我提升，以表明对特定领域的了解。消费者也被证明通过在向大量观众广播时分享较少的负面情绪来进行自我展示，而不是对较小的观众进行窄播（Barasch 和 Berger 2014）。在像电影一样评估产品时，消费者在表达对品味的看法与对质量的看法时，更有可能使用指代自己的代词（Spiller 和 Belogolova 2016）。</p>
<br>
<h2 id="33-创建公司产品定位图主题发现">3.3 创建公司(产品)定位图、主题发现</h2>
<p>文本分析可用于为品牌、公司或产品创建<strong>定位图</strong>，并根据特定类别中的属性可视化市场结构。**借助k-means 聚类算法或LDA 主题建模算法，可按一定的潜在逻辑(属性、品牌)，对文本中的常见词进行分组。**例如，为了从 Epinions.com 上的一组评论中创建相机市场结构的可视化，Lee 和 Bradlow (2011) 首先提取与特定属性（例如，电池寿命、照片质量）相关的短语，然后使用 k-means基于短语的相似性（计算为单词向量之间的余弦相似度）对短语进行聚类。分析发现消费者提到的和对消费者重要的属性存在差异，但在尺寸、设计和屏幕亮度等专家评论中却没有差异。同样，使用来自糖尿病论坛的文本数据，Netzer 等人。 (2012) 发现论坛上经常提到的几种副作用，但在 WebMD 之类的网站上却没有（例如，体重增加、肾脏问题）。</p>
<p>主题模型与心理学理论之间是兼容的，例如<strong>语义记忆中的传播激活</strong>（Collins and Loftus 1975）。例如，人们是在一定的语义记忆中谈论相关的品牌。受到该想法启发，Netzer 等人 (2012) 使用 Edmunds.com 的评论为汽车品牌制作感知地图，并将其与使用销售(调查)数据测度的品牌转换感知地图进行比较。在此过程中，他们发现基于文本分析的结果与基于销售或调查数据的结果之间存在一些显着差异。例如，根据销售数据，韩国品牌的汽车与日本品牌没有关联。但是，根据文本数据，这些品牌被归为一类。这表明，虽然文本分析可以捕捉认知关联，但这些关联不一定会转化为品牌转换等行为（表 1）。</p>
<table>
<thead>
<tr>
<th>文本分析方法</th>
<th>数据源</th>
<th>应用领域</th>
<th>算法</th>
<th>相关案例</th>
</tr>
</thead>
<tbody>
<tr>
<td>词典法</td>
<td>在线评论、论坛、新闻、公告、年报</td>
<td>情感(情绪)、心理(如解释水平)、品牌关注度、品牌价值、公司形象等</td>
<td>词频</td>
<td>Humphreys (2010), Berger and Milkman (2012), Packard et al. (2018)</td>
</tr>
<tr>
<td>分类法</td>
<td>在线评论、论坛、文献、推特、邮件</td>
<td>情感分析、欺诈识别、产品属性、市场结构</td>
<td>监督机器学习算法，如SVM、K近邻、朴素贝叶斯等</td>
<td>Homburg et al. (2015), Van Laer et al. (2018), Tirunillai and Tellis (2012)</td>
</tr>
<tr>
<td>主题模型</td>
<td>产品服务评论、在西安论坛</td>
<td>产品属性、定位图positioning、市场结构等</td>
<td>LDA、K-means</td>
<td>Netzer et al. (2012), Lee and Bradlow (2006), Buschken and Allenby (2016)</td>
</tr>
</tbody>
</table>
<br>
<h2 id="34-组织和公司环境的测量">3.4 组织和公司环境的测量</h2>
<p>最后，<strong>文本分析可用于通过分析股东报告、新闻稿和其他营销传播来衡量组织关注度</strong>。<strong>这些研究主要基于基于词典的分析，并且经常创建词典而不是使用标准化词典来适应行业或原始背景和研究问题</strong>。例如，学者们开发了字典来研究 <strong>企业社会责任语言</strong>随时间的变化，以揭示发展中国家的差异（Gandolfo et al. 2016）。在对年度报告的分析中，Lee 等人 (2004) 发现，披露负面信息时，如果倾向于向内寻找原因，这类公司一年后的股价较高，这表明将责任归咎于公司控制因素的组织似乎比那些不责任的组织更有控制力，因此投资者对负面事件的印象更佳。</p>
<p><strong>企业环境也可以通过测量媒体，如报纸、杂志和贸易出版物来捕捉</strong>。例如，Humphreys (2010) 表明，制度和文化环境的变化使美国的赌场赌博业合法化。 Humphreys 和 Thompson（2014 年）研究了两次危机（埃克森和 BP 漏油）之后的风险认知环境，并发现媒体的叙述有助于遏制这些灾难之后的风险认知。 Ertimur 和 Coskuner-Balli（Ertimur 和 Coskuner-Balli 2015）追溯了瑜伽行业如何随着时间的推移而变化，形成了影响行业内品牌和定位的独特制度逻辑。</p>
<br>
<h2 id="35-处理文本数据的问题">3.5 处理文本数据的问题</h2>
<p>尽管文本为分析消费者想法和市场战略领域研究提供了一个窗口，但在分析文本时仍有几个问题需要考虑。<strong>语言很少（如果有的话）遵循正态分布模式</strong>（Zipf 1932）。例如，像“a”、“he”和“there”这样的功能词在正常使用中占所有语言的 40% 左右。名词和动词等常用词占另外 59%，这些常用词中通常只有一小部分与研究问题相关。文本数据通常是左偏的（很多零），文档通常包含不同数量的单词，并且感兴趣的单词通常太少或太频繁出现而无法进行有意义的比较。由于这些原因，在计算出词频之后，研究人员通常会在统计分析之前对数据进行转换。此外，<strong>由于数据的非正态分布，许多检验（如 ANOVA）不适合</strong>。</p>
<p>因此，<strong>文本信息几乎就是表示为文档中单词的百分比（例如，Ludwig et al. 2013），并且通常使用对数转换来解释偏度</strong>（Netzer et al. 2012），尽管使用了几种可能的转换（曼宁等人，2008 年）。 <strong>Tf-idf</strong> 是一种经常用于解释词频的度量，由整个数据集中单词的总体频率标准化（有关计算 tf*idf 的详细信息，请参阅 Salton 和 McGill 1983，以及伴随的转换选项）。</p>
<p>用于测量共现的传统方法（例如 Pearson 相关性），必然导致一个问题，即数据集中存在大量的零（Netzer 等人，2012 年）。对此，<strong>研究人员经常使用余弦相似度或 Jaccard 距离来比较单词和文档</strong>。通常需要使用多种方法来计算共现的一系列稳健性检查，以确保结果不仅仅由于不经常或过于频繁出现的单词而出现（Monroe et al. 2009; Netzer et al. 2012）。例如，如果像“he他”这样的词很常见，那么与“airbag安全气囊”这样的不常见词相比，它可能与更多的词同时出现。然而，“安全气囊”这个词可能比“他”这样的人称代词更能<strong>概念可诊断性(信息量更大，更特别)</strong>。因为数据不是正态分布的，所以统计检验，例如 Mann-Whitney 检验，检验排名的显着性而不是绝对数，可以替代 ANOVA。</p>
<br>
<h1 id="四扩展专家和非专家之间产品发布的口碑差异">四、扩展：专家和非专家之间，产品发布的口碑差异</h1>
<p>本节介绍了一个文本分析案例，以词典法为例，将数据分析的过程分为六个阶段（转载自<em><strong>Humphreys and Wang (2018), Automated Text Analysis for Consumer Research, Journal of Consumer Research, 44(6), 1 (April), 1274–1306</strong></em>）。该案例研究消费者对 mp3 播放器/无线设备 Apple iTouch 产品发布的反应，在本文中只展示部分内容，展示从<strong>理论构念到文本分析大主要步骤。</strong>。</p>
<table>
<thead>
<tr>
<th>步骤</th>
<th>含义功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.识别研究问题</td>
<td>确定主题，以及与之对应的几个问题</td>
</tr>
<tr>
<td>2. <strong>数据采集</strong></td>
<td>识别数据源；<br>在线数据库或新闻；<br/>对已有非文本数据(书籍、刊物)的数字化；<br/>网络爬虫；<br/>访谈</td>
</tr>
<tr>
<td>3. <strong>定义构(概)念</strong></td>
<td>定性分析数据的子样本; <br/>为每个构念创建一个词典（单词列表）； <br/>让编码人员检查和完善词典;<br/>初步实施字典以检查误报和漏报</td>
</tr>
<tr>
<td>4. <strong>构念测量(计算)</strong></td>
<td>对原始数据计算相关构念 ;<br>根据研究问题，运行相关计算：<br/> 所有单词的百分比；<br>时间段或类别中的单词百分比；<br/>所有编码单词的百分比；<br/> 二进制（“属于某构念”或“不属于某构念”）</td>
</tr>
<tr>
<td>5. 解读&amp;分析</td>
<td>依文章、你那份对文本进行不同角度的分析；<br>通过不同角度进行比较;<br>对研究问题选择合适的统计方法:<br>方差分析ANOVA；<br>回归分析；<br/>相关分析；<br/></td>
</tr>
<tr>
<td>6. 后测验证</td>
<td>提取子样本并由研究助理或研究人员编码，根据 Krippendorf 的 alpha 计算所构建的词典的优劣合格与否</td>
</tr>
</tbody>
</table>
<br>
<h2 id="stage-1提出研究问题">Stage-1：提出研究问题</h2>
<p>本研究提出了一个具体的问题：</p>
<ol>
<li>在产品发布后，专家的反应与非专家的反应是否不同？</li>
<li>此外，随着产品的扩散，专家组与非专家组的口碑反应如何变化？</li>
</ol>
<p>专家的口口相传对产品采纳特别有影响，因此了解他们的观点会随着时间的推移以及与非专家群体的比较而发生变化是很重要的。 本研究选择的背景，即 Apple iTouch 的发布，是一个很好的研究案例，因为产品类别和评估产品的标准在推出时都是模棱两可的。</p>
<br>
<h2 id="stage-2-数据收集">Stage-2: 数据收集</h2>
<p>数据来自两个网站</p>
<ul>
<li>Amazon.com 亚马逊是一个销售从书籍到玩具的所有商品的网站，拥有广泛的受众； 来自Amazon的消费者评论被用来反映非专家或混合消费者的反应</li>
<li>CNET.com CNET 是一个专门用于技术的网站，并且可能拥有更专业的发帖人。来自CNET的用户评论被用来衡量专家的反应。</li>
</ul>
<p>研究者收集了Amazon.com 和 CNET.com关于iTouch文本数据，采集的时间窗口从2007 年 9 月 5 日到 2009 年 11 月 6 日。“iPod Touch”的关键字搜索用于收集当时对该产品可用的所有客户评论的分析。对设备多个版本（第一代和第二代）的评论包括在分析中，并根据发布日期进行了细分。第一代 iPod Touch 于 2007 年 9 月 5 日发布，第二代于 2008 年 9 月 9 日发布。</p>
<p>字段包括评论者(或发帖人)评论日期、发帖人姓名、评分、发帖人位置以及评论本身的文本都存储为单独的变量。从亚马逊收集了大约 204 个帖子，从 CNET 收集了 269 个帖子，产生的样本量足够高，可以在组之间进行统计比较。</p>
<br>
<h2 id="stage-3-定义构念">Stage-3: 定义构念</h2>
<p>信息处理领域的研究表明<strong>专家处理信息的方式与新手不同</strong>（Alba and Hutchinson 1987）。一般来说，</p>
<ul>
<li>专家们更多地从<strong>认知角度</strong>看待产品，评估产品属性而不是好处或用途（Maheswaran 和 Sternthal 1990；Maheswaran 等人 1996；Sujan 1985）。</li>
<li>新手只使用刻板印象信息，专家则使用属性信息和刻板印象线索（Maheswaran 1994）。</li>
<li>专家能够同化吸收适应信息的类别模糊性，这意味着专家能更快地适应新产品（Meyers-Levy 和 Tybout 1989）。</li>
<li>专家还倾向于以抽象的、更高的解释水平来进行判断（Hong and Sternthal 2010）。</li>
</ul>
<p>根据之前的研究，可以提出几个工作假设。我们希望进行的战略比较是关于专家与非专家如何评估产品以及这是否会随着时间而改变。首先，人们可能会期望专家会使用更多的认知语言，并且他们会更严格地评估设备。</p>
<p><strong>H1：专家会比新手使用更多的认知语言。</strong><br></p>
<p>其次，人们还期望专家会关注设备的功能，但非专家会更多地关注设备的使用（Maheswaran et al. 1996）。</p>
<p><strong>H2：专家会比非专家更多地讨论特征。</strong><br></p>
<p><strong>H3：非专家会比专家更多地讨论好处和用途。</strong><br></p>
<p>第三，随着时间的推移，人们可能会预测专家将能够吸收模棱两可的产品功能(属性)，而非专家则不会。因为专家可以更容易地处理模棱两可的类别信息，并且由于他们具有更高的解释水平，所以人们会预测他们比新手更喜欢这种模棱两可的产品，并且会学会吸收模棱两可的信息。例如，在这种情况下，设备的存储空间使其难以分类（手机与 mp3 播放器）。人们会期望专家会更快地理解这种模糊性，并且随着时间的推移，他们对这一特征的阐述会减少。</p>
<p><strong>H4：随着时间的推移，专家将较少谈论模棱两可的属性（例如，存储空间），而非专家将继续讨论模棱两可的属性。</strong><br>最后，先前的研究表明，这些关注点的差异，专家在功能上和非专家在利益方面的差异，会对产品评级产生不同的影响.也就是说，非专家的评级将取决于对娱乐等福利的评估，但专家评级将更多地受到特征的影响。</p>
<p><strong>H5：评级将由非专家的利益驱动。</strong><br></p>
<p><strong>H6：评级将由专家的特征驱动。</strong><br></p>
<p>这些只是在线口碑传播分析中可以探索的众多潜在假设中的一小部分。人们同样可以探索新技术的文化框架（Giesler 2008）或通过与博主进行产品评论来共同制作品牌传播（Kozinets 2010）。这里提出的问题——随着时间的推移，专家对新产品的反应是否与非专家不同？ – 旨在说明使用自动文本分析可以做什么，而不是对专业知识的心理属性进行严格测试。</p>
<Br>
<p>在这个说明性案例中， H1 到 H6 的<strong>关键构念</strong>是已知的：<strong>专家和非专家、认知表达、情感、产品特征、收益</strong>。有一些构念的测量——认知语言和情感语言——可以通过已有的LIWC词典（Pennebaker et al. 2001）获得。然而，剩下的构念，如产品的特征和收益是特定于上下文的，需要专门构建字典。此外，可能还有其他特征将专家与非专家区分开来。因此，本研究的文本分析，我们<strong>采用词典法</strong>进行构念的测量。</p>
<br>
<h2 id="stage-4-构念测量">Stage-4: 构念测量</h2>
<p>对于此分析，Pennebaker 等人开发的标准 LIWC 词典。 (2001) 除了自定义字典外还使用了。Table3 显示了标准化和自定义词典中使用的类别。标准词典包括诸如“我”之类的人称代词的类别，诸如形容词之类的词类，诸如积极和消极情绪之类的心理测量学预先测试的类别，以及诸如休闲leisure、家庭family和与朋友相关的语言之类的内容相关类别。</p>
<p>开发一个自定义词典来识别此处产品口碑数据的类别。研究人员不考虑不区分网站来源，从2个网站各选 10 条评论进行开放式编码。然后，从每个网站再选择 10 条评论并添加编码，直到达到饱和（Weber 2005）。总之，开发自定义词典所需的子样本是 60 条评论，每个网站有 30 条，约占所有评论的 11%。创建了十四个类别，每个类别平均包含六个单词。</p>
<blockquote>
<p>这一步主要是构建与理论构念相适应的词典，通过不同构念的词表测量不同的构念。Table3中Category是不同的构念(Category)，对应的词表是Words，通过Words词语出现次数就能计算(测量)文本中不同构念(Category)。</p>
</blockquote>
<p>评论的定性分析显示，发帖者倾向于从功能或美学角度谈论产品。因此，为与特征（例如 GPS、相机、硬盘、电池）和美学（例如，锐利、干净、性感、时尚）相关的词创建了字典类别。发帖人还反复关注设备的容量、产品的成本，并报告了他们在使用产品时遇到的问题。为这些问题中的每一个都创建了类别。因为可能有一些研究人员对产品用途的兴趣，并且因为发帖人经常提到娱乐和工作相关用途，所以为每种用途创建了类别。包括“大”与“小”的类别是因为先前的社会学理论表明 iPod 的成功来自其提供的过剩产品——大屏幕、过剩容量等（Sennett 2006）。当提到竞争产品时，创建了两个类别来计算，无论是在 Apple 品牌内部还是外部。</p>
<p>字典类别由三位编码人员验证，他们建议包含和排除的单词。表 3 中可以找到每个字典类别的编码员之间的百分比一致性。<strong>alpha平均一致性为 90%</strong>。文本文件通过 LIWC 程序运行，首先使用标准字典，然后使用自定义字典。从三组数据创建了一个电子表格：<strong>(1) 直接从网站收集的评论数据（例如，发布日期、产品评级），(2) 标准字典的计算机结果， (3) 自定义词典计算结果</strong>。</p>
<div style="text-align: center;">
<figure >
    
        <img src="img/%e8%a1%a83.png" width="100%" />
    
    
</figure>
</div>
<p>例如测量评论文本的Social processes指标(词频)，实现计算的代码写法有很多种，以下仅为其中一种（代码仅供参考）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#构建的自定义词典(词表)</span>
<span class="n">socialProcessWords</span><span class="o">=</span> <span class="p">[</span><span class="s1">&#39;mate&#39;</span><span class="p">,</span> <span class="s1">&#39;talk&#39;</span><span class="p">,</span> <span class="s1">&#39;they&#39;</span><span class="p">,</span> <span class="s1">&#39;child&#39;</span><span class="p">]</span>

<span class="c1">#待分析的某条评论文本</span>
<span class="n">comment</span> <span class="o">=</span> <span class="s1">&#39;Jim and Jam have a new iTouch.They talk the iTouch is wonderful.&#39;</span>

<span class="c1">#构念测量方法(统计评论文本中自定义词典词语出现的总次数)</span>
<span class="k">def</span> <span class="nf">calculate_SocialProcess</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">words</span> <span class="o">=</span> <span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">socialProcessWords</span><span class="p">:</span>
            <span class="n">num</span><span class="o">=</span><span class="n">num</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">return</span> <span class="n">num</span>

<span class="c1">#返回运行结果</span>
<span class="n">socialProcessIndex</span> <span class="o">=</span> <span class="n">calculate_SocialProcess</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">comment</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;social process index is </span><span class="si">{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">socialProcessIndex</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2
</code></pre></div><h2 id="最后">最后</h2>
<p>对这篇案例感兴趣的童鞋可以直接阅读原文, 对**<a href="https://hidadeng.github.io/blog/management_python_course/">python网络爬虫文本分析</a>**感兴趣的童鞋，也可点击课程介绍。</p>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="参考文献">参考文献</h2>
<blockquote>
<p>Christian Homburg, Martin Klarmann, and Arnd Vomberg. 2022. <em>Handbook of Market Research</em>. Cham, Switzerland: Springer. <a href="https://search.ebscohost.com/login.aspx?direct=true&amp;db=edsebk&amp;AN=3112347&amp;lang=zh-cn&amp;site=eds-live">https://search.ebscohost.com/login.aspx?direct=true&amp;db=edsebk&amp;AN=3112347&amp;lang=zh-cn&amp;site=eds-live</a>.</p>
<p>Humphreys A. (2019) Automated Text Analysis. In: Homburg C., Klarmann M., Vomberg A. (eds) Handbook of Market Research. Springer, Cham. <a href="https://doi.org/10.1007/978-3-319-05542-8_26-1">https://doi.org/10.1007/978-3-319-05542-8_26-1</a></p>
<p>Humphreys, Ashlee, and Rebecca Jen-Hui Wang. &ldquo;Automated text analysis for consumer research.&rdquo; Journal of Consumer Research 44.6 (2018): 1274-1306.</p>
</blockquote>
<br>
<br>
<h1 id="广而告之">广而告之</h1>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>cntext库 |  Python文本分析包更新</title>
      <link>https://hidadeng.github.io/blog/cntext_simplification/</link>
      <pubDate>Fri, 01 Apr 2022 09:40:10 +0600</pubDate>
      
      <guid>/blog/cntext_simplification/</guid>
      <description>扩展词典、情感分析、可阅读性，内置9种情感词典，涵盖中英文</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/hidadeng/cntext"><img loading="lazy" src="https://img.shields.io/badge/cntext-%e4%b8%ad%e6%96%87%e6%96%87%e6%9c%ac%e5%88%86%e6%9e%90%e5%ba%93-orange?style=for-the-badge&amp;logo=appveyor" alt=""  />
</a></p>
<p><a href="version1.2.md">旧版cntext入口</a></p>
<p>中文文本分析库，可对文本进行词频统计、词典扩充、情绪分析、相似度、可读性等</p>
<ul>
<li><a href="https://github.com/hidadeng/cntext">github地址</a> <code>https://github.com/hidadeng/cntext</code></li>
<li><a href="https://pypi.org/project/cntext/">pypi地址</a>  <code>https://pypi.org/project/cntext/</code></li>
<li><a href="https://ke.qq.com/course/482241?tuin=163164df">视频课-<strong>Python网络爬虫与文本数据分析</strong></a></li>
</ul>
<p>功能模块含</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> <strong>stats</strong>  文本统计指标
<ul>
<li><input checked="" disabled="" type="checkbox"> 词频统计</li>
<li><input checked="" disabled="" type="checkbox"> 可读性</li>
<li><input checked="" disabled="" type="checkbox"> 内置pkl词典</li>
<li><input checked="" disabled="" type="checkbox"> <strong>情感分析</strong></li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> <strong>dictionary</strong> 构建词表(典)
<ul>
<li><input checked="" disabled="" type="checkbox"> Sopmi 互信息扩充词典法</li>
<li><input checked="" disabled="" type="checkbox"> W2Vmodels 词向量扩充词典法</li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> <strong>similarity</strong>   文本相似度
<ul>
<li><input checked="" disabled="" type="checkbox"> cos相似度</li>
<li><input checked="" disabled="" type="checkbox"> jaccard相似度</li>
<li><input checked="" disabled="" type="checkbox"> 编辑距离相似度</li>
</ul>
</li>
<li><input checked="" disabled="" type="checkbox"> <strong>mind.py</strong> 计算文本中的认知方向（态度、偏见）</li>
</ul>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install cntext
</code></pre></div><br>
<h2 id="quickstart">QuickStart</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">help</span><span class="p">(</span><span class="n">ct</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="nx">Help</span> <span class="nx">on</span> <span class="kn">package</span> <span class="nx">cntext</span><span class="p">:</span>

<span class="nx">NAME</span>
    <span class="nx">cntext</span>

<span class="nx">PACKAGE</span> <span class="nx">CONTENTS</span>
    <span class="nx">mind</span>
    <span class="nx">dictionary</span>
    <span class="nx">similarity</span>
    <span class="nx">stats</span>
</code></pre></div><br>
<h2 id="一stats">一、stats</h2>
<p>目前stats内置的函数有</p>
<ul>
<li><strong>readability</strong>  文本可读性</li>
<li><strong>term_freq</strong> 词频统计函数</li>
<li><strong>dict_pkl_list</strong>  获取cntext内置词典列表(pkl格式)</li>
<li><strong>load_pkl_dict</strong> 导入pkl词典文件</li>
<li><strong>sentiment</strong> 情感分析</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">term_freq</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Counter({&#39;看待&#39;: 1,
         &#39;网文&#39;: 1,
         &#39;作者&#39;: 1,
         &#39;黑客&#39;: 1,
         &#39;大佬&#39;: 1,
         &#39;盗号&#39;: 1,
         &#39;改文因&#39;: 1,
         &#39;万分&#39;: 1,
         &#39;惭愧&#39;: 1,
         &#39;停&#39;: 1})
</code></pre></div><br>
<h3 id="11--readability">1.1  readability</h3>
<p>文本可读性，指标越大，文章复杂度越高，可读性越差。</p>
<p>readability(text, lang=&lsquo;chinese&rsquo;)</p>
<ul>
<li>text: 文本字符串数据</li>
<li>lang: 语言类型，&ldquo;chinese&quot;或&quot;english&rdquo;，默认&quot;chinese&quot;</li>
</ul>
<p>**中文可读性 ** 算法参考自</p>
<blockquote>
<p>徐巍,姚振晔,陈冬华.中文年报可读性：衡量与检验[J].会计研究,2021(03):28-44.</p>
<ul>
<li>readability1 &mdash;每个分句中的平均字数</li>
<li>readability2  &mdash;每个句子中副词和连词所占的比例</li>
<li>readability3  &mdash;参考Fog Index， readability3=(readability1+readability2)×0.5</li>
</ul>
</blockquote>
<p>​</p>
<p>以上三个指标越大，都说明文本的复杂程度越高，可读性越差。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text1</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>


<span class="n">ct</span><span class="o">.</span><span class="n">readability</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;readability1&#39;: 28.0,
 &#39;readability2&#39;: 0.15789473684210525,
 &#39;readability3&#39;: 14.078947368421053}
</code></pre></div><br>
<p>句子中的符号变更会影响结果</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text2</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>
<span class="n">ct</span><span class="o">.</span><span class="n">readability</span><span class="p">(</span><span class="n">text2</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;readability1&#39;: 27.0,
 &#39;readability2&#39;: 0.16666666666666666,
 &#39;readability3&#39;: 13.583333333333334}
</code></pre></div><p><br><br></p>
<h3 id="12--term_freq">1.2  term_freq</h3>
<p>词频统计函数，返回Counter类型</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span> 

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;如何看待一网文作者被黑客大佬盗号改文，因万分惭愧而停更。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">term_freq</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Counter({&#39;看待&#39;: 1,
         &#39;网文&#39;: 1,
         &#39;作者&#39;: 1,
         &#39;黑客&#39;: 1,
         &#39;大佬&#39;: 1,
         &#39;盗号&#39;: 1,
         &#39;改文因&#39;: 1,
         &#39;万分&#39;: 1,
         &#39;惭愧&#39;: 1,
         &#39;停&#39;: 1})
</code></pre></div><br>
<h3 id="13-dict_pkl_list">1.3 dict_pkl_list</h3>
<p>获取cntext内置词典列表(pkl格式)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># 获取cntext内置词典列表(pkl格式)</span>
<span class="n">ct</span><span class="o">.</span><span class="n">dict_pkl_list</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;DUTIR.pkl&#39;,
 &#39;HOWNET.pkl&#39;,
 &#39;sentiws.pkl&#39;,
 &#39;ChineseFinancialFormalUnformalSentiment.pkl&#39;,
 &#39;ANEW.pkl&#39;,
 &#39;LSD2015.pkl&#39;,
 &#39;NRC.pkl&#39;,
 &#39;geninqposneg.pkl&#39;,
 &#39;HuLiu.pkl&#39;,
 &#39;AFINN.pkl&#39;,
 &#39;ADV_CONJ.pkl&#39;,
 &#39;LoughranMcDonald.pkl&#39;,
 &#39;STOPWORDS.pkl&#39;]
</code></pre></div><p>词典对应关系, 部分情感词典资料整理自 <a href="https://github.com/quanteda/quanteda.sentiment">quanteda.sentiment</a></p>
<table>
<thead>
<tr>
<th>pkl文件</th>
<th>词典</th>
<th>语言</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>DUTIR.pkl</td>
<td>大连理工大学情感本体库</td>
<td>中文</td>
<td>七大类情绪，<code>哀, 好, 惊, 惧, 乐, 怒, 恶</code></td>
</tr>
<tr>
<td>HOWNET.pkl</td>
<td>知网Hownet词典</td>
<td>中文</td>
<td>正面词、负面词</td>
</tr>
<tr>
<td>sentiws.pkl</td>
<td>SentimentWortschatz (SentiWS)</td>
<td>英文</td>
<td>正面词、负面词；<br>效价</td>
</tr>
<tr>
<td>ChineseFinancialFormalUnformalSentiment.pkl</td>
<td>金融领域正式、非正式；积极消极</td>
<td>中文</td>
<td>formal-pos、<br>formal-neg；<br>unformal-pos、<br>unformal-neg</td>
</tr>
<tr>
<td>ANEW.pkl</td>
<td>英语单词的情感规范Affective Norms for English Words (ANEW)</td>
<td>英文</td>
<td>词语效价信息</td>
</tr>
<tr>
<td>LSD2015.pkl</td>
<td>Lexicoder Sentiment Dictionary (2015)</td>
<td>英文</td>
<td>正面词、负面词</td>
</tr>
<tr>
<td>NRC.pkl</td>
<td>NRC Word-Emotion Association Lexicon</td>
<td>英文</td>
<td>细粒度情绪词；</td>
</tr>
<tr>
<td>geninqposneg.pkl</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>HuLiu.pkl</td>
<td>Hu&amp;Liu (2004)正、负情感词典</td>
<td>英文</td>
<td>正面词、负面词</td>
</tr>
<tr>
<td>AFINN.pkl</td>
<td>尼尔森 (2011) 的“新 ANEW”效价词表</td>
<td>英文</td>
<td>情感效价信息valence</td>
</tr>
<tr>
<td>LoughranMcDonald.pkl</td>
<td>会计金融LM词典</td>
<td>英文</td>
<td>金融领域正、负面情感词</td>
</tr>
<tr>
<td>ADV_CONJ.pkl</td>
<td>副词连词</td>
<td>中文</td>
<td></td>
</tr>
<tr>
<td>STOPWORDS.pkl</td>
<td></td>
<td>中、英</td>
<td>停用词</td>
</tr>
</tbody>
</table>
<h3 id="注意">注意:</h3>
<ul>
<li>
<p>如果用户情绪分析时使用DUTIR词典发表论文，请在论文中添加诸如“使用了大连理工大学信息检索研究室的情感词汇本体” 字样加以声明。参考文献中加入引文“徐琳宏,林鸿飞,潘宇,等.情感词汇本体的构造[J]. 情报学报, 2008, 27(2): 180-185.”</p>
</li>
<li>
<p>如果大家有制作的词典，可以上传至百度网盘，并在issue中留下词典的网盘链接。如词典需要使用声明，可连同文献出处一起issue</p>
</li>
</ul>
<br>
<h3 id="14-load_pkl_dict">1.4 load_pkl_dict</h3>
<p>导入pkl词典文件，返回字典样式数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1"># 导入pkl词典文件,</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;DUTIR.pkl&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;DUTIR&#39;: {&#39;哀&#39;: [&#39;怀想&#39;, &#39;治丝而棼&#39;, ...],
           &#39;好&#39;: [&#39;进贤黜奸&#39;, &#39;清醇&#39;, &#39;放达&#39;, ...], 
           &#39;惊&#39;: [&#39;惊奇不已&#39;, &#39;魂惊魄惕&#39;, &#39;海外奇谈&#39;,...],
           &#39;惧&#39;: [&#39;忸忸怩怩&#39;, &#39;谈虎色变&#39;, &#39;手忙脚乱&#39;, &#39;刿目怵心&#39;,...],
           &#39;乐&#39;: [&#39;百龄眉寿&#39;, &#39;娱心&#39;, &#39;如意&#39;, &#39;喜糖&#39;,...],
           &#39;怒&#39;: [&#39;饮恨吞声&#39;, &#39;扬眉瞬目&#39;,...],
           &#39;恶&#39;: [&#39;出逃&#39;, &#39;鱼肉百姓&#39;, &#39;移天易日&#39;,]
           }
</code></pre></div><br>
<h3 id="15-sentiment">1.5 sentiment</h3>
<p>sentiment(text, diction, lang=&lsquo;chinese&rsquo;)
使用diy词典进行情感分析，计算各个情绪词出现次数; 未考虑强度副词、否定词对情感的复杂影响，</p>
<ul>
<li>text:  待分析中文文本</li>
<li>diction:  情感词字典；</li>
<li>lang: 语言类型，&ldquo;chinese&quot;或&quot;english&rdquo;，默认&quot;chinese&quot;</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;我今天得奖了，很高兴，我要将快乐分享大家。&#39;</span>

<span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span>
             <span class="n">diction</span><span class="o">=</span><span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;DUTIR.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;DUTIR&#39;</span><span class="p">],</span>
             <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;哀_num&#39;: 0,
 &#39;好_num&#39;: 0,
 &#39;惊_num&#39;: 0,
 &#39;惧_num&#39;: 0,
 &#39;乐_num&#39;: 2,
 &#39;怒_num&#39;: 0,
 &#39;恶_num&#39;: 0,
 &#39;stopword_num&#39;: 8,
 &#39;word_num&#39;: 14,
 &#39;sentence_num&#39;: 1}
</code></pre></div><p>如果不适用pkl词典，可以自定义自己的词典，例如</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">diction</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;pos&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;高兴&#39;</span><span class="p">,</span> <span class="s1">&#39;快乐&#39;</span><span class="p">,</span> <span class="s1">&#39;分享&#39;</span><span class="p">],</span>
           <span class="s1">&#39;neg&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;难过&#39;</span><span class="p">,</span> <span class="s1">&#39;悲伤&#39;</span><span class="p">],</span>
           <span class="s1">&#39;adv&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;很&#39;</span><span class="p">,</span> <span class="s1">&#39;特别&#39;</span><span class="p">]}</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;我今天得奖了，很高兴，我要将快乐分享大家。&#39;</span>
<span class="n">ct</span><span class="o">.</span><span class="n">sentiment</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
             <span class="n">diction</span><span class="o">=</span><span class="n">diction</span><span class="p">,</span> 
             <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;pos_num&#39;: 3,
 &#39;neg_num&#39;: 0,
 &#39;adv_num&#39;: 1,
 &#39;stopword_num&#39;: 8,
 &#39;word_num&#39;: 14,
 &#39;sentence_num&#39;: 1}
</code></pre></div><p><br><br></p>
<h2 id="二dictionary">二、dictionary</h2>
<p>本模块用于构建词表(典),含</p>
<ul>
<li>SoPmi 共现法扩充词表(典)</li>
<li>W2VModels 词向量word2vec扩充词表(典)</li>
</ul>
<h3 id="21-sopmi-共现法">2.1 SoPmi 共现法</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="n">sopmier</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">SoPmi</span><span class="p">(</span><span class="n">cwd</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">(),</span>
                   <span class="n">input_txt_file</span><span class="o">=</span><span class="s1">&#39;data/sopmi_corpus.txt&#39;</span><span class="p">,</span>  <span class="c1">#原始数据，您的语料</span>
                   <span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/sopmi_seed_words.txt&#39;</span><span class="p">,</span> <span class="c1">#人工标注的初始种子词</span>
                   <span class="p">)</span>   

<span class="n">sopmier</span><span class="o">.</span><span class="n">sopmi</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step 1/4:...Preprocess   Corpus ...
Step 2/4:...Collect co-occurrency information ...
Step 3/4:...Calculate   mutual information ...
Step 4/4:...Save    candidate words ...
Finish! used 44.49 s
</code></pre></div><br>
<h3 id="22-w2vmodels-词向量">2.2 W2VModels 词向量</h3>
<p><strong>特别要注意代码需要设定lang语言参数</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="c1">#初始化模型,需要设置lang参数。</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2VModels</span><span class="p">(</span><span class="n">cwd</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">(),</span> 
                     <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>  <span class="c1">#语料数据 w2v_corpus.txt</span>
<span class="n">model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">input_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_corpus.txt&#39;</span><span class="p">)</span>


<span class="c1">#根据种子词，筛选出没类词最相近的前100个词</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/integrity.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/innovation.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/quality.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/respect.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
<span class="n">model</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">seedword_txt_file</span><span class="o">=</span><span class="s1">&#39;data/w2v_seeds/teamwork.txt&#39;</span><span class="p">,</span> 
           <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step 1/4:...Preprocess   corpus ...
Step 2/4:...Train  word2vec model
            used   174 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s
Step 3/4:...Prepare similar candidates for each seed word in the word2vec model...
Step 4/4 Finish! Used 187 s

</code></pre></div><br>
<h3 id="需要注意">需要注意</h3>
<p>训练出的w2v模型可以后续中使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">w2v</span><span class="o">.</span><span class="n">model路径</span><span class="p">)</span>
<span class="c1">#找出word的词向量</span>
<span class="c1">#w2v_model.get_vector(word)</span>
<span class="c1">#更多w2_model方法查看</span>
<span class="c1">#help(w2_model)</span>
</code></pre></div><p>例如本代码，运行生成的结果路径<code>output/w2v_candi_words/w2v.model</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s1">&#39;output/w2v_candi_words/w2v.model&#39;</span><span class="p">)</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">most_similar</span><span class="p">(</span><span class="s1">&#39;innovation&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;technology&#39;, 0.689210832118988),
 (&#39;infrastructure&#39;, 0.669672966003418),
 (&#39;resources&#39;, 0.6695448160171509),
 (&#39;talent&#39;, 0.6627111434936523),
 (&#39;execution&#39;, 0.6549549102783203),
 (&#39;marketing&#39;, 0.6533523797988892),
 (&#39;merchandising&#39;, 0.6504817008972168),
 (&#39;diversification&#39;, 0.6479553580284119),
 (&#39;expertise&#39;, 0.6446896195411682),
 (&#39;digital&#39;, 0.6326863765716553)]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#获取词向量</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;innovation&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([-0.45616838, -0.7799563 ,  0.56367606, -0.8570078 ,  0.600359  ,
       -0.6588043 ,  0.31116748, -0.11956959, -0.47599426,  0.21840936,
       -0.02268819,  0.1832016 ,  0.24452794,  0.01084935, -1.4213187 ,
        0.22840202,  0.46387577,  1.198386  , -0.621511  , -0.51598716,
        0.13352732,  0.04140598, -0.23470387,  0.6402956 ,  0.20394802,
        0.10799981,  0.24908689, -1.0117126 , -2.3168423 , -0.0402851 ,
        1.6886286 ,  0.5357047 ,  0.22932841, -0.6094084 ,  0.4515793 ,
       -0.5900931 ,  1.8684244 , -0.21056202,  0.29313338, -0.221067  ,
       -0.9535679 ,  0.07325   , -0.15823542,  1.1477109 ,  0.6716076 ,
       -1.0096023 ,  0.10605699,  1.4148282 ,  0.24576302,  0.5740349 ,
        0.19984631,  0.53964925,  0.41962907,  0.41497853, -1.0322098 ,
        0.01090925,  0.54345983,  0.806317  ,  0.31737605, -0.7965337 ,
        0.9282971 , -0.8775608 , -0.26852605, -0.06743863,  0.42815775,
       -0.11774074, -0.17956367,  0.88813037, -0.46279573, -1.0841943 ,
       -0.06798118,  0.4493006 ,  0.71962464, -0.02876493,  1.0282255 ,
       -1.1993176 , -0.38734904, -0.15875885, -0.81085825, -0.07678922,
       -0.16753489,  0.14065655, -1.8609751 ,  0.03587054,  1.2792674 ,
        1.2732009 , -0.74120265, -0.98000383,  0.4521185 , -0.26387128,
        0.37045383,  0.3680011 ,  0.7197629 , -0.3570571 ,  0.8016917 ,
        0.39243212, -0.5027844 , -1.2106236 ,  0.6412354 , -0.878307  ],
      dtype=float32)
</code></pre></div><p><br><br></p>
<h2 id="23-co_occurrence_matrix">2.3 co_occurrence_matrix</h2>
<p>词共现矩阵</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">documents</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;I go to school every day by bus .&#34;</span><span class="p">,</span>
         <span class="s2">&#34;i go to theatre every night by bus&#34;</span><span class="p">]</span>

<span class="n">ct</span><span class="o">.</span><span class="n">co_occurrence_matrix</span><span class="p">(</span><span class="n">documents</span><span class="p">,</span> 
                        <span class="n">window_size</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> 
                        <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;english&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="/Users/thunderhit/Desktop/Coding/Python/diyPython/cntext/img/co_occurrence1.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">documents2</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;编程很好玩&#34;</span><span class="p">,</span>
             <span class="s2">&#34;Python是最好学的编程&#34;</span><span class="p">]</span>

<span class="n">ct</span><span class="o">.</span><span class="n">co_occurrence_matrix</span><span class="p">(</span><span class="n">documents2</span><span class="p">,</span> 
                        <span class="n">window_size</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> 
                        <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="/Users/thunderhit/Desktop/Coding/Python/diyPython/cntext/img/co_occurrence2.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三similarity">三、similarity</h2>
<p>四种相似度计算函数</p>
<ul>
<li>cosine_sim(text1, text2)  cos余弦相似</li>
<li>jaccard_sim(text1, text2)     jaccard相似</li>
<li>minedit_sim(text1, text2)  最小编辑距离相似度；</li>
<li>simple_sim(text1, text2) 更改变动算法</li>
</ul>
<p>算法实现参考自 <code>Cohen, Lauren, Christopher Malloy, and Quoc Nguyen. Lazy prices. No. w25084. National Bureau of Economic Research, 2018.</code></p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span> 


<span class="n">text1</span> <span class="o">=</span> <span class="s1">&#39;编程真好玩编程真好玩&#39;</span>
<span class="n">text2</span> <span class="o">=</span> <span class="s1">&#39;游戏真好玩编程真好玩啊&#39;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">cosine_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">jaccard_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">minedit_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">simple_sim</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.82
0.67
2.00
0.87
</code></pre></div><p><br><br></p>
<h2 id="四text2mind">四、Text2Mind</h2>
<p>词嵌入中蕴含着人类的认知信息，以往的词嵌入大多是比较一个概念中两组反义词与某对象的距离计算认知信息。</p>
<p>- <strong>多个对象在某概念的远近</strong>，职业与性别，某个职业是否存在亲近男性，而排斥女性</p>
<p>- 多个对象在某<strong>概念的分量(fen，一声)的多少</strong>， 人类语言中留存着对不同动物体积的认知记忆，如小鼠大象。动物词在词向量空间中是否能留存着这种大小的记忆</p>
<p>这两种认知分别可以用向量距离、向量语义投影计算得来。</p>
<ul>
<li>tm.sematic_distance(words, c_words1, c_words2)  向量距离</li>
<li>tm.sematic_projection(words, c_words1, c_words2)  向量语义投影</li>
</ul>
<h3 id="41-tmsematic_distancewords-c_words1-c_words2">4.1 tm.sematic_distance(words, c_words1, c_words2)</h3>
<p>分别计算words与c_words1、c_words2语义距离，返回距离差值。</p>
<p>例如</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">male_concept = [&#39;male&#39;, &#39;man&#39;, &#39;he&#39;, &#39;him&#39;]
female_concept = [&#39;female&#39;, &#39;woman&#39;, &#39;she&#39;, &#39;her&#39;]
software_engineer_concept  = [&#39;engineer&#39;,  &#39;programming&#39;,  &#39;software&#39;]
d1 = distance(male_concept,  software_engineer_concept)
d2 = distance(female_concept,  software_engineer_concept)
</code></pre></div><p>如果d1-d2&lt;0，说明在语义空间中，software_engineer_concept更接近male_concept，更远离female_concept。</p>
<p>换言之，在该语料中，人们对软件工程师这一类工作，对女性存在刻板印象(偏见)。</p>
<p><strong>下载glove_w2v.6B.100d.txt</strong>链接: <a href="https://pan.baidu.com/s/1MMfQ7M0YCzL9Klp4zrlHBw">https://pan.baidu.com/s/1MMfQ7M0YCzL9Klp4zrlHBw</a> 提取码: 72l0</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#Note: this is a word2vec format model</span>
<span class="n">tm</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">Text2Mind</span><span class="p">(</span><span class="n">w2v_model_path</span><span class="o">=</span><span class="s1">&#39;glove_w2v.6B.100d.txt&#39;</span><span class="p">)</span>

<span class="n">engineer</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;program&#39;</span><span class="p">,</span> <span class="s1">&#39;software&#39;</span><span class="p">,</span> <span class="s1">&#39;computer&#39;</span><span class="p">]</span>
<span class="n">mans</span> <span class="o">=</span>  <span class="p">[</span><span class="s2">&#34;man&#34;</span><span class="p">,</span> <span class="s2">&#34;he&#34;</span><span class="p">,</span> <span class="s2">&#34;him&#34;</span><span class="p">]</span>
<span class="n">womans</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;woman&#34;</span><span class="p">,</span> <span class="s2">&#34;she&#34;</span><span class="p">,</span> <span class="s2">&#34;her&#34;</span><span class="p">]</span>

<span class="c1">#在语义空间中，工程师更接近于男人，而不是女人。</span>
<span class="c1">#in semantic space, engineer is closer to man, other than woman.</span>
<span class="n">tm</span><span class="o">.</span><span class="n">sematic_distance</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">animals</span><span class="p">,</span> 
                    <span class="n">c_words1</span><span class="o">=</span><span class="n">mans</span><span class="p">,</span> 
                    <span class="n">c_words2</span><span class="o">=</span><span class="n">womans</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">-0.38
</code></pre></div><br>
<h3 id="42-tmsematic_projectionwords-c_words1-c_words2">4.2 tm.sematic_projection(words, c_words1, c_words2)</h3>
<p><strong>语义投影</strong>，根据两组反义词c_words1, c_words2构建一个概念(认知)向量, words中的每个词向量在概念向量中投影，即可得到认知信息。</p>
<p>分值越大，word越位于c_words2一侧。</p>
<p>下图是语义投影示例图，本文算法和图片均来自 &ldquo;Grand, G., Blank, I.A., Pereira, F. and Fedorenko, E., 2022. Semantic projection recovers rich human knowledge of multiple object features from word embeddings. <em>Nature Human Behaviour</em>, pp.1-13.&rdquo;</p>
<p><img loading="lazy" src="img/Nature_Semantic_projection_recovering_human_knowledge_of.png" alt=""  />
</p>
<p>例如，人类的语言中，存在尺寸、性别、年龄、政治、速度、财富等不同的概念。每个概念可以由两组反义词确定概念的向量方向。</p>
<p>以尺寸为例，动物在人类认知中可能存在体积尺寸大小差异。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">animals</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;mouse&#39;</span><span class="p">,</span> <span class="s1">&#39;cat&#39;</span><span class="p">,</span> <span class="s1">&#39;horse&#39;</span><span class="p">,</span>  <span class="s1">&#39;pig&#39;</span><span class="p">,</span> <span class="s1">&#39;whale&#39;</span><span class="p">]</span>
<span class="n">smalls</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;small&#34;</span><span class="p">,</span> <span class="s2">&#34;little&#34;</span><span class="p">,</span> <span class="s2">&#34;tiny&#34;</span><span class="p">]</span>
<span class="n">bigs</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;large&#34;</span><span class="p">,</span> <span class="s2">&#34;big&#34;</span><span class="p">,</span> <span class="s2">&#34;huge&#34;</span><span class="p">]</span>

<span class="c1"># In size conception, mouse is smallest, horse is biggest.</span>
<span class="c1"># 在大小概念上，老鼠最小，马是最大的。</span>
<span class="n">tm</span><span class="o">.</span><span class="n">sematic_projection</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">animals</span><span class="p">,</span> 
                      <span class="n">c_words1</span><span class="o">=</span><span class="n">smalls</span><span class="p">,</span> 
                      <span class="n">c_words2</span><span class="o">=</span><span class="n">bigs</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;mouse&#39;, -1.68),
 (&#39;cat&#39;, -0.92),
 (&#39;pig&#39;, -0.46),
 (&#39;whale&#39;, -0.24),
 (&#39;horse&#39;, 0.4)]
</code></pre></div><p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>营销科技 | 今天出门穿什么？时尚电商Stitch Fix</title>
      <link>https://hidadeng.github.io/blog/stitchfix/</link>
      <pubDate>Sun, 27 Mar 2022 10:43:10 +0600</pubDate>
      
      <guid>/blog/stitchfix/</guid>
      <description>“穿衣服是大学问”，不相信可以问问很多女生，每天出门前会不会为了今天要穿什麽衣服而伤脑筋？现在如果有一家公司帮您聘请一个专属的“穿衣顾问”，只在一开始收费120多元（二十块美金）的造型费，然后定期寄来已经帮您量身打造的时尚服饰，您愿意买单吗？不瞒您说，目前全世球已有三百五十万人接受美国一家叫做“Stitch Fix”的穿衣时尚订阅公司的服务。</description>
      <content:encoded><![CDATA[<blockquote>
<ul>
<li>作者：蘇宇暉（台科大管研所博士候選人）、羅凱揚（台科大企管系博士）</li>
<li>日期: 2020-12-14</li>
<li>绘图：彭煖蘋</li>
<li>出处: <a href="https://medium.com/marketingdatascience/%E6%99%82%E5%B0%9A%E9%9B%BB%E5%95%86stitch-fix-6aed7636b2c9">medium</a></li>
</ul>
</blockquote>
<br>
<p>“穿衣服是大学问”，不相信可以问问很多女生，每天出门前会不会为了今天要穿什麽衣服而伤脑筋？现在如果有一家公司帮您聘请一个专属的“穿衣顾问”，只在一开始收费120多元（二十块美金）的造型费，然后定期寄来已经帮您量身打造的时尚服饰，您愿意买单吗？不瞒您说，目前全世球已有三百五十万人接受美国一家叫做“Stitch Fix”的穿衣时尚订阅公司的服务。</p>
<div style="text-align: center;">
<figure >
    <a href="https://www.stitchfix.com/">
        <img src="img/StitchFix.png" width="100%" />
    </a>
    <figcaption><small><i>点击浏览Stitch Fix网站</i></small></figcaption>
</figure>
</div>
<p>2011年6月，刚从哈佛大学商学院毕业的美日混血儿<strong>卡翠娜‧雷克</strong>（Katrina Lake），在美国旧金山成立时尚电商公司Stitch Fix。满脑子有趣想法的雷克，透过募集到的五十万美金，开始了她的创业之旅。短短不到七年的时间，到了2017年11月，Stitch Fix在美国Nasdaq上市。而卡翠娜‧雷克本人也成为2019年《福布斯》全美白手起家女富豪排行榜中的55名。</p>
<p><strong>Stitch Fix的背后，其实是一家充分利用营销研究和营销数据科学，同时提供“穿衣时尚订阅”服务的新创公司。现在让我们来看看，Stitch Fix如何运作</strong>，如图-1所示。</p>
<div style="text-align: center;">
<figure >
    <a href="https://www.stitchfix.com/">
        <img src="img/StitchFix%e8%bf%90%e4%bd%9c.png" width="100%" />
    </a>
    <figcaption><small><i>图-1 StitchFix运作</i></small></figcaption>
</figure>
</div>
<p>消费者在登录Stitch Fix的网站首页时，不会看到像其他购物网站会有太多的商品展示，反而是<strong>介绍穿衣风格才是重点</strong>。而<strong>网站会有造型师来塑造消费者的风格，并且透过这种新的购物方式力邀消费者加入会员</strong>。因此，当消费者在Stitch Fix的网站注册时，Stitch Fix会请会员填答一份详细的问卷，包括顾客的<strong>基本资料、身高、尺码、喜欢的颜色、风格、经常出席的场合、甚至是预算</strong>等。</p>
<p>接著，Stitch Fix每个月就会透过一个称为“<strong>订购盒子</strong>（Subscription Box）”的包裹，一次将五件服饰寄送给顾客。等到消费者收到包裹时，可以留下觉得满意的服饰，看不上眼或者不满意的服饰就再寄回给Stitch Fix。如果消费者将服饰全部留下，就会享受到折扣，反之，如果一件都不想买，就负担二十美元的包裹服务费。</p>
<p>在美国，消费者要买衣服，往往得开车到购物中心或百货公司，买个两三件衣服总要花上半天时间。Stitch Fix一次寄来五件衣服（连同一张纸本问卷），其实也经过精算，因为如果一次寄太多件，消费者心理和预算上都难以承受。而Stitch Fix透过消费者所填答的电脑和纸本问卷，以及购买与退换货记录，利用机器学习算法对消费者喜好与需求进行预测，并结合设计师的搭配，给消费者定制化的建议。因为喜欢的衣服被留下，不喜欢的退回，Stitch Fix就很容易利用这些大量数据建立起消费者穿衣风格的“模型”。</p>
<p>而为了进一步收集到更精准的数据，2017年，Stitch Fix推出了一款Style Shuffle的小游戏，让顾客针对不同的服饰或配件，简单回应喜爱或是不喜爱。借此更进一步收集消费者的偏好，并增加消费者的粘性。Stitch Fix后来并将触角伸向男性服饰以及儿童服饰。而大尺码的女性服饰更是其服务重点。</p>
<p>通过收集大量消费者用户数据，以及不断优化的模型算法，并结合个人造型师和机器学习（AI）进行个性化推荐，让Stitch Fix的时尚订阅制服务，能够更精准地预测与满足消费者偏好的服饰及配件。据了解，截至2019年，该公司拥有8,000名员工，其中包括5,100名造型师和100多名数据科学家。</p>
<p>从以上Stitch Fix的故事中，我们看到了营销研究与数据科学的完美搭配。</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>即将开班 | 2022Python数据挖掘寒假工作坊</title>
      <link>https://hidadeng.github.io/blog/2022_1st_workshop/</link>
      <pubDate>Sat, 15 Jan 2022 15:43:10 +0600</pubDate>
      
      <guid>/blog/2022_1st_workshop/</guid>
      <description>大数据时代，网络数据成为各方学者亟待挖掘的潜在宝藏，大量商业信息、社会信息以文本等非结构化、异构型数据格式存储于海量的网页中。那么对于经管为代表的人文社科类专业科研工作者而言，通过Python可以帮助学者解决使用Web数据进行科研面临的两个问题： 网络爬虫技术解决 如何从网络世界中高效地采集数据？文本分析技术解决如何从杂乱的文本数据中抽取文本信息(变量)？</description>
      <content:encoded><![CDATA[<h2 id="python网络爬虫与文本分析">Python网络爬虫与文本分析</h2>
<br>
<h2 id="工作坊基本信息">工作坊基本信息</h2>
<ul>
<li><strong>2000元</strong></li>
<li>2021年1月21-22日</li>
<li>小鹅通平台(线上直播）</li>
<li>每天6小时（8:30 — 11:30；14:00 — 17:00）+ 30分钟答疑</li>
</ul>
<br>
<h2 id="报名咨询">报名咨询</h2>
<ul>
<li>17816181460（同微信）（汪老师）</li>
<li>单位：杭州国商智库信息技术服务有限公司</li>
<li>开户银行： 中国银行杭州大学城支行</li>
<li>银行账户：6232636200100260588</li>
</ul>
<br>
<h2 id="课程纲要">课程纲要</h2>
<ul>
<li><strong>课程目标：</strong> 掌握Python语法、网络爬虫、文本分析、机器学习的核心知识点和分析思路</li>
<li><strong>核心知识点：</strong> 爬虫原理及应用、 非结构化文本数据挖掘的思路及方法、机器学习应用等</li>
<li><strong>环境配置:</strong>  安装anaconda，注意安装过程中勾选<strong>Add Anaconda to the system Path environment variable</strong>、<strong>Register Anaconda as the system python 3.x</strong></li>
<li><strong>课件资料：</strong> 本课程全部使用jupyter notebook文件作为课程课件，开课前会将<strong>代码数据等相关资料</strong>发给各位</li>
</ul>
<br>
<h2 id="课程特色">课程特色</h2>
<ul>
<li><strong>接地气：</strong> 以经管学术需求为导向， 将Python分为语法篇、采集数据篇、文本分析篇、机器学习篇四大部分</li>
<li><strong>好理解：</strong> 知识点力求通俗易懂，少了晦涩的计算机术语，多了通俗易懂的使用场景和实战讲解</li>
<li><strong>上手快：</strong> 所有知识点均有可重复使用的代码块，犹如一块块的积木，课后您可以根据分析需要，快速搭建出自己的Python代码</li>
</ul>
<p><br><br></p>
<h2 id="课程目录">课程目录</h2>
<p>在科学研究中，数据的获取及分析是最重要的也是最棘手的两个环节！</p>
<p>在<strong>前大数据时代</strong>，一般使用实验法、调查问卷、访谈或者二手数据等方式，将数据整理为结构化的表格数据，之后再使用各种计量分析方法，对这些表格数据进行分析。但<strong>大数据时代</strong>，网络数据成为各方学者亟待挖掘的潜在宝藏，大量商业信息、社会信息以文本等非结构化、异构型数据格式存储于海量的网页中。那么对于经管为代表的人文社科类专业科研工作者而言，通过Python可以帮助学者解决使用Web数据进行科研面临的两个问题：</p>
<ol>
<li><strong>网络爬虫技术</strong> 解决 如何从网络世界中高效地 <strong>采集数据</strong>？</li>
<li><strong>文本分析技术</strong> 解决 如何从杂乱的文本数据中<strong>抽取文本信息(变量)</strong>？</li>
</ol>
<p><br><br></p>
<h2 id="一python语法入门">一、Python语法入门</h2>
<ul>
<li>Python跟英语一样是一门语言</li>
<li>数据类型之字符串</li>
<li>数据类型之列表元组集合</li>
<li>数据类型之字典</li>
<li>数据类型之布尔值、None</li>
<li>逻辑语句(if&amp;for&amp;tryexcept)</li>
<li>列表推导式</li>
<li>理解函数</li>
<li>常用的内置函数</li>
<li>内置库os路径库</li>
<li>内置库csv文件库</li>
<li>常见错误汇总</li>
</ul>
<br>
<h2 id="二数据采集">二、数据采集</h2>
<ul>
<li>网络爬虫原理</li>
<li>寻找网址规律</li>
<li>获取网页-requests库</li>
<li>pyquery库解析html网页</li>
<li><strong>案例 1</strong>：豆瓣/大众点评</li>
<li>json库解析json网页</li>
<li><strong>案例 2</strong>： 知乎</li>
<li><strong>案例 3</strong>： 百度地图POI地点检索</li>
<li><strong>案例 4：</strong> 下载文档、多媒体文件</li>
<li><strong>案例 5</strong>：上市公司定期报告pdf批量下载</li>
<li>简易爬虫库smartscraper（了解）</li>
<li>区分动态网站与静态网站</li>
</ul>
<br>
<h2 id="三初识文本分析">三、初识文本分析</h2>
<ul>
<li>文本分析在经管领域中的应用</li>
<li>读取文件中的数据(txt、xlsx、csv)</li>
<li>数据清洗re库-从文本中抽取姓名、年龄、电话、数字等各种信息</li>
<li><strong>案例 6</strong>：将多个txt文件整理到一个excel中</li>
<li>jieba分词包</li>
<li>spacy包</li>
<li><strong>案例 7</strong>：词频统计&amp;制作词云图</li>
<li><strong>案例 8</strong>：金融文本语调（正式、非正式）分析</li>
<li><strong>案例 9</strong>： 扩展情感词典- 共现法</li>
<li><strong>案例 10：</strong> 扩展情感词典- 词向量word2vec</li>
<li><strong>案例 11：</strong> 文本情感分析</li>
<li>数据分析pandas库快速入门</li>
<li><strong>案例 12</strong>：使用pandas对excel中的文本进行情感分析</li>
</ul>
<br>
<h2 id="四机器学习与文本分析">四、机器学习与文本分析</h2>
<ul>
<li>了解机器学习</li>
<li>使用机器学习做文本分析的流程</li>
<li>scikit-learn机器学习库简介</li>
<li>文本特征工程-将文本转化为机器可处理的数字向量</li>
<li>认识词袋法、one-hot、tf-idf、word2vec</li>
<li><strong>案例 13</strong>： 文本情感分析（带权重tf-idf&amp;情感词典）</li>
<li><strong>案例 14：</strong> 文本数据标注工具</li>
<li><strong>案例 15：</strong> 在线评论文本分类</li>
<li>文本相似性计算</li>
<li><strong>案例 15</strong>：使用文本相似性识别变化(政策连续性)</li>
<li><strong>案例 16</strong>：Kmeans聚类算法</li>
<li><strong>案例 17</strong>：LDA话题模型</li>
<li><strong>案例 18</strong>：使用预训练BERT词向量模型做主题分析</li>
<li><strong>案例 19:</strong>  识别图片中的文本</li>
<li>python爬虫、文本分析、机器学习等技术在论文中的应用赏析</li>
</ul>
<br>
<h2 id="工作坊基本信息-1">工作坊基本信息</h2>
<ul>
<li><strong>2000元</strong></li>
<li>2021年1月21-22日</li>
<li>小鹅通平台(线上直播）</li>
<li>每天6小时（8:30 — 11:30；14:00 — 17:00）+ 30分钟答疑</li>
</ul>
<br>
<h2 id="报名咨询-1">报名咨询</h2>
<ul>
<li>17816181460（同微信）（汪老师）</li>
<li>单位：杭州国商智库信息技术服务有限公司</li>
<li>开户银行： 中国银行杭州大学城支行</li>
<li>银行账户：6232636200100260588</li>
</ul>
<br>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="90%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="相关论文">相关论文</h2>
<p>参照论文的摘要，可以通过场景化等的方式帮助我们迅速理解上面两个问题。加粗内容是论文用到了python技术，在我们的课程中均有与之对应的知识点和代码。</p>
<p><strong>蔡庆丰,陈熠辉,林焜.信贷资源可得性与企业创新:激励还是抑制?——基于银行网点数据和金融地理结构的微观证据[J].经济研究,2020,v.55;No.637(10):124-140.</strong></p>
<blockquote>
<p>结合银行和企业的地理位置数据,<strong>运用Python编写的基于百度地图API的地理坐标匹配系统</strong>,获取上市公司办公地点周围的银行网点数量。</p>
</blockquote>
<br>
<p><strong>王伟,陈伟,祝效国,王洪伟.众筹融资成功率与语言风格的说服性——基于Kickstarter的实证研究[J].管理世界,2016(05):81-98.</strong></p>
<blockquote>
<p><strong>摘要</strong>：众筹融资效果决定着众筹平台的兴衰。 众筹行为很大程度上是由投资者的主观因素决定的，而影响主观判断的一个重要因素就是语言的说服性。 而这又是一种典型的用 户产生内容（UGC），项目发起者可以采用任意类型的语言风格对项目进行描述。 不同的语 言风格会改变投资者对项目前景的感知，进而影响他们的投资意愿。
首先，依据 Aristotle 修 辞三元组以及 Hovland 说服模型，采用扎根理论，将众筹项目的语言说服风格分为 5 类：诉诸可信、诉诸情感、诉诸逻辑、诉诸回报和诉诸夸张。</p>
<p>然后，<strong>借助文本挖掘方法，构建说服风格语料库，并对项目摘要进行分类。</strong></p>
<p>最后，建立语言说服风格对项目筹资影响的计量模型，并对 <strong>Kickstarter 平台上的 128345 个项目进行实证分析</strong>。 总体来说，由于项目性质的差异，不同 的项目类别对应于不同的最佳说服风格。</p>
</blockquote>
<br>
<p><strong>胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.</strong></p>
<blockquote>
<p>在可持续发展战略导向下，秉持长远理念是企业抵御外部环境威胁和拥有可持续经营能力的基 石。 然而，作为企业掌舵人的管理者并非都具有长远的目光。 本文基于高层梯队理论和社会心理学中的时间 导向理论，提出了管理者内在的短视主义特质与企业资本支出和研发支出的关系，并<strong>采用文本分析和机器学习技术构建出管理者短视主义指标从而对其进行实证检验</strong>。 研究结果发现，<strong>年报 MD&amp;A 中披露的“短期视域” 语言</strong> 能够反映管理者内在的短视主义特质，管理者短视会导致企业减少资本支出和研发支出。 当公司治理水平、监督型机构投资者的持股比例以及分析师关注度越高时，管理者短视主义对这些长期投资的负向影响越易受到抑制。 最终，管理者短视主义导致的研发支出减少和资本投资效率降低会损害企业的未来绩效。 本文拓宽了管理者短视主义的行为后果分析，对企业高层次管理人才的聘任以及企业和政府的监管具有重要的实践启示。<strong>同时，本文将文本分析和机器学习方法引入管理者短视主义的研究，为未来该领域的研究提供了参考和借鉴。</strong></p>
</blockquote>
<br>
<p><strong>姚加权,冯绪,王赞钧,纪荣嵘,张维.语调、情绪及市场影响:基于金融情绪词典[J].管理科学学报,2021,24(05):26-46.</strong></p>
<blockquote>
<p>金融文本的语调与情绪含有上市公司管理层以及个体投资者表达的情感信息 ， 并对股票市场产生影响 。 通过词典重组和深度学习算法构建了适用于<strong>正式文本</strong> 与 <strong>非正式文本</strong>的金融领域 <strong>中文情绪词典</strong>，并基于词典构建了上市公司的年报语调和社交媒体情绪指标构建的年报语调指标和社交媒体情绪指标能有效地预测上市公司股票的收益率 、成交量波动率和非预期盈余等市场因素 ， 并优于基于其他广泛使用情绪词典构建的指标。此外，年报语调指标和社交媒体情绪指标对上市公司的股价崩盘风险具有显著的预测作用。为文本大数据在金融市场的 应用提供了分析工具 ，也为大数据时代的金融市场预测和监管等活动提供了决策支持 。</p>
</blockquote>
<br>
<p><strong>Wang, Quan, Beibei Li, and Param Vir Singh. &ldquo;Copycats vs. original mobile apps: A machine learning copycat-detection method and empirical analysis.&rdquo; <em>Information Systems Research</em> 29, no. 2 (2018): 273-291.</strong></p>
<blockquote>
<p><strong>摘要:</strong> 尽管移动应用程序市场的增长为移动应用程序开发人员创新提供了巨大的市场机会和经济诱因，但它也不可避免地刺激了模仿者开发盗版软件。原始应用的从业人员和开发人员声称，模仿者窃取了原始应用的想法和潜在需求，并呼吁应用平台对此类模仿者采取行动。令人惊讶的是，很少有严格的研究来分析模仿者是否以及如何影响原始应用的需求。</p>
<p><strong>进行此类研究的主要威慑因素是缺乏一种客观的方法来识别应用程序是模仿者还是原创者。通过结合自然语言处理，潜在语义分析，基于网络的聚类和图像分析等机器学习技术，我们提出了一种将应用识别为原始或模仿者并检测两种模仿者的方法：欺骗性和非欺骗性。</strong></p>
<p>根据检测结果，我们进行了经济计量分析，以确定五年间在iOS App Store中发布的<strong>5,141个开发人员的10,100个动作游戏应用程序</strong>样本中，模仿应用程序对原始应用程序需求的影响。我们的结果表明，特定模仿者对原始应用需求的影响取决于模仿者的质量和欺骗程度。高质量的非欺骗性复制品会对原件产生负面影响。相比之下，低质量，欺骗性的模仿者正面影响了对原件的需求。</p>
<p>结果表明，从总体上讲，模仿者对原始移动应用程序需求的影响在统计上是微不足道的。<strong>我们的研究通过提供一种识别模仿者的方法</strong>，并提供模仿者对原始应用需求的影响的证据，为越来越多的移动应用消费文献做出了贡献。</p>
</blockquote>
<br>
<br>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="90%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="相关论文汇总">相关论文汇总</h2>
<p>[1]沈艳,陈赟,黄卓.文本大数据分析在经济学和金融学中的应用:一个文献综述[J].经济学(季刊),2019,18(04):1153-1186.</p>
<p>[2]王伟,陈伟,祝效国,王洪伟. 众筹融资成功率与语言风格的说服性-基于Kickstarter的实证研究.<em>管理世界</em>.2016;5:81-98.</p>
<p>[3]胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.</p>
<p>[4]Kai Li, Feng Mai, Rui Shen, Xinyan Yan, Measuring Corporate Culture Using Machine Learning, <em>The Review of Financial Studies</em>,2020</p>
<p>[5]Kenneth Benoit. July 16, 2019. “Text as Data: An Overview.” Forthcoming in Cuirini, Luigi and Robert Franzese, eds. Handbook of Research Methods in Political Science and International Relations. Thousand Oaks: Sage.</p>
<p>[6]Loughran T, McDonald B. Textual analysis in accounting and finance: A survey[J]. <em>Journal of Accounting Research</em>, 2016, 54(4): 1187-1230. Author links open overlay panelComputational socioeconomics</p>
<p>[7]Berger, Jonah, Ashlee Humphreys, Stephan Ludwig, Wendy W. Moe, Oded Netzer, and David A. Schweidel. &ldquo;Uniting the tribes: Using text for marketing insight.&rdquo; <em>Journal of Marketing</em> 84, no. 1 (2020): 1-25.</p>
<p>[8]Banks, George C., Haley M. Woznyj, Ryan S. Wesslen, and Roxanne L. Ross. &ldquo;A review of best practice recommendations for text analysis in R (and a user-friendly app).&rdquo; <em>Journal of Business and Psychology</em> 33, no. 4 (2018): 445-459.</p>
<p>[9]Cohen, Lauren, Christopher Malloy, and Quoc Nguyen. &ldquo;Lazy prices.&rdquo; <em>The Journal of Finance</em> 75, no. 3 (2020): 1371-1415.</p>
<p>[10]孟庆斌, 杨俊华, 鲁冰. 管理层讨论与分析披露的信息含量与股价崩盘风险——基于文本向量化方法的研究[J]. <em>中国工业经济</em>, 2017 (12): 132-150.</p>
<p>[11]Wang, Quan, Beibei Li, and Param Vir Singh. &ldquo;Copycats vs. Original Mobile Apps: A Machine Learning Copycat-Detection Method and Empirical Analysis.&rdquo; <em>Information Systems Research</em> 29.2 (2018): 273-291.</p>
<p>[12]Hoberg, Gerard, and Gordon Phillips. 2016, Text-based network industries and endogenous product differentiation,?<em>Journal of Political Economy</em> 124, 1423-1465</p>
<p>[13]Loughran, Tim, and Bill McDonald. &ldquo;When is a liability not a liability? Textual analysis, dictionaries, and 10‐Ks.&rdquo; <em>The Journal of Finance</em> 66, no. 1 (2011): 35-65.</p>
<p>[14]Fairclough, Norman. 2003. Analysing discourse: Textual analysis for social research (Psychology Press)</p>
<p>[15]Grimmer, Justin, and Brandon M Stewart. 2013, Text as data: The promise and pitfalls of automatic content analysis methods for political texts, <em>Political analysis</em>21, 267-297.</p>
<p>[16]Bollen, Johan, et al. &ldquo;Historical language records reveal a surge of cognitive distortions in recent decades.&rdquo; <em>Proceedings of the National Academy of Sciences</em> 118.30 (2021).</p>
<p>[17]Markowitz, D. M., &amp; Shulman, H. C. (2021). The predictive utility of word familiarity for online engagements and funding. Proceedings of the National Academy of Sciences, 118(18).</p>
<p>[18]Bail, Christopher Andrew. &ldquo;Combining natural language processing and network analysis to examine how advocacy organizations stimulate conversation on social media.&rdquo; <em>Proceedings of the National Academy of Sciences</em> 113, no. 42 (2016): 11823-11828.</p>
<p>[19]姚加权,冯绪,王赞钧,纪荣嵘,张维.语调、情绪及市场影响:基于金融情绪词典[J].管理科学学报,2021,24(05):26-46.</p>
<h2 id="录播课">录播课</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>tomotopy | 速度最快的LDA主题模型</title>
      <link>https://hidadeng.github.io/blog/tomotopy_is_the_fastest_topic_model/</link>
      <pubDate>Fri, 07 Jan 2022 11:43:10 +0600</pubDate>
      
      <guid>/blog/tomotopy_is_the_fastest_topic_model/</guid>
      <description>接近C的速度，比市面的sklearn、gensim快十几倍</description>
      <content:encoded><![CDATA[<h2 id="代码下载tomotopy_codezip"><a href="tomotopy_code.zip">代码下载</a></h2>
<br>
<p><a href="https://hidadeng.github.io/blog/2022workshop/"><img loading="lazy" src="img/workshop.png" alt="寒假工作坊"  />
</a></p>
<br>
<h2 id="tomotopy简介">tomotopy简介？</h2>
<p>tomotopy 是 tomoto（主题建模工具）的 Python 扩展，它是用 C++ 编写的基于 Gibbs 采样的主题模型库。支持的主题模型包括 LDA、DMR、HDP、MG-LDA、PA 和 HPA， 利用现代 CPU 的矢量化来最大化速度。</p>
<p><a href="https://github.com/bab2min/tomotopy">https://github.com/bab2min/tomotopy</a></p>
<p><strong>下图中同样的数据集， tomotopy迭代200次，gensim迭代10次的情况下， tomotopy与gensim耗时对比图，由此可见tomotopy训练主题模型速度之快。</strong>
<img loading="lazy" src="img/TomotopyVsGensim.png" alt=""  />
</p>
<p>当前版本的 tomotopy 支持的主题模型包括</p>
<ul>
<li>潜在狄利克雷分配（LDAModel）</li>
<li>标记的 LDA（LLDA 模型）</li>
<li>部分标记的 LDA（PLDA 模型）</li>
<li>监督LDA（SLDA模型）</li>
<li>Dirichlet 多项回归 (DMRModel)</li>
<li>广义狄利克雷多项回归 (GDMRModel)</li>
<li>分层狄利克雷过程 (HDPModel)</li>
<li>分层LDA（HLDA模型）</li>
<li>多粒 LDA（MGLDA 模型）</li>
<li>弹珠盘分配（PAModel）</li>
<li>分层 PA (HPAModel)</li>
<li>相关主题模型（CTModel）</li>
<li>动态主题模型 (DTModel)</li>
<li>基于伪文档的主题模型（PTModel）。</li>
</ul>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">tomotopy</span><span class="o">==</span><span class="mf">0.12.2</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">pyLDAvis</span><span class="o">==</span><span class="mf">3.3.1</span>  
</code></pre></div><p>目前，tomotopy 可以利用 AVX2、AVX 或 SSE2 SIMD 指令集来最大程度利用PC的性能。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">tomotopy</span> <span class="k">as</span> <span class="nn">tp</span>

<span class="n">tp</span><span class="o">.</span><span class="n">isa</span>
</code></pre></div><p>Run</p>
<pre><code>'avx2'
</code></pre>
<p>如果 tp.isa 返回 None，则训练过程可能需要很长时间。</p>
<br>
<h2 id="1-导入数据">1. 导入数据</h2>
<p>准备一个自己很熟悉的数据disaster_news.csv，一共有332条，话题数K=5，（正常情况下K是需要探索的）。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;disaster_news.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<h2 id="2-整理数据">2. 整理数据</h2>
<p>分词、去除停用词</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">from</span> <span class="nn">cntext</span> <span class="kn">import</span> <span class="n">STOPWORDS_zh</span>


<span class="k">def</span> <span class="nf">segment</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">words</span> <span class="o">=</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">words</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">STOPWORDS_zh</span><span class="p">]</span>
    <span class="k">return</span> <span class="n">words</span>

<span class="n">test</span> <span class="o">=</span> <span class="s2">&#34;云南永善县级地震已致人伤间民房受损中新网月日电据云南昭通市防震减灾局官方网站消息截至日时云南昭通永善县级地震已造成人受伤其中重伤人轻伤人已全部送医院救治民房受损户间倒塌户间个乡镇所学校不同程度受损目前被损毁电力交通通讯设施已全部抢通修复当地已调拨帐篷顶紧急转移万人月日时分云南昭通永善县发生里氏级地震震源深度公里当地震感强烈此外成都等四川多地也有明显震感&#34;</span>
<span class="nb">print</span><span class="p">(</span><span class="n">segment</span><span class="p">(</span><span class="n">test</span><span class="p">))</span>
</code></pre></div><pre><code>['云南', '永善县', '级', '地震', '已致', '伤间', '民房', '受损', '中新网', '日电', '云南', '昭通市', '防震', '减灾', '局', '官方网站', '消息', '日时', '云南', '昭通', '永善县', '级', '地震', '造成', '受伤', '重伤', '轻伤', '送', '医院', '救治', '民房', '受损', '户间', '倒塌', '户间', '乡镇', '学校', '不同', '程度', '受损', '目前', '损毁', '电力', '交通', '通讯', '设施', '抢通', '修复', '调拨', '帐篷', '顶', '紧急', '转移', '万人', '时分', '云南', '昭通', '永善县', '发生', '里氏', '级', '地震', '震源', '深度', '公里', '震感', '强烈', '成都', '四川', '多地', '明显', '震感']
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;words&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">segment</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<h2 id="3-找到最佳k">3. 找到最佳K</h2>
<p>正常的步骤应该认真对待这步，在一定区间范围内，根据模型得分找到合理的K。这里使用tomotopy提供的主题一致性coherence得分假装找一下。</p>
<p>我们期望的图应该的topic coherence随着 number of topics增加而增加，然后到某个topic值趋于平稳。</p>
<p>tomotopy每次运行得到的图形状不一样，为了保证运行结果具有可比性，设置了随机种子seed为555，你也可以根据需要改为自己需要的随机状态。(这里有点像炼丹)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">find_k</span><span class="p">(</span><span class="n">docs</span><span class="p">,</span> <span class="n">min_k</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">max_k</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">min_df</span><span class="o">=</span><span class="mi">2</span><span class="p">):</span>
    <span class="c1">#min_df 词语最少出现在2个文档中</span>
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
    <span class="n">scores</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">min_k</span><span class="p">,</span> <span class="n">max_k</span><span class="p">):</span>
        <span class="c1">#seed随机种子，保证在大邓这里运行结果与你运行的结果一样</span>
        <span class="n">mdl</span> <span class="o">=</span> <span class="n">tp</span><span class="o">.</span><span class="n">LDAModel</span><span class="p">(</span><span class="n">min_df</span><span class="o">=</span><span class="n">min_df</span><span class="p">,</span> <span class="n">k</span><span class="o">=</span><span class="n">k</span><span class="p">,</span> <span class="n">seed</span><span class="o">=</span><span class="mi">555</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">words</span> <span class="ow">in</span> <span class="n">docs</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">words</span><span class="p">:</span>
                <span class="n">mdl</span><span class="o">.</span><span class="n">add_doc</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
        <span class="n">mdl</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
        <span class="n">coh</span> <span class="o">=</span> <span class="n">tp</span><span class="o">.</span><span class="n">coherence</span><span class="o">.</span><span class="n">Coherence</span><span class="p">(</span><span class="n">mdl</span><span class="p">)</span>
        <span class="n">scores</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">coh</span><span class="o">.</span><span class="n">get_score</span><span class="p">())</span>

    <span class="c1">#x = list(range(min_k, max_k - 1))  # 区间最右侧的值。注意：不能大于max_k</span>
    <span class="c1">#print(x)</span>
    <span class="c1">#print()</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="n">min_k</span><span class="p">,</span> <span class="n">max_k</span><span class="p">),</span> <span class="n">scores</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s2">&#34;number of topics&#34;</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s2">&#34;coherence&#34;</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
    
    
<span class="n">find_k</span><span class="p">(</span><span class="n">docs</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;words&#39;</span><span class="p">],</span> <span class="n">min_k</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">max_k</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">min_df</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/output_11_0.png" alt="png"  />
</p>
<br>
<h2 id="4-训练lda">4. 训练lda</h2>
<p>使用tomotopy的LDA模型， 话题数K=5</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">tomotopy</span> <span class="k">as</span> <span class="nn">tp</span>

<span class="c1">#初始化LDA</span>
<span class="n">mdl</span> <span class="o">=</span> <span class="n">tp</span><span class="o">.</span><span class="n">LDAModel</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">min_df</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">seed</span><span class="o">=</span><span class="mi">555</span><span class="p">)</span>
<span class="k">for</span> <span class="n">words</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;words&#39;</span><span class="p">]:</span>
    <span class="c1">#确认words 是 非空词语列表</span>
    <span class="k">if</span> <span class="n">words</span><span class="p">:</span>
        <span class="n">mdl</span><span class="o">.</span><span class="n">add_doc</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">words</span><span class="p">)</span>

<span class="c1">#训练</span>
<span class="n">mdl</span><span class="o">.</span><span class="n">train</span><span class="p">()</span>

<span class="c1">#查看每个topic feature words</span>
<span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">mdl</span><span class="o">.</span><span class="n">k</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Top 10 words of topic #</span><span class="si">{}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">k</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">mdl</span><span class="o">.</span><span class="n">get_topic_words</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">top_n</span><span class="o">=</span><span class="mi">10</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    Top 10 words of topic #0
    [(&#39;一辆&#39;, 0.02751251682639122), (&#39;事故&#39;, 0.021704642102122307), (&#39;记者&#39;, 0.018342189490795135), (&#39;死亡&#39;, 0.01650812290608883), (&#39;造成&#39;, 0.014062701724469662), (&#39;人员&#39;, 0.013909862376749516), (&#39;现场&#39;, 0.013451346196234226), (&#39;受伤&#39;, 0.012687151320278645), (&#39;相撞&#39;, 0.011922957375645638), (&#39;货车&#39;, 0.011922957375645638)]


​    
​    Top 10 words of topic #1
​    [(&#39;学生&#39;, 0.02709135226905346), (&#39;食物中毒&#39;, 0.02498047426342964), (&#39;出现&#39;, 0.019175563007593155), (&#39;医院&#39;, 0.016185153275728226), (&#39;事件&#39;, 0.013546556234359741), (&#39;调查&#39;, 0.013194743543863297), (&#39;年月日&#39;, 0.012842929922044277), (&#39;治疗&#39;, 0.012667023576796055), (&#39;症状&#39;, 0.011787491850554943), (&#39;名&#39;, 0.011259771883487701)]


​    
​    Top 10 words of topic #2
​    [(&#39;现场&#39;, 0.018848909065127373), (&#39;发生&#39;, 0.01677251048386097), (&#39;医院&#39;, 0.015015557408332825), (&#39;起火&#39;, 0.014216942712664604), (&#39;原因&#39;, 0.012140544131398201), (&#39;目前&#39;, 0.012140544131398201), (&#39;救治&#39;, 0.01150165218859911), (&#39;进行&#39;, 0.011022482998669147), (&#39;名&#39;, 0.009425252676010132), (&#39;火势&#39;, 0.009265529923141003)]


​    
​    Top 10 words of topic #3
​    [(&#39;发生&#39;, 0.03348556533455849), (&#39;爆炸&#39;, 0.022389251738786697), (&#39;造成&#39;, 0.019663840532302856), (&#39;死亡&#39;, 0.01713310182094574), (&#39;受伤&#39;, 0.016938429325819016), (&#39;年月日&#39;, 0.016354413703083992), (&#39;轿车&#39;, 0.012655640952289104), (&#39;警方&#39;, 0.012460969388484955), (&#39;袭击&#39;, 0.012266295962035656), (&#39;事件&#39;, 0.011487606912851334)]


​    
​    Top 10 words of topic #4
​    [(&#39;地震&#39;, 0.047826822847127914), (&#39;发生&#39;, 0.03555167838931084), (&#39;火灾&#39;, 0.03140682727098465), (&#39;时分&#39;, 0.020885275676846504), (&#39;级&#39;, 0.015783920884132385), (&#39;时间&#39;, 0.013870910741388798), (&#39;公里&#39;, 0.013711493462324142), (&#39;人员伤亡&#39;, 0.013073823414742947), (&#39;记者&#39;, 0.013073823414742947), (&#39;震感&#39;, 0.012276736088097095)]
</code></pre></div><br>
<p>查看话题模型信息</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mdl</span><span class="o">.</span><span class="n">summary</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="w">
</span><span class="w">    </span><span class="o">&lt;</span><span class="n">Basic</span><span class="w"> </span><span class="n">Info</span><span class="o">&gt;</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="nf">LDAModel</span><span class="w"> </span><span class="p">(</span><span class="n">current</span><span class="w"> </span><span class="n">version</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">12</span><span class="p">.</span><span class="mi">2</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="mi">332</span><span class="w"> </span><span class="n">docs</span><span class="p">,</span><span class="w"> </span><span class="mi">29749</span><span class="w"> </span><span class="n">words</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Total</span><span class="w"> </span><span class="n">Vocabs</span><span class="p">:</span><span class="w"> </span><span class="mi">8428</span><span class="p">,</span><span class="w"> </span><span class="n">Used</span><span class="w"> </span><span class="n">Vocabs</span><span class="p">:</span><span class="w"> </span><span class="mi">2984</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Entropy</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">words</span><span class="p">:</span><span class="w"> </span><span class="mi">7</span><span class="p">.</span><span class="mi">10665</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Entropy</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">term</span><span class="o">-</span><span class="n">weighted</span><span class="w"> </span><span class="n">words</span><span class="p">:</span><span class="w"> </span><span class="mi">7</span><span class="p">.</span><span class="mi">10665</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Removed</span><span class="w"> </span><span class="n">Vocabs</span><span class="p">:</span><span class="w"> </span><span class="o">&lt;</span><span class="n">NA</span><span class="o">&gt;</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w">
</span><span class="w">    </span><span class="o">&lt;</span><span class="n">Training</span><span class="w"> </span><span class="n">Info</span><span class="o">&gt;</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Iterations</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w"> </span><span class="n">Burn</span><span class="o">-</span><span class="k">in</span><span class="w"> </span><span class="n">steps</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Optimization</span><span class="w"> </span><span class="k">Interval</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">Log</span><span class="o">-</span><span class="n">likelihood</span><span class="w"> </span><span class="n">per</span><span class="w"> </span><span class="n">word</span><span class="p">:</span><span class="w"> </span><span class="o">-</span><span class="mi">7</span><span class="p">.</span><span class="mi">79934</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w">
</span><span class="w">    </span><span class="o">&lt;</span><span class="n">Initial</span><span class="w"> </span><span class="n">Parameters</span><span class="o">&gt;</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">tw</span><span class="p">:</span><span class="w"> </span><span class="n">TermWeight</span><span class="p">.</span><span class="n">ONE</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">min_cf</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="p">(</span><span class="n">minimum</span><span class="w"> </span><span class="n">collection</span><span class="w"> </span><span class="n">frequency</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">words</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">min_df</span><span class="p">:</span><span class="w"> </span><span class="mi">2</span><span class="w"> </span><span class="p">(</span><span class="n">minimum</span><span class="w"> </span><span class="n">document</span><span class="w"> </span><span class="n">frequency</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">words</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">rm_top</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="p">(</span><span class="n">the</span><span class="w"> </span><span class="n">number</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">top</span><span class="w"> </span><span class="n">words</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">removed</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">k</span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="w"> </span><span class="p">(</span><span class="n">the</span><span class="w"> </span><span class="n">number</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">topics</span><span class="w"> </span><span class="k">between</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="mi">32767</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">alpha</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mi">0</span><span class="p">.</span><span class="mi">1</span><span class="p">]</span><span class="w"> </span><span class="p">(</span><span class="n">hyperparameter</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">Dirichlet</span><span class="w"> </span><span class="n">distribution</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">document</span><span class="o">-</span><span class="n">topic</span><span class="p">,</span><span class="w"> </span><span class="n">given</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">single</span><span class="w"> </span><span class="o">`</span><span class="kt">float</span><span class="o">`</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="k">case</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">symmetric</span><span class="w"> </span><span class="n">prior</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">list</span><span class="w"> </span><span class="k">with</span><span class="w"> </span><span class="n">length</span><span class="w"> </span><span class="o">`</span><span class="n">k</span><span class="o">`</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="o">`</span><span class="kt">float</span><span class="o">`</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="k">case</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">asymmetric</span><span class="w"> </span><span class="n">prior</span><span class="p">.)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">eta</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span><span class="w"> </span><span class="p">(</span><span class="n">hyperparameter</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">Dirichlet</span><span class="w"> </span><span class="n">distribution</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">topic</span><span class="o">-</span><span class="n">word</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">seed</span><span class="p">:</span><span class="w"> </span><span class="mi">555</span><span class="w"> </span><span class="p">(</span><span class="n">random</span><span class="w"> </span><span class="n">seed</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="n">trained</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">version</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">12</span><span class="p">.</span><span class="mi">2</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w">
</span><span class="w">    </span><span class="o">&lt;</span><span class="n">Parameters</span><span class="o">&gt;</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="nf">alpha</span><span class="w"> </span><span class="p">(</span><span class="n">Dirichlet</span><span class="w"> </span><span class="n">prior</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">per</span><span class="o">-</span><span class="n">document</span><span class="w"> </span><span class="n">topic</span><span class="w"> </span><span class="n">distributions</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w">  </span><span class="p">[</span><span class="mi">0</span><span class="p">.</span><span class="mi">7143365</span><span class="w">  </span><span class="mi">0</span><span class="p">.</span><span class="mi">6852513</span><span class="w">  </span><span class="mi">0</span><span class="p">.</span><span class="mi">75089616</span><span class="w"> </span><span class="mi">0</span><span class="p">.</span><span class="mi">6204677</span><span class="w">  </span><span class="mi">0</span><span class="p">.</span><span class="mi">7040125</span><span class="w"> </span><span class="p">]</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="nf">eta</span><span class="w"> </span><span class="p">(</span><span class="n">Dirichlet</span><span class="w"> </span><span class="n">prior</span><span class="w"> </span><span class="k">on</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">per</span><span class="o">-</span><span class="n">topic</span><span class="w"> </span><span class="n">word</span><span class="w"> </span><span class="n">distribution</span><span class="p">)</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w">  </span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w">
</span><span class="w">    </span><span class="o">&lt;</span><span class="n">Topics</span><span class="o">&gt;</span><span class="w">
</span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="c1">#0 (6513) : 一辆 事故 记者 死亡 造成
</span><span class="c1"></span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="c1">#1 (5655) : 学生 食物中毒 出现 医院 事件
</span><span class="c1"></span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="c1">#2 (6231) : 现场 发生 医院 起火 原因
</span><span class="c1"></span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="c1">#3 (5107) : 发生 爆炸 造成 死亡 受伤
</span><span class="c1"></span><span class="w">    </span><span class="o">|</span><span class="w"> </span><span class="c1">#4 (6243) : 地震 发生 火灾 时分 级
</span></code></pre></div><h3 id="topic解读">topic解读</h3>
<p>根据每个话题top10的特征词，5个话题解读为</p>
<ul>
<li>交通事故| #0 (6513) : 一辆 事故 记者 死亡 造成</li>
<li>食品安全| #1 (5655) : 学生 食物中毒 出现 医院 事件</li>
<li>火灾新闻| #2 (6231) : 现场 发生 医院 起火 原因</li>
<li>恐怖袭击| #3 (5107) : 发生 爆炸 造成 死亡 受伤</li>
<li>地震灾害| #4 (6243) : 地震 发生 火灾 时分 级</li>
</ul>
<br>
<h2 id="5-可视化">5. 可视化</h2>
<p>使用pyLDAvis</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pyLDAvis</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">,</span> <span class="n">category</span><span class="o">=</span><span class="ne">Warning</span><span class="p">)</span>

<span class="c1">#在notebook显示</span>
<span class="n">pyLDAvis</span><span class="o">.</span><span class="n">enable_notebook</span><span class="p">()</span>

<span class="c1">#获取pyldavis需要的参数</span>
<span class="n">topic_term_dists</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">stack</span><span class="p">([</span><span class="n">mdl</span><span class="o">.</span><span class="n">get_topic_word_dist</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">mdl</span><span class="o">.</span><span class="n">k</span><span class="p">)])</span>
<span class="n">doc_topic_dists</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">stack</span><span class="p">([</span><span class="n">doc</span><span class="o">.</span><span class="n">get_topic_dist</span><span class="p">()</span> <span class="k">for</span> <span class="n">doc</span> <span class="ow">in</span> <span class="n">mdl</span><span class="o">.</span><span class="n">docs</span><span class="p">])</span>
<span class="n">doc_topic_dists</span> <span class="o">/=</span> <span class="n">doc_topic_dists</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">keepdims</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">doc_lengths</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="nb">len</span><span class="p">(</span><span class="n">doc</span><span class="o">.</span><span class="n">words</span><span class="p">)</span> <span class="k">for</span> <span class="n">doc</span> <span class="ow">in</span> <span class="n">mdl</span><span class="o">.</span><span class="n">docs</span><span class="p">])</span>
<span class="n">vocab</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">mdl</span><span class="o">.</span><span class="n">used_vocabs</span><span class="p">)</span>
<span class="n">term_frequency</span> <span class="o">=</span> <span class="n">mdl</span><span class="o">.</span><span class="n">used_vocab_freq</span>


<span class="n">prepared_data</span> <span class="o">=</span> <span class="n">pyLDAvis</span><span class="o">.</span><span class="n">prepare</span><span class="p">(</span>
    <span class="n">topic_term_dists</span><span class="p">,</span> 
    <span class="n">doc_topic_dists</span><span class="p">,</span> 
    <span class="n">doc_lengths</span><span class="p">,</span> 
    <span class="n">vocab</span><span class="p">,</span> 
    <span class="n">term_frequency</span><span class="p">,</span>
    <span class="n">start_index</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="c1"># tomotopy话题id从0开始，pyLDAvis话题id从1开始</span>
    <span class="n">sort_topics</span><span class="o">=</span><span class="kc">False</span> <span class="c1">#注意：否则pyLDAvis与tomotopy内的话题无法一一对应。 </span>
<span class="p">)</span>


<span class="c1">#可视化结果存到html文件中</span>
<span class="c1">#pyLDAvis.save_html(prepared_data, &#39;ldavis.html&#39;)</span>

<span class="c1">#notebook中显示</span>
<span class="n">pyLDAvis</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">prepared_data</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/ldavis.png" alt=""  />
</p>
<br>
<h2 id="6-预测">6. 预测</h2>
<p>预测某文档的话题</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">from</span> <span class="nn">cntext</span> <span class="kn">import</span> <span class="n">STOPWORDS_zh</span>

<span class="c1">#预测</span>
<span class="n">doc</span> <span class="o">=</span> <span class="s1">&#39;云南永善县级地震已致伤间民房受损中新网日电云南昭通市防震减灾局官方网站消息日时云南昭通永善县级地震造成受伤重伤轻伤送医院救治民房受损户间倒塌户间乡镇学校不同程度受损目前损毁电力交通通讯设施抢通修复调拨帐篷顶紧急转移万人时分云南昭通永善县发生里氏级地震震源深度公里震感强烈成都四川多地明显震感&#39;</span>
<span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">doc</span><span class="p">)</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">STOPWORDS_zh</span><span class="p">]</span>

<span class="c1">#构造tomotopy需要的数据</span>
<span class="n">doc_inst</span> <span class="o">=</span> <span class="n">mdl</span><span class="o">.</span><span class="n">make_doc</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">words</span><span class="p">)</span>
<span class="n">topic_dist</span><span class="p">,</span> <span class="n">ll</span> <span class="o">=</span> <span class="n">mdl</span><span class="o">.</span><span class="n">infer</span><span class="p">(</span><span class="n">doc_inst</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;Topic Distribution for Unseen Docs: &#34;</span><span class="p">,</span> <span class="n">topic_dist</span><span class="p">)</span>

</code></pre></div><pre><code>Topic Distribution for Unseen Docs:  [0.11645161 0.10240361 0.5342029  0.03622254 0.21071935]
</code></pre>
<p>列表长度为5， 列表第三个数值(topic #2)数值最大，该文本最大的可能性是topic #2</p>
<br>
<h2 id="补充-指定主题特征词">补充: 指定主题特征词</h2>
<p>如果对数据比较了解，已经知道有一些主题，可以把比较明显的词语分配给指定的topic_id。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mdl</span> <span class="o">=</span> <span class="n">tp</span><span class="o">.</span><span class="n">LDAModel</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">min_df</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">seed</span><span class="o">=</span><span class="mi">555</span><span class="p">)</span>

<span class="k">for</span> <span class="n">words</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;words&#39;</span><span class="p">]:</span>
    <span class="k">if</span> <span class="n">words</span><span class="p">:</span>
        <span class="n">mdl</span><span class="o">.</span><span class="n">add_doc</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>

<span class="c1">#把word相撞 分配给topic_0, 权重设置为1， 其他topic权重设置为0.1</span>
<span class="c1">#注意这里的range(5) 5是对应的k值</span>
<span class="n">mdl</span><span class="o">.</span><span class="n">set_word_prior</span><span class="p">(</span><span class="s1">&#39;相撞&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mf">1.0</span> <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">else</span> <span class="mf">0.1</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)])</span>
<span class="c1">#把word地震 分配给topic_1, 权重设置为1， 其他topic权重设置为0.1</span>
<span class="n">mdl</span><span class="o">.</span><span class="n">set_word_prior</span><span class="p">(</span><span class="s1">&#39;地震&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mf">1.0</span> <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">else</span> <span class="mf">0.1</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)])</span>
<span class="c1">#把word火灾 分配给topic_2, 权重设置为1， 其他topic权重设置为0.1</span>
<span class="n">mdl</span><span class="o">.</span><span class="n">set_word_prior</span><span class="p">(</span><span class="s1">&#39;火灾&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mf">1.0</span> <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">2</span> <span class="k">else</span> <span class="mf">0.1</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)])</span>
<span class="c1">#把word中毒 分配给topic_3, 权重设置为1， 其他topic权重设置为0.1</span>
<span class="n">mdl</span><span class="o">.</span><span class="n">set_word_prior</span><span class="p">(</span><span class="s1">&#39;中毒&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mf">1.0</span> <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">3</span> <span class="k">else</span> <span class="mf">0.1</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)])</span>
<span class="c1">#把word袭击 分配给topic_4, 权重设置为1， 其他topic权重设置为0.1</span>
<span class="n">mdl</span><span class="o">.</span><span class="n">set_word_prior</span><span class="p">(</span><span class="s1">&#39;袭击&#39;</span><span class="p">,</span> <span class="p">[</span><span class="mf">1.0</span> <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">4</span> <span class="k">else</span> <span class="mf">0.1</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)])</span>

<span class="n">mdl</span><span class="o">.</span><span class="n">train</span><span class="p">()</span>
<span class="n">mdl</span><span class="o">.</span><span class="n">summary</span><span class="p">()</span>  
</code></pre></div><pre><code>&lt;Basic Info&gt;
| LDAModel (current version: 0.12.2)
| 332 docs, 29749 words
| Total Vocabs: 8428, Used Vocabs: 2984
| Entropy of words: 7.10665
| Entropy of term-weighted words: 7.10665
| Removed Vocabs: &lt;NA&gt;
|
&lt;Training Info&gt;
| Iterations: 10, Burn-in steps: 0
| Optimization Interval: 10
| Log-likelihood per word: -7.72251
|
&lt;Initial Parameters&gt;
| tw: TermWeight.ONE
| min_cf: 0 (minimum collection frequency of words)
| min_df: 2 (minimum document frequency of words)
| rm_top: 0 (the number of top words to be removed)
| k: 5 (the number of topics between 1 ~ 32767)
| alpha: [0.1] (hyperparameter of Dirichlet distribution for document-topic, given as a single `float` in case of symmetric prior and as a list with length `k` of `float` in case of asymmetric prior.)
| eta: 0.01 (hyperparameter of Dirichlet distribution for topic-word)
| seed: 555 (random seed)
| trained in version 0.12.2
|
&lt;Parameters&gt;
| alpha (Dirichlet prior on the per-document topic distributions)
|  [0.7106193  0.60264444 0.5734784  0.71375024 0.6234263 ]
| eta (Dirichlet prior on the per-topic word distribution)
|  0.01
|
&lt;Topics&gt;
| #0 (6599) : 一辆 事故 死亡 发生 造成
| #1 (6087) : 地震 发生 级 公里 年月日
| #2 (5892) : 火灾 发生 现场 大火 起火
| #3 (6402) : 医院 学生 食物中毒 出现 名
| #4 (4769) : 事件 发生 袭击 人员 工作
|
</code></pre>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>dvt库 |  视觉文化分析的Python工具包</title>
      <link>https://hidadeng.github.io/blog/dvt/</link>
      <pubDate>Mon, 03 Jan 2022 20:43:10 +0600</pubDate>
      
      <guid>/blog/dvt/</guid>
      <description>视觉文化分析的Python工具包</description>
      <content:encoded><![CDATA[<h2 id="dvt">dvt</h2>
<p>Distant Viewing Toolkit for the Analysis of Visual Culture</p>
<p><strong>视觉文化分析</strong>的Python工具包</p>
<p><a href="https://github.com/distant-viewing/dvt">https://github.com/distant-viewing/dvt</a></p>
<p>远程电视工具包由几个 Python 包组成，旨在促进<strong>视觉文化</strong>的计算分析。 开始使用该工具包的最简单方法是在 <strong>Google 的协作 (Colab) 环境</strong>中运行该工具包。 这是一项免费使用的服务，允许您以最少的设置在远程服务器上运行 Python 代码。 只需选择以下链接之一即可开始：</p>
<ul>
<li>COLAB 笔记本演 <a href="https://colab.research.google.com/drive/1KxYziaozONxMZH8uUaf4PxbW6DyNiZ0k?usp=sharing">https://colab.research.google.com/drive/1KxYziaozONxMZH8uUaf4PxbW6DyNiZ0k?usp=sharing</a></li>
</ul>
<p>有关在您自己的机器上设置工具包的更多信息，请参阅 INSTALL.md。 以下页面提供了有关工具包和项目的更多信息：</p>
<ul>
<li>搜索和发现界面示例：DVT 视频可视化</li>
<li>使用聚合元数据的示例分析：“两个网络时代情景喜剧的视觉风格”</li>
<li>项目理论：“远距离观察：分析大型视觉语料库”。</li>
<li>软件白皮书：用于分析视觉文化的 Python 包</li>
</ul>
<br>
<h2 id="示例">示例</h2>
<p>开发者提供的colab代码，我跑通了图片标注(例如识别不同身体部位)、视频转场(不同素材拼凑)</p>

<figure >
    
        <img src="img/pic1.png" width="800" />
    
    
</figure>


<figure >
    
        <img src="img/pic2.png" width="800" />
    
    
</figure>


<figure >
    
        <img src="img/video.png" width="800" />
    
    
</figure>

<br>
<h2 id="提示">提示</h2>
<p>本地配置难度极大，建议按照开发者提示，使用google colab环境。可能需要先配置好科学上网，才能使用</p>
<ul>
<li>COLAB 笔记本演 <a href="https://colab.research.google.com/drive/1KxYziaozONxMZH8uUaf4PxbW6DyNiZ0k?usp=sharing">https://colab.research.google.com/drive/1KxYziaozONxMZH8uUaf4PxbW6DyNiZ0k?usp=sharing</a></li>
</ul>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Stargazer库 |  创建漂亮可发表的多元回归表</title>
      <link>https://hidadeng.github.io/blog/stargazer/</link>
      <pubDate>Sun, 02 Jan 2022 20:43:10 +0600</pubDate>
      
      <guid>/blog/stargazer/</guid>
      <description>可用于创建漂亮的、可发表的多元回归表</description>
      <content:encoded><![CDATA[<h2 id="代码下载stargazer_examplesipynb"><a href="Stargazer_examples.ipynb">代码下载</a></h2>
<br>
<h2 id="stargazer库介绍">Stargazer库介绍</h2>
<p>R语言有一个stargazer包，可用于创建漂亮的、可发表的多元回归表。如今有Python化的stargazer库也可做类似的事。</p>
<p>下图是使用stargazer生成的没有任何样式的原始示例的示例：</p>

<figure >
    
        <img src="img/latex_example.png" width="800" />
    
    
</figure>

<br>
<h2 id="什么时候会用到这些">什么时候会用到这些？</h2>
<p>人们倾向于使用R版本的stargazer的主要情况是在学术论文中报告回归结果。 它允许您轻松地比较多个回归结果，这有助于比较具有实验影响的模型与没有影响的模型之间的结果。 这允许用户轻松查看系数的差异、统计显着性以及实验引入的新变量的影响。</p>
<p>它目前支持 LaTeX 和 HTML 输出，stargazer开发者最终最表是也支持 Markdown 和 ASCII 文本。</p>
<br>
<h2 id="项目地址">项目地址</h2>
<p><a href="https://github.com/mwburke/stargazer">https://github.com/mwburke/stargazer</a></p>
<br>
该库实现了原始包中的许多自定义功能。大多数示例可以在示例 jupyter notebook 中找到，功能函数完整列表如下：
<h2 id="stargazer库的函数">Stargazer库的函数</h2>
<ul>
<li>show_header：显示或隐藏模型头数据</li>
<li>show_model_numbers：显示或隐藏型号</li>
<li>custom_columns：自定义模型名称和模型分组</li>
<li>significance_levels：更改统计显着性阈值</li>
<li>significant_digits：更改有效数字的数量</li>
<li>show_confidence_intervals：显示置信区间，而不是方差</li>
<li>dependent_variable_name：重命名因变量</li>
<li>rename_covariates: 重命名协变量</li>
<li>covariate_order：重新排序协变量</li>
<li>reset_covariate_order：将协变量顺序重置为原始顺序</li>
<li>show_degrees_of_freedom：显示或隐藏自由度</li>
<li>custom_note_label：表格底部的标签注释部分</li>
<li>add_custom_notes：将自定义注释添加到表格底部的部分</li>
<li>add_line：向表格中添加自定义行</li>
<li>append_notes：显示或隐藏统计显着性阈值</li>
</ul>
<p>这些功能与渲染类型无关，无论用户以 HTML、LaTeX 等格式输出都将应用</p>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">stargazer</span>
</code></pre></div><br>
<h2 id="ols回归">OLS回归</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">datasets</span>
<span class="kn">import</span> <span class="nn">statsmodels.api</span> <span class="k">as</span> <span class="nn">sm</span>
<span class="kn">from</span> <span class="nn">stargazer.stargazer</span> <span class="kn">import</span> <span class="n">Stargazer</span>

<span class="n">diabetes</span> <span class="o">=</span> <span class="n">datasets</span><span class="o">.</span><span class="n">load_diabetes</span><span class="p">()</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">diabetes</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Age&#39;</span><span class="p">,</span> <span class="s1">&#39;Sex&#39;</span><span class="p">,</span> <span class="s1">&#39;BMI&#39;</span><span class="p">,</span> <span class="s1">&#39;ABP&#39;</span><span class="p">,</span> <span class="s1">&#39;S1&#39;</span><span class="p">,</span> <span class="s1">&#39;S2&#39;</span><span class="p">,</span> <span class="s1">&#39;S3&#39;</span><span class="p">,</span> <span class="s1">&#39;S4&#39;</span><span class="p">,</span> <span class="s1">&#39;S5&#39;</span><span class="p">,</span> <span class="s1">&#39;S6&#39;</span><span class="p">]</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;target&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">diabetes</span><span class="o">.</span><span class="n">target</span>

<span class="n">est</span> <span class="o">=</span> <span class="n">sm</span><span class="o">.</span><span class="n">OLS</span><span class="p">(</span><span class="n">endog</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;target&#39;</span><span class="p">],</span> <span class="n">exog</span><span class="o">=</span><span class="n">sm</span><span class="o">.</span><span class="n">add_constant</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">]]))</span><span class="o">.</span><span class="n">fit</span><span class="p">()</span>
<span class="n">est2</span> <span class="o">=</span> <span class="n">sm</span><span class="o">.</span><span class="n">OLS</span><span class="p">(</span><span class="n">endog</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;target&#39;</span><span class="p">],</span> <span class="n">exog</span><span class="o">=</span><span class="n">sm</span><span class="o">.</span><span class="n">add_constant</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">6</span><span class="p">]]))</span><span class="o">.</span><span class="n">fit</span><span class="p">()</span>

<span class="n">stargazer</span> <span class="o">=</span> <span class="n">Stargazer</span><span class="p">([</span><span class="n">est</span><span class="p">,</span> <span class="n">est2</span><span class="p">])</span>
</code></pre></div><pre><code>/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/statsmodels/tsa/tsatools.py:142: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only
  x = pd.concat(x[::order], 1)
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#分析结果渲染成html</span>
<span class="kn">from</span> <span class="nn">IPython.display</span> <span class="kn">import</span> <span class="n">display</span><span class="p">,</span> <span class="n">HTML</span>
<span class="n">raw_str</span> <span class="o">=</span> <span class="n">stargazer</span><span class="o">.</span><span class="n">render_html</span><span class="p">()</span>
<span class="n">html</span> <span class="o">=</span> <span class="n">HTML</span><span class="p">(</span><span class="n">raw_str</span><span class="p">)</span>
<span class="n">display</span><span class="p">(</span><span class="n">html</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/html_example.png" width="800" />
    
    
</figure>

<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#分析结果渲染成latex</span>
<span class="n">stargazer</span><span class="o">.</span><span class="n">render_latex</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="img/latex_example.png" width="800" />
    
    
</figure>

<p><br><br></p>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>PNAS | 情侣分手3个月前就有预兆！聊天记录还能反映分手后遗症</title>
      <link>https://hidadeng.github.io/blog/pnas_love_separate/</link>
      <pubDate>Sun, 02 Jan 2022 12:43:10 +0600</pubDate>
      
      <guid>/blog/pnas_love_separate/</guid>
      <description>女友提出分手，你是不是后悔没有早点察觉？这不，关于分手前的聊天记录的文本分析，科学家给出了答案。</description>
      <content:encoded><![CDATA[<blockquote>
<p>公众号-新智元</p>
<p>编辑: 桃子 小咸鱼</p>
</blockquote>
<p>女朋友提出分手，你是不是后悔没有早点察觉？</p>
<p><strong>这不，对于分手前的有关迹象，科学家给出了答案：聊天记录！</strong></p>
<br>
<p>近日，美国德克萨斯大学的研究人员发表的一篇论文表明，通过分析情侣的聊天记录，可以找到情侣即将分手的证据。</p>
<p>这篇 Language left behind on social media exposes the emotional and cognitive costs of a romantic breakup 已于12月20日发表在国际顶刊PNAS。</p>
<p><img loading="lazy" src="img/pnas_love_home.png" alt=""  />
</p>
<p><strong>分手前三个月，聊天便不正常了</strong></p>
<p>基于已有的数据，研究人员对6800名Reddit用户发布的1027541个帖子进行了文本分析。</p>
<p><img loading="lazy" src="img/pnas_love_table.png" alt=""  />
</p>
<p>这些帖子涵盖了用户在过去2年里的Reddit发帖数据，这些帖子的内容不仅仅与他们的感情关系有关，也涵盖了他们生活中各个方面的内容。</p>
 <br>
<h2 id="语言标记">语言标记</h2>
<p>表示「即将分手」的「<strong>语言标记</strong>」在分手发生前3个月出现的频次非常高，在分手的那一周达到峰值，并在6个月后恢复到正常基线。</p>
<p>在表示「即将分手」的「语言标记」中，出现次数比较多的是「我」、「我们」这类字眼，以及暗含认知过程（cognitive processing ）的词汇（常常表示抑郁、高度集中的注意力、探究意义等）。</p>
<p><img loading="lazy" src="img/pnas_love_line.png" alt=""  />
</p>
<p>分手前后Reddit用户语言模式的变化。第0周是每个用户在分手时公开披露分手的时间点。</p>
<p>此外，「语言标记」中有关「分析思考」（analytic thinking）的词汇的出现频次会下降，与「分析思考」相关的词汇往往包含更多以个人为中心和非正式的语言。</p>
<p>研究人员还发现，即使人们在与分手这类话题无关的群组中发帖，上述这种「语言标记」模式仍然存在。</p>
<p><strong>要注意了！</strong></p>
<p>与偶尔发一次帖的人相比，那些经常发布分手信息的人在分手一年之后，适应能力会变得很差。</p>
<p>83%的人都会以第一人称发送第一次分手的信息，并且这些帖子详细描述了分手过程，甚至导致分手的原因和分手的后果都有。</p>
<p><img loading="lazy" src="img/pnas_love_S1.png" alt=""  />
</p>
<p>例如，一位网友通过回忆来讲述自己分手的故事：</p>
<blockquote>
<p>“Hey breakups, going through a rough one this week. The girl I&rsquo;ve been seeing the last 7 months left me last Friday due to us not having common interests. Our relationship seemed just awesome and thought we were happy. We did get into a &ldquo;routine&rdquo; pretty fast and I was happy with it. Cook dinner, sex, watch movies together. I knew going into this with her she was a free spirited outdoorsy type and I am admittedly the opposite. But we sparked, and formed a relationship after a few months of talking. Things seemed great. We lived maybe 45 minutes away from each other and had different work schedules, so we only saw each other maybe 3 times a week, so it was sometimes hard to see each other&hellip;”</p>
</blockquote>
<br>
<h2 id="分析思考和认知过程">分析思考和认知过程</h2>
<p>尽管许多情侣关系解体模型都强调了分手过程中固有的认知思维，但没有一项研究能够实时跟踪认知过程。</p>
<p>同时，研究人员在研究认知过程的变化时面临着几个艰巨的挑战，包括如何识别和测量感兴趣的认知动态。</p>
<p>研究人员最近的工作确定了两种基于语言的通用思维模式：一是分析思考，另一是认知过程。</p>
<p><img loading="lazy" src="img/pnas_love_LIWC.png" alt=""  />
</p>
<p><strong>说话以「我」、「我们」为焦点</strong></p>
<p>回想下，排除第三者关系，女友和你提出分手前，是不是经常会说「我&hellip;.」</p>
<p>正如研究人员指出，当分手发生时，人们会向内去理解发生关系破裂的原因，这有时会让人陷入沉思和情绪困扰 。</p>
<p>在与抑郁、自杀、情绪剧变、消极和心理困扰相关的报告中，「我」这个词是最常见的。这表明 「我」的使用能够捕获内部的焦点和个人内部的关注。</p>
<p>同样，在情侣关系研究中，在分手之前、之中和之后查看「我」字的使用可能是一种不错的方法，来跟踪人们在整个分手过程中的对自我关注和调整。</p>
<p><img loading="lazy" src="img/pnas_love_LIWC.png" alt=""  />
</p>
<p>在分手期间，人们可能会深究对方的前任伴侣和两人间的关系。</p>
<p>「我们」一词，揭示了情侣间的关系承诺、继续关系的意图和解决问题的行为等等信息。</p>
<p>而情侣之间更多地使用「我们」一词突出了成功的浪漫关系背后靠的是情侣间的相互依存性。</p>
<p>但是，如果情侣间的关系变坏呢？</p>
<p>一些研究发现，经常分享分手故事的人，如果开始频繁地使用「我们」这个词，这种现象就预示着他和他伴侣间的关系会变得更差。</p>
<br>
<h2 id="分手后遗症">分手后遗症</h2>
<p>在人们的社交生活与其在线状态交织在一起的时代，研究分手和其他个人心情动荡出现了新的方法。</p>
<p>通过研究社交媒体帖子，研究人员已经发现了与人们情绪和心理状态相关的语言模式，例如抑郁症、创伤后应激障碍诊断和注意缺陷多动障碍症状。</p>
<p>通过对社交媒体平台中人们的语言进行分析，研究人员最终可以追踪人们在分手时不断演变的心理过程。</p>
<p>正如研究者指出，真正分手后会持续6个月的心理影响。</p>
<p><img loading="lazy" src="img/pnas_love_sig.png" alt=""  />
</p>
<p>分手后遗症，你有吗？</p>
<br>
<h2 id="数据下载httpsosfioa9qmxview_only07f3d732d9c04bcc9f6844c4e889c1e8"><a href="https://osf.io/a9qmx/?view_only=07f3d732d9c04bcc9f6844c4e889c1e8">数据下载</a></h2>
<p><a href="https://osf.io/a9qmx/?view_only=07f3d732d9c04bcc9f6844c4e889c1e8">4.8G,含代码</a></p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>量化历史语言学-贝叶斯语言谱系分析</title>
      <link>https://hidadeng.github.io/blog/quant_lang/</link>
      <pubDate>Sat, 01 Jan 2022 20:43:10 +0600</pubDate>
      
      <guid>/blog/quant_lang/</guid>
      <description>量化历史语言学，尤其是贝叶斯语言谱系分析的前世今生，以及可能的未来</description>
      <content:encoded><![CDATA[<blockquote>
<p>Author:小云哥哥</p>
<p>Src: <a href="https://zhuanlan.zhihu.com/p/386454664">https://zhuanlan.zhihu.com/p/386454664</a></p>
</blockquote>
<p>历史语言学家有两个基本任务。第一个任务是追溯相关语言的源头——所谓的“原始语言”，说得通俗一点就是推测一下祖先们是怎么说话的。但其实除非有时光机器，否则我们不可能知道祖先的发音，构拟原始语言的最终目的是使用一个自洽的系统去解释现代亲属语言的差异。这个任务是技术活儿，需要硬功夫，语言学家必须对这些语言的各方面都了如指掌，通过多年的时间真正理解这些语言的运作（尤其是音系和形态），而不是一上来就开始尬比较。第二任务是第一个任务的衍生产品。当我们能够解释亲属语言的差异以后，我们自然而然会发现有的语言差异较小，有的语言差异较大，我们会希望知道每种差异发生的时间顺序，从而推断出亲属语言是因循什么轨迹从原始语言中分化出来的。这就是语言的谱系。</p>
<p>虽然传统的历史语言学取得了非常大的成功，但是语言学家毕竟是人，他们用人力研究为数众多的语言、处理浩如烟海的语料，总会出现这样那样的问题。比如说我们会在不少著作中看到语言学家前后标准不一致，或者分析过程描述不清晰透明等现象。有时候这些问题并不是有意为之，而是因为人确实无法预估那么多的事情，出错在所难免。</p>
<p>于是，一部分语言学家开始认识到，我们需要一个机器协助的、量化的转变。人的大脑爱耍小聪明，更擅长处理复杂而特殊的个案，而机器更像一个奴隶，可以帮人类用统一的方法处理繁多和重复的工作。那么，历史语言学家的两个任务，机器可以协助我们解决哪一个呢？原始语言的构拟还是语言的谱系？</p>
<p>事实上，这两个任务都需要很多的小聪明。如果原始语言的构拟是简单的音位比较，那么机器也许可以很快做出来。但实际操作上要比这个绕很多的弯儿，需要语言学家综合知识的灵活运用。比如索绪尔的喉音理论，就需要对梵语动词变位的深入理解，从而比较不同变位模式的内在一致，并且对音变的类型学有融会贯通的了解。这一切的运作，可能在索绪尔的脑子里一秒钟就能形成，而机器则不可能在短时间内完成喉音的构拟。我们引入机器是为了提高效率，而不是降低效率。<strong>因此，语言学家把目光转向了第二个任务，语言的谱系</strong>。历史语言学确定谱系的唯一标准是共同创新，但辨认共同创新实际上也需要深厚的研究功底，机器很难按照人类的方式分析。一个比较可行的办法是偏离历史语言学的原则，使用统计学的方式，构造出在统计学意义上最可能的谱系。</p>
<p>在这篇文章中，我就用流水账的方式梳理一下机器协助的语言谱系分析的相关历史，尤其专注于贝叶斯谱系分析。因为是流水账，所以不会分小节，我也会省去所有赶客的公式和理论描述。</p>
<br>
<h2 id="语言谱系分析">语言谱系分析</h2>
<p>较早使用统计学处理语言谱系的研究可以追溯到十九世纪前叶。不过现代的尝试最值得提的是二十世纪二十年代开始的一系列操作。波兰人类学家Czekanowski[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_1">1]</a>在1928年收集了二十多个音系、形态和词汇上的特点，研究了包括立陶宛语、古教会斯拉夫语、哥特语、古爱尔兰语、拉丁语、希腊语、吠陀梵语、阿维斯陀语和亚美尼亚语相互之间的关系。他们得出的结果其中一个错误是认为哥特语与波罗地-斯拉夫语更为接近，而不是意大利-凯尔特语。1937年，加州大学的Kroeber和Chrétien[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_2">2]</a>在前人的基础上，添加了新的数据（主要是特征性的音变和形态变化方面的数据），使参与比较的特征达到了74个。下图是Kroeber and Chrétien (1937)的统计分析</p>

<figure >
    
        <img src="img/tab_occu.jpg" width="800" />
    
    
</figure>

<p>Kroeber和Chrétien就是通过判断每一个特征是否在各种语言中出现，列出矩阵计算出各语言的相似度。他们的结果，至少从这九种语言来看，基本上与历史语言学的结果相符。但由于数据本身的局限性，他们的方法并没有被大规模地使用，并且遭到了一些批评。我不知道他们的计算是否用了机器，但是从他们并不复杂的公式来看，可能是笔算的。</p>
<p>虽然这些早期的尝试寿命并不长，但是也为量化历史语言学定下了统计学的基调，尽管在数据选取上，名义上是使用了历史语言学的结论，但是并没有使用历史语言学的分类标准，而是把这些结论转化成可以用于统计学的数据。这也是从这以后，直至现在将尽一个世纪的趋势。</p>
<blockquote>
<p>La linguistique est la science statistique type ; les statisticiens le savent bien ; la plupart des linguistes l&rsquo;ignorent encore. (Guiraud 1959: 15[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_3">3]</a>)
语言学就是典型的统计科学；统计学家心里很清楚，大部分语言学家却不知道。</p>
</blockquote>
<p>&lt;比如&gt;</p>
<h2 id="基于词汇的语言谱系分析">基于词汇的语言谱系分析</h2>
<p>1950年代，有一个长得有点喜感的中年男人，叫Morris Swadesh。他是一个美国的语言学家。身为一个历史语言学家，他并不把关注的重点放在音系和形态的变化上，而是更专注于词汇。词汇相对于音系和形态，显然是更容易操作的东西，毕竟它们就像拼好的积木，能让人一眼就辨认出来。Morris Swadesh (1909-1967)</p>

<figure >
    
        <img src="img/Morris.jpg" width="800" />
    
    
</figure>

<p>Swadesh认为不同语言中词汇的重合度很可能与语系的演化有关。这点很符合我们的直觉，基因关系较远的语言中，非同源的词汇理应越多。而且，他还假设词汇系统是按一定的速率变化的，我们只要以这个速率为基础，然后比较亲属语言的同源词的多寡，就能得到语言的谱系，同时我们还可以算出亲属语言的分裂时间。<strong>Swadesh (1950)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_4">4]</a>认为词汇的变化速率是每过1000年，一种语言想对于原本形态的同源词就会降低到原来的85%。后来这个百分比又被改为81%。 这个数字大概是基于古英语和现代英语的词汇变化确定的</strong>。</p>
<h3 id="核心词汇">核心词汇</h3>
<p>我们不可能穷尽所有的词汇，所以就需要选取一些具有代表性的词汇来简化我们的研究。Swadesh整理出一份100词的词表，现在我们称为“<strong>核心词汇</strong>”或者“<strong>基本词汇</strong>”，包括身体部位、数字、颜色、基本动作等类别，这些词汇被认为是最不容易被借用的，有较大的概率是本土词汇。</p>
<h3 id="语言断代学词汇统计学">语言断代学（词汇统计学）</h3>
<p>这么一来，如果我们发现两种亲属语言在核心词汇表上有81%的同源词，那么我们就可以认为这两种语言的分化时间是1000年。如果它们有81%×81%=65.61%的同源词，那么它们的分化时间就是2000年。这个方法我们称为Glottochronology，汉语称作“<strong>语言断代学</strong>”，它也是“<strong>词汇统计学</strong>”（lexicostatistics）的最主要方法之一。</p>
<p>为了让故事更连续，我在这里删除了其它的研究方法，比如计算词汇间Levenshtein距离，有关这方面的内容，可以看<a href="https://www.zhihu.com/question/442752699/answer/1714008582">这个回答</a>。</p>
<p>总而言之，从Swadesh开始，量化历史语言学基本上就在词汇之间徘徊，人们开始想尽办法从词汇中找到语言发展的轨迹。当然， 也有从音系/形态上考虑的（Ringe et al 2002）[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_5">5]</a>，还有从类型学上考虑的（Dunn et al 2008）[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_6">6]</a>，但始终无法摆脱或者撼动以词汇为基础的大趋势。</p>
<p>语言断代学虽然在语言谱系分析的量化上取得了较大的进展，但最终仍被认为是失败的方法。这是因为它强制规定词汇有着固定的变化速率。这一基本假设从直觉上就不符合语言的发展历程，而且没有靠谱的研究去证明，反而很容易被证伪。比如说，我们使用语言年代学的模型，我们会得到格鲁吉亚语和明格列尔语的分化年代距今约1000年左右。但实际上，它们两个的分化年代要远早于公元四到五世纪（Bergsland and Vogt 1962）[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_7">7]</a>。Swadesh本人也觉得这个方法有问题。所以逐渐人们也就不再使用语言年代学了。</p>
<p>语言断代学最大的贡献不在于它得出的结论有多正确，而是让人们看到为语言分化断代的希望，通过语言的年代来研究人类史前史成为了可能，历史语言学不再是自娱自乐地谈论古人怎么说话，而一跃成为了人类历史研究中最重要的学科之一。</p>
<p>比如说，Gray and Jordan (2000)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_8">8]</a>使用简约分析（parsimony analysis）计算出南岛语的谱系，测试了有关南岛语系起源的两个假说，“快车假说（express-train）”和“岛屿纠缠假说（entangled bank）”。他们发现快车假说与南岛语谱系树惊人吻合，从而确认了南岛语是从台湾省起源，扩散到南部各个岛屿的。</p>
<p>因为有了成功的希望，所以尽管有很多语言学家对语言的断代嗤之以鼻，另一部分语言学家仍旧在探索着新的道路。我们在这里将跳过一些不太受欢迎的研究方法，比如Ringe et al (2002)和Nakhleh et al (2005)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_9">9]</a>的“完全谱系”（perfect phylogenies）。他们跟二十世纪二三十年代的那帮人类似，使用了音系和形态方面的语料来计算，当然他们的统计学方法要先进得多。只不过，他们处理语料的方式跟前人一样，基本上就是看哪一些特征在哪一些语言中存在，并没有具体到确切的实例。</p>
<h3 id="语言变化的时钟-宽松时钟">语言变化的时钟-宽松时钟</h3>
<p>谱系分析始终只是历史语言学家的其中一个任务，更多的历史语言学家喜欢智力游戏，在构拟上下的功夫比较多，对于机器处理的谱系分析的热情没那么高。正在这时，那一边厢，生物学家们正在努力地发展更有效的断代方法。美国亚利桑那大学的演化生物学家Michael Sanderson就是其中一个代表人物。他从1997到2002发表了一系列的论文[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_10">10]</a>[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_11">11]</a>，研究了一些已知的谱系树分支的年龄，认为DNA序列的发展确实是有既定的速率，这个速率是它们内在的“时钟”决定的，在不同的分支中，时钟走动的快慢是有区别的。如果我们把这个思想代入到语言学中，我们就知道，按照Swadesh的语言年代学的方法，词汇的发展被认为有统一的“时钟”，或者叫“分子时钟”（molecular clock），我们称为“严格时钟”（strict clock），而分子生物学的最新假设则是引入了“宽松时钟”（relaxed clock），换成语言学，则是认为词汇在不同语支的替换速率并不统一，而是各有各的速率。顺便一提，Swadesh的语言年代学比分子生物学中的“分子时钟”的提出（Zuckerkandl and Pauling 1965）[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_12">12]</a>要早十年左右，但是生物学家在接受新鲜事物和创新方面要比语言学家快得多。在贝叶斯谱系分析中，Thorne et al (1998)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_13">13]</a>和Drummond et al (2006)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_14">14]</a>等人都对严格时钟的框架进行了批评和测试，并发现宽松时钟确实可以更好地模拟真实的演化过程。</p>
<p>历史语言学最终还是再次向生物学靠拢了。2003年，Gray and Atkinson (2003)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_15">15]</a>在Nature上发表了一篇文章，他们使用了贝叶斯谱系分析计算出了印欧语的谱系树，并如同之前测试南岛民族的演化历程一样，这次他们也用谱系树测试了印欧语起源的两种假说，并表示语言的谱系支持原始印欧人是安纳托利亚的农民这一种看法。下图是Gray and Atkinson (2003)的印欧语谱系树</p>

<figure >
    
        <img src="img/Hcluster.jpg" width="800" />
    
    
</figure>

<br>
<h2 id="谱系分析算法">谱系分析算法</h2>
<p>那么，语言的贝叶斯谱系分析究竟是怎么进行的呢？就像我们之前说的，词汇仍旧是基础。我们选取一个核心词汇表，然后把词汇表中的词汇翻译成我们需要解决的诸语言。当然，这一切都是建立在我们有合理理由怀疑这些语言是同属一个语系的前提下，否则我们得到的结果就没有意义。把词汇翻译成各种语言以后，我们就开始辨别同源词。我们把每一个义项下的同源词找出来，并把它们配成对儿。下图是词源词典编辑工具Edictor界面下的同源词辨认</p>

<figure >
    
        <img src="img/alignLang.jpg" width="800" />
    
    
</figure>

<p>同一个义项下，不同的语言可能呈现不同的词汇。比如汉语中，表示“EAT”这个义项的词汇在粤语和闽南语中都是来自“食”的同源词（粤语：si̍k，闽南语chia̍h），而普通话中则用“吃”来替代。那么单凭这一个词，我们用人脑都可以算出来，粤语和闽南语应该归在一个分支下，而普通话则应该属于另一个分支。</p>
<p>我们就这样把数十甚至上百种语言的同源词都标记出来，并且把它们转化为机器可读的形式。那么什么样的形式机器才可读呢？机器是不会管你每个词是怎么发音的，它只想知道某两个词是不是同源词。所以你只需要告诉它哪些词是同源词，哪些不是，就可以了。如果两个词是同源词，那么就标记一个“1”，如果不是就标记一个“0”。所以你就要做一个像下图一样的东西，全是0和1，咱们看不懂，但是机器很容易看懂：</p>

<figure >
    
        <img src="img/binary.jpg" width="800" />
    
    
</figure>

<p>看到这里，大家就明白了。贝叶斯谱系分析的数据是“同源关系”，而不是同源词本身。我们把数据喂给电脑，接下来就让电脑处理吧。</p>
<h3 id="马尔可夫链蒙特卡洛">马尔可夫链蒙特卡洛</h3>
<p>很多传统语言学家诟病，电脑处理的这个部分不透明，像在黑盒里操作一样，不放心把一切交给程序。为了解除一部分疑虑，我在这里解释一下究竟机器是怎么算谱系树的，当然，为了不赶客，下文中不会出现深奥的东西。</p>
<p>机器在得到我们这些充满0和1的数据后，会开始使用贝叶斯定理，计算出一棵谱系树的可能性。它会先随机生成一棵谱系树，这棵谱系树正确反映语言谱系的概率可想而知是非常低的，但机器就会根据输入的数据，把这个概率算出来，先记下。然后它就会改变原树的形状，生成一棵新的树，再计算出这棵树正确反映语言谱系的概率算出来，与前一棵树的概率比较。如果前一棵树的概率比较小，那么我们就保留新的这棵树。如果前一棵树的概率较大，那么说明新树比旧树还要差，因此我们就会计算前后两个概率的比值（用新的概率除以旧的概率），得到的就是接受这棵新树的概率。然后机器会一直生成新的树，一直重复着相同的比较和计算，一般我们会让机器重复上千万次的计算，从而保证生成的每一棵树的概率达到一个较为稳定的值。这个过程有个名字，叫马尔可夫链蒙特卡洛（Markov chain Monte Carlo，MCMC）。大家可以看以下这篇文章，对其中的数学做了详细介绍：</p>
<p><a href="https://zhuanlan.zhihu.com/p/420214359">https://zhuanlan.zhihu.com/p/420214359</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/420214359">而今听雨：MCMC与贝叶斯推断简介：从入门到放弃111 赞同 · 16 评论文章</a></p>
<h3 id="共识树">共识树</h3>
<p>计算完了上千万次的树以后，还要进行一个步骤。就是我们需要把前边那些低概率的树删掉一点，或者说“烧掉”（burn-in），这样我们就可以排除掉那些比较糟糕的树。最终留下的带有稳定较高概率的树的集合，就是机器为我们输出的结果。所以，我们在众多有关贝叶斯谱系分析论文中看到的树，都不是一棵树，而是成千上万棵具有相近概率的树相互妥协的结果，我们称为“共识树”（consensus tree）。</p>
<p>机器计算出的每棵树的分支都有着不同的长度。这些长度跟每一个分支末端的语言年龄是成正比的。也就是说，单凭这些分支的长度，我们只能知道语言之间年龄的比值，而我们想知道的却是它们精确到年的真正年龄。这就需要我们找到一个参考点，或者一个称为prior的东西。Prior可以是对得出最佳谱系有利的任何参考数据，而针对语言谱系的年龄，最理想的prior就是语言被记录的时间。比如，我们知道书面藏语是1300多年前被记录的，那么我们就为书面藏语标记1300年的年龄。这样的信息越多，那么计算出来的年龄就会越准确。软件会结合分支的长度与我们给出的年龄信息，推算出其它语言的年龄。这样我们带有年龄的谱系树就产生了。</p>
<h3 id="densitree">Densitree</h3>
<p>即便有了年龄，共识树还是共识树，我们不能把它看作一棵单一的谱系树，这也是许多人看这类文章的误区。其实，除了这棵共识树，机器还能给我们提供另一种树，叫做Densitree。Densitree可以把所有谱系树中冲突的部分可视化，让我们看到究竟哪里出了问题。Densitree看起来还是很美观的， 是无数线条的集合。下图中展示的Sagart et al (2019)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_16">16]</a>汉藏语谱系的Densitree，显示了计算过程中出现的非树形结构。一个完美的树形结构中，每一种语言应该只被一条线连接，但是我们看到在这棵树上，有不少语言被深浅不一的线群连接了，比如比较严重的有Chepang、Tshangla、Dulong等语言。存在这一类非树状信息的一大原因在于我们没有完全正确地辨认同源词，而是被部分表面现象骗了，把借词也算成同源词，也提醒我们重新审视我们的同源词判定。Sagart et al (2019)汉藏语谱系的Densitree</p>

<figure >
    
        <img src="img/hcluster2.jpg" width="800" />
    
    
</figure>

<p>所以，我们除了看共识树以外，还要注意看densitree，densitree里有更多有用的信息。大部分人对于贝叶斯谱系分析，或者任何谱系分析的诟病都是基于最后的结论，极少注意到这些研究的数据结构和分析方法，甚至连结论都没有看全。因此，我呼吁大家除了看短短的正文，还要注意看文章的补充材料。</p>
<br>
<h2 id="贝叶斯谱系分析是不是语言学">贝叶斯谱系分析是不是语言学？</h2>
<p>语言学的贝叶斯谱系分析基本上就是如上述方式进行的，希望这样的描述足够通俗易懂。如果你们看懂了，你们可能会产生这一个疑问：究竟贝叶斯谱系分析跟传统历史语言学的结合有多紧密？这样子做出的语言谱系，究竟是不是语言学？</p>
<p>首先，我们应该明确，至少在语言学上，谱系分析的作用不是告诉我们确切的谱系，而是给我们一个有关语言谱系的参考，是辅助历史语言学研究的工具，而不能代替历史语言学本身。比如说，我们推测出的汉藏语系的谱系可以帮我们确立今后汉藏语系历史语言学研究的大方向，因为我们知道了哪些语言更可能属于同一分支，那么我们就可以根据这些线索和思路有针对性的研究。</p>
<p>贝叶斯语言谱系分析全过程中跟历史语言学有关的部分当然是前期的数据准备过程。这一过程需要历史语言学家判断同源词。如果研究对象是一个我们了解得比较深入的语系，比如印欧语系，我们判断同源词的标准当然是严格遵守历史语言学的原则的。但如果是像汉藏语系这种我们基本不了解的语系，判断同源词的时候很大程度上是靠猜测，有经验的语言学家比没有经验的一般人猜测的准确率自然会高出不少，但也不能完全保证准确。判断同源词的过程必须主要由人工处理。虽然现在也有不少判断同源词的工具和程序，但这些工具大部分基于词汇的相似性，但同源词、尤其是庞大语系下相距较远语言中的同源词往往不相似。比如拉丁语的duus和亚美尼亚语的erk是同源词，除非能把所有的音变告诉机器，否则机器是不可能把它们俩判断为同源词的。对于超级大的语系，判断同源词的工作可能长达数月，也需要好几个历史语言学家的商量与合作。做好同源词的数据后，我们就把一切复杂的计算交给电脑，等它算个几天，这一部分就脱离了传统语言学，进行纯粹统计学的计算了。</p>
<p>在得到谱系树之后，我们还可以进行后续的历史语言学研究，并把历史语言学的结论与贝叶斯谱系树进行比较。比如说，Birchall et al (2016)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_17">17]</a>就为Chapacruan语系的语言做了一个贝叶斯谱系分析，并同时使用音变创新手动得出了另一个谱系树，并对两棵树进行了比较研究，发现贝叶斯谱系分析得出的结论与手动做出的谱系树还是比较吻合的。又比如，在Sagart et al (2019)的汉藏语谱系发表后，项目成员又发表了一些后续的历史语言学研究与其遥相呼应，比如Lai et al (2020)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_18">18]</a>对西夏语谱系地位的研究，以及Jacques et Pellard (2021)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_19">19]</a>对羌缅语的分析。</p>
<p>虽然贝叶斯谱系分析的前前后后都少不了历史语言学的工作，但两者始终没有完全融合在一起，在整个研究中交集并不多，而是有着明显的分工。这一个弱点也经常被人们攻击。而且，贝叶斯谱系分析直到今天，都在使用语言学家们较为不喜欢的核心词汇作为基础，而词汇绝不能与生物学中的DNA序列相提并论，音系和形态才可以。</p>
<p>那么为什么我们坚持使用词汇呢？我在这里谈两个原因。</p>
<p>第一，词汇被认为可以涵盖历史语言学的大部分工作，并且容易操作。我们判断同源词的时候，自然要考虑到音变的规律性和对应关系，有时甚至要倒推形态，有时还要进行简单的构拟，这些工作都体现在同源词的判别中，因此我们选用词汇，并不是完全无视传统历史语言学，而是因为词汇的比较是传统历史语言学的“精华”。</p>
<p>第二，词汇的替换是可以无限进行下去的，而且词汇替换的速率已经被证明可以用一定的模型去模拟。而音变则是比较有方向性的，有的音变一旦发生，可能就没办法回头了，比如p &gt; f的音变很容易发生，而f &gt; p的音变则极少发生。另外，音变可以很快，也可以很慢，它们究竟能不能模拟也是一大问题。</p>
<p>因此，大部分语言学家在谱系分析时，都在如何更好地标记词汇上下功夫。以同源词关系为基础的谱系分析可以在较大的语系下取得成功，但如果我们要研究时间深度较浅的小分支，很可能就没那么得心应手了。</p>
<p>比如我们要研究官话的谱系，大部分官话的核心词汇都差不多，词汇替换的现象比较少，那么我们喂给机器的数据库可能大部分都是“1”，这样我们可能会得到许多平行的分支，而不是一棵有结构的树。用贝叶斯谱系分析做出的官话谱系，可能不会比白一平（2006）[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_20">20]</a>用最大简约法做出的官话谱系进步多少。再者，目前的贝叶斯分析也并非能对大语系完全掌控，比如说，Gray and Atkinson (2003)的印欧语谱系树最让人看不过眼的一点就是斯拉夫语的分类，大家可以自行上滑到他们的印欧语谱系树上，找找波兰语在哪里。</p>
<p>再举一个极端的例子，假设两种语言互相不能通话（发生了重要的音变），但所有核心词汇都是同源词，没有发生词汇替换，那么机器将认为这两种语言是同一种语言。尽管这样极端的情况在现实世界中不会发生，尽管每一种研究方法都有它的不足之处，但我们应该事先考虑到突发状况的解决办法。这就是未来我们需要解决的问题。</p>
<p>贝叶斯谱系分析在语言学上的应用已经差不多二十年了，但这二十年间，研究方法上的突破并不显著。人们当然知道这样的分析存在的问题，但是实际研究上，却很难去解决。比如在词汇替换中，有一种情况可能只有词汇的一部分被替换了，那么我们究竟是赋“1”呢，还是赋“0”呢？Hill and List (2017)[<a href="https://zhuanlan.zhihu.com/p/386454664#ref_21">21]</a>倒是提出了一个解决方案，他们开发了“部分同源词”（partial cognate）的标记方法，这种方法支持把一个词拆开，只标记同源的部分。如下图中，缅语支诸语言的“羽毛”一词，都可以分析称两个词素，我们可以把这两个词素拆开，分别标记同源关系。</p>

<figure >
    
        <img src="img/tokens.jpg" width="800" />
    
    
</figure>

<p>部分同源词的标记实际上已经向基于形态的谱系分析迈进了一步，虽然它并没有真正触及到复杂的形态变化，但至少在尝试为合成词的问题寻求合理的解决方法。部分同源词的标记通过实验证明是可行的，但是目前并没有很多真枪实弹的研究成果发表出来。</p>
<p>如果没有部分同源词的标记，贝叶斯谱系分析其实已经开始变得有点无聊，即便有了部分同源词标记，也并不能把它的有趣续命太久，毕竟这一步迈得也不大。当我们知道一个方法远没有达到理想的程度，但又不断原地打转时，我们就会自然而然地感到焦虑。</p>
<p>未来的贝叶斯谱系分析的重点必然在于我们处理数据的方式，如何融入更多的历史语言学原则是我们需要思考的。在上文中，我们已经提到，目前声称把语言学和贝叶斯谱系结合在一起的研究无非就是分别用贝叶斯做一个，再用语言学做一个，然后再进行定性的比较。这种方法是绝不能让人满意的。我们需要更加无缝的衔接。</p>
<p>另外，回归到1930年代或者Ringe et al (2002)和Nakhleh et al (2005)的“完全谱系”那种基于音系和形态特征的谱系分析似乎也是不可取的。因为这些研究对具体数据的处理完全不够，仅仅是从前人的作品里选出一部分可能对分类有用的特征进行计算，这中间仍会有许多不清晰的地方。</p>
<p>最理想的情景是从语料入手，自然地融入同源词判定以及音系、形态上的创新，让机器根据各语言创新的情况来计算出谱系树。这样不仅仅能大大增加研究的客观性和透明性——单纯的同源词判定的主观因素占比非常严重，而使用创新为依据可以让读者更直接地找出潜在的问题，而且可以让谱系分析有更强大的理论背景。</p>
<br>
<h2 id="最后">最后</h2>
<p>恰好，昨天（2021年7月6日），我在我们所的部门会议上谈到了这个问题，Gray and Atkinson (2003)的作者之一，Russell Gray，也是我们的部门主任，也谈了他的想法。他非常愿意看到新的贝叶斯谱系的方案，不过他承认即便在印欧语的谱系研究中，完全融合语言各层面的数据也是极难做到的。我解释道我不是想完全放弃以词汇的同源关系为基础的谱系分析，而是希望能通过音系和形态，去检验词汇同源关系所无法得到的细节。我的预感是，如果我们融入了音系/形态的创新，得出的结果中，非树状信号会大大减少，并帮我们检查同源词判定究竟在哪里出现了问题。</p>
<p>流水账就写到这里吧。我想大家在这篇流水账中看到的中心思想，是通过量化谱系分析的发展史，看到研究方法一步一步的变迁，以及它们遇到的困难和存在的问题。我们应该知道，评价这类研究的重点在于它们的方法，而不仅仅局限于结论——因为结论必然是有问题的，即便我们得到了一棵完美全对的谱系树，它仍旧是存在问题的，因为它并非完全基于历史语言学理论，而很大程度基于概率，它的完美只是概率问题（有时候太漂亮的结果，也是我们担心的来源之一）。只有对数据处理的方法不断地改进，才有可能把我们带向最真实的谱系分析。</p>
<p>谱系分析是历史语言学研究中的一个强大的辅助，尤其是它自带断代的特征，可以让我们更好地追溯人类的历史。因此今后的历史语言学家对机器协助的谱系研究会更加上心，争取让既有的历史语言学理论与新兴的技术更加默契地配合。这也是我的愿望列表上的一项，在今后数年的研究中会作出各种各样的尝试。</p>
<br>
<h2 id="参考">参考</h2>
<ol>
<li>Jan Czekanowski, Na Marginesie Recenzji P. K. Moszyiskiego o Ksigtce: Wstep do Historji Slowian. Lud, Series II, vol. VII (1928).</li>
<li>Kroeber, A., &amp; Chrétien, C. (1937). Quantitative Classification of Indo-European Languages. Language, 13(2), 83-103. doi:10.2307/408715</li>
<li>Guiraud, Pierre (1959), Problèmes et méthodes de la statistique linguistique, D. Reidel, Publishing Company, Dordrecht, Holland.</li>
<li>Swadesh, M. (1950). Salish internal relationships. International Journal of American Linguistics, 16(4), 157-167.</li>
<li>Ringe, D., Warnow, T., &amp; Taylor, A. (2002). Indo‐European and computational cladistics. Transactions of the philological society, 100(1), 59-129.</li>
<li>Dunn, M., Levinson, S. C., Lindström, E., Reesink, G., &amp; Terrill, A. (2008). Structural phylogeny in historical linguistics: Methodological explorations applied in Island Melanesia. Language, 710-759.</li>
<li>Bergsland, K., &amp; Vogt, H. (1962). On the validity of glottochronology. Current anthropology, 3(2), 115-153.</li>
<li>Gray, R. D., &amp; Jordan, F. M. Language trees support the express-train sequence of Austronesian expansion, 2000. Nature, 405, 1052.</li>
<li>Nakhleh, L., Ringe, D., &amp; Warnow, T. (2005). Perfect phylogenetic networks: A new methodology for reconstructing the evolutionary history of natural languages. Language, 382-420.</li>
<li>Sanderson, M. J. (1997). A nonparametric approach to estimating divergence times in the absence of rate constancy. Molecular biology and evolution, 14(12), 1218-1231.</li>
<li>Sanderson, M. 2002 Estimating absolute rates of evo- lution and divergence times: a penalized likelihood approach. Mol. Biol. Evol. 19, 101–109.</li>
<li>Zuckerkandl, E., &amp; Pauling, L. (1965). Evolutionary divergence and convergence in proteins. In Evolving genes and proteins (pp. 97-166). Academic Press.</li>
<li>Thorne, J. L., Kishino, H., &amp; Painter, I. S. (1998). Estimating the rate of evolution of the rate of molecular evolution. Molecular biology and evolution, 15(12), 1647-1657.</li>
<li>Drummond, A. J., Ho, S. Y. W., Phillips, M. J. &amp; Rambaut, A. 2006 Relaxed phylogenies and dating with confidence. PLoS Biol. 4, e88. 699 – 710. (doi:10.1371/ journal.pbio.0040088)</li>
<li>Gray, R. D., &amp; Atkinson, Q. D. (2003). Language-tree divergence times support the Anatolian theory of Indo-European origin. Nature, 426(6965), 435-439.</li>
<li>Sagart, L., Jacques, G., Lai, Y., Ryder, R. J., Thouzeau, V., Greenhill, S. J., &amp; List, J. M. (2019). Dated language phylogenies shed light on the ancestry of Sino-Tibetan. Proceedings of the National Academy of Sciences, 116(21), 10317-10322.</li>
<li>Birchall, J., Dunn, M., &amp; Greenhill, S. J. (2016). A combined comparative and phylogenetic analysis of the Chapacuran language family. International Journal of American Linguistics, 82(3), 255-284.</li>
<li>Lai, Yunfan., Gong, Xun., Gates, Jesse. P., &amp; Jacques, Guillaume. (2020). Tangut as a West Gyalrongic language. Folia Linguistica Historica, 54(s41), 171-203.</li>
<li>Jacques, G., &amp; Pellard, T. (2021). Phylogenies based on lexical innovations refute the Rung hypothesis. Diachronica, 38(1), 1-24.</li>
<li>Baxter, W. H. (2006). Mandarin dialect phylogeny. Cahiers de linguistique-Asie orientale, 35(1), 71-114.</li>
<li>Hill, N. W., &amp; List, J. M. (2017, September). Challenges of annotation and analysis in computer-assisted language comparison: A case study on Burmish languages. In Yearbook of the Poznan Linguistic Meeting (Vol. 3, No. 1, pp. 47-76). De Gruyter Open.</li>
</ol>
<h2 id="录播课">录播课</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Python与文化分析入门</title>
      <link>https://hidadeng.github.io/blog/culture_analysis/</link>
      <pubDate>Fri, 31 Dec 2021 12:43:10 +0600</pubDate>
      
      <guid>/blog/culture_analysis/</guid>
      <description> 如何使用 Python 来研究文化领域的数据，例如歌词、短篇小说、报纸文章、推文、Reddit 帖子和电影剧本。 它还介绍了网络抓取、API、主题建模、命名实体识别 (NER)、网络分析和映射等计算方法。这些材料最初是为了支持“**文化分析简介：数据、计算和文化**”，这是康奈尔大学和华盛顿大学教授的本科课程。</description>
      <content:encoded><![CDATA[<h2 id="introduction-to-cultural-analytics--python">Introduction to Cultural Analytics &amp; Python</h2>
<p>Designed by <a href="https://melaniewalsh.org/">Melanie Walsh</a> // Powered by <a href="https://jupyterbook.org/">Jupyter Book</a></p>
<p>该项目仓库托管了在线教科书 <strong>Introduction to Cultural Analytics &amp; Python</strong> 里的代码，主要面向人文社科人群设计的Python编程语言书</p>
<p>这本书展示了如何使用 Python 来研究文化领域的数据，例如歌词、短篇小说、报纸文章、推文、Reddit 帖子和电影剧本。 它还介绍了网络抓取、API、主题建模、命名实体识别 (NER)、网络分析和映射等计算方法。</p>
<p>这些材料最初是为了支持“<strong>文化分析简介：数据、计算和文化</strong>”，这是康奈尔大学和华盛顿大学教授的本科课程。</p>
<br>
## 章节列表
## 数据集
## 命令行
<br>
<h2 id="python语法">Python语法</h2>
<ul>
<li>安装Python</li>
<li>如何使用Jupyter Notebook</li>
<li>变量</li>
<li>数据类型</li>
<li>字符串方法</li>
<li>比较逻辑运算</li>
<li>循环</li>
<li>函数</li>
<li>文件编码</li>
<li>常见Python错误</li>
<li>Jupyter使用技巧
<br></li>
</ul>
<h2 id="数据分析">数据分析</h2>
<ul>
<li>Pandas基本操作</li>
<li>合并数据
<br></li>
</ul>
<h2 id="数据采集">数据采集</h2>
<ul>
<li>法律风险</li>
<li>网络爬虫</li>
<li>API</li>
<li>案例-采集歌词</li>
<li>案例-twitter</li>
<li>案例-Reddit
<br></li>
</ul>
<h2 id="文本分析">文本分析</h2>
<ul>
<li>TF-IDf</li>
<li>情感分析</li>
<li>话题模型</li>
<li>命名实体识别</li>
<li>词性
<br></li>
</ul>
<h2 id="网络分析">网络分析</h2>
<ul>
<li>bokeh网络可视化
<br></li>
</ul>
<h2 id="资料下载">资料下载</h2>
<p><a href="https://github.com/hiDaDeng/Intro-Cultural-Analytics/archive/refs/heads/master.zip">https://github.com/hiDaDeng/Intro-Cultural-Analytics/archive/refs/heads/master.zip</a></p>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>免费社科类Python编程课程列表</title>
      <link>https://hidadeng.github.io/blog/course_recommendation_about_social_science/</link>
      <pubDate>Fri, 31 Dec 2021 11:43:10 +0600</pubDate>
      
      <guid>/blog/course_recommendation_about_social_science/</guid>
      <description>&lt;h2 id=&#34;文化分析python&#34;&gt;文化分析&amp;amp;Python&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://melaniewalsh.github.io/Intro-Cultural-Analytics/welcome.html&#34;&gt;https://melaniewalsh.github.io/Intro-Cultural-Analytics/welcome.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本书对应于康奈尔大学和华盛顿大学教授的本科课程《&lt;strong&gt;文化分析简介：数据、计算和文化&lt;/strong&gt;》，主要介绍了&lt;strong&gt;如何使用 Python 来研究文化材料&lt;/strong&gt;，例如歌词、短篇小说、报纸文章、推文、Reddit 帖子和电影剧本。 它还介绍了网络抓取、API、主题建模、命名实体识别 (NER)、网络分析和映射等计算方法。&lt;/p&gt;
&lt;p&gt;这些材料最初是为了支持“”，这是。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;什么是文化分析？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文化分析是用计算方法研究文化。 文化是一个广义的术语，包括文学、历史、政治、艺术、音乐、社交媒体等等。 文化分析是数字人文和信息科学等领域不断发展的研究领域。&lt;/p&gt;

&lt;figure &gt;
    
        &lt;img src=&#34;img/culturePython.png&#34; width=&#34;100%&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;br&gt;
&lt;h2 id=&#34;计算和推理思维数据科学基础&#34;&gt;计算和推理思维:数据科学基础&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Computational and Inferential Thinking: The Foundations of Data Science&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://inferentialthinking.com/chapters/intro.html&#34;&gt;https://inferentialthinking.com/chapters/intro.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;加州大学伯克利分校数据科学基础课程结合了三个观点：&lt;strong&gt;推理思维、计算思维和现实世界的相关性&lt;/strong&gt;。 给定来自某些现实世界现象的数据，如何分析该数据以了解该现象？ 该课程教授计算机编程和统计推断方面的关键概念和技能，并结合对现实世界数据集的动手分析，包括经济数据、文档集、地理数据和社交网络。 它深入探讨了围绕数据分析的社会问题，例如隐私和设计。该课程是与伯克利数据科学部合作提供的。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;使用-pysal-和-pydata-堆栈的地理数据科学&#34;&gt;使用 PySAL 和 PyData 堆栈的地理数据科学¶&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://geographicdata.science/book/intro.html&#34;&gt;https://geographicdata.science/book/intro.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;地理数据无处不在。总体而言，社会过程、物理环境和个人行为在其地理模式、结构和间隔方面表现出惊人的规律性&lt;/strong&gt;。随着与这些系统相关的数据在范围、强度和深度上的增长，从位置等常见地理属性中提取有意义的见解变得更加重要，而且如何利用标准数据科学中不太常见的拓扑属性（例如关系）也变得更加重要。&lt;/p&gt;
&lt;p&gt;本书介绍了一种思考地理挑战的新方法， 如&lt;strong&gt;空间自相关(Spatial Autocorrelation)、点模式分析(Point Pattern Analysis)&lt;/strong&gt;。使用地理分析和计算推理，它向读者展示了如何解开隐藏在数据中的新见解。本书围绕 Python 中可用的优秀数据科学环境构建，提供示例和工作分析供读者复制、适应、扩展和改进。&lt;/p&gt;

&lt;figure &gt;
    
        &lt;img src=&#34;img/GeoPython.png&#34; width=&#34;100%&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;br&gt;
&lt;h2 id=&#34;心理科学python编程&#34;&gt;心理科学Python编程&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://lukas-snoek.com/introPy/index.html&#34;&gt;https://lukas-snoek.com/introPy/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;阿姆斯特丹大学为心理学硕士研究生开设的，是为期 4 周的“心理科学编程”课程的一部分，从两周的 R 编程开始，之后学生可以在剩下的两周内选择两个主题之一：高级 R 或 Python/PsychoPy（本课程） 。因此，本 Python/PsychoPy 课程假设学生熟悉基本的编程概念（例如条件、循环和函数）。 在本课程的第 1 周，我们将深入研究 Python 特定的主题（至少与 R 相比），例如面向对象编程和最重要的数据处理包（包括 pandas、numpy 和 matplotlib）。 在第 2 周，我们将讨论如何使用 PsychoPy 软件包通过其图形界面 (Builder) 和 Python 界面 (Coder) 创建实验。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;openpifpaf用于语义关键点检测和时空关联的复合字段&#34;&gt;OpenPifPaf：用于语义关键点检测和时空关联的复合字段&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OpenPifPaf: Composite Fields for Semantic Keypoint Detection and Spatio-Temporal Association&lt;/li&gt;
&lt;/ul&gt;

&lt;figure &gt;
    
        &lt;img src=&#34;img/openpifpaf.jpeg&#34; width=&#34;100%&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;br&gt;
&lt;h2 id=&#34;经济和金融领域的-python-编程&#34;&gt;经济和金融领域的 Python 编程&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://quantecon.org/python-lectures/&#34;&gt;https://quantecon.org/python-lectures/&lt;/a&gt;&lt;/p&gt;

&lt;figure &gt;
    
        &lt;img src=&#34;img/quanecon.png&#34; width=&#34;100%&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://python.quantecon.org/intro.html&#34;&gt;https://python.quantecon.org/intro.html&lt;/a&gt;&lt;/p&gt;

&lt;figure &gt;
    
        &lt;img src=&#34;img/quanecon2.png&#34; width=&#34;100%&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;br&gt;
&lt;h2 id=&#34;信用卡欺诈机器学习识别&#34;&gt;信用卡欺诈机器学习识别&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://fraud-detection-handbook.github.io/fraud-detection-handbook/Foreword.html&#34;&gt;https://fraud-detection-handbook.github.io/fraud-detection-handbook/Foreword.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ML 技术在支付卡欺诈检测系统中的集成大大提高了它们更有效地检测欺诈的能力，并协助支付处理中介识别非法交易。尽管近年来欺诈交易的数量不断增加，但欺诈造成的损失百分比在 2016 年开始下降，这是与 ML 解决方案越来越多地采用相关的反向趋势。 [rep19]。除了帮助节省资金外，实施基于机器学习的欺诈检测系统如今已成为机构和公司赢得客户信任的必要条件。&lt;/p&gt;
&lt;p&gt;在这个用于卡欺诈检测的机器学习新领域中，一个被广泛认可和反复出现的问题是关于该主题 [LJ20,PP19,PL18,ZAM+16] 发表的大多数研究工作&lt;strong&gt;缺乏可重复性&lt;/strong&gt;。一方面，支付卡交易数据缺乏可用性，出于保密原因不能公开共享。另一方面，作者没有做出足够的努力来提供他们的代码并使他们的结果可重现。&lt;/p&gt;
&lt;p&gt;本书所介绍的一些技术，例如处理&lt;strong&gt;类别不平衡、模型集成或概念漂移&lt;/strong&gt;的技术，被广泛认为是信用卡欺诈检测系统设计的重要组成部分。我们还涵盖了我们认为值得更多关注的记录较少的主题。其中包括建模过程的特定设计方面，例如性能指标和验证策略的选择，以及有前景的预处理和学习策略，例如特征嵌入、主动学习和迁移学习。虽然本书侧重于支付卡欺诈，但我们相信本书中介绍的大多数技术和讨论对从事更广泛的欺诈检测主题的其他从业者有用。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;音乐分类超越监督学习走向现实世界的应用&#34;&gt;音乐分类：超越监督学习，走向现实世界的应用&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://music-classification.github.io/tutorial/landing-page.html&#34;&gt;https://music-classification.github.io/tutorial/landing-page.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;音乐分类是一项&lt;strong&gt;音乐信息检索&lt;/strong&gt; (MIR) 任务，其目标是对音乐语义的计算理解。 对于给定的歌曲，分类器预测相关的音乐属性。 根据任务定义，分类任务几乎是无限的——从流派、情绪和乐器到更广泛的概念，包括音乐相似性和音乐偏好。 检索到的信息可以进一步用于许多应用，包括音乐推荐、策展、播放列表生成和语义搜索。&lt;/p&gt;

&lt;figure &gt;
    
        &lt;img src=&#34;img/musicclassification.png&#34; width=&#34;100%&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;广而告之&#34;&gt;广而告之&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<h2 id="文化分析python">文化分析&amp;Python</h2>
<p><a href="https://melaniewalsh.github.io/Intro-Cultural-Analytics/welcome.html">https://melaniewalsh.github.io/Intro-Cultural-Analytics/welcome.html</a></p>
<p>本书对应于康奈尔大学和华盛顿大学教授的本科课程《<strong>文化分析简介：数据、计算和文化</strong>》，主要介绍了<strong>如何使用 Python 来研究文化材料</strong>，例如歌词、短篇小说、报纸文章、推文、Reddit 帖子和电影剧本。 它还介绍了网络抓取、API、主题建模、命名实体识别 (NER)、网络分析和映射等计算方法。</p>
<p>这些材料最初是为了支持“”，这是。</p>
<ul>
<li><strong>什么是文化分析？</strong></li>
</ul>
<p>文化分析是用计算方法研究文化。 文化是一个广义的术语，包括文学、历史、政治、艺术、音乐、社交媒体等等。 文化分析是数字人文和信息科学等领域不断发展的研究领域。</p>

<figure >
    
        <img src="img/culturePython.png" width="100%" />
    
    
</figure>

<br>
<h2 id="计算和推理思维数据科学基础">计算和推理思维:数据科学基础</h2>
<blockquote>
<p>Computational and Inferential Thinking: The Foundations of Data Science</p>
</blockquote>
<p><a href="https://inferentialthinking.com/chapters/intro.html">https://inferentialthinking.com/chapters/intro.html</a></p>
<p>加州大学伯克利分校数据科学基础课程结合了三个观点：<strong>推理思维、计算思维和现实世界的相关性</strong>。 给定来自某些现实世界现象的数据，如何分析该数据以了解该现象？ 该课程教授计算机编程和统计推断方面的关键概念和技能，并结合对现实世界数据集的动手分析，包括经济数据、文档集、地理数据和社交网络。 它深入探讨了围绕数据分析的社会问题，例如隐私和设计。该课程是与伯克利数据科学部合作提供的。</p>
<br>
<h2 id="使用-pysal-和-pydata-堆栈的地理数据科学">使用 PySAL 和 PyData 堆栈的地理数据科学¶</h2>
<p><a href="https://geographicdata.science/book/intro.html">https://geographicdata.science/book/intro.html</a></p>
<p><strong>地理数据无处不在。总体而言，社会过程、物理环境和个人行为在其地理模式、结构和间隔方面表现出惊人的规律性</strong>。随着与这些系统相关的数据在范围、强度和深度上的增长，从位置等常见地理属性中提取有意义的见解变得更加重要，而且如何利用标准数据科学中不太常见的拓扑属性（例如关系）也变得更加重要。</p>
<p>本书介绍了一种思考地理挑战的新方法， 如<strong>空间自相关(Spatial Autocorrelation)、点模式分析(Point Pattern Analysis)</strong>。使用地理分析和计算推理，它向读者展示了如何解开隐藏在数据中的新见解。本书围绕 Python 中可用的优秀数据科学环境构建，提供示例和工作分析供读者复制、适应、扩展和改进。</p>

<figure >
    
        <img src="img/GeoPython.png" width="100%" />
    
    
</figure>

<br>
<h2 id="心理科学python编程">心理科学Python编程</h2>
<p><a href="https://lukas-snoek.com/introPy/index.html">https://lukas-snoek.com/introPy/index.html</a></p>
<p>阿姆斯特丹大学为心理学硕士研究生开设的，是为期 4 周的“心理科学编程”课程的一部分，从两周的 R 编程开始，之后学生可以在剩下的两周内选择两个主题之一：高级 R 或 Python/PsychoPy（本课程） 。因此，本 Python/PsychoPy 课程假设学生熟悉基本的编程概念（例如条件、循环和函数）。 在本课程的第 1 周，我们将深入研究 Python 特定的主题（至少与 R 相比），例如面向对象编程和最重要的数据处理包（包括 pandas、numpy 和 matplotlib）。 在第 2 周，我们将讨论如何使用 PsychoPy 软件包通过其图形界面 (Builder) 和 Python 界面 (Coder) 创建实验。</p>
<br>
<h2 id="openpifpaf用于语义关键点检测和时空关联的复合字段">OpenPifPaf：用于语义关键点检测和时空关联的复合字段</h2>
<ul>
<li>OpenPifPaf: Composite Fields for Semantic Keypoint Detection and Spatio-Temporal Association</li>
</ul>

<figure >
    
        <img src="img/openpifpaf.jpeg" width="100%" />
    
    
</figure>

<br>
<h2 id="经济和金融领域的-python-编程">经济和金融领域的 Python 编程</h2>
<p><a href="https://quantecon.org/python-lectures/">https://quantecon.org/python-lectures/</a></p>

<figure >
    
        <img src="img/quanecon.png" width="100%" />
    
    
</figure>

<p><a href="https://python.quantecon.org/intro.html">https://python.quantecon.org/intro.html</a></p>

<figure >
    
        <img src="img/quanecon2.png" width="100%" />
    
    
</figure>

<br>
<h2 id="信用卡欺诈机器学习识别">信用卡欺诈机器学习识别</h2>
<p><a href="https://fraud-detection-handbook.github.io/fraud-detection-handbook/Foreword.html">https://fraud-detection-handbook.github.io/fraud-detection-handbook/Foreword.html</a></p>
<p>ML 技术在支付卡欺诈检测系统中的集成大大提高了它们更有效地检测欺诈的能力，并协助支付处理中介识别非法交易。尽管近年来欺诈交易的数量不断增加，但欺诈造成的损失百分比在 2016 年开始下降，这是与 ML 解决方案越来越多地采用相关的反向趋势。 [rep19]。除了帮助节省资金外，实施基于机器学习的欺诈检测系统如今已成为机构和公司赢得客户信任的必要条件。</p>
<p>在这个用于卡欺诈检测的机器学习新领域中，一个被广泛认可和反复出现的问题是关于该主题 [LJ20,PP19,PL18,ZAM+16] 发表的大多数研究工作<strong>缺乏可重复性</strong>。一方面，支付卡交易数据缺乏可用性，出于保密原因不能公开共享。另一方面，作者没有做出足够的努力来提供他们的代码并使他们的结果可重现。</p>
<p>本书所介绍的一些技术，例如处理<strong>类别不平衡、模型集成或概念漂移</strong>的技术，被广泛认为是信用卡欺诈检测系统设计的重要组成部分。我们还涵盖了我们认为值得更多关注的记录较少的主题。其中包括建模过程的特定设计方面，例如性能指标和验证策略的选择，以及有前景的预处理和学习策略，例如特征嵌入、主动学习和迁移学习。虽然本书侧重于支付卡欺诈，但我们相信本书中介绍的大多数技术和讨论对从事更广泛的欺诈检测主题的其他从业者有用。</p>
<br>
<h2 id="音乐分类超越监督学习走向现实世界的应用">音乐分类：超越监督学习，走向现实世界的应用</h2>
<p><a href="https://music-classification.github.io/tutorial/landing-page.html">https://music-classification.github.io/tutorial/landing-page.html</a></p>
<p>音乐分类是一项<strong>音乐信息检索</strong> (MIR) 任务，其目标是对音乐语义的计算理解。 对于给定的歌曲，分类器预测相关的音乐属性。 根据任务定义，分类任务几乎是无限的——从流派、情绪和乐器到更广泛的概念，包括音乐相似性和音乐偏好。 检索到的信息可以进一步用于许多应用，包括音乐推荐、策展、播放列表生成和语义搜索。</p>

<figure >
    
        <img src="img/musicclassification.png" width="100%" />
    
    
</figure>

<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用文本相似度可以识别变化的时间点</title>
      <link>https://hidadeng.github.io/blog/text_sim/</link>
      <pubDate>Thu, 30 Dec 2021 12:43:10 +0600</pubDate>
      
      <guid>/blog/text_sim/</guid>
      <description>用漂亮国大统领报告(演讲)做政策连续性分析&amp;amp;可视化</description>
      <content:encoded><![CDATA[<p>使用文本相似度可以识别变化的时间点，先配置环境</p>
<h2 id="代码下载codezip"><a href="code.zip">代码下载</a></h2>
<br>
<h2 id="配置环境">配置环境</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">scikit</span><span class="o">-</span><span class="n">learn</span><span class="o">==</span><span class="mf">1.0</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">cntext</span><span class="o">==</span><span class="mf">1.2</span> 

<span class="c1"># 安装pyecharts可视化</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">pyecharts</span><span class="o">==</span><span class="mf">1.6.2</span>
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">pyecharts</span><span class="o">-</span><span class="n">javascripthon</span><span class="o">==</span><span class="mf">0.0.6</span>              
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">pyecharts</span><span class="o">-</span><span class="n">jupyter</span><span class="o">-</span><span class="n">installer</span><span class="o">==</span><span class="mf">0.0.3</span>              
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">pyecharts</span><span class="o">-</span><span class="n">snapshot</span><span class="o">==</span><span class="mf">0.2.0</span> 
</code></pre></div><br>
<h2 id="1-查看数据">1. 查看数据</h2>
<p>本次使用sotu数据集，收集了从1790年至2018年国情咨文文本，这是漂亮国大统领每年发表的演讲，用于描述国家过去的成就和未来面临的挑战。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;sotu.csv&#39;</span><span class="p">)</span>
<span class="c1">#text2是text向下顺移1位的结果</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;text2&#39;</span><span class="p">]</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shift</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="c1">#剔除空字符</span>
<span class="n">df</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">tail</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/df.png" width="800" />
    
    
</figure>

<p>两段文本的相似度可以通过cos计算</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">cntext.similarity</span> <span class="kn">import</span> <span class="n">similarity_score</span>

<span class="n">text1</span> <span class="o">=</span> <span class="s1">&#39;Mr. Speaker, Mr. Vice President, members of&#39;</span>
<span class="n">text2</span> <span class="o">=</span> <span class="s1">&#39;Thank you very much. Mr. Speaker, Mr. Vice&#39;</span>

<span class="n">similarity_score</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>{'Sim_Cosine': 0.4629100498862757,
 'Sim_Jaccard': 0.3,
 'Sim_MinEdit': 16,
 'Sim_Simple': 0.9619883040935673}
</code></pre>
<br>
<h2 id="2-相似度可视化">2. 相似度可视化</h2>
<p>如果把很多个相邻文本(有时间先后顺序)依次计算相似度，可以绘制出曲线，我们根据自己的领域知识，就可以看出变化的时间点。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">cntext.similarity</span> <span class="kn">import</span> <span class="n">similarity_score</span>
<span class="n">cosines</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="n">text1</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">]</span>
    <span class="n">text2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="s1">&#39;text2&#39;</span><span class="p">]</span>
    <span class="n">simi</span> <span class="o">=</span> <span class="n">similarity_score</span><span class="p">(</span><span class="n">text1</span><span class="p">,</span> <span class="n">text2</span><span class="p">)[</span><span class="s1">&#39;Sim_Cosine&#39;</span><span class="p">]</span>
    <span class="n">cosines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">simi</span><span class="p">)</span>
<span class="n">cosines</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[0.42767330405703097,
 0.39821498388325544,
 0.410744931596176,
 0.3844380358041578,
 0.4116242706522565,
 0.4169268094228332,
 0.4249719376001671,
 ....
 0.39065212923423315,
 0.3763764307701755,
 0.35307484669994105,
 0.4119319787659037,
 0.43053043053064594,
 0.45219743197249296,
 0.421723837550935,
 0.427904362863808]
</code></pre></div><p>紧接着</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">pyecharts.charts</span> <span class="kn">import</span> <span class="n">Line</span>
<span class="kn">from</span> <span class="nn">pyecharts</span> <span class="kn">import</span> <span class="n">options</span> <span class="k">as</span> <span class="n">opts</span>
<span class="kn">from</span> <span class="nn">pyecharts.globals</span> <span class="kn">import</span> <span class="n">CurrentConfig</span><span class="p">,</span> <span class="n">NotebookType</span>
<span class="n">CurrentConfig</span><span class="o">.</span><span class="n">NOTEBOOK_TYPE</span> <span class="o">=</span> <span class="n">NotebookType</span><span class="o">.</span><span class="n">JUPYTER_NOTEBOOK</span>

<span class="n">line</span> <span class="o">=</span> <span class="n">Line</span><span class="p">()</span>

<span class="n">line</span><span class="o">.</span><span class="n">add_xaxis</span><span class="p">(</span><span class="n">xaxis_data</span><span class="o">=</span><span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">])</span>

<span class="n">line</span><span class="o">.</span><span class="n">add_yaxis</span><span class="p">(</span><span class="s2">&#34;本期与上期的相似度&#34;</span><span class="p">,</span> 
               <span class="n">cosines</span><span class="p">,</span> 
               <span class="n">label_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">LabelOpts</span><span class="p">(</span><span class="n">is_show</span><span class="o">=</span><span class="kc">False</span><span class="p">))</span>

<span class="n">line</span><span class="o">.</span><span class="n">set_global_opts</span><span class="p">(</span><span class="n">title_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TitleOpts</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">&#34;1790年至2018年国情咨文文本相似度&#34;</span><span class="p">))</span>

<span class="n">line</span><span class="o">.</span><span class="n">load_javascript</span><span class="p">()</span>
<span class="n">line</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="s1">&#39;1790年至2018年国情咨文文本相似度可视化.html&#39;</span><span class="p">)</span>
<span class="n">line</span><span class="o">.</span><span class="n">render_notebook</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="img/%e7%9b%b8%e4%bc%bc%e5%ba%a6%e8%b6%8b%e5%8a%bf.png" width="800" />
    
    
</figure>

<p>注意，横坐标显示的是当年报告 与 前一年报告 的对比相似度</p>
<br>
<h2 id="3-图形解读">3. 图形解读</h2>
<p>相似度越低，说明本期与前期相比，文本变化较大，在本场景中可能是漂亮国在大幅度调整政策。</p>
<ol>
<li>在图中，我们最熟悉的时期是一战和二战，这个阶段在图中较长时间处于低位，漂亮国zf的政策处于战时状态。</li>
<li>漂亮国立国初期，相似度连线也长时间处于低位，体现了新国家正在探索为政之道。</li>
<li>漂亮国每4年选ju一次，那么换届年份，相似度也会比较低。</li>
</ol>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>文本数据: 展开、过滤和分块</title>
      <link>https://hidadeng.github.io/blog/text_features_tutorial/</link>
      <pubDate>Tue, 28 Dec 2021 10:43:10 +0600</pubDate>
      
      <guid>/blog/text_features_tutorial/</guid>
      <description> TF-IDF刻画参与者信息的“新且熟悉” ,构建参与者文化网络</description>
      <content:encoded><![CDATA[<p>前段时间发现apachecn在github上翻译了一本和特征工程相关的书籍：《Feature Engineering for Machine Learning》，中文名为《面向机器学习的特征工程》。</p>
<p><a href="Feature_Engineering_for_Machine_Learning.pdf">Feature_Engineering_for_Machine_Learning.pdf</a></p>
<h2 id="三文本数据-展开过滤和分块httpfe4mlapachecnorgdocs3文本数据id三文本数据-展开过滤和分块"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E4%B8%89%E3%80%81%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE-%E5%B1%95%E5%BC%80%E3%80%81%E8%BF%87%E6%BB%A4%E5%92%8C%E5%88%86%E5%9D%97">三、文本数据: 展开、过滤和分块</a></h2>
<blockquote>
<p>译者：<a href="https://github.com/kkejili">@kkejili</a></p>
<p>校对者：<a href="https://github.com/KyrieHee">@HeYun</a></p>
</blockquote>
<p>如果让你来设计一个算法来分析以下段落，你会怎么做？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Emma knocked on the door. No answer. She knocked again and waited. There was a large maple tree next to the house. Emma looked up the tree and saw a giant raven perched at the treetop. Under the afternoon sun, the raven gleamed magnificently. Its beak was hard and pointed, its claws sharp and strong. It looked regal and imposing. It reigned the tree it stood on. The raven was looking straight at Emma with its beady black eyes. Emma felt slightly intimidated. She took a step back from the door and tentatively said, “hello?” 复制ErrorOK!
</code></pre></div><p>该段包含很多信息。我们知道它谈到了到一个名叫Emma的人和一只乌鸦。这里有一座房子和一棵树，艾玛正想进屋，却看到了乌鸦。这只华丽的乌鸦注意到艾玛，她有点害怕，但正在尝试交流。</p>
<p>那么，这些信息的哪些部分是我们应该提取的显着特征？首先，提取主要角色艾玛和乌鸦的名字似乎是个好主意。接下来，注意房子，门和树的布置可能也很好。关于乌鸦的描述呢？Emma的行为呢，敲门，退后一步，打招呼呢？</p>
<p>本章介绍文本特征工程的基础知识。我们从词袋（bags of words）开始，这是基于字数统计的最简单的文本功能。一个非常相关的变换是 tf-idf，它本质上是一种特征缩放技术。它将被我在（下一篇）章节进行全面讨论。本章首先讨论文本特征提取，然后讨论如何过滤和清洗这些特征。</p>
<br>
<h2 id="bag-of-x把自然文本变成平面向量httpfe4mlapachecnorgdocs3文本数据idbag-of-x把自然文本变成平面向量"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=bag-of-x%EF%BC%9A%E6%8A%8A%E8%87%AA%E7%84%B6%E6%96%87%E6%9C%AC%E5%8F%98%E6%88%90%E5%B9%B3%E9%9D%A2%E5%90%91%E9%87%8F">Bag of X：把自然文本变成平面向量</a></h2>
<p>无论是构建机器学习模型还是特征工程，其结果应该是通俗易懂的。简单的事情很容易尝试，可解释的特征和模型相比于复杂的更易于调试。简单和可解释的功能并不总是会得到最精确的模型。但从简单开始就是一个好主意，仅在绝对必要时我们可以增加其复杂性。</p>
<p>对于文本数据，我们可以从称为 BOW 的字数统计开始。字数统计表中并没有特别费力来寻找<code>&quot;Emma&quot;</code>或乌鸦这样有趣的实体。但是这两个词在该段落中被重复提到，并且它们在这里的计数比诸如<code>&quot;hello&quot;</code>之类的随机词更高。对于此类简单的文档分类任务，字数统计通常比较适用。它也可用于信息检索，其目标是检索与输入文本相关的文档集。这两个任务都很好解释词级特征，因为某些特定词的存在可能是本文档主题内容的重要指标。</p>
<br>
<h2 id="词袋httpfe4mlapachecnorgdocs3文本数据id词袋"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E8%AF%8D%E8%A2%8B">词袋</a></h2>
<p>在词袋特征中，文本文档被转换成向量。（向量只是 n 个数字的集合。）向量包含词汇表中每个单词可能出现的数目。 如果单词<code>&quot;aardvark&quot;</code>在文档中出现三次，则该特征向量在与该单词对应的位置上的计数为 3。 如果词汇表中的单词没有出现在文档中，则计数为零。 例如，“这是一只小狗，它是非常可爱”的句子具有如图所示的 BOW 表示</p>

<figure >
    
        <img src="img/3-1.png" width="100%" />
    
    
</figure>

<p>图 3-1 转换词成向量描述图</p>
<p>BOW 将文本文档转换为平面向量。 它是“平面的”，因为它不包含任何原始的文本结构。 原文是一系列词语。但是词袋向量并没有序列；它只是记得每个单词在文本中出现多少次。 它不代表任何词层次结构的概念。 例如，“动物”的概念包括“狗”，“猫”，“乌鸦”等。但是在一个词袋表示中，这些词都是矢量的相同元素。</p>

<figure >
    
        <img src="img/3-2.png" width="100%" />
    
    
</figure>

<p>图 3-2 两个等效的词向量，向量中单词的排序不重要，只要它在数据集中的个数和文档中出现数量是一致的。</p>
<p>重要的是特征空间中数据的几何形状。 在一个词袋矢量中，每个单词成为矢量的一个维度。如果词汇表中有 n 个单词，则文档将成为n维空间中的一个点。 很难想象二维或三维以外的任何物体的几何形状，所以我们必须使用我们的想象力。 图3-3显示了我们的例句在对应于“小狗”和“可爱”两个维度的特征空间中的样子。</p>

<figure >
    
        <img src="img/3-3.png" width="100%" />
    
    
</figure>

<p>图 3-3 特征空间中文本文档的图示</p>

<figure >
    
        <img src="img/3-4.png" width="100%" />
    
    
</figure>

<p>图 3-4 三维特征空间</p>
<p>图 3-3 和图 3-4 描绘了特征空间中的数据向量。 坐标轴表示单个单词，它们是词袋表示下的特征，空间中的点表示数据点（文本文档）。 有时在数据空间中查看特征向量也是有益的。 特征向量包含每个数据点中特征的值。 轴表示单个数据点和点表示特征向量。 图 3-5 展示了一个例子。 通过对文本文档进行词袋特征化，一个特征是一个词，一个特征向量包含每个文档中这个词的计数。 这样，一个单词被表示为一个“一个词向量”。正如我们将在第 4 章中看到的那样，这些文档词向量来自词袋向量的转置矩阵。</p>

<figure >
    
        <img src="img/3-5.png" width="100%" />
    
    
</figure>

<br>
<h2 id="bag-of-n-gramhttpfe4mlapachecnorgdocs3文本数据idbag-of-n-gram"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=bag-of-n-gram">Bag-of-N-gram</a></h2>
<p>Bag-of-N-gram 或者 bag-of-ngram 是 BOW 的自然延伸。 n-gram 是 n 个有序的记号（token）。一个词基本上是一个 1-gram，也被称为一元模型。当它被标记后，计数机制可以将单个词进行计数，或将重叠序列计数为 n-gram。例如，<code>&quot;Emma knocked on the door&quot;</code>这句话会产生 n-gram，如<code>&quot;Emma knocked&quot;</code>，<code>&quot;knocked on&quot;</code>，<code>&quot;on the&quot;</code>，<code>&quot;the door&quot;</code>。 N-gram 保留了文本的更多原始序列结构，故 bag-of-ngram可以提供更多信息。但是，这是有代价的。理论上，用 k 个独特的词，可能有 k 个独立的 2-gram（也称为 bigram）。在实践中，并不是那么多，因为不是每个单词后都可以跟一个单词。尽管如此，通常有更多不同的 n-gram（n &gt; 1）比单词更多。这意味着词袋会更大并且有稀疏的特征空间。这也意味着 n-gram 计算，存储和建模的成本会变高。n 越大，信息越丰富，成本越高。</p>
<p>为了说明随着 n 增加 n-gram 的数量如何增加，我们来计算纽约时报文章数据集上的 n-gram。我们使用 Pandas 和 scikit-learn 中的<code>CountVectorizer</code>转换器来计算前 10,000 条评论的 n-gram。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <span class="n">CountVectorizer</span> 
<span class="c1"># Load the first 10,000 reviews </span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/yelp/v6/yelp_dataset_challenge_academic_dataset/yelp_academic_dataset_review.json&#39;</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">js</span> <span class="o">=</span> <span class="p">[]</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10000</span><span class="p">):</span> 
<span class="o">...</span> <span class="n">js</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()))</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">review_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">js</span><span class="p">)</span> 
<span class="c1"># Create feature transformers for unigram, bigram, and trigram. </span>
<span class="c1"># The default ignores single-character words, which is useful in practice because it trims </span>
<span class="c1"># uninformative words. But we explicitly include them in this example for illustration purposes. </span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">bow_converter</span> <span class="o">=</span> <span class="n">CountVectorizer</span><span class="p">(</span><span class="n">token_pattern</span><span class="o">=</span><span class="s1">&#39;(?u)</span><span class="se">\\</span><span class="s1">b</span><span class="se">\\</span><span class="s1">w+</span><span class="se">\\</span><span class="s1">b&#39;</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">bigram_converter</span> <span class="o">=</span> <span class="n">CountVectorizer</span><span class="p">(</span><span class="n">ngram_range</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span> <span class="n">token_pattern</span><span class="o">=</span><span class="s1">&#39;(?u)</span><span class="se">\\</span><span class="s1">b</span><span class="se">\\</span><span class="s1">w+</span><span class="se">\\</span><span class="s1">b&#39;</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">trigram_converter</span> <span class="o">=</span> <span class="n">CountVectorizer</span><span class="p">(</span><span class="n">ngram_range</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span> <span class="n">token_pattern</span><span class="o">=</span><span class="s1">&#39;(?u)</span><span class="se">\\</span><span class="s1">b</span><span class="se">\\</span><span class="s1">w+</span><span class="se">\\</span><span class="s1">b&#39;</span><span class="p">)</span> 
<span class="c1"># Fit the transformers and look at vocabulary size </span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">bow_converter</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">review_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">])</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">words</span> <span class="o">=</span> <span class="n">bow_converter</span><span class="o">.</span><span class="n">get_feature_names</span><span class="p">()</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">bigram_converter</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">review_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">])</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">bigram</span> <span class="o">=</span> <span class="n">bigram_converter</span><span class="o">.</span><span class="n">get_feature_names</span><span class="p">()</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">trigram_converter</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">review_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">])</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">trigram</span> <span class="o">=</span> <span class="n">trigram_converter</span><span class="o">.</span><span class="n">get_feature_names</span><span class="p">()</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">words</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">bigram</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">trigram</span><span class="p">))</span> 
<span class="mi">26047</span> <span class="mi">346301</span> <span class="mi">847545</span> 
<span class="c1"># Sneak a peek at the ngram themselves</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">words</span><span class="p">[:</span><span class="mi">10</span><span class="p">]</span> 
<span class="p">[</span><span class="s1">&#39;0&#39;</span><span class="p">,</span> <span class="s1">&#39;00&#39;</span><span class="p">,</span> <span class="s1">&#39;000&#39;</span><span class="p">,</span> <span class="s1">&#39;0002&#39;</span><span class="p">,</span> <span class="s1">&#39;00am&#39;</span><span class="p">,</span> <span class="s1">&#39;00ish&#39;</span><span class="p">,</span> <span class="s1">&#39;00pm&#39;</span><span class="p">,</span> <span class="s1">&#39;01&#39;</span><span class="p">,</span> <span class="s1">&#39;01am&#39;</span><span class="p">,</span> <span class="s1">&#39;02&#39;</span><span class="p">]</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">bigram</span><span class="p">[</span><span class="o">-</span><span class="mi">10</span><span class="p">:]</span> 
<span class="p">[</span><span class="s1">&#39;zucchinis at&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zucchinis took&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zucchinis we&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zuma over&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zuppa di&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zuppa toscana&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zuppe di&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zurich and&#39;</span><span class="p">,</span> 
<span class="s1">&#39;zz top&#39;</span><span class="p">,</span> 
<span class="s1">&#39;à la&#39;</span><span class="p">]</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">trigram</span><span class="p">[:</span><span class="mi">10</span><span class="p">]</span> 
<span class="p">[</span><span class="s1">&#39;0 10 definitely&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 2 also&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 25 per&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 3 miles&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 30 a&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 30 everything&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 30 lb&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 35 tip&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 5 curry&#39;</span><span class="p">,</span> 
<span class="s1">&#39;0 5 pork&#39;</span><span class="p">]</span> <span class="n">复制ErrorOK</span><span class="err">!</span>
</code></pre></div>
<figure >
    
        <img src="img/3-6.png" width="100%" />
    
    
</figure>

<p>图3-6 Number of unique n-gram in the first 10,000 reviews of the Yelp dataset</p>
<br>
<h3 id="过滤清洗特征httpfe4mlapachecnorgdocs3文本数据id过滤清洗特征"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E8%BF%87%E6%BB%A4%E6%B8%85%E6%B4%97%E7%89%B9%E5%BE%81">过滤清洗特征</a></h3>
<p>我们如何清晰地将信号从噪声中分离出来？ 通过过滤，使用原始标记化和计数来生成简单词表或 n-gram 列表的技术变得更加可用。 短语检测，我们将在下面讨论，可以看作是一个特别的 bigram 过滤器。 以下是执行过滤的几种方法。</p>
<br>
<h3 id="停用词httpfe4mlapachecnorgdocs3文本数据id停用词"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E5%81%9C%E7%94%A8%E8%AF%8D">停用词</a></h3>
<p>分类和检索通常不需要对文本有深入的理解。 例如，在<code>&quot;Emma knocked on the door&quot;</code>一句中，<code>&quot;on&quot;</code>和<code>&quot;the&quot;</code>这两个词没有包含很多信息。 代词、冠词和介词大部分时间并没有显示出其价值。流行的 Python NLP 软件包 NLTK 包含许多语言的语言学家定义的停用词列表。 （您将需要安装 NLTK 并运行<code>nltk.download()</code>来获取所有的好东西。）各种停用词列表也可以在网上找到。 例如，这里有一些来自英语停用词的示例词</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Sample words from the nltk stopword list
a, about, above, am, an, been, didn’t, couldn’t, i’d, i’ll, itself, let’s, myself, our, they, through, when’s, whom, ... 复制ErrorOK!
</code></pre></div><p>请注意，该列表包含撇号，并且这些单词没有大写。 为了按原样使用它，标记化过程不得去掉撇号，并且这些词需要转换为小写。</p>
<br>
<h3 id="基于频率的过滤httpfe4mlapachecnorgdocs3文本数据id基于频率的过滤"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E5%9F%BA%E4%BA%8E%E9%A2%91%E7%8E%87%E7%9A%84%E8%BF%87%E6%BB%A4">基于频率的过滤</a></h3>
<p>停用词表是一种去除空洞特征常用词的方法。还有其他更统计的方法来理解“常用词”的概念。在搭配提取中，我们看到依赖于手动定义的方法，以及使用统计的方法。同样的想法也适用于文字过滤。我们也可以使用频率统计。</p>
<br>
<h3 id="高频词httpfe4mlapachecnorgdocs3文本数据id高频词"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E9%AB%98%E9%A2%91%E8%AF%8D">高频词</a></h3>
<p>频率统计对滤除语料库专用常用词以及通用停用词很有用。例如，纽约时报文章数据集中经常出现“纽约时报”和其中单个单词。“议院”这个词经常出现在加拿大议会辩论的Hansard语料库中的“众议院”一词中，这是一种用于统计机器翻译的流行数据集，因为它包含所有文档的英文和法文版本。这些词在普通语言中有意义，但不在语料库中。手动定义的停用词列表将捕获一般停用词，但不是语料库特定的停用词。</p>
<p>表 3-1 列出了 Yelp 评论数据集中最常用的 40 个单词。在这里，频率被认为是它们出现在文件（评论）中的数量，而不是它们在文件中的数量。正如我们所看到的，该列表涵盖了许多停用词。它也包含一些惊喜。<code>&quot;s&quot;</code>和<code>&quot;t&quot;</code>在列表中，因为我们使用撇号作为标记化分隔符，并且诸如<code>&quot;Mary's&quot;</code>或<code>&quot;did not&quot;</code>之类的词被解析为<code>&quot;Mary s&quot;</code>和<code>&quot;didn t&quot;</code>。词<code>&quot;good&quot;</code>，<code>&quot;food&quot;</code>和<code>&quot;great&quot;</code>分别出现在三分之一的评论中。但我们可能希望保留它们，因为它们对于情感分析或业务分类非常有用。</p>

<figure >
    
        <img src="img/biao.png" width="100%" />
    
    
</figure>

<p>最常用的单词最可以揭示问题，并突出显示通常有用的单词通常在该语料库中曾出现过多次。 例如，纽约时报语料库中最常见的词是“时代”。实际上，它有助于将基于频率的过滤与停用词列表结合起来。还有一个棘手的问题，即何处放置截止点。 不幸的是这里没有统一的答案。在大多数情况下截断还需手动确定，并且在数据集改变时可能需要重新检查。</p>
<br>
<h3 id="稀有词httpfe4mlapachecnorgdocs3文本数据id稀有词"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E7%A8%80%E6%9C%89%E8%AF%8D">稀有词</a></h3>
<p>根据任务的不同，可能还需要筛选出稀有词。对于统计模型而言，仅出现在一个或两个文档中的单词更像噪声而非有用信息。例如，假设任务是根据他们的 Yelp 评论对企业进行分类，并且单个评论包含<code>&quot;gobbledygook&quot;</code>这个词。基于这一个词，我们将如何说明这家企业是餐厅，美容院还是一间酒吧？即使我们知道在这种情况下的这种生意发生在酒吧，它也会对于其他包含<code>&quot;gobbledygook&quot;</code>这个词的评论来说，这可能是一个错误。</p>
<p>不仅稀有词不可靠，而且还会产生计算开销。这套 160 万个 Yelp 评论包含 357,481 个独特单词（用空格和标点符号表示），其中 189,915 只出现在一次评论中，41,162 次出现在两次评论中。超过 60% 的词汇很少发生。这是一种所谓的重尾分布，在现实世界的数据中非常普遍。许多统计机器学习模型的训练时间随着特征数量线性地变化，并且一些模型是二次的或更差的。稀有词汇会产生大量的计算和存储成本，而不会带来额外的收益。</p>
<p>根据字数统计，可以很容易地识别和修剪稀有词。或者，他们的计数可以汇总到一个特殊的垃圾箱中，可以作为附加功能。图3-7展示了一个短文档中的表示形式，该短文档包含一些常用单词和两个稀有词<code>&quot;gobbledygook&quot;</code>和<code>&quot;zylophant&quot;</code>。通常单词保留自己的计数，可以通过停用词列表或其他频率进一步过滤方法。这些难得的单词会失去他们的身份并被分组到垃圾桶功能中.</p>

<figure >
    
        <img src="img/3-7.png" width="100%" />
    
    
</figure>

<p>由于在计算整个语料库之前不会知道哪些词很少，因此需要收集垃圾桶功能作为后处理步骤。</p>
<p>由于本书是关于特征工程的，因此我们将重点放在特征上。但稀有概念也适用于数据点。如果文本文档很短，那么它可能不包含有用的信息，并且在训练模型时不应使用该信息。</p>
<p>应用此规则时必须谨慎。维基百科转储包含许多不完整的存根，可能安全过滤。另一方面，推文本身就很短，并且需要其他特征和建模技巧。</p>
<br>
<h3 id="词干解析stemminghttpfe4mlapachecnorgdocs3文本数据id词干解析stemming"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E8%AF%8D%E5%B9%B2%E8%A7%A3%E6%9E%90%EF%BC%88stemming%EF%BC%89">词干解析（Stemming）</a></h3>
<p>简单解析的一个问题是同一个单词的不同变体会被计算为单独的单词。例如，<code>&quot;flower&quot;</code>和<code>&quot;flowers&quot;</code>在技术上是不同的记号，<code>&quot;swimmer&quot;</code>，<code>&quot;swimming&quot;</code>和<code>&quot;swim&quot;</code>也是如此，尽管它们的含义非常接近。如果所有这些不同的变体都映射到同一个单词，那将会很好。</p>
<p>词干解析是一项 NLP 任务，试图将单词切分为基本的语言词干形式。有不同的方法。有些基于语言规则，其他基于观察统计。被称为词形化的算法的一个子类将词性标注和语言规则结合起来。</p>
<p>Porter stemmer 是英语中使用最广泛的免费词干工具。原来的程序是用 ANSI C 编写的，但是很多其他程序包已经封装它来提供对其他语言的访问。尽管其他语言的努力正在进行，但大多数词干工具专注于英语。</p>
<p>以下是通过 NLTK Python 包运行 Porter stemmer 的示例。正如我们所看到的，它处理了大量的情况，包括将<code>&quot;sixties&quot;</code>和<code>&quot;sixty&quot;</code>转变为同一根<code>&quot;sixti&quot;</code>。但这并不完美。单词<code>&quot;goes&quot;</code>映射到<code>&quot;goe&quot;</code>，而<code>&quot;go&quot;</code>映射到它自己。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">nltk</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span> <span class="o">=</span> <span class="n">nltk</span><span class="o">.</span><span class="n">stem</span><span class="o">.</span><span class="n">porter</span><span class="o">.</span><span class="n">PorterStemmer</span><span class="p">()</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="s1">&#39;flowers&#39;</span><span class="p">)</span> 
<span class="sa">u</span><span class="s1">&#39;lemon&#39;</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="s1">&#39;zeroes&#39;</span><span class="p">)</span> 
<span class="sa">u</span><span class="s1">&#39;zero&#39;</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="s1">&#39;stemmer&#39;</span><span class="p">)</span> 
<span class="sa">u</span><span class="s1">&#39;stem&#39;</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="s1">&#39;sixties&#39;</span><span class="p">)</span> 
<span class="sa">u</span><span class="s1">&#39;sixti&#39;</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="s1">&#39;sixty&#39;</span><span class="p">)</span> 
<span class="sa">u</span><span class="s1">&#39;sixty&#39;</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="s1">&#39;goes&#39;</span><span class="p">)</span> 
<span class="sa">u</span><span class="s1">&#39;goe&#39;</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">stemmer</span><span class="o">.</span><span class="n">stem</span><span class="p">(</span><span class="s1">&#39;go&#39;</span><span class="p">)</span> 
<span class="sa">u</span><span class="s1">&#39;go&#39;</span> <span class="n">复制ErrorOK</span><span class="err">!</span>
</code></pre></div><p>词干解析的确有一个计算成本。 最终收益是否大于成本取决于应用程序。</p>
<br>
<h3 id="含义的原子从单词到-n-gram-到短语httpfe4mlapachecnorgdocs3文本数据id含义的原子从单词到-n-gram-到短语"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E5%90%AB%E4%B9%89%E7%9A%84%E5%8E%9F%E5%AD%90%EF%BC%9A%E4%BB%8E%E5%8D%95%E8%AF%8D%E5%88%B0-n-gram-%E5%88%B0%E7%9F%AD%E8%AF%AD">含义的原子：从单词到 N-gram 到短语</a></h3>
<p>词袋的概念很简单。但是，一台电脑怎么知道一个词是什么？文本文档以数字形式表示为一个字符串，基本上是一系列字符。也可能会遇到 JSON blob 或 HTML 页面形式的半结构化文本。但即使添加了标签和结构，基本单位仍然是一个字符串。如何将字符串转换为一系列的单词？这涉及解析和标记化的任务，我们将在下面讨论。</p>
<br>
<h3 id="解析和分词httpfe4mlapachecnorgdocs3文本数据id解析和分词"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E8%A7%A3%E6%9E%90%E5%92%8C%E5%88%86%E8%AF%8D">解析和分词</a></h3>
<p>当字符串包含的不仅仅是纯文本时，解析是必要的。例如，如果原始数据是网页，电子邮件或某种类型的日志，则它包含额外的结构。人们需要决定如何处理日志中的标记，页眉，页脚或无趣的部分。如果文档是网页，则解析器需要处理 URL。如果是电子邮件，则可能需要特殊字段，例如 From，To 和 Subject 需要被特别处理，否则，这些标题将作为最终计数中的普通单词统计，这可能没有用处。</p>
<p>解析后，文档的纯文本部分可以通过标记。这将字符串（一系列字符）转换为一系列记号。然后可以将每个记号计为一个单词。分词器需要知道哪些字符表示一个记号已经结束，另一个正在开始。空格字符通常是好的分隔符，正如标点符号一样。如果文本包含推文，则不应将井号（<code>#</code>）用作分隔符（也称为分隔符）。</p>
<p>有时，分析需要使用句子而不是整个文档。例如，n-gram 是一个句子的概括，不应超出句子范围。更复杂的文本特征化方法，如 word2vec 也适用于句子或段落。在这些情况下，需要首先将文档解析为句子，然后将每个句子进一步标记为单词。</p>
<br>
<h3 id="字符串对象httpfe4mlapachecnorgdocs3文本数据id字符串对象"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E8%B1%A1">字符串对象</a></h3>
<p>字符串对象有各种编码，如 ASCII 或 Unicode。纯英文文本可以用 ASCII 编码。 一般语言需要 Unicode。 如果文档包含非 ASCII 字符，则确保分词器可以处理该特定编码。否则，结果将不正确。</p>
<br>
<h3 id="短语检测的搭配提取httpfe4mlapachecnorgdocs3文本数据id短语检测的搭配提取"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E7%9F%AD%E8%AF%AD%E6%A3%80%E6%B5%8B%E7%9A%84%E6%90%AD%E9%85%8D%E6%8F%90%E5%8F%96">短语检测的搭配提取</a></h3>
<p>连续的记号能立即被转化成词表和 n-gram。但从语义上讲，我们更习惯于理解短语，而不是 n-gram。在计算自然语言处理中，有用短语的概念被称为搭配。用 Manning 和 Schütze（1999：141）的话来说：“搭配是一个由两个或两个以上单词组成的表达，它们对应于某种常规的说话方式。”</p>
<p>搭配比其部分的总和更有意义。例如，<code>&quot;strong tea&quot;</code>具有超越<code>&quot;great physical strength&quot;</code>和<code>&quot;tea&quot;</code>的不同含义，因此被认为是搭配。另一方面，“可爱的小狗”这个短语恰恰意味着它的部分总和：“可爱”和“小狗”。因此，它不被视为搭配。</p>
<p>搭配不一定是连续的序列。<code>&quot;Emma knocked on the door&quot;</code>一词被认为包含搭配<code>&quot;knock door&quot;</code>，因此不是每一个搭配都是一个 n-gram。相反，并不是每个 n-gram 都被认为是一个有意义的搭配。</p>
<p>由于搭配不仅仅是其部分的总和，它们的含义也不能通过单个单词计数来充分表达。作为一种表现形式，词袋不足。袋子的 ngram 也是有问题的，因为它们捕获了太多无意义的序列（考虑<code>&quot;this is in the bag-of-ngram example&quot;</code>），而没有足够的有意义的序列。</p>
<p>搭配作为功能很有用。但是，如何从文本中发现并提取它们呢？一种方法是预先定义它们。如果我们努力尝试，我们可能会找到各种语言的全面成语列表，我们可以通过文本查看任何匹配。这将是非常昂贵的，但它会工作。如果语料库是非常特定领域的并且包含深奥的术语，那么这可能是首选的方法。但是这个列表需要大量的手动管理，并且需要不断更新语料库。例如，分析推文，博客和文章可能不太现实。</p>
<p>自从统计 NLP 过去二十年出现以来，人们越来越多地选择用于查找短语的统计方法。统计搭配提取方法不是建立固定的短语和惯用语言列表，而是依赖不断发展的数据来揭示当今流行的语言。</p>
<br>
<h3 id="基于频率的方法httpfe4mlapachecnorgdocs3文本数据id基于频率的方法"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E5%9F%BA%E4%BA%8E%E9%A2%91%E7%8E%87%E7%9A%84%E6%96%B9%E6%B3%95">基于频率的方法</a></h3>
<p>一个简单的黑魔法是频繁发生的 n-gram。这种方法的问题是最常发生的，这种可能不是最有用的。 表 3-2 显示了整个 Yelp 评论数据集中最流行的 bigram（<code>n=2</code>）。 正如我们所知的，按文件计数排列的最常见的十大常见术语是非常通用的术语，并不包含太多含义。</p>

<figure >
    
        <img src="img/biaod.png" width="100%" />
    
    
</figure>

<br>
<h3 id="用于搭配提取的假设检验httpfe4mlapachecnorgdocs3文本数据id用于搭配提取的假设检验"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E7%94%A8%E4%BA%8E%E6%90%AD%E9%85%8D%E6%8F%90%E5%8F%96%E7%9A%84%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C">用于搭配提取的假设检验</a></h3>
<p>原始流行度计数（Raw popularity count）是一个比较粗糙的方法。我们必须找到更聪慧的统计数据才能够轻松挑选出有意义的短语。关键的想法是看两个单词是否经常出现在一起。回答这个问题的统计机制被称为假设检验。</p>
<p>假设检验是将噪音数据归结为“是”或“否”的答案。它涉及将数据建模为从随机分布中抽取的样本。随机性意味着人们永远无法 100% 的确定答案；总会有异常的机会。所以答案附在概率上。例如，假设检验的结果可能是“这两个数据集来自同一分布，其概率为 95%”。对于假设检验的温和介绍，请参阅可汗学院关于假设检验和 p 值的教程。</p>
<p>在搭配提取的背景下，多年来已经提出了许多假设检验。最成功的方法之一是基于似然比检验（Dunning，1993）。对于给定的一对单词，该方法测试两个假设观察的数据集。假设 1（原假设）表示，词语 1 独立于词语 2 出现。另一种说法是说，看到词语1对我们是否看到词语2没有影响。假设 2（备选假设）说，看到词 1 改变了看到单词 2 的可能性。我们采用备选假设来暗示这两个单词形成一个共同的短语。因此，短语检测（也称为搭配提取）的似然比检验提出了以下问题：给定文本语料库中观察到的单词出现更可能是从两个单词彼此独立出现的模型中生成的，或者模型中两个词的概率纠缠？</p>
<p>这是有用的。让我们算一点。（数学非常精确和简洁地表达事物，但它确实需要与自然语言完全不同的分析器。）</p>

<figure >
    
        <img src="img/gongshi.png" width="100%" />
    
    
</figure>

<p>似然函数<code>L(Data; H)</code>表示在单词对的独立模型或非独立模型下观察数据集中词频的概率。为了计算这个概率，我们必须对如何生成数据做出另一个假设。最简单的数据生成模型是二项模型，其中对于数据集中的每个单词，我们抛出一个硬币，并且如果硬币朝上出现，我们插入我们的特殊单词，否则插入其他单词。在此策略下，特殊词的出现次数遵循二项分布。二项分布完全由词的总数，词的出现次数和词首概率决定。</p>
<p>似然比检验分析常用短语的算法收益如下。</p>
<ol>
<li>
<p>计算所有单体词的出现概率：<code>p(w)</code>。</p>
</li>
<li>
<p>计算所有唯一双元的条件成对词发生概率：<code>p(W2 × W1)</code></p>
</li>
<li>
<p>计算所有唯一的双对数似然比对数。</p>
</li>
<li>
<p>根据它们的似然比排序双字节。</p>
</li>
<li>
<p>以最小似然比值作为特征。</p>
<br>
</li>
</ol>
<h3 id="掌握似然比测试httpfe4mlapachecnorgdocs3文本数据id掌握似然比测试"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E6%8E%8C%E6%8F%A1%E4%BC%BC%E7%84%B6%E6%AF%94%E6%B5%8B%E8%AF%95">掌握似然比测试</a></h3>
<p>关键在于测试比较的不是概率参数本身，而是在这些参数（以及假设的数据生成模型）下观察数据的概率。可能性是统计学习的关键原则之一。但是在你看到它的前几次，这绝对是一个令人困惑的问题。一旦你确定了逻辑，它就变得直观了。</p>
<p>还有另一种基于点互信息的统计方法。但它对真实世界文本语料库中常见的罕见词很敏感。因此它不常用，我们不会在这里展示它。</p>
<p>请注意，搭配抽取的所有统计方法，无论是使用原始频率，假设测试还是点对点互信息，都是通过过滤候选词组列表来进行操作的。生成这种清单的最简单和最便宜的方法是计算 n-gram。它可能产生不连续的序列，但是它们计算成本颇高。在实践中，即使是连续 n-gram，人们也很少超过 bi-gram 或 tri-gram，因为即使在过滤之后，它们的数量也很多。为了生成更长的短语，还有其他方法，如分块或与词性标注相结合。</p>
<br>
<h3 id="分块chunking和词性标注part-of-speech-tagginghttpfe4mlapachecnorgdocs3文本数据id分块chunking和词性标注part-of-speech-tagging"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E5%88%86%E5%9D%97%EF%BC%88chunking%EF%BC%89%E5%92%8C%E8%AF%8D%E6%80%A7%E6%A0%87%E6%B3%A8%EF%BC%88part-of-speech-tagging%EF%BC%89">分块（Chunking）和词性标注（part-of-Speech Tagging）</a></h3>
<p>分块比 n-gram 要复杂一点，因为它基于词性，基于规则的模型形成了记号序列。</p>
<p>例如，我们可能最感兴趣的是在问题中找到所有名词短语，其中文本的实体，主题最为有趣。 为了找到这个，我们使用词性标记每个作品，然后检查该标记的邻域以查找词性分组或“块”。 定义单词到词类的模型通常是语言特定的。 几种开源 Python 库（如 NLTK，Spacy 和 TextBlob）具有多种语言模型。</p>
<p>为了说明 Python 中的几个库如何使用词性标注非常简单地进行分块，我们再次使用 Yelp 评论数据集。 我们将使用 spacy 和 TextBlob 来评估词类以找到名词短语。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">json</span> 
<span class="c1"># Load the first 10 reviews </span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/yelp/v6/yelp_dataset_challenge_academic_dataset/yelp_academic_dataset_review.json&#39;</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">js</span> <span class="o">=</span> <span class="p">[]</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span> 
<span class="n">js</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()))</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">review_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">js</span><span class="p">)</span> 
<span class="c1">## First we&#39;ll walk through spaCy&#39;s functions </span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">spacy</span> 
<span class="c1"># preload the language model </span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">nlp</span> <span class="o">=</span> <span class="n">spacy</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s1">&#39;en&#39;</span><span class="p">)</span> 
<span class="c1"># We can create a Pandas Series of spaCy nlp variables </span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">doc_df</span> <span class="o">=</span> <span class="n">review_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">nlp</span><span class="p">)</span> 
<span class="c1"># spaCy gives you fine grained parts of speech using: (.pos_) </span>
<span class="c1"># and coarse grained parts of speech using: (.tag_) </span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">doc</span> <span class="ow">in</span> <span class="n">doc_df</span><span class="p">[</span><span class="mi">4</span><span class="p">]:</span> 
<span class="nb">print</span><span class="p">([</span><span class="n">doc</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="n">doc</span><span class="o">.</span><span class="n">pos_</span><span class="p">,</span> <span class="n">doc</span><span class="o">.</span><span class="n">tag_</span><span class="p">])</span> 
<span class="n">Got</span> <span class="n">VERB</span> <span class="n">VBP</span> 
<span class="n">a</span> <span class="n">DET</span> <span class="n">DT</span> 
<span class="n">letter</span> <span class="n">NOUN</span> <span class="n">NN</span> 
<span class="ow">in</span> <span class="n">ADP</span> <span class="n">IN</span> 
<span class="n">the</span> <span class="n">DET</span> <span class="n">DT</span> 
<span class="n">mail</span> <span class="n">NOUN</span> <span class="n">NN</span> 
<span class="n">last</span> <span class="n">ADJ</span> <span class="n">JJ</span> 
<span class="n">week</span> <span class="n">NOUN</span> <span class="n">NN</span> 
<span class="n">that</span> <span class="n">ADJ</span> <span class="n">WDT</span> 
<span class="n">said</span> <span class="n">VERB</span> <span class="n">VBD</span> 
<span class="n">Dr</span><span class="o">.</span> <span class="n">PROPN</span> <span class="n">NNP</span> 
<span class="n">Goldberg</span> <span class="n">PROPN</span> <span class="n">NNP</span> 
<span class="ow">is</span> <span class="n">VERB</span> <span class="n">VBZ</span> 
<span class="n">moving</span> <span class="n">VERB</span> <span class="n">VBG</span> 
<span class="n">to</span> <span class="n">ADP</span> <span class="n">IN</span> 
<span class="n">Arizona</span> <span class="n">PROPN</span> <span class="n">NNP</span> 
<span class="n">to</span> <span class="n">PART</span> <span class="n">TO</span> 
<span class="n">take</span> <span class="n">VERB</span> <span class="n">VB</span> 
<span class="n">a</span> <span class="n">DET</span> <span class="n">DT</span> 
<span class="n">new</span> <span class="n">ADJ</span> <span class="n">JJ</span> 
<span class="n">position</span> <span class="n">NOUN</span> <span class="n">NN</span> 
<span class="n">there</span> <span class="n">ADV</span> <span class="n">RB</span> 
<span class="ow">in</span> <span class="n">ADP</span> <span class="n">IN</span> 
<span class="n">June</span> <span class="n">PROPN</span> <span class="n">NNP</span> 
<span class="o">.</span> <span class="n">PUNCT</span> <span class="o">.</span> 
<span class="n">SPACE</span> <span class="n">SP</span> 
<span class="n">He</span> <span class="n">PRON</span> <span class="n">PRP</span> 
<span class="n">will</span> <span class="n">VERB</span> <span class="n">MD</span> 
<span class="n">be</span> <span class="n">VERB</span> <span class="n">VB</span> 
<span class="n">missed</span> <span class="n">VERB</span> <span class="n">VBN</span> 
<span class="n">very</span> <span class="n">ADV</span> <span class="n">RB</span> 
<span class="n">much</span> <span class="n">ADV</span> <span class="n">RB</span> 
<span class="o">.</span> <span class="n">PUNCT</span> <span class="o">.</span> 
<span class="n">SPACE</span> <span class="n">SP</span> 
<span class="n">I</span> <span class="n">PRON</span> <span class="n">PRP</span> 
<span class="n">think</span> <span class="n">VERB</span> <span class="n">VBP</span> 
<span class="n">finding</span> <span class="n">VERB</span> <span class="n">VBG</span> 
<span class="n">a</span> <span class="n">DET</span> <span class="n">DT</span> 
<span class="n">new</span> <span class="n">ADJ</span> <span class="n">JJ</span> 
<span class="n">doctor</span> <span class="n">NOUN</span> <span class="n">NN</span> 
<span class="ow">in</span> <span class="n">ADP</span> <span class="n">IN</span> 
<span class="n">NYC</span> <span class="n">PROPN</span> <span class="n">NNP</span> 
<span class="n">that</span> <span class="n">ADP</span> <span class="n">IN</span> 
<span class="n">you</span> <span class="n">PRON</span> <span class="n">PRP</span> 
<span class="n">actually</span> <span class="n">ADV</span> <span class="n">RB</span> 
<span class="n">like</span> <span class="n">INTJ</span> <span class="n">UH</span> 
<span class="n">might</span> <span class="n">VERB</span> <span class="n">MD</span> 
<span class="n">almost</span> <span class="n">ADV</span> <span class="n">RB</span> 
<span class="n">be</span> <span class="n">VERB</span> <span class="n">VB</span> 
<span class="k">as</span> <span class="n">ADV</span> <span class="n">RB</span> 
<span class="n">awful</span> <span class="n">ADJ</span> <span class="n">JJ</span> 
<span class="k">as</span> <span class="n">ADP</span> <span class="n">IN</span> 
<span class="n">trying</span> <span class="n">VERB</span> <span class="n">VBG</span> 
<span class="n">to</span> <span class="n">PART</span> <span class="n">TO</span> 
<span class="n">find</span> <span class="n">VERB</span> <span class="n">VB</span> 
<span class="n">a</span> <span class="n">DET</span> <span class="n">DT</span> 
<span class="n">date</span> <span class="n">NOUN</span> <span class="n">NN</span> 
<span class="err">!</span> <span class="n">PUNCT</span> <span class="o">.</span> 
<span class="c1"># spaCy also does some basic noun chunking for us </span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">([</span><span class="n">chunk</span> <span class="k">for</span> <span class="n">chunk</span> <span class="ow">in</span> <span class="n">doc_df</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">.</span><span class="n">noun_chunks</span><span class="p">])</span> 
<span class="p">[</span><span class="n">a</span> <span class="n">letter</span><span class="p">,</span> <span class="n">the</span> <span class="n">mail</span><span class="p">,</span> <span class="n">Dr</span><span class="o">.</span> <span class="n">Goldberg</span><span class="p">,</span> <span class="n">Arizona</span><span class="p">,</span> <span class="n">a</span> <span class="n">new</span> <span class="n">position</span><span class="p">,</span> <span class="n">June</span><span class="p">,</span> <span class="n">He</span><span class="p">,</span> <span class="n">I</span><span class="p">,</span> <span class="n">a</span> <span class="n">new</span> <span class="n">doctor</span><span class="p">,</span> <span class="n">NYC</span><span class="p">,</span> <span class="n">you</span><span class="p">,</span> <span class="n">a</span> <span class="n">date</span><span class="p">]</span> 
<span class="c1">##### </span>
<span class="c1">## We can do the same feature transformations using Textblob </span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">textblob</span> <span class="kn">import</span> <span class="n">TextBlob</span> 
<span class="c1"># The default tagger in TextBlob uses the PatternTagger, which is fine for our example. </span>
<span class="c1"># You can also specify the NLTK tagger, which works better for incomplete sentences. </span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">blob_df</span> <span class="o">=</span> <span class="n">review_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">TextBlob</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">blob_df</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">.</span><span class="n">tags</span> 
<span class="p">[(</span><span class="s1">&#39;Got&#39;</span><span class="p">,</span> <span class="s1">&#39;NNP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;DT&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;letter&#39;</span><span class="p">,</span> <span class="s1">&#39;NN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;in&#39;</span><span class="p">,</span> <span class="s1">&#39;IN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;the&#39;</span><span class="p">,</span> <span class="s1">&#39;DT&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;mail&#39;</span><span class="p">,</span> <span class="s1">&#39;NN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;last&#39;</span><span class="p">,</span> <span class="s1">&#39;JJ&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;week&#39;</span><span class="p">,</span> <span class="s1">&#39;NN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;that&#39;</span><span class="p">,</span> <span class="s1">&#39;WDT&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;said&#39;</span><span class="p">,</span> <span class="s1">&#39;VBD&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;Dr.&#39;</span><span class="p">,</span> <span class="s1">&#39;NNP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;Goldberg&#39;</span><span class="p">,</span> <span class="s1">&#39;NNP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;is&#39;</span><span class="p">,</span> <span class="s1">&#39;VBZ&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;moving&#39;</span><span class="p">,</span> <span class="s1">&#39;VBG&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;to&#39;</span><span class="p">,</span> <span class="s1">&#39;TO&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;Arizona&#39;</span><span class="p">,</span> <span class="s1">&#39;NNP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;to&#39;</span><span class="p">,</span> <span class="s1">&#39;TO&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;take&#39;</span><span class="p">,</span> <span class="s1">&#39;VB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;DT&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;new&#39;</span><span class="p">,</span> <span class="s1">&#39;JJ&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;position&#39;</span><span class="p">,</span> <span class="s1">&#39;NN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;there&#39;</span><span class="p">,</span> <span class="s1">&#39;RB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;in&#39;</span><span class="p">,</span> <span class="s1">&#39;IN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;June&#39;</span><span class="p">,</span> <span class="s1">&#39;NNP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;He&#39;</span><span class="p">,</span> <span class="s1">&#39;PRP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;will&#39;</span><span class="p">,</span> <span class="s1">&#39;MD&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;be&#39;</span><span class="p">,</span> <span class="s1">&#39;VB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;missed&#39;</span><span class="p">,</span> <span class="s1">&#39;VBN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;very&#39;</span><span class="p">,</span> <span class="s1">&#39;RB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;much&#39;</span><span class="p">,</span> <span class="s1">&#39;JJ&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;I&#39;</span><span class="p">,</span> <span class="s1">&#39;PRP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;think&#39;</span><span class="p">,</span> <span class="s1">&#39;VBP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;finding&#39;</span><span class="p">,</span> <span class="s1">&#39;VBG&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;DT&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;new&#39;</span><span class="p">,</span> <span class="s1">&#39;JJ&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;doctor&#39;</span><span class="p">,</span> <span class="s1">&#39;NN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;in&#39;</span><span class="p">,</span> <span class="s1">&#39;IN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;NYC&#39;</span><span class="p">,</span> <span class="s1">&#39;NNP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;that&#39;</span><span class="p">,</span> <span class="s1">&#39;IN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;you&#39;</span><span class="p">,</span> <span class="s1">&#39;PRP&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;actually&#39;</span><span class="p">,</span> <span class="s1">&#39;RB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;like&#39;</span><span class="p">,</span> <span class="s1">&#39;IN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;might&#39;</span><span class="p">,</span> <span class="s1">&#39;MD&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;almost&#39;</span><span class="p">,</span> <span class="s1">&#39;RB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;be&#39;</span><span class="p">,</span> <span class="s1">&#39;VB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;as&#39;</span><span class="p">,</span> <span class="s1">&#39;RB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;awful&#39;</span><span class="p">,</span> <span class="s1">&#39;JJ&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;as&#39;</span><span class="p">,</span> <span class="s1">&#39;IN&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;trying&#39;</span><span class="p">,</span> <span class="s1">&#39;VBG&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;to&#39;</span><span class="p">,</span> <span class="s1">&#39;TO&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;find&#39;</span><span class="p">,</span> <span class="s1">&#39;VB&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;DT&#39;</span><span class="p">),</span> 
<span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;NN&#39;</span><span class="p">)]</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">([</span><span class="n">np</span> <span class="k">for</span> <span class="n">np</span> <span class="ow">in</span> <span class="n">blob_df</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">.</span><span class="n">noun_phrases</span><span class="p">])</span> 
<span class="p">[</span><span class="s1">&#39;got&#39;</span><span class="p">,</span> <span class="s1">&#39;goldberg&#39;</span><span class="p">,</span> <span class="s1">&#39;arizona&#39;</span><span class="p">,</span> <span class="s1">&#39;new position&#39;</span><span class="p">,</span> <span class="s1">&#39;june&#39;</span><span class="p">,</span> <span class="s1">&#39;new doctor&#39;</span><span class="p">,</span> <span class="s1">&#39;nyc&#39;</span> <span class="n">复制ErrorOK</span><span class="err">!</span>
</code></pre></div><p>你可以看到每个库找到的名词短语有些不同。spacy 包含英语中的常见单词，如<code>&quot;a&quot;</code>和<code>&quot;the&quot;</code>，而 TextBlob 则删除这些单词。这反映了规则引擎的差异，它驱使每个库都认为是“名词短语”。 你也可以写你的词性关系来定义你正在寻找的块。使用 Python 进行自然语言处理可以深入了解从头开始用 Python 进行分块。</p>
<br>
<h2 id="总结httpfe4mlapachecnorgdocs3文本数据id总结"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E6%80%BB%E7%BB%93">总结</a></h2>
<p>词袋模型易于理解和计算，对分类和搜索任务很有用。但有时单个单词太简单，不足以将文本中的某些信息封装起来。为了解决这个问题，人们寄希望于比较长的序列。Bag-of-ngram 是 BOW 的自然概括，这个概念仍然容于理解，而且它的计算开销这就像 BOW 一样容易。</p>
<p>Bag of-ngram 生成更多不同的 ngram。它增加了特征存储成本，以及模型训练和预测阶段的计算成本。虽然数据点的数量保持不变，但特征空间的维度现在更大。因此数据密度更为稀疏。n 越高，存储和计算成本越高，数据越稀疏。由于这些原因，较长的 n-gram 并不总是会使模型精度的得到提高（或任何其他性能指标）。人们通常在<code>n = 2</code>或 3 时停止。较少的 n-gram 很少被使用。</p>
<p>防止稀疏性和成本增加的一种方法是过滤 n-gram 并保留最有意义的短语。这是搭配抽取的目标。理论上，搭配（或短语）可以在文本中形成非连续的标记序列。然而，在实践中，寻找非连续词组的计算成本要高得多并且没有太多的收益。因此搭配抽取通常从一个候选人名单中开始，并利用统计方法对他们进行过滤。</p>
<p>所有这些方法都将一系列文本标记转换为一组断开的计数。与一个序列相比，一个集合的结构要少得多；他们导致平面特征向量。</p>
<p>在本章中，我们用简单的语言描述文本特征化技术。这些技术将一段充满丰富语义结构的自然语言文本转化为一个简单的平面向量。我们讨论一些常用的过滤技术来降低向量维度。我们还引入了 ngram 和搭配抽取作为方法，在平面向量中添加更多的结构。下一章将详细介绍另一种常见的文本特征化技巧，称为 tf-idf。随后的章节将讨论更多方法将结构添加回平面向量。</p>
<br>
<h2 id="参考文献httpfe4mlapachecnorgdocs3文本数据id参考文献"><a href="http://fe4ml.apachecn.org/#/docs/3.%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE?id=%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE">参考文献</a></h2>
<p>Dunning, Ted. 1993. “Accurate methods for the statistics of surprise and</p>
<p>coincidence.” ACM Journal of Computational Linguistics, special issue on using large corpora , 19:1 (61—74).</p>
<p>“Hypothesis Testing and p-Values.” Khan Academy, accessed May 31,</p>
<p>2016,https://www.khanacademy.org/math/probability/statistics-inferential/hypothesis-testing/v/hypothesis-testing-and-p-values.</p>
<p>Manning,Christopher D. and Hinrich Schütze. 1999. Foundations of StatisticalNatural Language Processing . Cambridge, Massachusettes: MIT Press.</p>
<p>Sometimes people call it the document “vector.” The vector extends from the original and ends at the specified point. For our purposes, “vector” and “point” are the same thing.</p>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>PNAS | 文本网络分析&amp;文化桥梁Python代码实现</title>
      <link>https://hidadeng.github.io/blog/pnas_culture_bridges/</link>
      <pubDate>Tue, 28 Dec 2021 09:43:10 +0600</pubDate>
      
      <guid>/blog/pnas_culture_bridges/</guid>
      <description> PNAS2016这篇使用“自闭症谱系障碍ASD疾病的治病原因大讨论”做研究，文中使用TF-IDF刻画参与者信息的“新且熟悉” ,构建参与者文化网络。使用自动文本分析发现，如果组织方建立文化桥梁，在很少能一起讨论的议题领域内产生可连接的对话主题信息，这类信息不仅能引起多个受众的共鸣，而且还能让这些受众彼此进行对话，那么组织方更有可能激发新社交媒体受众的评论</description>
      <content:encoded><![CDATA[<h2 id="代码下载codezip"><a href="code.zip">代码下载</a></h2>
<p>现在一提到文本分析，除了词频统计、情感分析，就属话题分析最火，主流技术路线是使用LDA话题模型进行主题分析。但是LDA适合文档区分度大，文本档数较大。如果不满足这两点，LDA虽然能跑出模型，但是跑出的topic无法解读，没有意义。今天分享一个技术文，在看技术文之前，将技术文的背景文献稍微整理翻译了下，方便大家更好的理解textnets的应用场景。</p>
<p>网络分析通常用于描述人与人之间的关系——尤其是在社会科学中——但它也可以应用于词之间的关系。例如，网络关系可以通过文档中单个单词的共现来创建，或者可以使用双模式网络投影在文档之间创建关系。</p>
<p>基于网络的自动文本分析方法的优点是</p>
<ul>
<li>
<p>像社会群体一样，可以通过三元闭包更准确地测量词组的含义——或者任何两个词或术语相互的含义的原则如果将它们放在第三个词的上下文中，可以更准确地理解；</p>
</li>
<li>
<p><strong>文本网络可以应用于任何长度的文档</strong>，这与通常需要大量单词才能正常运行的主题模型不同。在简短的社交媒体文本变得普遍的时代，这是一个显着的优势。</p>
</li>
<li>
<p>最后，这种方法受益于<strong>社区检测</strong>跨学科文献的最新进展，可以说它提供了更准确的单词分组方法，这些方法受益于网络内观察到的聚类，而不是词袋模型。</p>
</li>
</ul>
<br>
<h2 id="背景-文化桥梁">背景-文化桥梁</h2>
<p>文化信息传递理论和公共审议和计算技术。</p>
<blockquote>
<p>Markowitz, D. M., &amp; Shulman, H. C. (2021). The predictive utility of word familiarity for online engagements and funding. Proceedings of the National Academy of Sciences, 118(18).</p>
</blockquote>
<p>由于每天光顾此类论坛的人数迅速增加，社交媒体为倡导组织塑造公共辩论提供了有力的机会。 然而，社会科学家还没有解释为什么一些<strong>议题发起者</strong>能成功发起大规模的广泛参与性(公开辩论/广泛对话)，而大多数其他组织却没做到。 本文使用自动文本分析发现，如果组织方建立<strong>文化桥梁</strong>，在很少能一起讨论的议题领域内产生可连接的对话主题信息，这类信息不仅能引起多个受众的共鸣，而且还能让这些受众彼此进行对话，那么组织方更有可能激发新社交媒体受众的评论。
在控制这些因素的情况下，建立实质性文化桥梁的组织， 其所发布信息， 比那些没有建立实质性文化桥梁的组织， 得到的评论数多 2.52 倍。</p>

<figure >
    
        <img src="img/large.jpg" />
    
    
</figure>

<p>社交网络分析通常用于描述个人之间的友谊或其他关系，但它也可通过参与者的消息或想法的类型来描述参与者之间的关系（如下图) 是“文化网络”中的一个小区域。</p>
<ul>
<li>每个节点描述一个参与议题公开对话的参与者</li>
<li>节点间的边代表那些在社交媒体倡导领域内讨论类似议题的人。</li>
</ul>
<p>PNAS2016这篇使用“<strong>自闭症谱系障碍ASD疾病的治病原因大讨论</strong>”做的数据分享，图中 t1 处的一类用户认为ASD致病可能跟疫苗有关，而另一类人可能认为ASD可能与遗传因素的有关。从图形看，t1这类议题发起方式，没有产生广泛参与性。而t2和t3，文化网络中因为文化桥梁的存在，产生了广泛参与性。</p>
<p><strong>假设的文化网络</strong>，其中节点代表参与有关议题的对话参与者，而节点之间的边则描述了其消息内容的相似性。议题广泛参与性，除了话题发起者影响力、话题投放资源等因素影响，还有一个因素就是发起的话题是否吸引了受众。对于参与者而言，最有吸引力的话题需要满足“<strong>新颖，且熟悉</strong>”。</p>
<p><strong>用TF-IDF刻画文化网络中的“新且熟悉”</strong>
在文本分析中有一个文本特征提取技术tf-idf</p>
<ul>
<li>tf指词语在某文档中出现的次数；从词语的角度，该值越大越熟悉</li>
<li>idf逆文档数，即词语出现在多少个文档中；从词语的角度，该值越小越新颖</li>
</ul>

<figure >
    
        <img src="img/large2.jpg" />
    
    
</figure>

<p>本教程将引导您完成使用文本网络分析和可视化数据所需的所有步骤。 在解决与使用文本网络相关的其他杂项问题之前，本教程首先介绍了一个独立的示例。</p>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pip3</span> <span class="n">install</span> <span class="n">textnets</span>
</code></pre></div><br>
<h2 id="1-查看数据">1. 查看数据</h2>
<p>pnas2016这篇的数据没有开源，通过文本构建文化网络、发现文化桥梁。这里使用一个特别特别小的新闻数据，关于人类第一次登月。如果我们使用<a href="https://github.com/jboynyc/textnets">textnets</a>，准备的数据需要有两个列</p>
<ul>
<li>议题参与者，类比报刊</li>
<li>议题参与者发布的内容，如评论等</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;test.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">|    | Unnamed: 0        | headlines                                                                 |
|---:|:------------------|:--------------------------------------------------------------------------|
|  0 | The Guardian      | 3:56 am: Man Steps On to the Moon                                         |
|  1 | New York Times    | Men Walk on Moon -- Astronauts Land on Plain, Collect Rocks, Plant Flag   |
|  2 | Boston Globe      | Man Walks on Moon                                                         |
|  3 | Houston Chronicle | Armstrong and Aldrich &#34;Take One Small Step for Man&#34; on the Moon           |
|  4 | Washington Post   | The Eagle Has Landed -- Two Men Walk on the Moon                          |
|  5 | Chicago Tribune   | Giant Leap for Mankind -- Armstrong Takes 1st Step on Moon                |
|  6 | Los Angeles Times | Walk on Moon -- That\&#39;s One Small Step for Man, One Giant Leap for Mankind |
</code></pre></div><br>
<h2 id="2-导入corpus">2. 导入corpus</h2>
<p>使用textnets库的将数据导入为其特有的语料格式。从下方可以看到textnets可能会用spacy，如果要配置英文en_core_web_sm或中文zh_core_web_sm, 请查看该文 <a href="https://t.hk.uy/aCmr">https://t.hk.uy/aCmr</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">textnets</span> <span class="k">as</span> <span class="nn">tn</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="c1">#设置随机种子，保证代码可重复性</span>
<span class="n">tn</span><span class="o">.</span><span class="n">params</span><span class="p">[</span><span class="s2">&#34;seed&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">42</span>

<span class="n">corpus</span> <span class="o">=</span> <span class="n">tn</span><span class="o">.</span><span class="n">Corpus</span><span class="o">.</span><span class="n">from_csv</span><span class="p">(</span><span class="s1">&#39;test.csv&#39;</span><span class="p">)</span>
<span class="n">corpus</span>
</code></pre></div>
<figure >
    
        <img src="img/corpus.png" width="100%" />
    
    
</figure>

<br>
<h2 id="3-构建网络">3. 构建网络</h2>
<p>需要注意的是corpus.tokenized()是textnets特有的分词方法，如果所处理的新闻是中文，需要提前分词去停用词整理为像英文数据格式，用空格间隔单词。</p>
<p>textnets提供了构建网络的方法</p>
<p>tn.Textnet(data, min_docs, connected, doc_attrs)</p>
<ul>
<li>data DataFrame类型, 三列，自己可以运行 corpus.tokenized() 查看样式</li>
<li>min_docs 一个词语存在于至少多少个文档中，默认为2。一个词至少出现在两个doc中，才会让两个doc产生连接</li>
<li>connected 仅保留网络的最大连接组件（默认值：False）</li>
<li>doc_attrs 文档节点的属性，字典的字典(双层嵌套字典)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">t</span> <span class="o">=</span> <span class="n">tn</span><span class="o">.</span><span class="n">Textnet</span><span class="p">(</span><span class="n">corpus</span><span class="o">.</span><span class="n">tokenized</span><span class="p">(),</span> <span class="n">min_docs</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p>使用所有默认参数， textnets 会帮我们删除英文停用词，词干化(合并同类词)，并删除标点符号、数字、URL 等。</p>
<p>但这里我们将破例将 min_docs 设置为1（因为数据只有几句话几十个单词，这里破例设置为1，正常这里至少是2）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">t</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label_nodes</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>   <span class="c1">#标记节点名(单词、媒体)</span>
       <span class="n">show_clusters</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span> <span class="c1">#绘制簇的边界</span>
</code></pre></div>
<figure >
    
        <img src="img/output_10_0.svg" width="100%" />
    
    
</figure>

<p>show_clusters 使用 <strong>Leiden社区检测算法</strong>(Leiden community detection algorithm)找到了分区成簇，它似乎识别了<strong>同一主题</strong>(登月)下不同词之间的远近(相似的词在一个簇中，不同的词处于不同的簇中)。</p>
<p>你可能会疑惑：为什么网络图中的<strong>单词: moon</strong>会自己漂移？ 那是因为moon这个词在每个文档中只出现一次，所以每个文档moon的tf-idf得分为0。</p>
<p>让我们再次可视化相同的事情，但这次根据节点的 BiRank（二部网络的中心性度量）缩放节点，根据权重缩放边缘。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">t</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label_nodes</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
       <span class="n">show_clusters</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
       <span class="n">scale_nodes_by</span><span class="o">=</span><span class="s2">&#34;birank&#34;</span><span class="p">,</span>
       <span class="n">scale_edges_by</span><span class="o">=</span><span class="s2">&#34;weight&#34;</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_12_0.svg" width="100%" />
    
    
</figure>

<p>我们还可以只可视化报刊网络，不显示词语。这里设置node_type=&lsquo;doc&rsquo;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#node_type有两种值， doc、term</span>
<span class="n">papers</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">project</span><span class="p">(</span><span class="n">node_type</span><span class="o">=</span><span class="s2">&#34;doc&#34;</span><span class="p">)</span>
<span class="n">papers</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label_nodes</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_14_0.svg" width="100%" />
    
    
</figure>

<p>和之前的双向网络一样，我们可以看到Houston Chronicle、  Chicago Tribune、  Los Angeles Times更紧密地聚集在一起。</p>
<p>接下来，词网络：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">project</span><span class="p">(</span><span class="n">node_type</span><span class="o">=</span><span class="s2">&#34;term&#34;</span><span class="p">)</span>
<span class="n">words</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label_nodes</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
           <span class="n">show_clusters</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_16_0.svg" width="100%" />
    
    
</figure>

<p>除了可视化之外，我们还可以使用<strong>社交网络指标</strong>分析我们的语料库。 例如，具有教高<strong>介数中心性betweenness centrality</strong>的文档可能将主题不同簇联系起来，起到文化桥梁的作用，从而刺激跨越符号鸿沟的交流(Bail,2016)。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">papers</span><span class="o">.</span><span class="n">top_betweenness</span><span class="p">()</span>
</code></pre></div><pre><code>Los Angeles Times    7.0
Boston Globe         0.0
Chicago Tribune      0.0
Houston Chronicle    0.0
New York Times       0.0
The Guardian         0.0
Washington Post      0.0
dtype: float64
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span><span class="o">.</span><span class="n">top_betweenness</span><span class="p">()</span>
</code></pre></div><pre><code>walk         72.00
man          18.00
step         16.00
small        12.75
land          6.00
giant         6.00
leap          6.00
mankind       6.00
armstrong     3.25
plain         0.00
dtype: float64
</code></pre>
<p>这是因为New York Times在其标题中使用了“walk”一词，将“one small step”簇与“man on moon”簇联系起来。</p>
<p>我们可以再次生成词网络图，这次根据节点的中介中心性缩放节点，并使用“骨干提取”从网络中修剪边缘：cite:p<code>Serrano2009</code>。</p>
<p>我们还可以使用 color_clusters（而不是 show_clusters）根据节点的分区为节点着色。</p>
<p>我们可以过滤节点标签，只标记那些中间中心性betweenness centrality分数高于中位数的节点。 这在高阶网络中特别有用，其中标记每个节点会导致视觉混乱。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label_nodes</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
           <span class="n">scale_nodes_by</span><span class="o">=</span><span class="s2">&#34;betweenness&#34;</span><span class="p">,</span>
           <span class="n">color_clusters</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
           <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span>
           <span class="n">edge_width</span><span class="o">=</span><span class="p">[</span><span class="mi">10</span><span class="o">*</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">words</span><span class="o">.</span><span class="n">edges</span><span class="p">[</span><span class="s2">&#34;weight&#34;</span><span class="p">]],</span>
           <span class="n">edge_opacity</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span>
           <span class="n">node_label_filter</span><span class="o">=</span><span class="k">lambda</span> <span class="n">n</span><span class="p">:</span> <span class="n">n</span><span class="o">.</span><span class="n">betweenness</span><span class="p">()</span> <span class="o">&gt;</span> <span class="n">words</span><span class="o">.</span><span class="n">betweenness</span><span class="o">.</span><span class="n">median</span><span class="p">())</span>
</code></pre></div>
<figure >
    
        <img src="img/output_21_0.svg" width="100%" />
    
    
</figure>

<h2 id="其他textnets案例资料">其他textnets案例资料</h2>
<p><a href="https://www.jboy.space/blog/enemies-foreign-and-partisan.html">https://www.jboy.space/blog/enemies-foreign-and-partisan.html</a></p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>PNAS|词汇熟悉度对线上参与和资金筹集的预测性效用</title>
      <link>https://hidadeng.github.io/blog/pnas_text_fluency/</link>
      <pubDate>Mon, 27 Dec 2021 10:43:10 +0600</pubDate>
      
      <guid>/blog/pnas_text_fluency/</guid>
      <description>人们对简单和通用的语言的反应比复杂和技术语言更有利;本文提供了文本分析的新思路，使用LIWC测量术语流畅性、复杂词汇。</description>
      <content:encoded><![CDATA[<p>[<strong>论文下载The predictive utility of word familiarity for online engagements and funding.pdf</strong>](The predictive utility of word familiarity for online engagements and funding.pdf)</p>
<blockquote>
<p>Markowitz, D. M., &amp; Shulman, H. C. (2021). The predictive utility of word familiarity for online engagements and funding. Proceedings of the National Academy of Sciences, 118(18).</p>
</blockquote>
<h2 id="摘要">摘要</h2>
<p>处理流畅性等元认知框架通常表明人们对简单和通用的语言的反应比复杂和技术语言更有利。与复杂的信息相比，人们更容易处理简单和非技术性的信息，因此会更多地与目标进行互动。在涵盖 12 个现场样本（总 n = 1,064,533）的两项研究中，我们通过展示人们在付出时间和注意力时更多地使用非技术语言（例如，简单的在线语言往往会获得更多社交信息）来建立并复制这种越简单越好的现象订婚）。然而，人们在捐款时会对复杂的语言做出反应（例如，慈善捐赠活动和赠款摘要中的复杂语言往往会收到更多的钱）。这一证据表明，人们根据时间或金钱目标以不同的方式使用复杂语言的启发式方法。这些结果强调语言是社会和心理过程的镜头，以及大规模测量文本模式的计算方法。</p>
<ul>
<li>processing fluency</li>
<li>field studies</li>
<li>automated text analysis</li>
<li>common words</li>
<li>jargon</li>
</ul>
<br>
## 研究背景-复杂词汇的负面效应
<p><strong>术语（jargon）</strong>，是复杂的、技术的、专业的语言，与日常语言相比，加工难度更大、更不流畅。许多关于<strong>加工流畅度</strong>（processing fluency）的研究都发现了使用术语的负面结果： 由于术语会给予人们不熟悉、加工困难的感觉，从而导致其较难理解。使用术语来描述手术过程的医生可能导致病人关于健康风险的错误估计；阅读了关于一项技术的复杂描述的人们（与阅读简单描述的人们相比）对该技术的理解更差并高估其风险。因此，不常用的、技术性的词汇通常不被看好，因为人们对其不熟悉而感觉较难加工，并给人们带来理解上的挑战。</p>
<p>然而，对于复杂词汇的影响，以往研究基本基于实验室结果，效应的强度、健壮性、对真实行为的预测性等仍不清楚。此外，以往大多数关于加工流畅度（processing fluency）的研究都依赖于人们的主观判断，即通过询问被试对于简单或复杂文本的感受来判断效应的大小。该研究则弥补了这两点不足，将加工流畅度操作性定义为词法流畅度（lexical fluency，即所用的词汇为通用词汇还是复杂词汇），并考察复杂词汇对人们在真实世界中行为的影响。</p>
<br>
<h2 id="工具性启发法">工具性启发法</h2>
<p>工具性启发法（instrumentality heuristic）认为，如果一个感觉很困难的经历是有助于达到特定目标的，人们会给予这个经历更高的评价。由此，如果工具性目标被激活，那么加工流畅性低的复杂文本，反而可能会被给予更高的评价。对此，该研究同时考察了复杂词汇对于线上参与度（社会参与度）和资金筹集的影响。</p>
<br>
<h2 id="研究假设">研究假设</h2>
<ul>
<li>假设一：没有工具性目标被激活时，人们更喜欢简单的语言，表现为更高的社会参与度</li>
<li>假设二：工具性目标被激活时，人们更喜欢复杂的语言，表现为更多的资金支持</li>
</ul>
<p>实验结果支持这两个假设：通用词汇与更多的线上支持（高社会参与度）相关，复杂词汇则与更多的资金支持相关。</p>
<br>
<h2 id="数据">数据</h2>
<h3 id="研究一的数据包括">研究一的数据包括：</h3>
<ol>
<li>
<p>来自左倾（纽约时报）、右倾（福克斯新闻）、中立（美联社）的新闻媒体的推特</p>
</li>
<li>
<p>随机选择来自上述三个组织的的记者/名人的个人推特</p>
</li>
<li>
<p>共和党政治家和特朗普手下的推特</p>
</li>
<li>
<p>Reddit文章标题</p>
</li>
<li>
<p>科学论文（来自PLoS One）的标题和、摘要</p>
</li>
<li>
<p>TED演讲标题、内容</p>
</li>
</ol>
<h3 id="研究二的数据包括">研究二的数据包括：</h3>
<ol>
<li>三个慈善平台</li>
</ol>
<p>  a) Kickstarter，主要是关于对创意项目的投资</p>
<p>  b) Indiegogo，主要是关于对创意项目和初创企业的投资</p>
<p>  c) GoFundMe，时要是关于生活事件的筹募（医疗、事故等）</p>
<ol start="2">
<li>NIH基金申请书的摘要</li>
</ol>
<br>
<h2 id="数据分析">数据分析</h2>
<p>自动文本分析工具：研究使用自动文本分析工具LIWC（Linguistic Inquiry and Word Count）来对文本进行分析。LIWC词典是一个经过专家和统计分析认证的工具，其包含了6400个代表“非正式、非专业”的英语单词。研究者把通用词汇的比例操作性定义为文本中LIWC词典中词汇的比例。</p>
<p>混合效应回归分析：使用混合效应回归分析的方法对数据进行分析。其中，回归模型中的控制变量主要有5类，分别是信息源（如新闻来源、演讲者、作者），时间（如年份、视频长度、发帖距今时间、发表时间），主题（如社会/政治等），金钱（如申请成功与否、货币类型）和投入程度（如出资人的数量、股份的数量）。</p>
<p>数据转换：</p>
<ol>
<li>
<p>研究一中，由于发表时间更长的信息更可能有更高的线上参与度，因此计算中所有参与度指标均除以了数据提取日期与发表日期之间的时间距离（数据提取-发表日期）。此外，对于考察的社会参与度指标，均进行了log转换。下文（表XX）中的点赞率、转发率等，均指代经过了上述转换后的点赞数、转发数等。</p>
</li>
<li>
<p>对研究一参与度相关指标求和时（如推特点赞率与转发率之和），对各指标标准化后再求和。</p>
</li>
<li>
<p>研究二中的因变量（各数据集中的所得资金数额）亦均进行了log转换。</p>
</li>
</ol>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>PNAS | 历史语言记录揭示了近几十年来认知扭曲的激增</title>
      <link>https://hidadeng.github.io/blog/pnas_historical_language/</link>
      <pubDate>Sun, 19 Dec 2021 20:43:10 +0600</pubDate>
      
      <guid>/blog/pnas_historical_language/</guid>
      <description> 患有抑郁症的人容易出现适应不良的思维模式，即认知扭曲，他们以过于消极和不准确的方式思考自己、世界和未来。 这些扭曲与个人情绪、行为和语言的显着变化有关。 **我们假设社会可以经历类似的集体心理变化，这些变化会反映在语言使用的历史记录中**。我们调查了过去 **125 年超 1400 万本书中认知扭曲（congnition disorder）**的文本标记的流行情况，并观察到自 1980 年代以来它们的流行程度激增，达到超过大萧条和两次世界大战的水平。 **这种模式似乎不是由词义、出版和写作标准或 Google 图书样本的变化驱动的**。 我们的研究结果发现，通过语言分析**最近的社会转向与认知扭曲和内化障碍相关**。</description>
      <content:encoded><![CDATA[<blockquote>
<p>Bollen, Johan, et al. &ldquo;Historical language records reveal a surge of cognitive distortions in recent decades.&rdquo; <em>Proceedings of the National Academy of Sciences</em> 118.30 (2021).</p>
</blockquote>
<br>
<h2 id="摘要">摘要</h2>
<p>患有抑郁症的人容易出现适应不良的思维模式，即认知扭曲，他们以过于消极和不准确的方式思考自己、世界和未来。 这些扭曲与个人情绪、行为和语言的显着变化有关。 <strong>我们假设社会可以经历类似的集体心理变化，这些变化会反映在语言使用的历史记录中</strong>。我们调查了过去 <strong>125 年超 1400 万本书中认知扭曲（congnition disorder）<strong>的文本标记的流行情况，并观察到自 1980 年代以来它们的流行程度激增，达到超过大萧条和两次世界大战的水平。 <strong>这种模式似乎不是由词义、出版和写作标准或 Google 图书样本的变化驱动的</strong>。 我们的研究结果发现，通过语言分析</strong>最近的社会转向与认知扭曲和内化障碍相关</strong>。</p>
<br>
<h2 id="正文">正文</h2>
<p>抑郁症与独特且可识别的适应不良思维模式有关，称为<strong>认知扭曲</strong>，其中个人以不准确和过于消极的方式思考自己、未来和世界 (9-12)。例如，当个体用消极的、绝对主义的术语（例如，“I am a loser”）给自己贴上标签时，就会出现在抑郁症中看到的认知扭曲。他们可能会用二分法、极端的术语谈论未来事件（例如，“My meeting will be a complete disaster”）或对别人的心态做出毫无根据的假设（例如，“Everybody will think that I am a failure”）。</p>
<p>认知扭曲的类型通常区分许多部分重叠的类型，例如“灾难化”、“二分推理”、“否定积极的”、“情感推理”、“算命”、“标记和错误标记”、“放大和最小化”、“心理过滤”、“读心术”、“过度概括”、“个性化”和“应该陈述”。</p>
<p>**认知行为疗法 (cognitive-behavioral therapy，CBT) ** 是治疗抑郁症和其他内化障碍的黄金标准 (13)，其基础理论认为认知扭曲与内化障碍有关； 它们反映了环境压力下的负面情感和回避行为模式 (14, 15)。 <strong>语言与这种动态密切相关。 事实上，最近的研究表明，患有内化障碍的个体在他们的语言中表现出明显更高水平的认知扭曲 (16, 17)，以至于他们的患病率可能被用作抑郁症易感性的指标 (18, 19)。</strong></p>
<p>我们分析了过去 125 年中大量以英语、西班牙语和德语出版的超过 1400 万本书籍（谷歌图书）中的大量认知扭曲标记的流行情况。具体来说，我们正在研究由 CBT 专家、计算语言学家和双语母语人士组成的团队设计的数百个 1 到 5 个单词 (n-gram)、 标记的认知失真图式 (cognitive distortion schemata,CDS) 的纵向流行情况，以及由 CBT 专家小组外部验证，以捕捉 12 种认知扭曲的表达 (9)。 <strong>CDS n-gram</strong> 被设计为简短、明确和独立的语句，使用频率很高的术语表达特定认知扭曲类型的核心（图 1 和 SI 附录，表 S1-S3）。例如，3-gram 的“I am a”捕获了标签和错误标签失真，而不管其上下文或所涉及的精确标签（“女士”、“尊贵的人”、“失败者”等）。这些相同的 n-gram 在早期的研究中被证明显着更多。</p>
<br>
<h2 id="cds流行度测量">CDS流行度测量</h2>
<p><img loading="lazy" src="img/CDS_n-gram.png" alt=""  />
</p>
<p><strong>CDS n-gram</strong> 显示在灰色框内的示例，周围是合理的上下文词，这些词可能会有所不同，而不会影响 n-gram 是否标记给定类型的认知扭曲的表达（例如，<strong>读心术Mindreading、情感推理Emotiona lReasoning、标记Labeling和错误标记Mislabeling</strong>） . CDS 是由 CBT 专家、语言学家和母语使用者组成的团队设计的，用于捕捉特定认知扭曲类型的表达，而不管其特定的词汇上下文。 对于英语（美国）、西班牙语和德语，专家团队分别定义了 241、435 和 296 个 n-gram 来标记 12 种常见的认知扭曲类型。 请注意，我们的<strong>流行度测量只计算 CDS n-gram 的出现，而不管上下文（“每个人都在思考”、“仍然感觉”和“我是一个”）</strong>。 按失真类型提供的所有 CDS n-gram 的完整列表在SI Appendix, Tables S1–S3.</p>
<p><img loading="lazy" src="img/fig2.png" alt=""  />
</p>
<p>(A-C) 美国英语 (A)、西班牙语 (B) 和德语 (C) 从 1855 年到 2020 年 (125 y) 的 CDS n-gram 流行时间序列的中值 z 分数，其中添加了年份标记 对于重大历史事件。 在 20 世纪的大部分时间里，所有时间序列都显示出稳定或下降的水平，随后在过去的 30 年里认知扭曲急剧增加。</p>
<p>美国英语从 1899 年到 1978 年呈下降趋势，在 1914 年和 1940 年（第一次世界大战和第二次世界大战）以及特别是 1968 年出现小高峰。随后是 CDS 流行率从 1978 年开始激增，并持续到 2019 年。</p>
<p>对于西班牙语 我们发现从 1895 年到 1980 年代初期的稳定水平，在这一点上出现了一个趋势，即 CDS 患病率水平高于之前观察到的任何水平。</p>
<p>德国表现出稳定的 CDS 流行水平，除了第一次世界大战和第二次世界大战前后和之后的强劲高峰，直到 2007 年突然激增。</p>
<br>
<h2 id="data">Data</h2>
<p>研究数据谷歌已经开源，开源下载哦</p>
<p><a href="https://storage.googleapis.com/books/ngrams/books/datasetsv3.html">https://storage.googleapis.com/books/ngrams/books/datasetsv3.html</a></p>
<p><img loading="lazy" src="img/googlebooks.png" alt=""  />
</p>
<br>
<h2 id="cds-ngram词表">CDS ngram词表</h2>
<p>该论文CDS ngram词表</p>
<p><img loading="lazy" src="img/cdsngramlist.png" alt=""  />
</p>
<br>
<h2 id="代码">代码</h2>
<p>ngram代码实现</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">nltk.util</span> <span class="kn">import</span> <span class="n">ngrams</span>
<span class="kn">from</span> <span class="nn">nltk.tokenize</span> <span class="kn">import</span> <span class="n">word_tokenize</span>

<span class="n">sentence</span> <span class="o">=</span> <span class="s2">&#34;Historical language records reveal a surge of cognitive distortions in recent decades&#34;</span>
<span class="n">words</span> <span class="o">=</span> <span class="n">word_tokenize</span><span class="p">(</span><span class="n">sentence</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;分词结果: &#39;</span><span class="p">,</span> <span class="n">words</span><span class="p">)</span>
<span class="c1">#2-gram</span>
<span class="n">two_grams</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">tw</span><span class="p">)</span> <span class="k">for</span> <span class="n">tw</span> <span class="ow">in</span> <span class="n">ngrams</span><span class="p">(</span><span class="n">words</span><span class="p">,</span> <span class="mi">2</span><span class="p">)]</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;2-gram处理结果: &#39;</span><span class="p">,</span> <span class="n">two_grams</span><span class="p">)</span>
<span class="c1">#3-gram</span>
<span class="n">three_grams</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">tw</span><span class="p">)</span> <span class="k">for</span> <span class="n">tw</span> <span class="ow">in</span> <span class="n">ngrams</span><span class="p">(</span><span class="n">words</span><span class="p">,</span> <span class="mi">3</span><span class="p">)]</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;3-gram处理结果: &#39;</span><span class="p">,</span> <span class="n">three_grams</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">分词结果:  [&#39;Historical&#39;, &#39;language&#39;, &#39;records&#39;, &#39;reveal&#39;, &#39;a&#39;, &#39;surge&#39;, &#39;of&#39;, &#39;cognitive&#39;, &#39;distortions&#39;, &#39;in&#39;, &#39;recent&#39;, &#39;decades&#39;]

2-gram处理结果:  [&#39;Historical language&#39;, &#39;language records&#39;, &#39;records reveal&#39;, &#39;reveal a&#39;, &#39;a surge&#39;, &#39;surge of&#39;, &#39;of cognitive&#39;, &#39;cognitive distortions&#39;, &#39;distortions in&#39;, &#39;in recent&#39;, &#39;recent decades&#39;]

3-gram处理结果:  [&#39;Historical language records&#39;, &#39;language records reveal&#39;, &#39;records reveal a&#39;, &#39;reveal a surge&#39;, &#39;a surge of&#39;, &#39;surge of cognitive&#39;, &#39;of cognitive distortions&#39;, &#39;cognitive distortions in&#39;, &#39;distortions in recent&#39;, &#39;in recent decades&#39;]

</code></pre></div><p>统计统计CDS-ngram与ngram频数，进而计算出CDS流行度。</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>有偿数据分析服务</title>
      <link>https://hidadeng.github.io/blog/paid_for_service/</link>
      <pubDate>Sun, 12 Dec 2021 12:43:10 +0600</pubDate>
      
      <guid>/blog/paid_for_service/</guid>
      <description>本文旨在回答大数据技术如何才能成为法学研究的方法，如何与法律实证研究、规范研究这两大传统的方法实现有效的互动。</description>
      <content:encoded><![CDATA[<p>经常有朋友咨询可否提供有偿服务，目前可接文本数据分析，常见的分析支持</p>
<ul>
<li>词频统计</li>
<li>情感分析</li>
<li>LDA话题分析</li>
<li>文本分类</li>
<li>相似度分析</li>
<li>其他</li>
</ul>
<p>为了提高沟通效率，需要您提供需求文档，需要说明两部分信息</p>
<h2 id="1数据说明">1、数据说明</h2>
<ol>
<li>是否已拥有数据</li>
<li>数据的文件格式(pdf、txt、excel类等)</li>
<li>数据量(文件数或多少M)</li>
</ol>
<br>
<h2 id="2数据分析">2、数据分析</h2>
<ol>
<li>列出需要计算的指标（列出计算方法）</li>
<li>分析结果的存储格式及字段样式(建议excel格式)</li>
</ol>
<br>
<h2 id="提示">提示</h2>
<p>我自己时间精力有限，服务肯定没有全职数据分析师做的好，更建议大家付费购买课程自学，技术上打铁还需自身硬。常见的数据分析都已形成课程，价格也不贵。</p>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
<br>
<h2 id="咨询方式">咨询方式</h2>
<p>准备好需求文档后，可加微信<strong>18373154668</strong>（微信手机同号）</p>
<ul>
<li>中午12:00-14:00</li>
<li>晚间22:00-24:00</li>
</ul>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>转载 | 管理决策情境下大数据驱动的研究和应用挑战</title>
      <link>https://hidadeng.github.io/blog/management_challenge_in_big_data_era/</link>
      <pubDate>Wed, 08 Dec 2021 12:42:10 +0600</pubDate>
      
      <guid>/blog/management_challenge_in_big_data_era/</guid>
      <description>在数字化生活背景下, 传统的管理变成或正在变成数据的管理, 传统的决策变成或正在变成基于数据分析的决策.从大数据的数据特征、问题特征和管理决策特征出发, 讨论管理决策研究和应用的范式转变.大数据驱动范式可以从外部嵌入、技术增强和使能创新三个角度来审视, 并体现出“数据驱动&#43;模型驱动”的“关联&#43;因果”含义.此外, 围绕大数据特征和重要研究方向, 阐述了全景式PAGE框架及其要素.</description>
      <content:encoded><![CDATA[<p><strong>摘  要：</strong></p>
<p>在数字化生活背景下, 传统的管理变成或正在变成数据的管理, 传统的决策变成或正在变成基于数据分析的决策.从大数据的数据特征、问题特征和管理决策特征出发, 讨论管理决策研究和应用的范式转变.大数据驱动范式可以从外部嵌入、技术增强和使能创新三个角度来审视, 并体现出“数据驱动+模型驱动”的“关联+因果”含义.此外, 围绕大数据特征和重要研究方向, 阐述了全景式PAGE框架及其要素.</p>
<p><strong>关键词</strong>： 大数据 ； 管理决策 ； 研究范式 ； 全景式 PAGE 框架</p>
<br>
<p>信息科技的飞速发展和深度融合开启了数字化生活的新篇章, 把人们带入了大数据 (big data) 时代.一方面, 随着各种感应探测技术、智能终端以及移动互联的广泛应用, 使得社会经济生活的方方面面以更细粒度的数据形式呈现, 进而整个社会的“像素”得到显著提升;另一方面, 社会“像素”的提升促进了数字“成像”的发展, 使得通过数据世界可以更清晰地描绘社会经济活动情境, 进而基于数据的商务分析 (business analytics, BA) 正在成为使能创新的核心竞争力.在此背景下, 传统的管理变成或正在变成数据的管理, 传统的决策变成或正在变成基于数据分析的决策.</p>
<p>近年来, 大数据成为学界、政界和业界持续关注的热点.在学术界, 早在2008年和2011年, 《Nature》与《Science》杂志分别从互联网技术、互联网经济学、超级计算、环境科学以及生物医药等多方面讨论大数据的处理与应用45此后, 大数据在各个学科领域包括医学、经济学、管理学以及公共管理等领域得到了广泛的探讨与研究6789同时, 大数据也引起世界各国高度重视, 美国、欧盟、澳大利亚以及日本等国部署了一系列大数据相关战略和关键领域。在产业界, 国内外大批知名企业掀起了技术产业创新浪潮, 通过收购与合作构建和提升大数据技术与应用能力, 布局和开拓相关的业态和市场.</p>
<p>我国政府对大数据高度重视并有一系列前瞻性洞见和部署.2015年十八届五中全会提出实施国家大数据战略  , 国务院发布《促进大数据发展行动纲要》  , 指出大数据是国家基础性战略资源, 旨在全面推进我国大数据发展和应用, 加快建设数据强国.2017年十九大报告进一步强调要推动互联网、大数据、人工智能和实体经济深度融合.通过国家需求、政策支持、产业结合以及企业研发等形式, 近些年来涌现出一大批重大规划和政产学研项目, 包括国家自然科学基金委员会 (NSFC) 于2015年9月启动的“大数据驱动的管理与决策研究”重大研究计划 (简称NSFC大数据重大研究计划, 参见附注)  .</p>
<p>大数据在给社会经济生活带来深刻变革的同时, 也对管理与决策研究带来一系列新的重要课题.从信息技术 (IT) 范畴来看, 可以从两个视角来认识大数据, 即大数据的“造”与“用”视角 (如图1所示) .这和产品的属性类似, 一方面, 人们关心产品是如何设计和制造出来的;另一方面, 人们关心产品是如何使用和有用的.大数据以IT的形式呈现, 通常可以概括为数据和系统 (包括算法、应用、平台等) .从造的视角出发, 涉及的主要问题包括大数据分析 (如画像、学习、推断等) 和大数据系统建设 (如体系、功能、集成等) .从用的视角出发, 涉及的主要问题包括大数据使用行为 (如采纳、影响、管理等) 和大数据使能创新 (如要素、价值、市场等) .</p>

<figure >
    
        <img src="img/1.jpg" width="800" />
    
    
</figure>

<p>值得一提的是, 大数据相关的研究不仅需要对相关领域的理论与应用进行探索和创新, 也需要对许多惯常的认识视角和方法论范式进行审视和发展.同时, 我国学者和研究人员也面临着“严谨 (rigor) 与相关 (relevance) ” (学术规范与实践影响) 和“世界与中国” (国际视野与中国根基) 既分野又统一的挑战, 当然应对这些挑战也为创新机遇开拓了广袤的空间.</p>
<br>
<br>
<h2 id="大数据特征">大数据特征</h2>
<p>概括说来, 大数据的特征可以从三个方面来描述:数据特征, 问题特征和管理决策特征, 分别刻画大数据具有的数据属性、大数据问题的特点、以及管理决策大数据问题的视角.</p>
<h3 id="11-大数据的数据特征">1.1 大数据的数据特征</h3>
<p>大数据作为数据, 具有体量大、多样性、 (价值) 密度低、速率高等属性特征 (即4V等特征）.第一, 数字化生活各要素的数据生成和交互加速了数据的海量积累, 使得数据规模剧增.体量大可以从超规模 (即超出传统规模) 和问题领域角度来理解, 因为规模是与问题领域相关, 而不是拘泥于统一量纲标准.例如, 市场营销领域的客户满意度调查的传统方式是问卷和访谈, 那么进一步考虑海量网上购物评论和社交媒体体验分享的用户生成内容 (user generated content, UGC) 就构成了一个大数据情境.第二, 数字化生活各要素的数据生成和交互丰富了数据类型, 使得数据多样性成为常态.多样性强调数据的多源异构和富媒体 (如文本、语音、图片、视频等) 特点.例如, 社交网络上的公众声音、智慧交通平台上的影像信息等均为富媒体形态且来源广泛.第三, 数字化生活各要素的数据生成和交互在加速海量积累的同时也减少了价值数据的占比, 使得价值发现的难度提升.价值密度低意味着数据挖掘和商务分析是大数据应用的关键.例如, 对于在线企业或服务平台来讲, 随着网络访问的增加和业务活动的扩展, 识别高价值的潜在用户变得相对困难, 也凸显出大数据分析的重要性.第四, 数字化生活各要素的数据生成和交互强化了流数据形态和即时性, 使得数据传输和交换速率显著升高.速率高对平滑流通和连续商务提出了更高要求.例如, 智能手机客户端应用软件 (Apps) 的使用需要在服务内容和效果方面 (包括相关内容的浏览、下载、上传、响应、展现等) 有良好的临场感和实时体验.</p>
<br>
<h3 id="12-大数据的问题特征">1.2 大数据的问题特征</h3>
<p>在各类研究和应用问题中, 有一类问题可以归为大数据问题.大数据问题应至少具有以下三个特点:粒度缩放、跨界关联和全局视图.首先, 粒度缩放是指问题要素的数据化, 并能够在不同粒度层级间进行缩放.这需要通过数据感知、连接和采集获得足够细的粒度性, 同时对于不同层级间的粒度转换具有分解和聚合能力.其次, 跨界关联是指问题的要素空间外拓.这需要扩展惯常的要素约束和领域视角, 强调“外部性”和“跨界”, 在问题要素空间中通过引入外部视角与传统视角联动, 将内部数据 (如个体自身、企业组织和行业等内部数据) 与外部数据 (如社会媒体内容等) 予以关联.最后, 全局视图是指问题定义与求解的全局性, 强调对相关情境的整体画像及其动态演化的把控和诠释.这需要基于数据分析和平台集成的全景式“成像”能力.</p>
<p>在数字化生活的背景下, 具有粒度缩放、跨界关联和全局视图特点的应用问题不断涌现, 进而激发了大量创新并催生了许多新模式、新业态.例如, 在医疗健康领域, 传统疾病诊疗中的病人就医关系正在被扩展为融合院外检测、干预、康复数据的新型诊疗模式.其中, 不仅涉及传统意义上的生化、影像和诊疗等医院内部数据, 也涉及医院外病人和社区相关的体征、体验、社会关系、环境等外部数据.这里, 需要获取相关生化组织、疾病、人、社区、环境等微观宏观粒度信息;同时进行视角拓展和关联, 包括从科室内外到医院内外的跨界融合;进而, 可以在全局层面进行更为有效的诊疗决策和管理.此外, 近年来发展迅速的新型医疗健康服务平台, 通过整合社会和行业资源, 连接医生、公众、医院以及相关上下游企业提供信息咨询、诊疗链入、健康指导等服务产品, 形成了一类新业态并呈现显著的大数据问题特征.再如, 在新型商务领域, 共享单车体现了大数据问题的粒度缩放、跨界关联和全局视图特点.通过车载传感器、定位系统以及智能手机终端等设备获得调度和管理需要的“人—车—路”粒度信息;同时, 打通导航、支付、通讯、商铺以及餐饮等诸多业务功能, 实现跨界联动;进而, 企业和平台可以从全局出发形成整体画像, 并优化布局和运作以做出相应的管理决策.</p>
<br>
<h3 id="13-大数据管理决策特征">1.3 大数据管理决策特征</h3>
<p>一般而言, 管理者在业务活动中通常有三个关注:发生了什么 (what) , 为什么发生 (why) 以及将发生什么 (will) .在大数据问题特征的情境下, 这三个关注可以从业务层面、数据层面和决策层面进行刻画, 进而形成管理决策大数据问题的特征框架 (如图2所示) .</p>

<figure >
    
        <img src="img/2.jpg" width="800" />
    
    
</figure>

<p>首先, 对于发生了什么 (what) 的关注, 业务层面需要反映业务的状态, 即已经发生或者正在发生的事件和活动 (如市场份额、交易现状、KPI表现等) ;数据层面需要体现业务环节的数据粒度, 即现有的数据能否足够支撑管理者对不同粒度层级的业务状态进行了解和把握 (如感知、采集、解析、融合等) ;决策层面需要构建问题的全局视角, 即定期整合汇总以及随需要素展现 (如:按时统计报表、实时信息查询等) .</p>
<p>接着, 对于为什么会发生 (why) 的关注, 业务层面需要反映业务及其要素之间的联系, 即业务特定状态的发生与哪些环节和要素有关联;数据层面需要体现不同业务数据路径的连接, 即不同粒度层级和跨界关联的业务数据是否有效融通, 并能够支持对数据的分析处理 (如多维、切分、回溯等) ;决策层面需要发现关联业务/要素之间的因果关系, 即厘清业务逻辑和状态转换机理.在此, 特别需要指出的是, 在很多情形下, 尤其在管理决策领域, 大数据需要既讲关联也讲因果.对于许多管理问题而言, 如果决策者对事件之间的因果关系没有准确的分析与判断, 则难以做出有效的决策, 当管理者面临重大决策时更是如此 (如投融资、进入新市场、业务转型、结构重组等) .</p>
<p>进而, 对于将发生什么 (will) 的关注, 业务层面需要反映业务发展轨迹, 即勾勒出由决策或变化导致的业务走向;数据层面需要体现数据的动态演化情况, 即对于相关事件进行不确定性动态建模并能够支持智能学习和推断 (如模拟、预测、人工智能等) ;决策层面需要提升前瞻性和风险洞见, 即获得决策情境映现和趋势预判能力.</p>
<br>
<h2 id="大数据驱动范式">大数据驱动范式</h2>
<p>系统化管理理论的产生及其发展, 包括行为理论、决策理论、权变理论和战略管理等理论体系和管理模型的研究[19], 在提炼管理思想、诠释管理模式和指导管理实践方面发挥了重要作用.长期以来, 管理学研究一直以模型驱动范式为领域主流.在模型驱动范式下, 研究者基于观察抽象和理论推演建立概念模型和关联假设, 再借助解析手段 (例如运筹学和博弈论等分析工具) 对模型进行求解和优化, 或利用相关数据 (包括仿真数据、调研数据、观测数据、系统记录数据等) 对假设进行统计检验.此外, 建立在归纳逻辑基础上的扎根理论等研究范式, 传统上强调从文献概括、实地调研、深度访谈中进行定性推演形成理论和认识.</p>
<p>但是, 在大数据背景下, 一些新的挑战正在涌现[20,21].这里, 以传统的行为模型或计量模型 (简称传统模型) 为例.第一, 传统模型基于观察抽象、理论推演以及经验提炼确定变量 (或构念) 组合, 以此构建变量关系和理论假设, 并通过数据实证进行模型检验.然而, 在大数据背景下, 常常需要检验大量的变量组合 (如指数级组合数) , 这就使得逐一构建传统模型并进行检验成为难以完成的任务.第二, 有些重要潜在影响因素和隐变量没有被意识到, 因而没有被考虑到传统模型的变量组合中, 这常常导致传统模型的假设与数据的适配性不强, 模型解释力不高.第三, 虽然知道有些影响因素和变量是重要的, 但是由于这些因素和变量在传统意义上不可测或不可获 (如文本、图像、语音等富媒体数据) , 难以容纳到传统模型变量组合中, 进而造成模型解释力不理想.第四, 当样本数据规模大幅增加时, 对一些变量的显著性检验有效性下降, 可能出现联系缺失或拟合过度等情形.</p>
<p>面对上述挑战, 数据驱动范式的优势不断凸显.概括说来, 数据驱动范式的作用有两个:一是直接发现特定变量关系模式, 形成问题解决方案;二是与模型驱动范式进行补充扩展, 形成融合范式.值得指出的是, 数据驱动范式发现的一类重要关系模式是关联 (association) 及其扩展形式 (如关联规则、层次关联、数量关联、时态关联、类关联、模式关联等) , 并广泛应用到许多领域 (如搜索、推荐、模式识别等) [22].然而, 许多管理决策情形不仅需要关联也需要因果, 这在一定程度上催生了融合范式及其应用.例如, 首先利用数据驱动范式的关联挖掘方法发现变量间的关联, 以缩减变量空间和组合规模;进而利用模型驱动范式的行为方法辨识构念影响路径, 或计量方法解析变量间的因果关系.这是一个“数据驱动+模型驱动”思路, 体现“关联+因果”的诉求, 这对于管理决策尤为重要.这里, 与传统模型相比一个重要区别是, 此时的变量空间中可能存在着一些新颖且潜在的变量及其关联, 在进一步融合运用模型驱动方法构建变量关系时存在困难, 因为已有的理论知识和领域经验不能直接支持相关的建模逻辑和关系形式.这就需要在更深 (包括间接、潜隐) 层面上探寻新的变量影响机理和理论, 并在方法论上另辟新径 (如通过步进/层次/迭代的试错和启发建模方式) .</p>
<p>特别地, 当数据具有4V等特征并且面对管理决策大数据问题时, 考虑数据驱动与模型驱动的结合、管理决策的关联因果特点、使能创新等元素的一类新型范式 (在此称作大数据驱动范式) 应运而生, 并在深入研究与应用过程中得到进一步发展完善.一般而言, 大数据驱动范式具有“数据驱动+模型驱动”的“关联+因果”性质.具体说来, 大数据驱动范式的框架可从三个角度来审视:外部嵌入、技术增强以及使能创新 (如图3所示) .前两个角度主要涉及方法论层面, 后一个角度主要涉及价值创造层面.</p>

<figure >
    
        <img src="img/3.jpg" width="800" />
    
    
</figure>

<br>
<h3 id="21-外部嵌入">2.1 外部嵌入</h3>
<p>外部嵌入指外部视角引入, 即将传统模型视角之外的一些重要变量 (包括构念、因素等) 引入到模型中.假设自变量集合为X'={x1, x2, …, xm, xm+1, …, xn}, 其中x1, x2, …, xm为传统建模变量, xm+1, …, xn为通过数据驱动方法新引入的变量 (多为富媒体形态) .如果没有变量引入 (n=m) , 传统模型的变量关系是Y=f (X) , X={x1, x2, …, xm}.在跨界关联情境下 (n&gt;m) , 将形成新变量关系Y'=f' (X') .换句话说, Y=f (X) 可以是Y'=f' (X') 的特例;一般意义上讲, X'≠X, f'≠f, Y'≠Y.显然, 新变量关系的构建面临着深刻的挑战, 既有新变量空间的发现, 又有新视角的洞察, 也有新变量关系的辨识和新理论的生成.当然, 对于研究和应用来讲, 这些挑战同时也是创新的机遇.例如, 在金融领域, 可以考虑引入搜索平台上的股票关注数据变量以及社交媒体平台上的相关公共事件数据变量等, 以构建新型股价预测模型;在商务领域, 可以考虑引入购物平台上的评论数据变量以及朋友圈中的体验和口碑数据变量等, 以构建新型商品营销模型;在医疗健康领域, 可以考虑引入院外病友智能检测终端数据变量以及区域环境诱因数据变量等, 以构建新型呼吸疾病预防诊疗模型;在公共管理领域, 可以考虑引入社交平台上的受众意见数据变量以及相关领域联动影响数据变量等, 以构建新型公共政策模型.</p>
<br>
<h3 id="22-技术增强">2.2 技术增强</h3>
<p>对于传统模型来讲, 通过外部嵌入而引入的变量多为富媒体、潜隐性、不可测或不可获, 通常需要利用数据驱动方法和技术.可以说, 数据和技术意识及其能力是大数据背景下研究和应用的核心竞争力, 也是大数据驱动范式的关键要素.技术增强旨在提升这样的能力与要素水平.</p>
<p>从大数据的“用”与“造”视角出发, 技术增强具有两方面含义.一方面, “用”的视角要求管理模型驱动的研究和应用能够增强对外部大数据的敏感性, 引入外部变量并构建其关系;同时, 能够增强对大数据分析技术的敏感性, 构建方法和工具的获取和使用能力.研究和应用创新通常体现在通过新型范式开发新的变量关系, 进而形成新的管理学模型和应用 (如面向管理问题的新型行为模型或计量模型) , 以获得更深入和更具解释力的管理决策洞见和策略.</p>
<p>另一方面, “造”的视角要求数据驱动的研究和应用能够增强对于管理决策问题的敏感性, 构建面向管理决策问题的方法和技术.研究和应用创新通常体现在根据管理决策问题特点及其数据属性开发相关性质、测度和策略, 以获得新颖有效的算法和解决方案.值得指出的是, 这里许多算法 (特别是启发式算法和近似解法) 需要经过实验数据的验证以评估其效率和效果.</p>
<p>多年来, 不管是“用”的视角还是“造”的视角在数据的使用标准上也经历了一个不断升级的过程, 从模拟数据到标杆数据, 再到相当规模的实际数据, 形成一个逐步丰富和叠加的验证实践.在大数据情境下, 实际数据的规模化得到了进一步强化.此外, 在算法比较中, 更关注算法带来的实用效果提升的显著性, 特别在涉及相关用户的场景中, 通常需要进行用户行为实验及其效果感知评测.</p>
<p>在数据类型方面, 富媒体形态 (如文本、图像、音频、视频等) 成为主流.其中, 音频数据、视频数据具有时间连续性特点.由于计算机中通常采用编码、采样等方式表示富媒体数据, 因而数据变换成为大数据分析的重要内容.常用的数据变换方法包括文本处理的向量空间模型 (VSM) [23]、主题模型 (topic model) [24], 图像处理的尺度不变特征转换 (SIFT) [25], 音频处理的短时傅里叶变换 (STFT) [26], 视频处理的时空兴趣点检测 (STIP) [27]等方法.近年来, 随着大数据平台化运算能力的显著提升, 基于深度神经网络的相关方法进一步发展, 并在富媒体数据变换上展现出良好的应用效果和发展前景.例如, 用于文本数据的单词嵌入 (word embedding) [28], 用于图像数据的卷积神经网络 (CNN) [29]和胶囊神经网络 (capsnet) [30], 用于音视频等具有时间序列特征数据的循环神经网络 (RNN) [31]、长短时记忆神经网络 (LSTM) [32]等.其他较新的数据变换方法还包括多层感知机 (MLP) 、自学习编码器 (AE) 、受限制玻尔兹曼机 (RBM) 、深度语义相似模型 (DSSM) 、神经自回归分布估计 (NADE) 、生成对抗网络 (GAN) 等[33,34].</p>
<br>
<h3 id="23-使能创新">2.3 使能创新</h3>
<p>大数据驱动的一个重要含义是大数据使能 (enabling) .大数据能力主要包括大数据战略、大数据基础设施、大数据分析 (6) 方法与技术等.大数据使能是指大数据能力带动的价值创造.例如, 从研究和应用范式角度看, 外部嵌入是一种使能情形, Y'=f' (X') 中, 大数据能力通过自变量X'体现, 创造的价值通过因变量Y'体现, 使能转换方式通过f'体现.从研究和应用情境角度看, 企业的价值创造可以体现在其价值链的环节上, 既包括价值链的主环节及其活动, 也包括价值链的支持环节及其活动[35].在企业内外部大数据环境下, 企业使能创新是通过构建大数据能力, 带动新洞察、新模式、新机会的发现, 进而推动产品/服务创新和商业模式创新, 以实现企业的价值创造 (如图4所示) .</p>

<figure >
    
        <img src="img/4.jpg" width="800" />
    
    
</figure>

<p>综上所述, 大数据驱动范式通过技术增强引入了新视角, 进而推动了新型变量关系、要素机理和理论模型构建, 并提升了大数据使能创新的价值创造.这对于应对新型商务形态的进一步发展机遇和挑战具有重要意义.简单说来, 新型商务可以通过两个阶段予以描述.第一个阶段称作数据商务 (digital business或data-centric business) , 即“数据化+商务分析 (BA) ”.此时通过细化数据粒度使得商务要素的“像素”显著提升, 并在此基础上进行商务分析, 针对不同管理场景和层次进行“成像”和决策.第二个阶段称作算法商务 (algorithmic business) , 即“商务分析+”.此时, 在已有的商务高像素基础上, 成像算法成为关注重点, 旨在获得面对新模式、新业态、新人群[3]的发展策略和竞争优势.这里, “商务分析+”包括BA算法创新和BA使能创新.</p>
<p>近年来, 人工智能 (artificial intelligence, AI) 的研究和应用得到了快速发展, 并受到各界的广泛重视.人工智能自二十世纪50年代以来的发展起起伏伏[36], 虽然在相关思想、模型和方法等方面取得了许多重要进展和成果, 但是由于常常受限于数据基础以及计算能力的不足, 其学习、进化以及推理等方面的能力难以得到发挥, 应用效果也受到影响.直至进入大数据时代, 人工智能的许多成果得到了工程化和产品化实现, 开始在深度和广度上渗透到社会经济活动中, 并引发人们对于未来产业和人类生存的遐想和担忧.机器人和智能产品早期用于替代人类简单重复体力性工作, 现在则可以开始尝试用于替代不少复杂并具有智力的工作, 诸如围棋[37]、翻译[38]、绘画[39,40]、作曲[40]、作诗[41]、无人驾驶[42]、人脸识别[42]、意念控制[43,44]等等.人工智能在管理领域的应用也初见端倪, 比如财务机器人[45]、自动金融交易[42,45]、竞争智能[46]、客户服务[45,47]、人力资源管理[48]、市场营销[42,45]等等.毫无疑问, 人工智能将在新型商务中发挥着越来越重要的角色.另一方面, 伴随着从弱人工智能到强人工智能乃至超人工智能的进阶, 人们对于人工智能应用在隐私和伦理方面的担忧也在不断加重[49].此外, 人工智能理论和技术发展也面临众多挑战 (如“黑盒子”特点、学习机理、语义理解等) , 这些对于强调“关联+因果”的管理决策领域尤为重要.</p>
<p>最后, 管理学是一门融合了“科学”与“艺术”的学科.在大数据背景下, “科学”层面的可测性、程式化和可重复性等要素正在越来越多地被数据和算法表达;而“艺术”层面的情感、心理以及认知等要素也开始被不断“量化”, 包括借助一些感知技术 (affective technologies) (如眼动、脑电技术等) .未来的管理学在探究组织内外“任务”与“人”有机结合的过程中, 数据驱动特征将愈加凸显, 相关范式转变也将进一步深化.</p>
<br>
<h2 id="全景式page框架">全景式PAGE框架</h2>
<p>全景式PAGE框架是融合大数据特征和重要研究方向的要素矩阵, 旨在刻画大数据驱动的“全景式”管理决策框架.全景式PAGE框架具有三个要件:大数据问题特征、PAGE内核、领域情境 (如图5所示) .大数据问题特征涵盖粒度缩放、跨界关联和全局视图, 并作为管理决策背景下的特征视角映射到研究内容方向上.PAGE内核是指四个研究方向, 即理论范式 (paradigm) 、分析技术 (analytics) 、资源治理 (governance) 以及使能创新 (enabling) .领域情境是指针对具体行业/领域 (如商务、金融、医疗健康和公共管理等) 进行集成升华.</p>

<figure >
    
        <img src="img/5.jpg" width="800" />
    
    
</figure>

<p>围绕PAGE内核, 在大数据问题特征映射下可以形成一个4×3的要素矩阵.在理论范式 (P) 研究方向上, 重点关注管理决策范式转变机理与理论.传统的管理决策正在从以管理流程为主的线性范式逐渐向以数据为中心的新型扁平化互动范式转变, 管理决策中各参与方的角色和相关信息流向更趋于多元和交互.概括说来, 新型管理决策范式呈现出大数据驱动的全景式特点.进而, 由于全景式的多维交互动态性以及全要素参与特点, 在研究上需要采用新型的研究范式 (即大数据驱动范式) .具体说来, 在粒度缩放方面, 需要决策要素在宏观和微观层面可测可获;在跨界关联方面, 需要引入外部要素并形成内外要素互动;在全局视图方面, 需要多维整合并能够针对不同决策环境进行情境映现和评估.</p>
<p>在分析技术 (A) 研究方向上, 重点关注管理决策问题导向的大数据分析方法和支撑技术.在粒度缩放方面, 需要数据的感知与采集, 并能够在不同维度和层次上进行分解与聚合;在跨界关联方面, 需要捕捉数据关系及其动态变化, 并能够进行针对多源异构的内外数据融合;在全局视图方面, 需要体系构建和平台计算能力, 并能够形成各类画像以及开展智能应用.</p>
<p>在资源治理 (G) 研究方向上, 重点关注大数据资源治理机制设计与协同管理.在粒度缩放方面, 需要进行资源要素的数据化, 并明确数据标准和权属;在跨界关联方面, 需要刻画资源流通的契约关系, 并形成有效协调共享模式;在全局视图方面, 需要建立资源管理机制, 并制定组织的资源战略.</p>
<p>在使能创新 (E) 研究方向上, 重点关注大数据使能的价值创造与模式创新.在粒度缩放方面, 需要提升业务价值环节的像素, 并把握业务状态;在跨界关联方面, 需要梳理业务逻辑和联系, 并辨识影响业务状态的因果关系;在全局视图方面, 需要提升大数据使能创新能力, 并促进组织发展与价值创造.</p>
<p>围绕领域情境, 可以对PAGE相关研究和应用进行凝练、整合和升华.以NSFC大数据重大研究计划集成平台构建为例, 一般来讲, 集成平台由三个部件组成, 分别是平台体系、内置部件、整合部件.作为简化示例, 对于商务领域集成平台, 平台体系由一个商务管理决策相关的数据池, 以及相应的数据管理和应用管理平台系统 (包括模型、方法、工具库) 等组成;内置部件由针对特定行业 (如汽车) 和特定领域 (如营销) 的研究成果及示范系统组成;整合部件由商务领域内 (不限于内置部件领域) 其它相关项目成果在平台体系框架下经过提炼升华汇集而成.对于金融领域集成平台, 平台体系由一个金融监测预警服务平台, 以及相应的数据管理和应用管理平台系统 (包括模型、方法、工具库) 等组成;内置部件由针对特定行业 (如互联网金融) 和特定领域 (如征信评估、风险预警等) 的研究成果及示范系统组成;整合部件由金融领域内 (不限于内置部件领域) 其它相关项目成果在平台体系框架下经过提炼升华汇集而成.</p>
<br>
<h2 id="结束语">结束语</h2>
<p>面向管理决策研究和应用的大数据驱动范式通过技术增强引入了新视角, 进而推动了新型变量关系、要素机理和理论模型构建, 并提升了大数据使能创新的价值创造.这对于应对新型商务形态的进一步机遇和挑战具有重要意义.此外, 全景式PAGE框架刻画了在粒度缩放、跨界关联和全局视图特征视角映射下的理论范式、分析技术、资源治理、使能创新等重要研究方向.</p>
<p>附注:国家自然科学基金委员会“大数据驱动的管理与决策研究”重大研究计划是一个具有统一目标的项目集群, 旨在充分发挥管理、信息、数理、医学等多学科交叉合作研究的优势, 以全景式PAGE框架作为总体思路框架, 坚持“有限目标、稳定支持、集成升华、跨越发展”的原则, 围绕学科领域趋势、理论应用特点, 注重基础性、前瞻性和交叉性研究创新.自2015年底至2017年底, 此重大研究计划部署了包括培育项目、重点项目和集成项目等一系列项目.其后续的项目部署将在全景式PAGE框架下, 进一步突出凝练、整合与升华, 强调与总体思路框架内容的契合性和贡献度.</p>
<p>本文素材部分来自国家自然科学基金委“大数据驱动的管理与决策研究”重大研究计划相关的系列研讨.由衷感谢不同学科领域专家学者 (包括NSFC大数据重大研究计划指导专家组、顾问专家组、管理工作组等专家学者) 的真知灼见和思想贡献!</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>转载 | 周翔：作为法学研究方法的大数据技术</title>
      <link>https://hidadeng.github.io/blog/big_data_method_in_law_research/</link>
      <pubDate>Tue, 07 Dec 2021 12:43:10 +0600</pubDate>
      
      <guid>/blog/big_data_method_in_law_research/</guid>
      <description>本文旨在回答大数据技术如何才能成为法学研究的方法，如何与法律实证研究、规范研究这两大传统的方法实现有效的互动。</description>
      <content:encoded><![CDATA[<blockquote>
<p>本文原载《法学家》2021年第6期。</p>
<p>作者 | 周翔（法学博士，浙江大学光华法学院特聘副研究员）</p>
<p>来源 |《法学家》2021年第6期“主题研讨二：跨学科法学研究的方法论检视”栏目。</p>
</blockquote>
<p>因篇幅较长，已略去原文注释。</p>
<h2 id="目录">目录</h2>
<ul>
<li>一、前大数据时代的法律实证研究</li>
<li>二、大数据技术运用的各个节点</li>
<li>三、大数据技术对于实证研究而言是一场接力</li>
<li>四、大数据技术对于规范研究而言是一种助力</li>
<li>结　语</li>
</ul>
<br>
<p>　　中国法学正在迎来“大数据”“人工智能”的研究热潮。“<strong>数字法学</strong>”“<strong>计算法学</strong>”等各类新词汇层出不穷，但研究者们却并不都是在同一内涵和外延下使用这些概念。因此，本文有必要在开篇之初先设置一套分类法，对既有的学术研究成果加以归类，从而明确本文在既有研究中的坐标位置。笔者将既有的相关研究分为如下四大类：</p>
<p>第一类称作“<strong>学科论</strong>”，此类研究看待技术的视角最广，其目标是希望厘清法学+数字技术的最大学科边界；<br>
第二类称作“<strong>对象论</strong>”，是把“大数据”“人工智能”等视为法律规制和法学研究的对象，此类文章占了当前本领域研究成果中的大多数；<br>
第三类称作“<strong>工程论</strong>”，这类研究关注到数字技术可以被引入执法、司法等各个场景当中，赋能法治的各环节；<br>
第四类才是“<strong>方法论</strong>”，是从学术研究方法的视角看待大数据技术，探讨其能为学术活动提供哪些新契机。本文的研究侧重于第四类，亦即集中讨论大数据分析技术作为学术活动的工具，能够给法学研究提供何种新方法。</p>
<p>　　本文旨在回答大数据技术如何才能成为法学研究的方法，如何与法律实证研究、规范研究这两大传统的方法实现有效的互动。关于此，左卫民在《迈向大数据法律研究》一文（以下简称为“左文”）中较早地提出了“<strong>大数据技术如何作为法学研究方法</strong>”这一命题，在“方法论”层面为将大数据技术引入法学研究当中起到了重要的推动作用。同时，笔者认为，以下方面仍值得进一步探讨：</p>
<p>第一，“左文”中提到“从研究范式看，大数据法律研究可能推动实证研究的跨越式发展，特别是机器学习方式的引入，会使法学研究从法教义学、社科法学和实证法律研究等范式转向数据科学式的法学研究”。“范式”一词在托马斯·库恩（Thomas Kuhn）那里，是指“一个成熟的科学共同体在某段时间内所认可的研究方法、问题领域和解题标准的源头活水”。形成一个范式，是任何一个学科在发展中达到成熟的标志。“数据科学式”的法学研究已经是一种成熟的范式了么？它与“左文”中提到的法教义学、社科法学等既有的法学研究范式之间又是什么样的关系？<br></p>
<p>第二，“左文”中提到“需要将小数据社科研究中已普遍运用和相对成熟的数据分析方法……运用到大数据分析中”。社会科学中开展定量研究，是以统计学原理为根基的，这和大数据技术联系密切的机器学习方法之间有何差异？法学研究又能够吸取大数据技术中的哪些优势？<br></p>
<p>第三，左文中还提到“一些大数据法律研究缺乏必要的问题意识，主要是描述式研究，沦为‘调查报告式’的数据展示”。这涉及的是大数据分析技术应用现状的问题。<br></p>
<p>上述三个方面，围绕大数据技术对法学研究的主要贡献展开，清晰地定位了大数据技术在既有的法学研究方法体系中的地位。</p>
<p>　　上述延伸和思考，一方面是对话，另一方面是形成本文研究的路径。本文的基本立足点在于：<strong>大数据分析技术如果对法学研究有影响的话，那么主要是使得法学更加社会科学化、更重视实证的方法、更习惯从大数据中探索法律世界的规律</strong>。这些贡献决定了大数据技术在法学研究方法体系中的位置，其既是对以统计学为基础的法律实证研究的接力，更是对以法教义学、立法论研究为核心的传统规范研究的助力。在这一基本立场之下，本文首先对前大数据时代的实证研究方法、研究对象作一番回顾；接着结合笔者担任大数据分析师的经历，针对技术细节作梳理；然后在这些基础之上，就如何实现大数据技术、定量的实证研究、规范的法教义学研究三者间的互动提出一套初步的方案；最后，鉴于当前学界在相关概念上存在较多的混用现象，本文就此作一些观点上的澄清。</p>
<br>
<h2 id="一前大数据时代的法律实证研究">一、前大数据时代的法律实证研究</h2>
<p>　　关于什么是实证研究，目前虽然尚无统一定论，但在“基于模型和数据的方法”这一点上则有比较明确的共识。包括法学在内的各个社会科学学科之所以都对定量方法感兴趣，是因为“定量的方法，乃一切科学进程的核心”。只要是跨越个案地探寻案件平均水平、共性特征、要素相关性的研究，都将被本文纳入前大数据时代法律实证研究的范畴。下文对此类法律实证研究的回顾和梳理，主要是从研究的方法、测量的工具、样本量的大小等三个维度展开。</p>
<h3 id="一以统计为主的研究方法">（一）以统计为主的研究方法</h3>
<p>　　从研究方法来看，既有的法律实证研究均奉统计学为同宗。通常认为，统计学的方法有描述性统计和相关性分析两大类。结合法学研究的特点，这里稍作更细致的划分。根据笔者的概括，以往的研究成果主要利用了如下三种方法。</p>
<p>　　方法一：<strong>多案例分析</strong>。对案例的运用，如果不是针对法条进行解释、对立法提出建议，那么在笔者看来即为一种实证研究的路径。例如陈杭平关于民事诉讼标的的研究，为案件类型化设定了一套分类标准，即诉讼标的的不同含义，纵轴根据不同学说见解区分为三个版本，横轴以诉讼标的的不同领域或场景为标准。从多个案例中挖掘某些规律性信息，是一种超越个案、试图通过案件类型化获得研究结论的方法尝试。</p>
<p>　　方法二：<strong>描述性统计</strong>。前述的多案例分析，还很难称得上是严格意义上的实证分析。左卫民的一系列文章有力地推动了法律实证研究向前发展，其主要采用的便是描述性统计方法。例如，他关于审判委员会的研究，统计了某地区的三级法院审判委员会委员的审判经验与学历背景，并将讨论的议题细化到宏观指导议题和个案议题，分别进行统计和分析；再比如，他另一份关于中国刑事法律援助的研究，通过调研和考察某省的三家法院，统计了各类型辩护的人数和占比，并由此回答“究竟应当在多大范围内推行并构建当代中国的法律援助制度”这一问题。</p>
<p>　　方法三：<strong>相关性分析</strong>。白建军等人的研究则在描述性统计之基础上，迈向了相关性分析这一相对复杂的层次。相关性研究也被称为推论统计，是将统计学手法与概率理论相融合，对“‘无法整体把握的大的对象’或‘还未发生而未来会发生的事情’进行推测”。白建军等人开始关注引起某一现象的原因，试图建立自变量和因变量之间统计学意义上的相关性，所采用的回归模型主要为多元线性回归、logistics回归等常见模型。例如，白建军迄今为止在中国知网上下载量最高的一篇论文，是通过相关系数、多元线性回归来研究犯罪率的社会成因；又如，李本森关于速裁程序的研究，则以诉讼效率、量刑均衡和诉讼权利作为其关心的因变量，采用的是多元线性回归模型。</p>
<p>　　在线性回归、logistics回归这两大常用的回归模型之基础上，法律实证研究方法也根据议题之需推陈出新。首先表现为统计方法趋于高级，例如白建军在其一贯的相关性分析之基础上，对无法观察的变量作了科学处理，将中国民众的刑法偏好这一因变量，拆解为犯罪圈大小、刑罚轻重、罪刑均衡程度等三个可通过问卷调查测量的因子，以打分取值的形式获得该变量的数值；其次是结果呈现方法上的创新，例如单勇关于盗窃罪的回归分析结果，用GIS作图的方法实现可视化，选取建筑物、停车场等10类空间因素为自变量，用于说明因变量和空间变量的地理联系；最后是体现在用于分析的软件工具之更新上，过去的法律实证研究以使用SPSS软件为多，而近来的研究很多提及使用了Stata、R等工具。当然，使用更高级的软件进行分析，其效果未必就一定更好，但上述变化至少标志着学者们在工具利用方面的水平提升，且有些回归模型是初阶工具所无法胜任的。</p>
<br>
<h3 id="二多元测量工具并存">（二）多元测量工具并存</h3>
<p>　　测量工具是指获得数据的方法。数据搜集在统计学中是重要的一环，“所有统计数据追踪其初始来源，都是来自调查或实验”。统计学上根据是否为直接获得第一手数据，区分直接来源和间接来源。法学实证研究多以一手的直接来源为主，主要的测量工具包括如下几种。</p>
<p>　　工具一：<strong>问卷调查</strong>。这种测量工具与传统的社会科学方法保持一致，通过设置问题、受调查者回答的方式收集受访者的信息。此种方法在获取受访者主观态度方面效果明显，为学界所常用。例如，程金华在研究过程中为了解检察人员针对检察人员分类改革的认识而发放问卷；胡铭关于司法公信力的研究，通过向社会公众和司法官分别发放问卷，比较和审视“对于影响司法公信力的要素的认知与评判”。</p>
<p>　　工具二：<strong>模拟实验</strong>。“实验大多是对自然现象而言的”，但在近年来的法学研究中也时常出现。司法裁判一般不具有可再现性，同一个案件在真实场景下只可能出现一次。模拟实验是一种对司法裁判过程的模拟再现，借此可发现一些影响裁判结果的变量。目前中国法学界的模拟实验主要是对一些经典案例裁判过程的复盘，以验证某些观点。例如李学尧等人关于案卷材料阅读流畅度与裁判尺度之关系的研究，通过问卷字体大小、是否斜体、是否加重、行间距以及案件数量的变化来操纵阅读流畅度的变化。</p>
<p>　　工具三：<strong>文本摘录</strong>。法律中的文本，其典型形态为裁判文书。在裁判文书大量公开上网后，有人认为数据法学的春天即将到来。的确，裁判文书是记录诉讼过程最终的、有法律效力的、体系最完整的文本。对裁判文书的利用，比如文姬关于信用卡诈骗罪的研究当中有很多维度的信息挖掘，包括审级、行为人出生年等16个变量。文本的种类近年来也出现不少创新，比如习超等人关于证券监管的研究采用的是对上市公司执法事件的披露信息。</p>
<p>　　工具四：<strong>实地/田野调查</strong>。倘若只是单纯采取个案式的访谈记录，则在方法论上一般将之归入定性研究的范畴。但如果是在田野调查中对多个样本进行观察或访谈，采取结构化的方式收集数据，最终对数据进行跨越个案的量化分析，那么也可以被视为实证研究的测量工具之一。此种方式在国内法学研究中不乏实例，比如一份关于当事人法律意识的研究，所主要利用的素材就是在某法院传达室对一百多位当事人进行访谈所收集的数据；再比如左卫民在研究基层法院的财政制度、法官的工作时间分配等问题时，课题组前往实地调研、观察记录收集数据资料。</p>
<p>　　除了采用上述工具之一，实证研究还可以多种测量工具结合、定量和定性方法混用。比如胡铭关于庭审实质化的研究就不仅利用了判决文书，且还通过观摩庭审直播并记录的方式收集数据。</p>
<br>
<h3 id="三万级以下的样本量">（三）万级以下的样本量</h3>
<p>　　实证研究的论文中约定俗成要报告样本量，而之所以特别指出研究所用的样本量大小，是由于样本量直接关系到根据小样本得出的结论能否推及至更大的范围，因此抽样是统计学中很重要的概念。建立一个好样本的关键，是尽量选择最符合总体的样本，如果样本具有代表性，那么表明样本与总体有十分相似的特性，进而可以通过样本预测出总体具有哪种规律。</p>
<p>　　法律实证研究中的样本量过去以百级、千级为主，比如文姬关于信用卡诈骗罪的研究所利用的裁判文书样本有2103份，习超等人对证券监管“旋转门”的研究则采用了7103个监管事件作为样本。样本量大小是个相对的概念，还要考虑“全体”的规模大小。当我们确定研究的问题后，从理论上讲“全体”的范围就固定了。若以裁判文书为测量工具，则有三个层次的案件范围，依次分别是客观真实发生的案件总数、裁判文书网上公开的案件数、用于实际研究的案件样本数。前大数据时代的法律实证研究，是在公开的裁判文书范围内选取一定的样本进行分析，距公开的案件“全体”和真实客观的案件“全体”相去甚远，正因如此，不少研究受到样本代表性不足的质疑。</p>
<p>　　除了抽样和样本的代表性问题外，前述提及的那些研究基本没有交待如何实现样本的数据结构化。根据笔者自身的数据分析经验，以传统方式处理样本耗时巨大。如果以阅读裁判文书并摘取的形式处理样本，那么一天工作8小时也只能阅读20—40份裁判文书，如此来算，处理千量级的裁判文书样本就得花费数月时间。如果再安排专人抽查数据录入的质量，那么工时还得另计。</p>
<br>
<h3 id="四留待提升的不足">（四）留待提升的不足</h3>
<p>　　在研究方法上，相关性分析方法之后难有新的突破；在分析工具上，研究者虽试图推陈出新，但总体变化不大。以构建回归模型做研究为例，中国法学界目前用过的回归算法种类屈指可数。某些研究虽然其方法有一定的创新，比如采用决策树的方法，但又和机器学习的决策树算法相去较远。另一个问题在于分析软件，小样本时代没有使用分析软件的明显障碍，但在大样本时代则要考虑借助的分析工具是否恰当，能否高效运行。上述两个方面，大数据技术都可能给其带来变革。</p>
<p>　　测量工具上，以往较强依赖于社会资源的协调能力。中国法学界当前使用的测量工具中，问卷调查、模拟实验的应用较为普遍，而上述二法的共同局限在于严重依赖研究者的社会资源协调能力。很多研究并不避讳利用了作者的挂职身份、承担横向课题的机会、本省司法资源的便利条件等。就数据获取而言，即使只是选择几个投放点，也要付出很大的成本，且若没有较大经费支持则难以做到。上述列举的那些研究成果，因此往往是知名学者的作品。这也造就了一个怪圈：是先成名后做实证研究，还是因实证研究而成名？而在大数据时代，研究者将在一定程度上不再依靠外部资源的协调能力。</p>
<p>　　以往样本量太小，使得据其发现的规律的代表性不足。前文已经提及，样本量关乎结论的普遍性，统计分析的根本目标在于“推论”。样本量越小，对抽样的随机性要求就越高，而抽样始终是一个难题。造成抽样偏差的成因很复杂，比如抽样空间条目不齐全、抽样单位不正确等，无法穷举。如何克服抽样的难题？换个角度试想一下，研究的样本如果就是公开的“全体”，那么抽样的重要性将被极大淡化，而基于公开的全体案例作分析，在大数据技术的赋能下是能够实现的。</p>
<br>
<h2 id="二大数据技术运用的各个节点">二、大数据技术运用的各个节点</h2>
<p>　　从实证研究的过程来看，在选择议题、提出假设和设计变量等步骤中，数据的收集和分析是大数据技术最相关的两个环节。其中，数据的收集又包括语料的获取、语料转为数据和数据清洗等步骤。本文认为，大数据分析技术正是借助数据的收集和分析这两点，助力法律实证研究向更高阶段发展。从已有大数据分析的实践经验来看，可大致分为以下几个步骤。</p>
<h3 id="一语料的获取">（一）语料的获取</h3>
<p>　　语料获取是应用大数据技术的第一个环节。凡是对立法活动、司法实践有所记录的载体，都可作为实证研究的原始语料。当然，文本仍是当前法律大数据分析主要的语料类型，大数据技术目前还比较难以有效处理图片、音视频等数据。所幸的是，法律文书本来就是记录法律活动最重要的、也是表达相对准确的语言形式。</p>
<p>　　当前的语料获取问题，应重点聚焦于如何便利地获取法律类文书。研究者作为个体要想获得供研究之用的文本，除逐一复制或下载外，还有两条路径值得重视：一是采取网络爬虫的方式，从数据源自动爬取，业内有句话叫作“可见即可得”，其意思是只要有该网站的访问权限，那么便可获得该数据，包括一般性的网页、API资源、文件资源和媒体资源；二是与拥有法律文书数据的公司进行合作，后者一般掌握较为完整的法律文书库。</p>
<p>　　网络上的其他数据资源也不可被忽视。在传统的法学研究中，我们便已看到许多研究者用到法律年鉴、地方志等信息，而此类信息如今已基本实现无纸化、网络化。我们可从以下几个渠道收集与自己研究有关的语料：一是国家及地方各公立机构的官方网站，比如图书馆、档案馆、财政局等行政事业单位；二是各行业的商业机构网站，比如上市公司财务报表的披露网站、各行业的商业情报网站等；三是一些人气活跃的社区论坛，比如在司法公信力、媒体和司法之关系等研究议题中，我们关心的案件舆情就在论坛社区中有丰富的表达。网络资源可有效弥补裁判文书这一测量工具的局限性，因为法治事件的真实场景变量复杂，法律文书只能反映其中的一小部分。</p>
<br>
<h3 id="二语料转为数据">（二）语料转为数据</h3>
<p>　　传统的实证研究是统计学思维，处理的是阿拉伯数字。这一点在大数据的语境下没有本质变化，即机器学习仍然难以根据文本直接构建模型，数据分析的对象仍是结构化数据。遗憾的是，法律领域的语料主要是自然语言，以数字形式呈现、直接可用的信息少之又少。因此，在获取与我们研究议题相关的文本语料后，还将面临如何将语料转为结构化数据的问题。前述提及的那些实证研究成果也用到文本，并主要采取人工摘录的方式进行处理，而大数据获取技术中的文本挖掘技术，通过计算机就可实现数据结构化。</p>
<p>　　将语料转为数据的过程，本质上是将自然语言转化为机器语言。处理自然语言的工具，大致可分为基于概率和基于规则两类。前者是通过人工标注一定的语料，再由机器模型识别剩余部分的语料，得到的是一个结果的分布概率；后者的典型代表是正则表达式，因其结果更为准确，故而成为当前适用广泛的提取方法。学术研究要求较高的准确性，因此基于规则的方法更为现实可取。正则表达式，在技术书中被定义为“一门袖珍编程语言的通用模式表示法，赋予使用者描述和分析文本的能力”，这里也可将其通俗地理解为高级版的关键词检索。正则表达式可将我们关心的、希望提取的某一要素，通过计算机能理解的方式表达出来。不过其具有的缺陷是，如果编写者未能预见同一意思下全部的汉语表达方式，那么该正则表达式也将无法识别出全部包含该意思的文书。</p>
<p>　　语言表达方式虽然具有多样性，但也并非无穷无尽，常见的文字表达类型是可以由正则表达式囊括的。实践中的通常做法为：先人工阅读一部分文书，枚举语言表述的类型→通过正则表达出每种类型→正则遍历文书，筛选出被命中的文书→再次阅读部分未经匹配的文书→优化正则表达式→再次遍历剩余未被命中的文书。多次循环后，正则表达式将会得到很大的改进，信息提取的准确性也会随之提高。数据的获取任务至此完成，这也是大数据技术相较于传统实证研究在技术上的巨大变革之处，即数据的获取不再高度依赖于外部资源的多寡，只要研究者掌握了一定的编程能力，那么就可以从最大的数据资源库即互联网中获取自己想要的各类数据。</p>
<br>
<h3 id="三数据清洗">（三）数据清洗</h3>
<p>　　数据清洗面临两种情形，一种是从文本到数据的过程中存在信息的遗漏，另一种是有些文书信息虽然被提取了出来，但存在错别字或其他不当之处。处理信息残缺的方法，至少有以下几种：第一种是根据信息有残缺的文书编号，追溯至该份文书，人工阅读发现原因并修正提取的方法。这和上文提及的不断优化正则、扩大匹配的范围的做法很接近。第二种是统计学中处理残缺值的传统方法，比如用平均值替代、剔除该样本等。第三种是借助Excel表格中的工具、pandas等第三方库对数据逐一进行修正，通过人工的个别修正使数据回归正常。例如裁判文书中存在诸多错别字、语病等错误需要清洗，笔者曾遇到过某一罪名在裁判文书中，有十余种错误的文字表述、八种不同的“零”写法，这些均属于若无人工预判则机器便无法自动识别的情形。</p>
<p>　　数据清洗，主要面对的是如何处理自然语言中不同词汇的相同意思（同义问题），以及一个词汇在不同背景中有不同的意思（多义问题）。在数据清洗的实践中，可以发现存在如下几种规律：（1）词汇类型有限的数据项，需要清洗的脏数据比较少。例如提取裁判文书中的法院审级，一般文书落款中有“中级”“高级”“最高”等关键词，正则很容易匹配成功；而当鉴别机构的名称时，由于全国各地的命名方式不一，便会出现很多数据空缺需要填补的问题。（2）数据的清洗和人工的投入量基本成正比。无论是用人工标签+机器学习的方法，还是用正则表达式提取，都需要人工阅读并发现数据错误，添加惩罚项或修改正则来减少脏数据。（3）数据清洗要适可而止，因为数据清洗需要耗费大量的人工成本。一些简单且明显的错误，比如审判员人数提取为“2人”，能够及时返查并纠正，但人工清洗全部的脏数据是不可能的。现阶段在计算机还没有能力自查和纠错的情况下，学术共同体对待数据获取环节的准确性只能给予更多的包容。</p>
<br>
<h3 id="四数据分析">（四）数据分析</h3>
<p>　　若要从数据中产生规律性的知识，则还要依赖于数据分析的工具。以统计学思维看待数据分析的方法，主要有描述性分析和相关性分析两大类。</p>
<p>　　大数据时代的分析环节，仍有运用描述性统计的必要。大数据时代虽然样本量呈几何式增长，但试图把握司法实践之一般规律的需求并未改变。而描述性分析是最有利于把握案件整体情况、聚焦重点案件类型的方法。</p>
<p>　　关于相关性分析，大数据技术主要借助于机器学习，“根据训练数据是否拥有标记信息，学习任务可大致划分为两大类：‘监督学习’和‘无监督学习’”。有监督的机器学习，其建模方法为研究者提供了一种新思路，即把样本一分为二，区分训练集和测试集，用训练集拟合参数，用测试集评估数据模型的准确性。机器学习与统计学中的回归建模方法之间最大的一点差异，在于检验模型参数的可靠性上，机器学习采用交叉检验的方法，而统计学上则主要采用假设检验的方法，其典型者如t检验。无监督的机器学习事前不作标记，通过对无标记训练样本的学习，来揭示数据的内在性质及规律。以统计学视角来看，即事前不设置因变量。通过该项技术，可以从中探索我们所关心的研究议题，从而确定因变量。</p>
<p>　　用大数据的机器学习方法建模，最好采取Python语言编写程序。该语言可调用各类第三方库，statsmodels、scikit-learn等第三方库中已内置有大部分的常用算法，调用接口即可满足现有的研究需要。在大数据时代，获取的数据样本量将轻松突破万级，例如研究某些社会高度关注的案件的网络舆情，从微博、论坛中获取的评论数甚至可以很轻松地突破百万条。自己编写程序做大数据分析，在面对大样本时，能更好地满足个性化的研究需求。</p>
<br>
<h3 id="五前述流程的局限">（五）前述流程的局限</h3>
<p>　　<strong>大数据技术并非没有局限性，它是一把双刃剑</strong>。“技术不是敌人，我们的敌人是寄居在技术里的浪漫又革命的‘解决问题兽’”。因此，人们要保持独立思考的能力，用批判性的眼光去接受、采用技术。在看待大数据技术在法学研究中的应用前景时，同样应重视可能存在的一些局限性。</p>
<p>　　<strong>第一个局限在于，大数据技术更难以关照到个案的细节之处</strong>。这也是左文中提到的大数据时代的一个特点，即样本量变大后，做不到人工查看每个样本。此为一个明显的缺陷。大数据分析所反映的只是数据间的相关性，但要解释此种相关性，还要依靠外部其他角度的素材。当回答为什么出现数据间存在显著相关性这一问题时，特别离不开对一些典型个案作具体的剖析。如前所述，大数据技术不再要求人工逐一阅读，便可将文本信息转为数据信息，但是小样本时代，逐一阅读案例，恰恰是发现有价值细节、启发研究灵感的历程。因此，大数据时代的法学研究，在用数据说话的同时，仍然少不了要深入到对典型个案的阅读中。</p>
<p>　　<strong>第二个局限在于，计算机技术的使用门槛较高，许多研究者面临着计算机技术有关知识匮乏的挑战</strong>。首先，在数据获取上，研究者最好能够掌握一些网络爬虫的技巧。从笔者的实战经验来看，爬取一般网站论坛上的数据相对容易，但爬取微博、微信公众号等数据就比较困难，这是因为后者设置了很多反爬虫的措施。再以法学研究常用的裁判文书为例，中国裁判文书网为确保正常访问，采取了一系列的加密措施，而这意味着研究者根本无法一劳永逸地解决数据获取的问题。其次，当前在研究成果发表时，法学期刊通常并不要求同步公开研究所依据的数据样本，也就是说，同行无法获知所采集的数据库详情、数据清洗的程度等。这是大数据法学研究早期阶段的特点。在大数据法学研究的成熟阶段，各研究者可能反复使用同一批大数据，并有一系列量化的模型衡量指标。</p>
<p>　　<strong>第三个局限在于，机器学习所用的部分算法，在变量参数和影响路径的可解释性上，不如那些简单的统计学算法</strong>。这部分是由于一些自身原理所造成的，比如机器学习中可能嵌套多层级函数，其目的是提高模型的拟合度。以神经网络的一般模型为例，有（d+l+1）*q+l个参数需确定，d、l、q分别代表输入、输出、隐层的神经元个数，神经网络的学习过程，就是根据训练数据来调整神经元之间的连接权，即参数值。这还只是一个隐层的情形，“容量”越大的深度学习，参数就越复杂，对法学研究而言的可解释性也越弱。如果认为法律实证研究主要是社会科学意义上的追求现象间相关性的分析，那么越是过程复杂的机器学习算法，越不能透过模型发现变量间的关系。</p>
<p>　　综上，笔者对待大数据技术的整体态度是，获取更大规模、更多类型的数据，对外部资源的依赖程度降低，是其最主要的贡献点，同时也要警惕研究过程中脱离个案细节、技术门槛提高、复杂模型的可解释性弱等风险。有效化解上述风险的策略包括：在跨越技术门槛上，可考虑借鉴其他学科团队式研究的模式，吸纳技术人员参与，改变过去一些法学期刊所认为的合署论文便有“搭便车”嫌疑的前见；在克服脱离个案细节这一问题上，则可以多采取混合研究的方法，即定性的方法和定量的方法相结合，实证研究和规范研究相结合；在数据分析时的算法选择上，则应尽可能选择一些原理简单、可解释性强的算法。</p>
<br>
<h2 id="三大数据技术对于实证研究而言是一场接力">三、大数据技术对于实证研究而言是一场接力</h2>
<p>　　大数据技术对于实证研究而言有一种接力的价值，两者的共性大于差异。大数据技术主要应定位于加强实证研究的某些环节，但并不改变实证研究基本的方法论框架。本文认为，大数据技术的接力作用，主要体现为：（1）降低了数据获取的难度，作为本文第一节中介绍过的那五种测量工具之外单独的一种数据获取途径，以网络爬虫、文本挖掘为代表的大数据技术，在获取数据上具有时间成本和经济成本更为低廉的优势。（2）加强了描述性统计的能力，适合探索性的量化研究。若对实证研究作描述性分析和相关性分析的二分，则大数据技术更擅长概览式地描述研究对象。（3）拓展了可量化研究的议题，使得某些议题的论证更加充分和有说服力。</p>
<h3 id="一拓新数据获取的重要渠道">（一）拓新数据获取的重要渠道</h3>
<p>　　任何定量研究均离不开信度可靠、效度可行的数据来源。<strong>对大样本的追求，在统计学上称为“一致性”，费希尔（Stanley Fischer）用数学公式说明了“你得到的数据越多，你计算出的统计量越有可能接近参数真值”</strong>。在本文前一节的大数据技术应用详解中，所提及的第一步便是大数据的获取技术，若能掌握大数据的获取技术，或者吸纳有相关技术能力的合作者参与，则将大大拓展数据获取的渠道，互联网将成为一种新的测量工具。本节结合一些国内外较新的关于应用大数据技术的文献，深入探讨互联网这一大数据的来源，以此说明大数据技术在获取数据时的优势。</p>
<p>　　首先，把互联网视为数据获取的来源时，主要是将互联网视为一个“知识库”。互联网沉淀了人类活动的大量数据，其中一些是与法律有关的行为数据，例如裁判文书是对司法过程和结果的一种记录，网友针对某一热点案件的留言是司法民意的表达。这些数据的特点是它们的产生最初并非为了供研究之用，故而只能提供有限的数据项，研究者需迁就网络数据可用的数据维度进行研究设计。利用裁判文书开展大数据分析就十分典型，裁判文书的数据维度并不是为研究所设计的，因此在选题时，就要充分考虑裁判文书中所体现的信息是否足够用于回答该问题、有无其他数据源可作补充。</p>
<p>　　其次，进一步拓宽数据获取的思路，还可以把互联网视为形成数据的“实验室”和“协作平台”。大数据技术可以把互联网作为提问数据和实验数据的来源，即前述实证研究测量工具中的实验方法、问卷和田野等方法也可以在互联网中大规模使用。通过网络发送调查问卷，在学术界目前已经有一些成功的研究案例。例如，在一项针对累犯成因机制的研究中，通过给刑满释放的研究对象发放智能手机，大数据采集平台每天向研究对象发送问卷收集数据，并与定位数据、短信数据等数据源相结合，分析再犯罪的成因机制。借助互联网还可以开展随机对照实验，例如一项在二手交易网络商城开展的实验，通过在商品详情描述中改变卖家手持商品的手背肤色、手臂是否有文身、出价和商品介绍的质量等变量，分析这些变量与商品成交价的相关性，从而实证分析商品交易中存在的种族歧视问题。甚至还可以设计一个研究任务分包的网站，将数据的收集、标注等任务进行拆解，让更多的人参与到结构化数据库的建设中来。例如在一份关于国外政党之竞选政策立场的研究文献中，研究者事先将政党宣言作出类型化的定义，然后在网站上分包，最终从1500名工人处收集到20万条的分类数据，而分类的结果经过事后的验证，与专家分类的结果高度吻合。此类对文本、图片的信息采集和分类工作，如果能够分拆为不需要大量专业训练且答案较明确的任务，那么通过互联网的方式，就可以实现低成本的大数据采集和处理。</p>
<br>
<h3 id="二提高实证研究的描述分析能力">（二）提高实证研究的描述分析能力</h3>
<p>　　社会科学所立足的成熟的研究范式，目前仍是提出假设、并用定量的统计方法加以验证的过程，这一套研究的基本方法在引入大数据技术后，并没有发生实质性改变。在数据分析的描述性和相关性之二分法中，大数据分析技术主要加强的是描述性部分，相关性分析仍主要沿用实证研究中倚赖的统计学算法。要想用好大数据分析技术，还应注意区分商业利用和学术研究的不同侧重点，商业领域的分析技术，不一定都能直接迁移至法学研究中来。</p>
<p>　　首先，大数据分析技术主要提高了研究对象的整体描述能力。实证研究中的描述性分析，针对研究对象设计变量，统计平均值、方差等。除这些外，大数据分析技术还有其他可供选择的方法，比如通过词频的计算提炼文本的关键词、通过情感分析的技术反映某些文本的正负情感及强度、通过文本摘要的技术浓缩海量文本的内容，分析的结果可以用词云、动图等多样的可视化方法来呈现。这些技术与实证分析中的描述性分析非常接近，只是起到丰富描述分析工具箱的作用。</p>
<p>　　其次，现有以统计学为基础的相关性分析，所用的算法仍将保持主流地位。统计学中最基本的线性回归、对数回归等模型，仍是当前最为成熟、较适合社会科学研究使用的方法。这并非法律实证研究特定阶段的现象，例如对美国在政治学、社会学领域最权威的6本期刊于2001—2010年间发表的实证研究论文所采用的方法进行统计后发现，最小二乘法（OLS）和logit回归的方法之和占比最高，达到六成。作为大数据分析的主要技术，机器学习在吸收统计学的基本算法后，通过模型的嵌套演变出神经网络、深度学习等高级算法，同时损失了算法的可解释性。而可解释性的本质是输入变量（即自变量）的参数、影响输出变量（即因变量）的路径透明可见，机器学习中的很多算法，在这方面其实不如过去实证研究中常用的统计学算法。</p>
<p>　　最后，应清醒地认识到，某些大数据分析技术之所以难以引入到实证研究中，是因为大数据技术的发展动力来自商业市场的需求，其初衷不是为学术研究而开发的。因此，要区别大数据技术在工程领域和在学术领域的使用差别。工程领域要求大数据模型有较强的结果预测能力，不太重视输入变量与输出结果间发生联系的路径。这使得技术开发的着力点在于如何能够准确预测未来，例如市场中多款量刑辅助的产品提供给办案人员的，是一个案件未来可能判处的刑期结果，而不是提供充分的说理。而学术研究更关心法律现象背后的社会成因机制，希望揭示出现象背后的原因。上述二者虽有共同点（进行精准预测的前提，也要有一个基于历史案件的模型），但考核模型表现优劣的标准是极为不同的。知晓此种差异后，研究者才能对当前眼花缭乱的大数据分析技术有所甄别，优先选择那些具有较好可解释性的机器学习算法。</p>
<br>
<h3 id="三加强某些议题的论证力度">（三）加强某些议题的论证力度</h3>
<p>　　数据源和样本量的扩大，分析能力的增强，使得某些研究议题有机会变换新的角度、充实更有力的论据、得出更有说服力的结论。大数据技术作为一种方法并不直接产生新议题，但是能够增强旧有议题的论证能力，为原先难以量化研究的重要议题开启新的篇章。本节选取“法治中国”这一研究议题，尝试构想一个引入大数据技术后的学术发展新空间。</p>
<p>　　“法治中国”在近年来备受关注，是我国法学研究中的一个重要议题。一般认为，“‘法治中国’的内涵比‘法治国家’更加丰富、更加深刻、更具中国特色”，关于“法治中国”的主体、客体、竞争力等，都是“法治中国”之科学含义研究中的重要子课题。“法治中国”同时是一个有待进一步发展的议题，自党的十八届四中全会提出该口号后，关于“法治中国”的核心价值和精神元素是什么、具体的模式如何这些问题，虽然已经有一些研究成果，但还要继续丰富其内涵。在一些知名法学家的带领下，亟待更多法学青年学者的跟进，特别是作为一个与我国法治实践紧密联系的议题，“法治中国”应首先从国家、社会的各个实践侧面做出事实的归纳。</p>
<p>　　大数据技术可以在归纳中国法治实践中发挥大作用。具体可勾连几个看似不相关但实则联系密切的议题。一是近年来强调“中国问题”的学术反思。2011年举办的“中国法学研究之转型”研讨会上，诸多学者曾呼吁法学研究范式应该转变，认为“当前对中国特有的问题关注不够，缺乏中国问题意识”。具体而言，中国问题是在中国的政治建构、区域发展的极不平衡、社会在转型期中的急剧变化、社会治理资源的多元化等背景下形成的。本文认为，地域间、时间跨度中的中国法治实践差异，可通过大数据的时间序列、地理坐标图等各种形式予以呈现，法学研究要逐渐习惯于用数字化的方法发现并解释中国法治实践中的问题。二是与大数据技术直接关联的“法治评估”，这是关于立法、执法、司法等各领域的评估，其最大特色在于将指标构建技术和统计方法作为工具。笔者认为法治评估的相关研究，主要不在于实现地区间法治状况的可比性（这的确是提出法治评估的原因之一），而是旨在强调各国治理结构的差别，总结不同国家间某问题的不同法治方案。在西方学界过往的法治评估中，“所有实行西方政治制度的国家的得分必定高”。法治中国的研究要想有说服力地破除上述迷局，既要讲道理，更要摆事实，特别是利用好大数据所呈现的事实。</p>
<br>
<h2 id="四大数据技术对于规范研究而言是一种助力">四、大数据技术对于规范研究而言是一种助力</h2>
<p>　　法学实证研究和传统的规范研究间如何衔接和对话，是一个困扰研究者和期刊编辑的共同问题。有期刊编辑抱怨说，很多看似眼花缭乱的定量研究，最终得出的结论却不那么新奇，其言外之意是不需如此费劲，读者也早已知道这样的结论。还有学者坦言，实证研究和传统的规范研究间缺少对话，存在“平行线”难题，法学实证研究存在“叫好不叫座”的现象，即便高质量的实证研究，其被引用率也不高。数字法学时代到来后，上述问题能否有所改善？笔者以为，与其勉为其难地与规范研究直接对话，不如以“提供给规范研究一定启示”的姿态，定位大数据技术的贡献。此种贡献主要是便于研究者更自主、低成本地了解法律实践的运行状况，它是一种助力的功能。</p>
<h3 id="一拓宽了解释论的问题边界">（一）拓宽了解释论的问题边界</h3>
<p>　　法律规范之所以需要解释，其原因在于“制定法的真实含义不只是隐藏在法条文字中，而且隐藏在具体的生活事实中”，生活事实的不断变化，使得法条一直有予以解释的必要性。换言之，这是一种来自司法实践中法条适用的困难所延伸出来的需求。但是，法教义学的规范研究，其传统重镇在高校，科研人员的作业模式与司法实践间隔较远，真正熟悉办案一线的学者并不多。这使得他们在发现哪个法条的哪个关键词存在司法适用困难、故而具有研究必要性上颇费周折。而哪怕是具有司法实践经验的研究者，在这个问题上的表现往往也好不到哪里去，因为他们的经验只是来自直接或间接经办过的案件，是一种主观的、个案式的感受。司法大数据的引入，有望改变上述局面。开展规范研究的学者可通过多个地区的法律案件文书，把文本向数据转换、提取文本背后的有用信息，进而全面获得实践中的裁判观点。波斯纳（Richard A. Posner）对此有过恰当的评论，他认为“法律决定和教义全都由事实驱动，而不是由理论驱动”。</p>
<p>　　首先，法律大数据所挖掘的信息，为规范研究提供了问题意识，为解释设定了起点。规范之所以需要解释，是因为存在疑义。此种疑义并非凭空而来，而是在法律的具体适用中凸显。在过去，此种凸显主要依靠典型案例的被发现而引起学术界的重视。如今，大数据技术的兴起，缩短了该种疑义被发现的进程，并克服了主观选择案例的片面性。这是因为，研究者可不再依赖于司法机关筛选出的指导案例，或者主观随意地挑选案件，而是通过公开的裁判文书进行全样本的大数据分析，挖掘出研究者所关心的司法实践的某一侧面情况。在评价中国的法教义学之缺陷时，有学者指责在中国看不到“法学与司法之间的深入对话”，进而强调中国学者应当虚心、耐心和诚心地向中国法官学习。面对面交流自然是学习的方式之一，但其成本太高。更有效的方式是跨越个案地、基于海量样本地分析法官所写的裁判文书（裁判文书是法官裁判观点的浓缩精华）。</p>
<p>　　其次，大数据方法赋能后的实证研究，为研究者提供了法律概念的社会语境。解释的最终目标是达致“裁定之案件获得公平的处理”，这种公平处理首先要具体化为探寻某一规则的立法目的。目的解释在某些学者眼里是指“探求法律在今日法秩序的标准意义”。那么，今日法秩序的理想图景又从何获知？学术研究者、法律适用者面临探寻这一出处的难题。以往的学理解释，一般是从部门法的基本价值出发解释法条，例如刑法的解释总是要考虑罪刑法定、罪刑均衡、法益保护、保障人权等，又如诉讼法中强调程序参与、诉讼效率、纠纷解决等。在学理解释者看来，这些基本就是衡量解释是否恰当的主要标准。而在具体法律适用者（例如面临个案裁判需要的法官）那里，还可能有其他社会、经济甚至政治的因素要加以考量。大数据的实证分析技术，为解释这些“关键词”提供了上述维度的信息参考，例如可利用大数据分析某个条款在不同案件背景下的不同解释结论，这些背景包括年代、当地的社会经济背景、原被告双方的身份等。以往的实证研究当中并非没有此类尝试，但毫无疑问，在大样本中分析裁判观点的社会语境，所得出的结论将更具有普适性。</p>
<p>　　当然，法教义学同样也给大数据分析以有价值的课题，规范研究者可以将其感兴趣的问题传递给法律大数据的分析者。如此一来，“这些学科的研究对象和知识兴趣就受到教义学的影响了，或者，也会引发交叉学科的研究课题的产生”。</p>
<br>
<h3 id="二为立法论提供效果评估工具">（二）为立法论提供效果评估工具</h3>
<p>　　2011年3月，时任全国人大常委会委员长吴邦国在十一届全国人大四次会议第二次全体会议上宣布“中国特色社会主义法律体系已经形成”。在此之后，学界有过一种观点，亦即认为我们的学术研究将从立法中心主义转向司法中心主义。另一种更谨慎的观点则认为，就中国特色社会主义法律体系这一宏大工程而言，上述时间节点是一个终点，但更是一个起点。在此后的七八年里，现实更加验证的似乎是后一种观点，即立法并没有消退，经济发展、社会转型向法律制度提出了新的要求。实证研究亦表明，立法中心主义的研究氛围始终存在。既然立法论的研究从未消失，我们更应当重视此类研究推动的立法质量和效果。法律体系形成及其规模的持续扩大，并不表明法律体系已经完备或能够自动产生实效，更不意味着立法必然合乎社会需要。就立法进行事前和事后的评估，这不只是立法机关的工作职责，同时也是借此反思立法论研究的良好契机。</p>
<p>　　这里主要探讨立法评估的方法，重点考察大数据技术是否有助于提升立法评估的广度和精度。当前的立法评估方式包括征集公众意见、问卷调查、实地走访等。例如在一份对地方法规的评估中，其研究者主要是在政府机构的主导下，通过第三方评估机构，推动各部门和区县自查、设计和布置调查问卷、文献梳理、重点走访和调研等方式，来完成评估。评估的方法当前“主要运用的是定性分析方法，很少运用定量分析方法及运用影响分析方法”，而这从评估的精确性来讲是不够的。毕竟，现代国家的管理是“数目字”管理，在现代政府的协调性行政控制中，对这些“官方数据”的例行监测是不可或缺的。大数据技术在立法评估中有如下两方面可能的贡献。</p>
<p>　　首先，大数据技术有助于更好地收集来自社会各界的反馈。笔者在研究中访问了全国人大和多个地方人大的网站，发现它们目前都还停留于前大数据时代的意见收集模式。大数据时代很注重对信息的标签化收集和处理，产业界将此称为“打标签”。若能在信息收集环节按照大数据分析的需要进行改造，增加备选的、对立法评估有价值的“标签”供用户勾选，则将有助于提高所收集的信息之质量。而互联网的发展，为利益相关者尤其是公众参与立法评估提供了手段。</p>
<p>　　其次，在立法有关材料的文本清洗和分类中，大数据技术也将提供更多的工具。在各地的立法评估实践中，会面对大量的文字材料。根据某省立法部门的反映，他们缺乏的是针对各方面立法意见的信息汇总和分类的能力。立法机关当前仍然停留于通过传统的“人工看、人工做统计”的方式来获悉各方面的反馈。大数据技术中的词频统计、主题分析、情感分析等相关技术，可以对庞杂的立法建议作清洗、聚类，而这些立法意见的文本处理能力是可积累和可复用的，根据过往的立法意见所构建的筛选模型，例如征集到的立法反馈有哪些意见类型、主要针对立法的哪部分提出意见、意见提出者的身份等，通过机器学习，可以应用于今后对立法意见的高效筛选之中。</p>
<p>　　最后，就立法评估的时间节点而言，大数据技术更能发挥作用的应该是立法后的评估。立法前评估与立法后评估的区别在于，立法前评估主要评估立法的必要性、合法性、协调性和可操作性，而立法后评估则重在考察法律法规对经济、社会和环境的实际影响。影响评估和成本—收益分析是两种不同的方法。成本—收益法是一种法经济学的路径，该方法之所以在立法前评估中经常被使用，是因为在立法之前一切影响都是估计的，并无立法产生的实际影响可以测量。较之事前的估计，关于事后的立法影响，其有关信息显然更多，数据分析也将更有应用的空间。因此，大数据技术和法经济学的方法，在立法前、后的评估中将体现出不同的分工。</p>
<p>　　上述主要讨论立法部门引入大数据技术展开立法评估，此外，大数据技术还应赋能学者的立法论研究，为研究提供检验成效、提示风险的能力。在一些西方学者看来，实证研究的前提为认同法律乃是一种工具，且由此对它可以用一种实证性的方法来加以检验。又由于法律规范对于维持社会秩序具有极大的重要性，社会变革一般不允许像其他科学领域中那样被“视为一种迭代过程”，因此，“在公共事务领域，失败是一个典型的只能在私下里低声讨论的事情”。但是，对某一制度的变革方案之效果进行大数据分析，绝对是有意义的，哪怕实证分析的结论不完全公开、仅供特定人参阅。例如陈卫东等人的课题组将某些改革举措限定在局部区域进行自然实验时，其中就用到大量的统计数据，该研究若能增加数据的维度和样本的数量，则其论证的效果也许会更好。此种对法律制度立法效果的大数据评估，已经在学术界得到一定的认可，例如在一项对精神损害赔偿发生机制的研究中，其研究者就意识到实证研究可以大幅度提高立法预测个体行动的精确性。</p>
<br>
<h2 id="结语">结　语</h2>
<p>　　揭开大数据技术的面纱，我们可以看到，作为法学研究的一种新方法，大数据技术增强了我们获取数据、分析数据的能力，使得在更大时空范围内研究法治实践的规律成为了可能。</p>
<p>　　笔者认为，“数字技术+法学”应区分不同的细分场景展开讨论，不同的法律场景具有不同的特点。例如，首先应区别工程和学术，在学术研究中引入大数据技术，模型设计有充裕的时间，过程的可解释性要求较高。其次应区别学科和学术，作为法学研究方法的大数据技术，只是学科论中的内容之一。有学者认为，“计算法学的研究方法中最主要、最具特点的方法还是本文所指的运用计算机科学智能化处理大量法律数据以解决法律问题的方法”。本文的见解与其相近，同时认为这套大数据的方法不只适用于计算法学，而是全面覆盖法学的各个二级学科。最后是研究中具体方法的细分，如果将法学研究的方法区分为规范研究和实证研究，那么大数据技术方法和法学研究的结合点主要是在实证研究上。有学者认为，“计算法学可归属为实证法学的基本范畴”，“计算法学通过兼收并蓄的统合吸纳了定性研究和定量研究各自的优长”。本文主张狭义地将大数据技术定位为是对定量研究产生的变革，这并不妨碍与定性研究的彼此互鉴。在我国法学界，实证研究将与规范研究长期并存、共同发展。若对此心存疑虑，则不妨回顾一下美国法学研究在20世纪60年代所谓的“跨学科”研究方法之转向，以及90年代对此的二次转向，还有我国法学界在2005年前后也出现了一次“中国法学向何处去”的热烈讨论，便可以发现规范研究和各种跨学科法学研究方法间存在着难舍难分、始终共存的关系。</p>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>在会计研究中使用Python进行文本分析</title>
      <link>https://hidadeng.github.io/blog/text_mining_in_accouting_research/</link>
      <pubDate>Fri, 26 Nov 2021 22:40:10 +0600</pubDate>
      
      <guid>/blog/text_mining_in_accouting_research/</guid>
      <description>会计文本分析知识大全</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="img/%e5%b0%81%e9%9d%a2.png" alt=""  />
</p>
<p><img loading="lazy" src="img/%e4%bb%a3%e7%a0%81.png" alt=""  />
</p>
<p>最近在google搜Python在经管中的内容，意外发现<strong>专著： 在会计研究中使用Python进行文本分析</strong>，内容特别新，专著中含有Python代码，也有会计领域文本分析的应用成果。跟 <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">视频专栏课| Python网络爬虫文本分析</a> 结合起来，特别适合会计领域python初学者，将文本分析应用于会计研究中。</p>
<blockquote>
<p>Vic Anand, Khrystyna Bochkay, Roman Chychyla and Andrew Leone (2020 isbn), “Using Python for Text Analysis in Accounting Research (forthcoming)”, Foundations and Trends ® in Accounting: Vol. xx, No. xx, pp 1–18. DOI: 10.1561/XXXXXXXXX.</p>
</blockquote>
<p><a href="http://dx.doi.org/10.1561/1400000062">http://dx.doi.org/10.1561/1400000062</a></p>
<h3 id="摘要">摘要</h3>
<p>会计研究中文本数据的重要性显着增加。为了帮助研究人员理解和使用文本数据，本专著定义和描述了文本数据的常用度量，然后演示了使用 Python 编程语言收集和处理文本数据。该专著充满了示例代码，这些<strong>代码复现了最近研究论文中的文本分析任务</strong>。</p>
<p>在专著的第一部分，我们提供了 Python 入门指南。我们首先描述 Anaconda，它是 Python 的一个发行版，它提供了文本分析所需的库及其安装。然后，我们介绍了 Jupyter notebook，这是一种改进研究工作流程并促进可复制研究的编程环境。接下来，我们将教授 Python 编程的基础知识，并演示使用 Pandas 包中的表格数据的基础知识。</p>
<p>专著的第二部分侧重于会计研究中常用的具体文本分析方法和技术。我们首先介绍<strong>正则表达式</strong>，这是一种用于在文本中查找模式的复杂语言。然后我们将展示<strong>如何使用正则表达式从文本中提取特定部分</strong>。接下来，我们介绍<strong>将文本数据（非结构化数据）转换为表示感兴趣变量（结构化数据）的数值度量的想法</strong>。具体来说，我们介绍了基于字典的方法</p>
<ol>
<li><strong>测量文档情绪</strong>，</li>
<li><strong>计算文本复杂度</strong>，</li>
<li><strong>识别前瞻性句子和风险披露</strong>，</li>
<li><strong>收集文本中的信息量</strong>，以及</li>
<li><strong>计算不同文本片段的相似度</strong>。</li>
</ol>
<p>对于这些任务中的每一个，我们引用相关论文并提供代码片段来实现这些论文中的相关指标。</p>
<p>最后，专著的第三部分侧重于<strong>自动化文本数据的收集</strong>。我们介绍了网页抓取并提供了从 EDGAR 下载文件的代码。</p>
<h3 id="关键词">关键词</h3>
<p><strong>文本分析，数据收集，Python，自然语言处理</strong></p>
<br>
<h2 id="using-python-for-text-analysis-in-accounting-research-forthcoming目录">Using Python for Text Analysis in Accounting Research (forthcoming)目录</h2>
<h3 id="1-引言">1. 引言</h3>
<h3 id="2-在电脑中配置python">2. 在电脑中配置Python</h3>
<ul>
<li>2.1 Python包的作用</li>
<li>2.2 Anaconda软件版本</li>
<li>2.3 安装Anaconda</li>
<li>2.4 Anaconda的使用</li>
</ul>
<h3 id="3--jupyter-notebook">3.  Jupyter Notebook</h3>
<ul>
<li>3.1 案例</li>
<li>JupyterLab: Jupyter Notebook的开发版(最新版)</li>
<li>如何启动JupyterLab</li>
<li>在JupyterLab中写代码</li>
<li>Markdown标记语言与格式化文本代码块</li>
</ul>
<h3 id="4-python编程语言简要介绍">4. Python编程语言简要介绍</h3>
<ul>
<li>4.1 基础知识</li>
<li>4.2 变量与数据类型</li>
<li>4.3 操作</li>
<li>4.4 print函数</li>
<li>4.5 控制流</li>
<li>4.6 函数</li>
<li>4.7 集合类型数据-list、tuple、dictionaries</li>
<li>4.8 处理字符串</li>
</ul>
<h3 id="5-处理表数据-pandas包">5. 处理表数据： Pandas包</h3>
<ul>
<li>5.1 Pandas使用场景</li>
<li>5.2 导入import 声明</li>
<li>5.3 加载数据、导出数据</li>
<li>5.4 在pandas中查看数据</li>
<li>5.5 筛选数据</li>
<li>5.6 创建新列（字段）</li>
<li>5.7 删除列（字段）、列（字段）名重命名</li>
<li>5.8 对数据排序</li>
<li>5.9 合并数据</li>
</ul>
<h3 id="6-正则表达式介绍">6 正则表达式介绍</h3>
<ul>
<li>6.1 查看文本中的模式</li>
<li>6.2 字符与字符集</li>
<li>6.3 Regex的定位与边界</li>
<li>6.4 模式匹配次数限定</li>
<li>6.5 分组</li>
<li>&hellip;</li>
</ul>
<h3 id="7-基于字典法-的文本分析">7. 基于字典法 的文本分析</h3>
<ul>
<li>7.1 字典法文本分析的优势</li>
<li>7.2 理解字典</li>
<li>7.3 识别文本中的词语与句子</li>
<li>7.4 词干化、词形还原</li>
<li>7.5 词语权重</li>
<li>7.6 基于词典法的词频统计函数</li>
</ul>
<h3 id="8-量化文本复杂度">8. 量化文本复杂度</h3>
<ul>
<li>8.1 理解文本复杂度</li>
<li>8.2 计算文本字符长度</li>
<li>8.3 使用Fog指数测量文本可读性</li>
<li>8.4 使用BOG指数测量文本可读性</li>
</ul>
<h3 id="9-句子结构与分类">9. 句子结构与分类</h3>
<ul>
<li>9.1 识别前瞻性陈述forward-looking sentences</li>
<li>9.2 使用字典法做文本分类</li>
<li>9.3 识别句子的主语与宾语</li>
<li>9.4 识别命名实体</li>
<li>9.5 词性标注与命名实体识别任务</li>
</ul>
<h3 id="10-测量文本相似度">10. 测量文本相似度</h3>
<ul>
<li>10.1 使用相似度比较文本</li>
<li>10.2 长文本使用cosine相似度计算相似度</li>
<li>10.3 短文本使用Levenshtein距离计算相似度</li>
<li>10.4 使用word2vec词嵌入计算语义相似度</li>
</ul>
<h3 id="11-识别文本中的具体信息">11. 识别文本中的具体信息</h3>
<ul>
<li>11.1 文本识别与抽取</li>
<li>11.2 案例: 从10-k filing中提取出MD&amp;A</li>
<li>11.3 案例: 从10-k html网页文件中提取处MD&amp;A</li>
<li>11.4 从XBRL金融报告中抽取文本</li>
</ul>
<h3 id="12-从网络中收集数据">12. 从网络中收集数据</h3>
<ul>
<li>12.1 在互联网中采集数据</li>
<li>12.2 证券交易委员会的EDGAR数据</li>
<li>12.3 网络爬虫</li>
<li>12.4 关于api接口</li>
</ul>
<h3 id="致谢">致谢</h3>
<br>
<h3 id="参考文献部分">参考文献(部分)</h3>
<blockquote>
<p>Bentley, J. W., T. E. Christensen, K. H. Gee, and B. C. Whipple. 2018. “Disentangling managers’ and analysts’ non-GAAP reporting”. Journal of Accounting Research. 56(4): 1039–1081.</p>
<p>Blankespoor, E. 2019. “The impact of information processing costs on ﬁrm disclosure choice: Evidence from the XBRL mandate”. Journal of Accounting Research. 57(4): 919–967.</p>
<p>Bochkay, K., R. Chychyla, and D. Nanda. 2019. “Dynamics of CEO disclosure style”. The Accounting Review. 94(4): 103–140.</p>
<p>Bochkay, K., J. Hales, and S. Chava. 2020. “Hyperbole or reality? Investor response to extreme language in earnings conference calls”. The Accounting Review. 95(2): 31–60.</p>
<p>Bochkay, K. and C. B. Levine. 2019. “Using MD&amp;A to improve earnings forecasts”. Journal of Accounting, Auditing &amp; Finance. 34(3): 458482.</p>
<p>Bonsall, S. B., A. J. Leone, B. P. Miller, and K. Rennekamp. 2017. “A plain English measure of ﬁnancial reporting readability”. Journal of Accounting and Economics. 63(2): 329–357.</p>
<p>Bozanic, Z., D. T. Roulstone, and A. Van Buskirk. 2018. “Management earnings forecasts and other forward-looking statements”. Journal of Accounting and Economics. 65(1): 1–20.</p>
<p>Chychyla, R., A. J. Leone, and M. Minutti-Meza. 2019. “Complexity of ﬁnancial reporting standards and accounting expertise”. Journal of Accounting and Economics. 67(1): 226–253.</p>
<p>Gow, I. D., D. F. Larcker, and A. A. Zakolyukina. 2019. “Non-answers during conference calls”. Chicago Booth Research Paper. (19-01). Guay, W., D. Samuels, and D. Taylor. 2016. “Guiding through the Fog:Financial statement complexity and voluntary disclosure”. Journal of Accounting and Economics. 62(2): 234–269.</p>
<p>Heitmann, M., C. Siebert, J. Hartmann, and C. Schamp. 2020. “More Than a Feeling: Benchmarks for Sentiment Analysis Accuracy”. Working Paper, <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract">https://papers.ssrn.com/sol3/papers.cfm?abstract</a>_ id=3489963.</p>
</blockquote>
<br>
<h2 id="本书下载">本书下载</h2>
<p><a href="https://github.com/hiDaDeng/DaDengAndHisPython/blob/master/Using_Python_For_Text_Analysis_In_Accounting_Research.pdf">https://github.com/hiDaDeng/DaDengAndHisPython/blob/master/Using_Python_For_Text_Analysis_In_Accounting_Research.pdf</a></p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>文本可读性研究及应用清单</title>
      <link>https://hidadeng.github.io/blog/text_readability/</link>
      <pubDate>Wed, 24 Nov 2021 23:40:10 +0600</pubDate>
      
      <guid>/blog/text_readability/</guid>
      <description>京语言大学智能计算机辅助语言学习（ICALL）研究组维护的文本可读性阅读清单。含综述、项目、代码等</description>
      <content:encoded><![CDATA[<p>这是北京语言大学智能计算机辅助语言学习（ICALL）研究组维护的文本可读性阅读清单。</p>
<table>
<thead>
<tr>
<th>目录</th>
</tr>
</thead>
<tbody>
<tr>
<td>1. <a href="#1">综述</a></td>
</tr>
<tr>
<td>2. <a href="#2">相关研究</a></td>
</tr>
<tr>
<td>2.1 <a href="#2.2">中文可读性</a></td>
</tr>
<tr>
<td>2.2 <a href="#2.3">其他语言可读性</a></td>
</tr>
<tr>
<td>3. <a href="#3">可读性分析工具</a></td>
</tr>
<tr>
<td>4 <a href="#4">中文数据</a></td>
</tr>
</tbody>
</table>
<br>
<h2 id="1">1. 综述</h2>
<ul>
<li>
<p>Klare, G. R. (1974–1975). <a href="https://scholar.google.com/scholar_url?url=https://www.jstor.org/stable/747086&amp;hl=zh-TW&amp;sa=T&amp;oi=gsb&amp;ct=res&amp;cd=0&amp;d=6838320539766870596&amp;ei=-1t9Xoq9M8SBywSKyJqgDg&amp;scisig=AAGBfm1iWtmdPfAMXqFhp5eCXdApCr8JfQ">Assessing readability</a>. <em>Reading Research Quarterly</em>.</p>
</li>
<li>
<p>吴思远, 蔡建永, 于东, 江新. 2018. <a href="https://www.researchgate.net/profile/Xin_Jiang26/publication/332834238_A_Survey_on_the_Automatic_Text_Readability_Measureswenbenkeduxingdezidongfenxiyanjiuzongshu/links/5ccc04ca299bf11c2a3d46f3/A-Survey-on-the-Automatic-Text-Readability-Measureswenbenkeduxingdezidongfenxiyanjiuzongshu.pdf">文本可读性的自动分析研究综述</a>. <em>中文信息学报</em>.</p>
</li>
<li>
<p>郭凯、金檀、陆小飞. 2018. <a href="http://www.cnki.com.cn/Article/CJFDTotal-WYCJ201803005.htm">文本难度调控的研究与实践——从可读公式、多维特征到智能改编</a>. <em>外语测试与教学</em>.</p>
</li>
</ul>
<br>
<h2 id="2">2. Related Task</h2>
<h3 id="2.1">2.1 Research on Chinese Readability</h3>
<ul>
<li>
<p>Yao-Ting Sung, Tao Hsing Chang. 2016. <a href="https://link.springer.com/content/pdf/10.3758%2Fs13428-015-0649-1.pdf">CRIE: An automated analyzer for Chinese texts</a>. <em>Behavior Research Methods</em>.</p>
</li>
<li>
<p>Yao-Ting Sung, Weic Lin, SB Dyson, Kuoen Chang. 2015. <a href="https://onlinelibrary.wiley.com/doi/epdf/10.1111/modl.12213">Leveling L2 Texts Through Readability: Combining Multilevel Linguistic Features with the CEFR</a>. *<em>The Modern Language Journal</em>.</p>
</li>
<li>
<p>LAU Tak Pang. 2006. <a href="https://core.ac.uk/download/pdf/48538871.pdf">Chinese Readability Analysis and its Applications on the Internet</a>. <em>Master&rsquo;s thesis, The Chinese University of Hong Kong</em>.</p>
</li>
<li>
<p>Yu Qiaona. 2016.<a href="https://scholarspace.manoa.hawaii.edu/bitstream/10125/51627/1/2016-12-phd-yu.pdf">Defining and Assessing Chinese Syntactic Complexity via TC-Units</a>. <em>Doctor&rsquo;s thesis, University of Hawaii at Manoa</em>.</p>
</li>
</ul>
<br>
<h3 id="2.2">2.2 Research on Readability in Other Languages</h3>
<ul>
<li>
<p>Arthur C. Graesser, Danielle S. McNamara. 2004. <a href="https://link.springer.com/content/pdf/10.3758%2FBF03195564.pdf">Coh-Metrix: Analysis of text on cohesion and language</a>. <em>Behavior Research Methods, Instruments, &amp; Computers</em>.</p>
</li>
<li>
<p>Arthur C. Graesser, Danielle S. McNamara. 2011. <a href="http://sage.cnpereading.com/paragraph/download/10.3102/0013189X11413260">Coh-Metrix: Providing multilevel analysis of text characteristic</a>. <em>Educational Researcher</em>.</p>
</li>
<li>
<p>Xiaofei Lu. 2010. <a href="https://www.jbe-platform.com/docserver/fulltext/ijcl.15.4.02lu.pdf?expires=1561207415&amp;id=id&amp;accname=jbid110151&amp;checksum=0E423CA22C4B7AAB06AEC4C0359EBEF9">Automatic analysis of syntactic complexity in second language writing</a>. <em>International Journal of Corpus Linguistics</em>.</p>
</li>
<li>
<p>Xiaofei Lu. 2013. <a href="https://s3.amazonaws.com/academia.edu.documents/32693735/Ai_Lu_2013_syntactic_complexity.pdf?response-content-disposition=inline%3B%20filename%3DA_corpus-based_comparison_of_syntactic_c.pdf&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWOWYYGZ2Y53UL3A%2F20190623%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20190623T072057Z&amp;X-Amz-Expires=3600&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=ec1c034b7a2f9191914b65ec60cc3d41a8ca932fcf137c45d23a87194977b080">A corpus-based comparison of syntactic complexity in NNS and NS university students’ writing</a>. <em>Automatic Treatment and Analysis of Learner Corpus Data</em></p>
</li>
<li>
<p>陆小飞, 许琪. 2016. <a href="http://www.cnki.com.cn/Article/CJFDTotal-WJYY201603008.htm">二语句法复杂度分析器及其在二语写作研究中的应用</a>. <em>外语教学与研究</em></p>
</li>
<li>
<p>Xiaofei Lu. 2017. <a href="http://sage.cnpereading.com/paragraph/download/10.1177/0265532217710675">Automated measurement of syntactic complexity in corpus-based L2 writing research and implications for writing assessment. Language Testing</a>. <em>Language Testing</em></p>
</li>
<li>
<p>Jin, T., Lu, X., &amp; Ni, J. (2020). <a href="https://onlinelibrary.wiley.com/doi/full/10.1111/modl.12622">Syntactic complexity in adapted teaching materials: Differences among grade levels and implications for benchmarking</a>. <em>The Modern Language Journal</em></p>
</li>
<li>
<p>Menglin Xia ,Ekaterina Kochmar ,Ted Briscoe. 2016. <a href="https://www.aclweb.org/anthology/W16-0502.pdf">Text Readability Assessment for Second Language Learners</a>. <em>Proceedings of the 11th Workshop on Innovative Use of NLP for Building Educational Applications</em></p>
</li>
<li>
<p>Xiaobin Chen, Detmar Meurers. 2016. <a href="https://www.aclweb.org/anthology/W16-4113.pdf">CTAP: A Web-Based Tool Supporting Automatic Complexity Analysis</a>. <em>Proceedings of the Workshop on Computational Linguistics for Linguistic Complexity</em>.</p>
</li>
<li>
<p>Chen, X. 2018. <a href="https://publikationen.uni-tuebingen.de/xmlui/bitstream/handle/10900/85888/main.pdf?sequence=1">Automatic Analysis of Linguistic Complexity and Its Application in Language Learning Research</a>, <em>PhD thesis in computational linguistics,  Eberhard Karls Universität Tübingen</em>.</p>
</li>
<li>
<p>Nadezda Okinina, Jennifer-Carmen Frey. CTAP for Italian: Integrating Components for the Analysis of Italian into a Multilingual Linguistic Complexity Analysis Tool.</p>
</li>
<li>
<p>Zarah Weiss, Z. 2017. <a href="https://www.researchgate.net/profile/Zarah_Weiss/publication/334318057_Using_Measures_of_Linguistic_Complexity_to_Assess_German_L2_Proficiency_in_Learner_Corpora_under_Consideration_of_Task-Effects/links/5d24456c299bf1547ca4fe92/Using-Measures-of-Linguistic-Complexity-to-Assess-German-L2-Proficiency-in-Learner-Corpora-under-Consideration-of-Task-Effects.pdf">Using Measures of Linguistic Complexity to Assess German L2 Proficiency in Learner Corpora under Consideration of Task-Effects</a>. <em>M.A. Thesis in Computational Linguistics</em>.</p>
</li>
<li>
<p>Weiss Z, Meurers D. 2019. <a href="http://www.sfs.uni-tuebingen.de/~zweiss/rsrc/Weiss.Meurers-17-LCR-Presentation.pdf">Broad Linguistic Modeling is Beneficial for German L2 Proficiency Assessment</a>. <em>Widening the Scope of Learner Corpus Research, Selected Papers from the Fourth Learner Corpus Research Conference</em>.</p>
</li>
<li>
<p>S Tonelli, KT Manh, E Pianta. 2012. <a href="https://dl.acm.org/doi/pdf/10.5555/2390916.2390924?download=true">Making readability indices readable</a>. <em>Proceedings of the First Workshop on Predicting and Improving Text Readability for target reader populations</em>.</p>
</li>
<li>
<p>Lijun Feng. 2010. <a href="https://academicworks.cuny.edu/cgi/viewcontent.cgi?article=2964&amp;context=gc_etds">Automatic Readability Assessment</a>. *<em>Doctor&rsquo;s thesis, City University of New York</em>.</p>
</li>
</ul>
<br>
<h2 id="3">3. Readability Analysis Tools</h2>
<ul>
<li>
<p>Lu Xiaofei (2010). <a href="https://www.jbe-platform.com/docserver/fulltext/ijcl.15.4.02lu.pdf?">Automatic analysis of syntactic complexity in second language writing</a>. <em>International Journal of Corpus Linguistics</em>.
(<a href="https://aihaiyang.com/software/l2sca/">Web-based L2 Syntactical Complexity Analyzer (L2SCA)</a>)</p>
</li>
<li>
<p>Yao-Ting Sung, Tao Hsing Chang. 2016. <a href="https://link.springer.com/content/pdf/10.3758%2Fs13428-015-0649-1.pdf">CRIE: An automated analyzer for Chinese texts</a>. <em>Behavior Research Methods</em>.
(<a href="http://www.chinesereadability.net/CRIE/index.aspx?LANG=CHT">文本可读性指标自动化分析系统(Chinese Readability Index Explorer, CRIE)</a>)</p>
</li>
<li>
<p>Arthur C. Graesser, Danielle S. McNamara . 2011. <a href="http://sage.cnpereading.com/paragraph/download/10.3102/0013189X11413260">Coh-Metrix: Providing multilevel analysis of text characteristic</a>. <em>Educational Researcher</em>.
(<a href="http://210.240.188.161/Chinese_CohMetrix/index.html">中文文本自动化分析系统: Coh-Metrix</a>)</p>
</li>
<li>
<p>Xiaobin Chen, Detmar Meurers. 2016. <a href="https://www.aclweb.org/anthology/W16-4113.pdf">CTAP: A Web-Based Tool Supporting Automatic Complexity Analysis</a>. <em>Proceedings of the Workshop on Computational Linguistics for Linguistic Complexity (CL4LC))</em>.
(<a href="http://samos.sfs.uni-tuebingen.de:8080/ctapweb/">CTAP</a>)</p>
</li>
<li>
<p>金檀、陆小飞、郭凯、李百川. 2018. Eng-Editor: An online English text evaluation and adaptation system. 广州：语言数据网(languagedata.net/tester).
( <a href="https://www.languagedata.net/tester/">英语阅读分级指难针</a> )</p>
</li>
</ul>
<br>
<h2 id="4">4. Chinese Data Resources</h2>
<ul>
<li><a href="https://mp.weixin.qq.com/s/VRiNJyILWMwNOAzXJUoKyA">汉语词法难度分级表</a></li>
<li><a href="https://mp.weixin.qq.com/s/IRSqMm75mjoI95VGArW9Jw">汉语句法难度分级表</a></li>
<li>国际汉语教师语法教学手册</li>
<li>国际汉语教师中级语法教学手册</li>
</ul>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>科学绘图matplotlib</title>
      <link>https://hidadeng.github.io/blog/sci_matplotlib/</link>
      <pubDate>Wed, 24 Nov 2021 22:40:10 +0600</pubDate>
      
      <guid>/blog/sci_matplotlib/</guid>
      <description>字段丰富，适合玩数据分析</description>
      <content:encoded><![CDATA[<p>Python 科学可视化领域是巨大的，由无数工具组成，从最通用和最广泛使用的工具到更专业和机密的工具。其中一些工具是基于社区的，而另一些则是由公司开发的。有些是专门为 Web 制作的，有些仅适用于桌面，有些处理 3D 和大数据，而有些则针对完美的 2D 渲染。</p>
<p>在这个图景中，Matplotlib 有着非常特别的地方。</p>
<ul>
<li>它是一个多功能且功能强大的库，可让您设计非常高质量的图形，适用于<strong>科学出版</strong>。</li>
<li>它还提供了一个简单直观的界面以及一个面向对象的架构，允许您调整图形中的任何内容。</li>
<li>最后，它可以用作常规图形库以设计非科学图形。</li>
</ul>
<br>
<h2 id="本书章节四个部分">本书章节四个部分</h2>
<ul>
<li>
<p>第一部分 Matplotlib 库的基本原理。</p>
<p>这包括回顾构成图形的不同部分、不同的坐标系、可用的比例和投影，我们还将介绍一些与排版和颜色相关的概念。</p>
</li>
<li>
<p>第二部分 图形涉及实践。</p>
<p>在介绍了一些生成更好图形的简单规则之后，我们将继续解释 Matplotlib 默认值和样式系统，然后再深入研究图形布局组织。然后我们将探索可用的不同类型的情节，看看如何用不同的元素装饰一个人物。</p>
</li>
<li>
<p>第三部分 更高级的概念</p>
<p>即 3D 图形、优化和动画。第四部分也是最后一部分是展示集合。</p>
</li>
</ul>
<br>
<h2 id="美图展览">美图展览</h2>
<p>
<figure >
    
        <img src="img/1.png" width="800" />
    
    
</figure>


<figure >
    
        <img src="img/2.png" width="800" />
    
    
</figure>


<figure >
    
        <img src="img/3.png" width="800" />
    
    
</figure>
</p>
<br>
<h2 id="案例代码">案例代码</h2>

<figure >
    
        <img src="img/matplotlib.png" width="800" />
    
    
</figure>

<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.textpath</span> <span class="kn">import</span> <span class="n">TextPath</span>
<span class="kn">from</span> <span class="nn">matplotlib.patches</span> <span class="kn">import</span> <span class="n">PathPatch</span>
<span class="kn">from</span> <span class="nn">matplotlib.collections</span> <span class="kn">import</span> <span class="n">PolyCollection</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">font_manager</span> <span class="k">as</span> <span class="n">fm</span><span class="p">,</span> <span class="n">rcParams</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">()</span>

<span class="c1">#更改字体，支持中文。</span>
<span class="n">prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;fonts/Alibaba-PuHuiTi-Bold.otf&#39;</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>

<span class="n">red</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">233</span><span class="p">,</span> <span class="mi">77</span><span class="p">,</span> <span class="mi">85</span><span class="p">,</span> <span class="mi">255</span><span class="p">])</span> <span class="o">/</span> <span class="mi">255</span>
<span class="n">darkred</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([</span><span class="mi">130</span><span class="p">,</span> <span class="mi">60</span><span class="p">,</span> <span class="mi">71</span><span class="p">,</span> <span class="mi">255</span><span class="p">])</span> <span class="o">/</span> <span class="mi">255</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mf">14.8</span> <span class="o">/</span> <span class="mf">2.54</span><span class="p">,</span> <span class="mi">21</span> <span class="o">/</span> <span class="mf">2.54</span><span class="p">))</span>

<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_axes</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="n">aspect</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">xlim</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">],</span> <span class="n">ylim</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="mf">14.2</span><span class="p">,</span> <span class="mf">14.2</span><span class="p">])</span>
<span class="n">ax</span><span class="o">.</span><span class="n">axis</span><span class="p">(</span><span class="s2">&#34;off&#34;</span><span class="p">)</span>

<span class="c1"># Text path</span>
<span class="n">path</span> <span class="o">=</span> <span class="n">TextPath</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="s2">&#34;MATPLOTLIB库&#34;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">prop</span><span class="o">=</span><span class="n">prop</span><span class="p">)</span>

<span class="c1"># Text centering</span>
<span class="n">V</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="n">vertices</span>
<span class="n">xmin</span><span class="p">,</span> <span class="n">xmax</span> <span class="o">=</span> <span class="n">V</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> <span class="n">V</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span>
<span class="n">ymin</span><span class="p">,</span> <span class="n">ymax</span> <span class="o">=</span> <span class="n">V</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> <span class="n">V</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span>
<span class="n">V</span> <span class="o">-=</span> <span class="p">(</span><span class="n">xmin</span> <span class="o">+</span> <span class="n">xmax</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="n">ymin</span> <span class="o">+</span> <span class="n">ymax</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>


<span class="c1"># Compute shadow by iterating over text path segments</span>
<span class="n">polys</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="p">(</span><span class="n">point</span><span class="p">,</span> <span class="n">code</span><span class="p">)</span> <span class="ow">in</span> <span class="n">path</span><span class="o">.</span><span class="n">iter_segments</span><span class="p">(</span><span class="n">curves</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">code</span> <span class="o">==</span> <span class="n">path</span><span class="o">.</span><span class="n">MOVETO</span><span class="p">:</span>
        <span class="n">points</span> <span class="o">=</span> <span class="p">[</span><span class="n">point</span><span class="p">]</span>
    <span class="k">elif</span> <span class="n">code</span> <span class="o">==</span> <span class="n">path</span><span class="o">.</span><span class="n">LINETO</span><span class="p">:</span>
        <span class="n">points</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">point</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">code</span> <span class="o">==</span> <span class="n">path</span><span class="o">.</span><span class="n">CLOSEPOLY</span><span class="p">:</span>
        <span class="n">points</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">points</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">points</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">points</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">points</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
            <span class="n">p0</span><span class="p">,</span> <span class="n">p1</span> <span class="o">=</span> <span class="n">points</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">points</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span>
            <span class="n">polys</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">p0</span><span class="p">,</span> <span class="n">p1</span><span class="p">,</span> <span class="n">p1</span> <span class="o">+</span> <span class="p">(</span><span class="o">+</span><span class="mi">20</span><span class="p">,</span> <span class="o">-</span><span class="mi">20</span><span class="p">),</span> <span class="n">p0</span> <span class="o">+</span> <span class="p">(</span><span class="o">+</span><span class="mi">20</span><span class="p">,</span> <span class="o">-</span><span class="mi">20</span><span class="p">)])</span>

<span class="c1"># Display shadow</span>
<span class="n">collection</span> <span class="o">=</span> <span class="n">PolyCollection</span><span class="p">(</span>
    <span class="n">polys</span><span class="p">,</span> <span class="n">closed</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mf">0.0</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="n">darkred</span><span class="p">,</span> <span class="n">zorder</span><span class="o">=-</span><span class="mi">10</span>
<span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">add_collection</span><span class="p">(</span><span class="n">collection</span><span class="p">)</span>

<span class="c1"># Display text</span>
<span class="n">patch</span> <span class="o">=</span> <span class="n">PathPatch</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span> <span class="n">edgecolor</span><span class="o">=</span><span class="s2">&#34;none&#34;</span><span class="p">,</span> <span class="n">zorder</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">add_artist</span><span class="p">(</span><span class="n">patch</span><span class="p">)</span>

<span class="c1"># Transparent gradient to fade out shadow</span>
<span class="n">I</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">200</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span> <span class="o">+</span> <span class="n">red</span>
<span class="n">ax</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">I</span><span class="p">,</span> <span class="n">extent</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="mi">11</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="o">-</span><span class="mi">15</span><span class="p">,</span> <span class="mi">15</span><span class="p">],</span> <span class="n">zorder</span><span class="o">=-</span><span class="mi">20</span><span class="p">,</span> <span class="n">clip_on</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">I</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">I</span><span class="p">))</span>
<span class="n">ax</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">I</span><span class="p">,</span> <span class="n">extent</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="mi">11</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="o">-</span><span class="mi">15</span><span class="p">,</span> <span class="mi">15</span><span class="p">],</span> <span class="n">zorder</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">clip_on</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>


<span class="n">ax</span><span class="o">.</span><span class="n">text</span><span class="p">(</span>
    <span class="mf">6.5</span><span class="p">,</span>
    <span class="o">-</span><span class="mf">1.75</span><span class="p">,</span>
    <span class="s2">&#34;一个多功能的科学可视化库&#34;</span><span class="p">,</span>
    <span class="n">color</span><span class="o">=</span><span class="s2">&#34;white&#34;</span><span class="p">,</span>
    <span class="n">ha</span><span class="o">=</span><span class="s2">&#34;right&#34;</span><span class="p">,</span>
    <span class="n">va</span><span class="o">=</span><span class="s2">&#34;baseline&#34;</span><span class="p">,</span>
    <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
    <span class="c1">#family=&#34;Pacifico&#34;,</span>
    <span class="n">zorder</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span>
    <span class="n">fontproperties</span><span class="o">=</span><span class="n">prop</span>
<span class="p">)</span>

<span class="c1"># Save and show result</span>
<span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s2">&#34;text-shadow.pdf&#34;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s2">&#34;text-shadow.png&#34;</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">600</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><br>
<h2 id="电子书下载">电子书下载</h2>
<p>您可以阅读 PDF（95Mo，首选站点）这本书，该书是开放访问的，托管在 HAL 上，HAL 是一个面向学术界的法国开放档案馆。最新版本也可以在 GitHub 上找到。本书的来源（包括代码示例）可在 github.com/rougier/scientific-visualization-book 上找到。</p>
<br>
<h2 id="代码下载">代码下载</h2>
<p><a href="https://github.com/hiDaDeng/DaDengAndHisPython/tree/master/matplotlib%E7%BB%98%E5%9B%BE%E6%94%AF%E6%8C%81%E4%B8%AD%E6%96%87">点击下载</a></p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>管理世界 | 使用文本分析&amp;机器学习测量短视主义</title>
      <link>https://hidadeng.github.io/blog/text_mining_in_2021_management_world/</link>
      <pubDate>Tue, 23 Nov 2021 21:33:10 +0600</pubDate>
      
      <guid>/blog/text_mining_in_2021_management_world/</guid>
      <description>本文基于高层梯队理论和社会心理学中的时间导向理论，提出了管理者内在的短视主义特质与企业资本支出和研发支出的关系，并采用文本分析和机器学习技术构建出管理者短视主义指标从而对其进行实证检验。研究结果发现，年报 MD&amp;amp;A 中披露的“短期视域” 语言 能够反映管理者内在的短视主义特质，管理者短视会导致企业减少资本支出和研发支出。当公司治理水平、监督型机构投资者的持股比例以及分析师关注度越高时，管理者短视主义对这些长期投资的负向影响越 易受到抑制。最终，管理者短视主义导致的研发支出减少和资本投资效率降低会损害企业的未来绩效。本文拓宽了管理者短视主义的行为后果分析，对企业高层次管理人才的聘任以及企业和政府的监管具有重要的实践启示。同时，本文将文本分析和机器学习方法引入管理者短视主义的研究，为未来该领域的研究提供了参考和借鉴。</description>
      <content:encoded><![CDATA[<h2 id="案例文献">案例文献</h2>
<p>胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.</p>
<h2 id="摘要">摘要：</h2>
<p>在可持续发展战略导向下，秉持长远理念是企业抵御外部环境威胁和拥有可持续经营能力的基 石。然而，作为企业掌舵人的管理者并非都具有长远的目光。本文基于<strong>高层梯队理论</strong>和社会心理学中的<strong>时间导向理论</strong>，提出了管理者内在的短视主义特质与企业资本支出和研发支出的关系，并<strong>采用文本分析和机器学习技术构建出管理者短视主义指标从而对其进行实证检验</strong>。研究结果发现，<strong>年报 MD&amp;A 中披露的“短期视域” 语言</strong> 能够反映管理者内在的短视主义特质，管理者短视会导致企业减少资本支出和研发支出。当公司治理水平、监督型机构投资者的持股比例以及分析师关注度越高时，管理者短视主义对这些长期投资的负向影响越 易受到抑制。最终，管理者短视主义导致的研发支出减少和资本投资效率降低会损害企业的未来绩效。本文拓宽了管理者短视主义的行为后果分析，对企业高层次管理人才的聘任以及企业和政府的监管具有重要的实践启示。<strong>同时，本文将文本分析和机器学习方法引入管理者短视主义的研究，为未来该领域的研究提供了参考和借鉴</strong>**。**</p>
<h2 id="关键词">关键词：</h2>
<p>管理者短视 长期投资 文本分析 机器学习</p>
<h2 id="变量测量论证">变量测量论证</h2>
<p><strong>语言能够反映人的认知、偏好和个性（Webb et al.，1966），研究者可通过分析实验对象语言中使用的词语类型和词频来捕捉人的特质</strong>（Miller and Ross，1975；Pennebaker et al.，2003）。如一个人的语言中越强调“过去”、“ 曾经”等词汇，反映其越关注过去；一个人的语言中越强调“将来”、“ 可能”、“ 要去”等词汇，反映其越关注未来（Pennebaker et al.，2003）。<strong>基于此研究范式，本文结合已有的英文“短期视域”词集、MD&amp;A 中文语料特点以及 Word2Vec 机器学习制定出能够反映管理者“短期视域”的中文词集，随后通过词典法构建出管理者的短视主义指标。</strong></p>
<p>MD&amp;A 是管理者对报告期内企业经营状况的回顾以及对下一年度经营计划以及企业未来发展所面临的机遇、挑战和各种风险的阐述。已有利用 MD&amp;A 等文本刻画管理者特质的研究成果在一定程度上证实了其可靠性（Li，2012；蒋艳辉、冯楚建，2014）。如</p>
<ul>
<li>Li（2012）利用美国上市公司 MD&amp;A 文本来刻画管理者的 <strong>自我归因偏差</strong>。</li>
<li>蒋艳辉和冯楚建（2014）利用 MD&amp;A 中“我们”、“ 我公司”、“ 我们公司”等词语出现的频率刻画管理者的<strong>自我指涉度</strong>，从而衡量管理层对公司的认知和努力程度。</li>
<li>同时，国外文献表明 CEO 对企业的经营决策起着绝对的主导作用，能够直接影响企业未来的发展方向和命运（Chandler，1962；Finkelstein and Hambrick，1996）。CEO 的特质如自恋程度、学历和任期等都会极大影响公司的信息披露特点（Marquez Illescas et al.，2019；Lewis et al.，2019），因此年报披露的文本信息更多地反映了 CEO 的意思。而在我国，上市公司的董事长更像发达国家的 CEO（姜付秀等，2009；陈传明、孙俊华，2008；李健等，2012）。</li>
</ul>
<p><strong>因此，我们从 MD&amp;A 中捕获的管理者短视主义特质更多反映的是董事长的短视主义特质，本文的管理者指的是企业的董事长。</strong></p>
<h2 id="指标构建过程">指标构建过程</h2>
<p>具体来讲**，管理者短视主义指标**的构建过程如下。</p>
<ol>
<li>借鉴 Brochet 等（2015）的英文“<strong>短期视域</strong>”词集与 Li（2010）构建文本指标的思路，我们阅读了 500 份 MD&amp;A 语料以获取中文文本信息的特点，制定出中文 MD&amp;A 中有关“短期视域”的种子词集，包括直接和间接 两大类。<strong>直接短期视域</strong>大类包括：“ 天内”、“ 数月”、“ 年内”、“ 尽快”、“ 立刻”、“ 马上”；<strong>间接****短期视域</strong>大类包括：“ 契机”、“ 之际”、 “压力”、“ 考验”。</li>
<li>针对同一概念或者事物，表达者往往使用多个语义相似的词汇进行描述，因此需要对种子词集进行相似词扩充。本文采用 Word2Vec 中的 CBOW 模型（Continuous Bag-of-words Model）对中文年度财务报告语料进行训练。</li>
<li>我们通过邀请 3 名业界和学术界专家以及对比 MD&amp;A 文本样例对指标词集进行核验，最终确定词集包含 43 个“短期视域”词汇（词集和语句示例详见《管理世界》网络发行版附录 2）。随后，本文基于词典法计算 “短期视域”词汇总词频占 MD&amp;A 总词频的比例，乘以 100 后得到<strong>管理者短视主义指标</strong>。该指标值越大，表明管理者越短视。</li>
</ol>
<h2 id="技术分析">技术分析</h2>
<blockquote>
<p>纯技术讨论，非论文内容</p>
</blockquote>
<p>这篇管理世界的论文，主要难点有两个：</p>
<ol>
<li>
<p>如何构建 <strong>短视主义词典(集)</strong> ？</p>
</li>
<li>
<ul>
<li>根据对研究和数据的了解，<strong>人工摘选</strong>一些 短视主义词典(集)种子词；人工，不需要python编程</li>
<li>使用Word2Vec技术扩充 短视主义词典(集)；需要python编程</li>
</ul>
</li>
<li>
<p>如何使用 <strong>短视主义词典(集)</strong> 计算  <strong>短视主义指标</strong>？</p>
</li>
<li>
<ul>
<li>需要使用Python编程语言，根据 <strong>词典法</strong> 实现短视主义指标的计算。</li>
</ul>
</li>
</ol>
<h2 id="python学习与实现">python学习与实现</h2>
<p>难点主要可在掌握 <strong><a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">视频专栏课| Python网络爬虫与文本分析</a></strong>  后，结合以下两个技能点实现</p>
<ul>
<li>扩充词集可以用到之前分享的<strong>wordexpansion库</strong>  <a href="https://github.com/DataPlusCommunity/wordexpansion">https://github.com/DataPlusCommunity/wordexpansion</a></li>
<li>计算短视主义指标，即词典法可以用到<strong>cnsenti库</strong>  <a href="https://github.com/DataPlusCommunity/cnsenti">https://github.com/DataPlusCommunity/cnsenti</a></li>
</ul>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>文本分析在市场营销研究中的应用</title>
      <link>https://hidadeng.github.io/blog/text_mining_in_marketing_research/</link>
      <pubDate>Tue, 23 Nov 2021 21:32:10 +0600</pubDate>
      
      <guid>/blog/text_mining_in_marketing_research/</guid>
      <description>语言文字是营销场景中最常用的交互方式，比如在线评论、消费者服务热线、新闻发布、营销传播等活动都创造了有价值的文本数据。但营销研究者如何用好这些数据？本文回顾了文本分析相关研究，并详细介绍了如何用文本数据做市场研究。作者讨论了文本如何**反映**文本生产者， 文本信息如何**影响**信息接受者。接下来，本文讨论了文本如何**预测**并**理解**文本背后的信息，回顾了文本分析的方法和测量指标(metrics),提供了一整套的文本分析操作流程。最后，作者提到文本分析内部信度和外部效度问题，研究者如何解决。本文讨论营销各个领域可能存在的研究机会，虽然目前市场营销的研究问题大都是跨学科的，但是营销的各个子领域经常都是孤立，借助文本分析可能架构起连接营销各个子领域的桥梁。</description>
      <content:encoded><![CDATA[<br>
<blockquote>
<p>翻译自</p>
<p>Berger, Jonah, Ashlee Humphreys, Stephan Ludwig, Wendy W. Moe, Oded Netzer, and David A. Schweidel. &ldquo;Uniting the tribes: Using text for marketing insight.&rdquo; Journal of Marketing (2019): 0022242919873106.</p>
</blockquote>
<p>论文作者们的报告视频已上传到B站(下图)，感兴趣的童鞋可以先收藏再收看</p>
<p><a href="https://www.bilibili.com/video/BV1rJ411b7G6"><strong>Jourmal of Marketing Webinar｜2019市场营销</strong></a></p>
<br>
<h2 id="摘要">摘要</h2>
<p>语言文字是营销场景中最常用的交互方式，比如在线评论、消费者服务热线、新闻发布、营销传播等活动都创造了有价值的文本数据。但营销研究者如何用好这些数据？本文回顾了文本分析相关研究，并详细介绍了如何用文本数据做市场研究。作者讨论了文本如何<strong>反映</strong>文本生产者， 文本信息如何<strong>影响</strong>信息接受者。</p>
<p>接下来，本文讨论了文本如何<strong>预测</strong>并<strong>理解</strong>文本背后的信息，回顾了文本分析的方法和测量指标(metrics),提供了一整套的文本分析操作流程。最后，作者提到文本分析内部信度和外部效度问题，研究者如何解决。本文讨论营销各个领域可能存在的研究机会，虽然目前市场营销的研究问题大都是跨学科的，但是营销的各个子领域经常都是孤立，借助文本分析可能架构起连接营销各个子领域的桥梁。</p>
<br>
<h2 id="关键词">关键词</h2>
<ul>
<li>计算语义学coputational linguistics</li>
<li>机器学习machine learning</li>
<li>市场洞察marketing insight</li>
<li>跨学科interdisciplinary</li>
<li>自然语言处理natural language processing</li>
<li>文本分析text analysis</li>
<li>文本挖掘 text mining</li>
</ul>
<br>
<h2 id="无所不在文本">无所不在文本</h2>
<p>交流沟通是营销的重要组成部分，消费者、企业、消费者投资者、社会，不同水平或者统一水平都有信息交流与沟通。而信息交流的过程中往往会产生或者转化为文本数据。</p>
<p>最简单的的文本数据世界模型是<strong>生产者</strong>与<strong>消费者</strong>。模型内生产者和接受者都可能是消费者、企业、投资者和社会。消费者书写在线评论，公司制作会计年报，文化生产者代表社会意义制作出书籍、影片和艺术品（Table 1）</p>
<p>在此情形下，研究者可能选择文本如何反映或如何影响？</p>
<ul>
<li><strong>How text reflects its producer？</strong></li>
<li><strong>How text impacts its receiver？</strong></li>
</ul>
<p>尤其是文本可以反映一定的信息，这些信息是可以帮助营销人员洞察市场规律，进而利用规律影响文本信息的接受者。</p>
<p><img loading="lazy" src="img/textproducerReceiver.png" alt=""  />
</p>
<br>
<h2 id="文本反映生产者">文本反映生产者</h2>
<p>首先，文本可以反映了个人的一些信息。例如“在社交媒体某推特上写着某人谈论着上周他们做了什么。”这句话有很多待挖掘的信息，比如他们这些人什么情况，是内向还是外向、神经质还是严肃认真、他们感觉如何、某时刻他们想了什么(Moon and Kamakura 2017)。总之，文本可以看作指纹或签名(Pennebaker 2011)。</p>
<p>通过文本也可以用于理解领导人、机构或者文化精英。例如领导人用词表达会反映出其领导风格，对利益相关方的态度。透过广告、网站或者消费者服务商(consumer service agent)的言语，人们会了解公司的品牌个性(Opoku, Abratt, and Pitt 2006)，公司是如何看待消费者(Packard and Berger 2019a)，管理层对终端用户的定位(Molner, Prabhu, and Yadav 2019)。年报也会有未来业绩表现的有价值线索(Loughran and McDonald 2016)。</p>
<p>除了单独分析个人或组织的言语，也可以对多个内容生产者合并起来进行更大层面的研究。透过人群或组织产生的文本，我们可以更好理解他们的本质。例如，分析微博，可以得出老年人和年轻人之间如何看待幸福(as excitement vs. peacefulness; Mogilner, Kamvar, and Aaker 2011)。消费者们在品牌社区的言语能更深的投射出消费者对品牌的态度(Homburg, Ehm, and Artz 2015)。</p>
<p>而更宏大的层面，文本也能反映出文化差异。如美国人的表达相比东亚人具有更高的唤醒水平(Tsai 2007)，更喜欢用“我”而不是“我们”，也透露着崇尚个人主义，而不是集体主义。</p>
<p>透过时间，研究者也可以监测美国国民情绪是否在911恐怖袭击前后发生变化(Cohn, Mehl, and Pennebaker 2004)。透过新闻报告、歌词等内容也可以帮助研究者了解社会态度和社会规范，分析有关对女性、少数族裔(Boghrati and Berger 2019; Garg et al. 2018)和特定产业态度的时代变迁(Humphreys 2010)。</p>
<p>虽然文本分析并不容易，但企业和组织可以使用社交网络倾听民声。了解消费者是否喜欢新产品，消费者如何看待品牌，消费者最看重什么(Lee and Bradlow 2011; Netzer et al. 2012)。监管机构可以确定什么药物有不良部反映(Feldman et al. 2015; Netzer et al. 2012),公共卫生部门可以提前了解流感今年爆发最严重的地区(Alessa and Faezipour 2018),投资者可以预测股价涨跌 (Bollen, Mao, and Zeng 2011; Tirunillai and Tellis 2012).</p>
<br>
<h2 id="文本作用于消费者">文本作用于消费者</h2>
<p>文本不止可以反映生产者的信息，也可以知道文本如何影响消费者，消费者会有什么样的行为和选择。广告会塑造消费者的消费行为(Stewart and Furse 1986),报纸用语会改变消费者的态度(Humphreys and LaTour 2013), 消费者杂志会扭曲消费者产品分类感知(e.g., Rosa et al. 1999),电影剧本会影响观众的反应(Berger, Kim, and Meyer 2019; Eliashberg, Hui, and Zhang 2014; Reagan et al. 2016),等等。</p>
<p>需要注意的是文本的<strong>反映reflects</strong>和<strong>影响impacts</strong>并不是非此即彼，往往会同时起作用，尽管如此，研究人员倾向于使用<strong>文本差异</strong>来研究它俩。</p>
<p>当研究文本的<strong>reflects</strong>时，倾向于将reflects当作<strong>因变量</strong>，试图挖掘文本生产者的个性personality或属于什么社会团体。</p>
<p>当研究文本的<strong>impacts</strong>时，倾向于将impacts看作<strong>自变量</strong>，检验文本是否以及如何导致消费者诸如购买、分享和卷入行为。在本框架中，文本信息潜藏着某些潜在的影响力，是被当作诱因，对后续或者其他主体有作用力的。</p>
<h4 id="文本内容也会被客观条件影响"><strong>文本内容也会被客观条件影响</strong></h4>
<p>文本内容还可以被客观条件所塑造，如</p>
<ul>
<li>技术限制和社会文化基因(社会规范)</li>
<li>文本信息生产者与消费者之间的领域知识</li>
<li>先前客观历史</li>
</ul>
<p>首先，不同题材因社会规范，表达内容和方式有所不同。例如观点陈述时，新闻不如报告来的客观(Ljung 2000).酒店评论卡和其他反馈主要被极端观点占据。在Snapchat和其他SNS平台的推文达多较短，且昙花一现；而自在线评论经常较长且可以回溯到多年以前。</p>
<p>技术和物理也会改变文本表达。推特只能发少于280字符的推文。移动电话在键入方面受到限制，并且可能会影响人们在其上产生的文本（Melumad，Inman和Pham 2019; Ransbotham，Lurie和Liu 2019）。</p>
<p>其次，信息生产者和消费者之间的关系会影响说什么，怎么说。当生产者和消费者彼此很熟悉，文本表达会更非正式(Goffman 1959)，导致第三方很难通过直接明确的信息了解生产者与消费者之间的对话的态度。</p>
<p>这些因素对于解读文本信息至关重要，消费者给好朋友分享什么往往跟其他不同。企业可能会因为特定的冬季，其年报中可能会含有利好市场的信息。</p>
<p>最后，历史可能也会影响文本的内容。在留言板上，以前的帖子可能会影响以后的帖子；如果有人在先前的帖子中提出了要点，则被访者很可能会在以后的帖子中提及该要点。如果转发的帖子含有自己的分析，其内容会偏离大多数的帖子。更广泛地说，＃metoo或#blacklivesmatter之类的媒体框架可能使某些概念或事实更容易被演讲者使用，因此即使看起来似乎无关，它们也更可能出现在文本中（McCombs&amp;Shaw 1972; Xiong，Cho&amp;Boatwright 2019）。</p>
<br>
<h2 id="使用文本预测与理解">使用文本预测与理解</h2>
<p>文本除了<strong>reflects</strong> 和 <strong>impacts</strong>之外，还有<strong>predict</strong>和<strong>understanding</strong>。</p>
<h4 id="预测">预测</h4>
<p>某些文本研究出发点是做预测</p>
<ul>
<li>什么消费者最喜欢贷款(Netzer, Lemaire, and Herzenstein 2019)?</li>
<li>什么电影会大火(Eliashberg et al. 2014)?</li>
<li>未来股市走向(Bollen, Mao, and Zeng 2011; Tirunillai and Tellis 2012)?</li>
</ul>
<p>类似上面的研究，会使用很多文本特征来做机器学习和预测，研究人员不怎么关系任意的文本特质，他们更关心预测的表现。</p>
<p>用文本做预测的主要难点是，文本数据可以生成成千上万的特征(相当于变量x1，x2&hellip;xn)，而文本数据记录数甚至可能少于特征数。为了解决这个为题，使用新的特征分类方法，减少特征数量，又有可能存在拟合问题。</p>
<h4 id="理解">理解</h4>
<p>预测之外的研究主要是理解文本</p>
<ul>
<li>消费者怎样表达会如何影响口碑(Packard and Berger 2017)?</li>
<li>为何某些推文会被挑中分享？</li>
<li>歌曲为何变火？</li>
<li>品牌如何让消费者忠诚？</li>
</ul>
<p>理解的目标是理解为什么事情发生以及如何发生的。这类研究往往会用到心理学、社会学的方法，旨在理解文本的什么特征会导致什么后续结果，以及为什么产生这样的后果。</p>
<p>用文本做理解的难点是找出观测数据背后的因果关系。相应的，该领域的工作可能会强调实验数据，以允许对关键的独立变量进行操作。另一个挑战是解释文本特征之间的关系。使用第二人称的歌曲往往较火(Packard and Berger 2019b),但是为什么使用第二人称会火，单纯的文本数据很难挖掘出来作用机制。</p>
<p><strong>在prediction领域</strong>，研究人员利用 <strong>文本的reflects方面</strong> 来预测 生产者的状态、特性、满意度、性格等。研究人员利用 *文本impacts方面 * 来预测 消费者的阅读、分享和购买行为。</p>
<p><strong>在understand领域</strong>，研究人员利用 <strong>文本的reflects方面</strong> 来理解为什么当人们压抑的时候会使用特殊人称。利用 *文本impacts方面 * 来理解为何带有情绪的文本会更容易被阅读和分享。</p>
<br>
<h2 id="粘合营销各领域">粘合营销各领域</h2>
<p>尽管有reflects vs impacts， prediction vs understanding之分，做文本分析需要整合多种技能·技术和不同营销领域的相关知识。</p>
<p>就拿消费者行为学来说，在行为经济学大放异彩之前，假设情景操纵是存在争议的。实验可重复性问题，研究者开始寻找试图增强信度、效度的新工具。使用二手数据经常受限于只能做“是什么”的研究，不能做“为什么”的研究。但文本数据提供了做为什么的可能。例如在线评论可以用来理解为何某人购买了此商品的决策，尽管人们可能并不总是知道为什么要做某事，但他们的语言常常提供解释的痕迹（Pennebaker 2011），甚至超出了他们有意识地表达的范围。</p>
<p>定量建模人员一直在寻找新的数据源和工具来解释和预测行为。非结构化数据提供了一组丰富的预测变量，这些预测变量通常可以随时大规模获得，并且可以与结构化度量一起作为因变量或自变量组合。通过产品评论，用户驱动的社交媒体活动以及公司驱动的营销活动，文本可以实时提供可以阐明消费者需求/偏好的数据。这提供了对传统营销研究工具的替代或补充。在许多情况下，文本可以追溯到个人，从而可以区分个人差异和动态。</p>
<p>营销策略研究人员希望企业能实现其营销目标，并更好地理解影响组织成功的因素。文本分析提供了一种客观而系统的解决方案，以评估可能更有效的自然数据（例如，致股东的信，新闻稿，专利文本，营销信息，与分析师的电话会议）中可能的因素，如了解客户、合作伙伴和员工关系性质以及品牌情感强度(Kubbler，Colicev和Pauwels2017）使用词典和支持向量机方法来提取情绪并将其与消费者心态指标相关联。</p>
<p>也有学者借鉴人口和社会学领域，使用定性和内容分析研究文本数据。消费者文化领域，研究者对字里行间的意义、规范和价值观更感兴趣。文本分析提供了事物变化或比较不同事物的量化指标。文本分析为营销学者解锁了非结构化数据的开锁姿势，提供了文本的定性与定量研究的新疆界。</p>
<br>
<h2 id="文本分析工具方法和指标">文本分析工具、方法和指标</h2>
<p>给予前任做的文本数据驱动的洞察，有学者可能好奇如何开启文本研究之路。在本节会评述文本分析相关研究，包括</p>
<ul>
<li>构念如何用文本数据构建</li>
<li>将提取的文本信息整合到后续建模和分析中所需的过程</li>
</ul>
<p>本节目的是提供综合的入门指导，而是把可用的技术路线留给各位</p>
<ul>
<li>讨论各种方法如何恰当的使用</li>
<li>各种方法在使用时应该注意什么</li>
</ul>
<p>文本处理分析包括的步骤有</p>
<ol>
<li>数据预处理</li>
<li>文本信息提取</li>
<li>常用的文本分析指标</li>
</ol>
<br>
<h2 id="数据预处理">数据预处理</h2>
<p>文本数据是非结构化的脏数据。在任何常规数据分析之前，都要先将文本数据预先清洗处理，进而产生出类似excel表的干净的数据。常用的工具有R语言和Python语言，两种编程语言都有一套易用的数据预处理包。使用某些软件，如Linguistic Inquiry and Word Count (LIWC; Tausczik and Pennebaker 2010) 和WordStat (Peladeau 2016)之前，文本数据需要做少量的预处理。预处理可见Table 2和 Table 3 。</p>
<p><img loading="lazy" src="img/workflow.png" alt=""  />
</p>
<p><img loading="lazy" src="img/workflow2.png" alt=""  />
</p>
<h3 id="1-数据获取">1. 数据获取</h3>
<p>巧妇难为无米之炊，做文本研究的第一步就是采集数据，文本存在于邮件、公司年报、在线评论之中，无所不在，浩瀚无比。可以用人工手动复制粘贴到excel之中，但是效率太低，我们可以使用python设计网络爬虫采集数据。常见访问库requests、数据解析库pyquery和BeautifulSoup、数据存储库csv。</p>
<h3 id="2-分词">2. 分词</h3>
<p>将文本分词(切词)，数据尺度从章节段落拆解成颗粒度更小的词语层面，方便进行分析。但是要注意，英文是用空格间隔词语，而中文没有空格，还要注意粒度分的不能太细，如“the U. S.”按照空格分词会分出“the”、“U.” 和“S.”，导致美国这个实体被切分消失。</p>
<h3 id="3-清洗">3. 清洗</h3>
<p>网络爬虫在采集数据阶段，采集的并不是干净的文本数据，还有一些像HTML标签、图片、链接等字符，需要采集时清除掉。</p>
<h3 id="4-剔除停止词">4. 剔除停止词</h3>
<p>文本中有很多经常出现的无意义或者意义微乎其微的词，如&quot;a&quot;、the&quot;、&ldquo;is&rdquo; 等。一般情况下，这些词是需要剔除的。但是当研究的是书写者的语言风格，这些无意义词语往往含有千丝万缕的写作习惯信息，所以此时不能剔除。(e.g., Packard, Moore, and McFerran 2018；Pennebaker 2011).</p>
<h3 id="5-拼写">5. 拼写</h3>
<p>一般情况下，还需要将错误书写的词正确修改过来。但是当研究者对错误率感兴趣的时候，这时候就不要更正拼写问题。(e.g., Netzer, Lemaire, and Herzenstein 2019).</p>
<h3 id="6-词干化">6. 词干化</h3>
<p>词干化是为了将相同或者相近意思的词合并为一个词，如“car” ` “cars” 统一识别为 “car,”</p>
<h2 id="文本信息提取">文本信息提取</h2>
<p><img loading="lazy" src="img/%e6%96%87%e6%9c%ac%e4%bf%a1%e6%81%af%e6%8f%90%e5%8f%96.png" alt=""  />
</p>
<h3 id="1-命名实体抽取">1. 命名实体抽取</h3>
<p>这是文本分析最基础、最简单、最常用的部分。例如姓名、地址、品牌、产品属性、情绪、词性等等都可以看作一种实体信息。实体抽取可以用来</p>
<ul>
<li>监测啥叫媒体讨论，商业竞争情报</li>
<li>也可用作机器学习中的特征（预测指标），预测是否是欺诈信息</li>
<li>构建更复杂的文本表达方式的度量指标，如情感、情绪、写作风格</li>
</ul>
<p>这部分一般需要强大的编程语言，如Python和R；当然有些情况下不用编程，使用WordStat也能做实体抽取。大多数情况下实体抽取经常伴随着专业词典或词表的使用，如(概念、品牌、分类、地址等)。通用的词典包括LIWC(Pennebaker et al. 2015)， EL 2.0 (Rocklage, Rucker, and Nordgren 2018), Diction 5.0 或General Inquirer for psychological states and traits (Berger and Milkman [2012]; Ludwig et al. [2013]; Netzer, Lemaire, and Herzenstein [2019]).</p>
<p>情感词典，如Hedonometer (Dodds et al. 2011), VADER (Hutto and Gilbert 2014), 和LIWC能计算出文本中含有的情感信息。情感分析经常使用词袋法（Bag of Words）计算文本中的情感。但是该方法不考虑词语在文本中的顺序，而顺序是能影响情感信息的。尽管词典法对构建构念和比较构念比较简单，但基于人工编码的机器学习方法(e.g.,Borah and Tellis 2016; Hartmann et al. 2018; Hennig-Thurau, Wiertz, and Feldhaus 2015)更适合做精准概念的度量(Hartmannetal.2019)，尤其是这个领域是不常见或者比较复杂。</p>
<p>如果研究者想挖掘出实体之间的关系就用到word2vec或者词嵌入word embedding (Mikolov et al. 2013)，这两种方法都把每一个词分配一个长度固定的向量，我们知道向量可以在空间中比较，如cos余弦计算词语之间的相似度。</p>
<h3 id="2-话题模型">2. 话题模型</h3>
<p>实体抽取有两个大问题:</p>
<ul>
<li>维度太高，经常能从文本数据中抽取出数千个实体</li>
<li>实体的解读与解释</li>
</ul>
<p>话题模型更多的是对文本的解释，而非预测(e.g., Berger and Packard 2018; Tirunillai and Tellis 2014)。话题模型最常见的是LDA，某个词以一定的概率属于话题，文本以多种话题按照一定的概率分布。</p>
<p>LDA是无监督学习，需要事先指定话题数，输出的结果是不同的类分布，需要研究者解读每一个话题到底是什么题材内容。话题区间范围一般建议结合统计分布和研究者经验确定话题数目。</p>
<h3 id="3-关系抽取">3. 关系抽取</h3>
<p>关系抽取可以用实体共现性来捕捉(e.g., Boghrati and Berger 2019; Netzer et al. 2012; Toubia and Netzer 2017).但营销学者对诸如产品、属性和情感之间的关系感兴趣。例如，研究者对评论中是否提及某个产品属性的问题。Feldman et al. (2015) and Netzer et al. (2012) 提供了药物与不良反应之间的关系来识别问题药物。</p>
<p>关系抽取用的实现大多思路不难，多是一些人工规则的设计，如产品“Ford”、属性“oid consumption”和问题“excessive”共现性来捕捉福特车耗油。然而这样的方法需要手写复杂的规则，现在变得慢慢不流行。</p>
<p>更通用的方法是机器学习法，人工标注相关的数据，训练机器学习模型。这类实现方法需要大量的人工标注，一种可用的工具是Stanford Sentence and Grammatical Dependency Parser (<a href="http://nlp.stanford.edu:8080/parser/">http://nlp.stanford.edu:8080/parser/</a>) 。该工具可以识别词语依存关系，如“the hotel was very nice,” ，“nice” 与 “hotel”相关联，说明这个hotel挺nice的。</p>
<p>当然，也可以扩文本之间做比较，这里不过多赘述。</p>
<br>
<h2 id="文本分析指标">文本分析指标</h2>
<p>早起市场营销，如在线评论领域的文本分析指标多为</p>
<ul>
<li>数量(e.g., Godes and Mayzlin 2004; Moe and Trusov2011)</li>
<li>效价，评论评分t (e.g., Godes and Silva 2012; Moe and Schweidel 2012; Ying, Feinberg and Wedel 2006)·</li>
<li>方差，如信息墒(e.g., Godes and Mayzlin 2004).</li>
</ul>
<p>然而如今这些指标经常忽略了文本的丰富度。以下几种是更好用的指标</p>
<h3 id="1-count-measure">1. count measure</h3>
<p>使用相应的词典，统计实体出现次数，这样可以对不同实体进行比较(Berger and Milkman 2012; Borah and Tellis 2016; Pennebaker et al. 2015; Schweidel and Moe 2014; Tirunillai and Tellis 2014)。缺点是更长的文本通常含有更多的实体(的数量)，还有一个局限就是某些实体会比其他实体更多的出现，如“电脑”商品的在线评论中“电脑”出现次数会远多于其他词。</p>
<h3 id="2-相似度">2. 相似度</h3>
<p>在某些情况下，研究者更对文档之间的相似度感兴趣(e.g., Ludwig et al. 2013).。两个广告之间的相似程度如何？两首歌的歌词相似程度多少？相似度的计算方法有cos余弦相似、jaccard相似 (e.g., Toubia and Netzer 2017)</p>
<h3 id="3-可读性">3. 可读性</h3>
<p>同样的意思可以用不同的难度的词汇去表达，造成阅读的难易程度。可读性反映了作者的内容复杂度和读者的阅读难度。(e.g., Ghose and Ipeirotis 2011)。</p>
<p>常见的可读性算法有Flesch–Kincaid和the simple measure of gobbledygook (SMOG)。可阅读性经常将得分设置到1-12分之间，在美国学校里阅读理解成绩水平得分就是1-12分。</p>
<br>
<h2 id="未来营销研究新机会">未来营销研究新机会</h2>
<h3 id="1-借鉴融合">1. 借鉴融合</h3>
<p>文本分析在营销界中可以起到促进各个子领域交叉授粉，避免同质化学术繁殖。品牌社群是最早被来自社会学背景的研究者发现和研究的(Mun˜iz and O’Guinn 2001)。随后，定性和定量范式研究者逐渐界定了概念、识别了社群中的地位和作用(e.g., Mathwick, Wiertz, and De Ruyter 2007)。文本分析可以让学者研究如何在更大尺度层面去量化社群中的消费者沟通行为。例如，社群中不同权利地位的人使用的语言是否存在差异，使用不同动态指标预测社群产出情况(e.g., Manchanda, Packard, and Pattabhitamaiah 2015)。研究人员也可以追踪到底哪类用户发明新用语，又是哪些人跟随使用这些新用语。研究可以检查人们是否随着时间的开始使用社群语言，并根据他们对群体语言的适应程度来预测哪些人可能会留下或离开(Danescu-Niculescu-Mizil et al. 2013; Srivastava and Goldberg 2017)。定量或机器学习的研究人员可能会发现社群中最常讨论的主题，以及这些主题如何随着社群的发展而动态变化。阐述性范式的研究人员可能会研究这些话语在概念上如何关联，以找到是哪些潜在社区准则促成成员留下。然后，营销战略领域的研究人员可能会使用或开发词典来将这些社区与公司绩效联系起来，并为公司提供有关如何保持不同品牌社区（或环境）成员参与度的指导。</p>
<p>不同子领域的营销学者会使用不同的技能集，研究不同的文本传播类型。消费者与消费者(consumer-to-consumer)之间的沟通主要研究的是两者间的行为，而营销战略学者倾向于研究企业与消费者、企业与企业之间的沟通。不同营销子领域的学者间的合作，能帮助他们结合不同的文本数据源。</p>
<p>它山之石可以攻玉，例如营销战略学者借鉴经济学领域的交易理论(代理理论)来研究企业间的关系，但现在营销战略相关发现可以用于研究消费者之间的沟通行为。</p>
<h3 id="2-扩展文本领域研究">2. 扩展文本领域研究</h3>
<p>我们希望看到更多的消费者-企业间的沟通的研究(e.g., Packard and Berger 2019a; Packard, Moore, and McFerran 2018)，这些沟通经常都是非约束非的，这其中蕴涵着有价值的关系数据，可以有很多应用价值。</p>
<p>而在企业间沟通方面，大多数侧重于沟通(Communication)的角色(e.g., Palmatier, Dant, and Grewal 2007)。然而在文本数据上，在词语层面上，有相关研究很少。例如很少有研究销售人员与消费者之间的信息交换类型。</p>
<p>类似的，在会计金融领域有很多人采用年报作为数据源(for a review, see Loughran and McDonald [2016])，但营销学者很少注意到公司与投资者之间的存在的研究机会。大多数学者只是用来研究如何预测公司股价或者开发新的公司市值估值模型。鉴于最近有兴趣将营销相关活动与公司估值联系起来（例如McCarthy和Fader 2018），这可能是一个需要进一步追求的领域。公司的所有沟通，包括年度报告等必需的文件，或广告和销售互动等任意形式的沟通，都可以用做观测变量，例如市场定位，营销能力，营销领导风格，甚至公司的品牌个性。</p>
<p>在消费者、企业、社会之间也存在着大量的研究机会。有关企业文化(规范)的数据，例如新闻媒体和政府报告，可能有助于阐明影响市场的力量。例如，要了解Uber这样的公司如何抵抗市场变化，可以研究市政厅会议的笔录和其他听取并回答市民意见的政府文件。诸如#metoo和#blacklivesmatter之类的社会运动形式的外来冲击影响了营销传播和品牌形象。未来研究的一种潜在途径是采用文化品牌化方法（Holt，2016年），研究不同公众如何定义，塑造和倡导市场中的特定含义。公司及其品牌并不是凭空存在的，它们独立于其经营所在的社会。但是，在市场营销方面的有限研究已经考虑了如何使用文本在社会层面上得出公司的意图和行为。例如，学者们展示了诸如locavores（这类人只食用当地产的食品；Thompson和Coskuner-Balli，2007年），时尚达人（Scaraboto和Fischer，2012年）以及博主（McQuarrie，Miller和Phillips，2012年），这几类人群塑造了市场。通过文本分析，可以衡量和更好地理解这些社会群体的意图对市场的影响。</p>
<p>未来研究的另一个机会是使用文本数据来研究文化和文化成功。跨学科研究了文化传播，艺术变革和创新传播等主题，目的是理解某些产品为何成功而其他产品却失败的原因(Bass 1969; Boyd and Richerson 1986; Cavalli-Sforza and Feldman 1981; Rogers 1995; Salganik, Dodds, and Watts 2006; Simonton 1980). While success may be random (Bielby and Bielby 1994; Hirsch 1972),可能的原因是没把握好消费者的口味偏好 (Berger and Heath 2005)。</p>
<p>通过在大范围更快速度地量化书籍、电影或其他文化物品，研究人员可以测量具体的叙事是否更具吸引力，更具情感波动性的电影是否更成功，使用某些语言特征的歌曲是否更有可能登上广告牌榜首 ，以及唤起特定情感的书籍是否售出更多。尽管没有像社交媒体数据那样广泛可用，但最近越来越多的文化项目数据可用。诸如Google Books语料库（Akpinar&amp;Berger 2015），歌曲歌词网站或电影脚本数据库等数据集可提供大量信息。此类数据可以使叙事结构分析，以识别&quot;基本情节&quot;'(Reagan et al 2016; Van Laer et al2019）。</p>
<h3 id="3-用文本测量关键构念">3. 用文本测量关键构念</h3>
<p>在个体层面上，情感和满意度可能是最常用的测量变量(e.g., Bu¨schken and Allenby, 2016; Homburg, Ehm, and Artz 2015; Herhausen et al. 2019; Ma, Baohung, and Kekre 2015; Schweidel and Moe 2014)其他从文本数据中提取的测量变量包括语言的真实性authenticity和情绪性emotion(e.g., Mogilner, Kamvar, and Aaker 2011; Van Laer et al. 2019)。也有心理学测量变量，如性格类型presonality type和建构水平construal level(Kern et al. 2016; Snefjella and Kuperman 2015),这都是潜在的可以借鉴应用到消费者话语研究的。</p>
<p>未来个体层面的研究会考虑社会认同和社会参与度， 研究人员目前对消费者已经可以测量情绪的积极或消极，但他们才刚刚开始探索重点（Rocklage&amp;Fazio 2015），信任，承诺和其他模式属性。为此，利用语用学的语言理论并研究语义学上的阶段性可能是有用的（Villarroel et al2017）。一旦开展了此类工作，我们建议研究人员仔细验证建议的方法，以按照上述方法测量此类构念。</p>
<p>在公司层面，已在公司生产的文本（例如年度报告和新闻稿）中确定了一些构念。诸如市场定位、广告目标、未来定位、欺骗意图、公司重点和创新定位均已使用此材料进行了测量和验证（详见Web Appendix Table 1)。未来企业层面的营销研究需要重新界定和丰富战略定位的测量(创新定位、市场驱动vs市场驱动定位)。组织文化、结构和能力由于难于测量，可以从企业、雇员和外部利益相关者的文本数据来测量(see Molner, Prabhu, and Yadav [2019])。类似的，企业领导层的思维和管理风格可以从他们怎么说来侦测(see Yadav, Prabhu, and Chandy [2007])。公司的绩效指标可以通过之前的公司相关文本数据进行预测(e.g., Herhausen et al. 2019)。从这个角度看，我们有很多使用数据的新机会。例如，从企业内部员工的相关信息(LinkedIn 和 Glassdoor)可以测量基于员工的品牌价值。最后，企业语言的更多微妙属性，如冲突、歧义、开放性都可以为管理学增加新发现。再比如，使用一些非正式文本数据，如员工邮件记录、销售通话记录或消费者服务中心通话记录。</p>
<p>营销工作较少在社会或文化层面上衡量结构，但这种工作趋向于集中于公司如何适应现有意义和规范的文化结构。例如，制度逻辑和合法性是通过分析媒体文本来衡量的，Berger等人的品牌公众崛起也增加了文化中对品牌的讨论（Arvidsson and Caliandro 2016）。在文化层面，营销研究可能会继续关注企业如何适应文化环境，但也可能会关注文化环境如何影响消费者。例如，对文化不确定性，风险，敌意和变化的测量可以理解文化对消费者和企业影响。通过文本衡量开放性和多样性也是适时探索的主题，并且可能会促进测量方面的创新，例如侧重于语言多样性。通过文本分析，也可以更好地理解重要的文化论述，例如围绕债务和信用的语言。与性别和种族有关的语言的测量可能有助于探索多样性和包容性，从而使公司和消费者对来自不同作家的文本做出反应。</p>
<br>
<h2 id="机遇与挑战">机遇与挑战</h2>
<p>本节是从技术角度出发探讨文本分析方法的新机遇与挑战。</p>
<h3 id="1-机遇">1. 机遇</h3>
<p>虽然我们的讨论集中于文本内容，但文本只是非结构化数据的一个示例，而音频，视频和图像则是其他示例。社交媒体帖子通常将文字与图片或视频结合在一起。平面广告通常会在精心构造的视觉效果上覆盖文字。尽管电视广告可能不会在屏幕上包含文本，但它可能具有音频轨道，其中包含与视频同步进行的文本。</p>
<p>直到最近，文本数据一直受到最多关注，这主要是由于存在提取有意义特征的工具。也就是说，诸如Praat（Boersma 2001）之类的工具允许研究人员从音频中提取信息（Van Zant和Berger 2019）。音频数据相对于文本数据的优势之一是，它以音调和语音标记的形式提供了丰富的内容，可以添加到所表达的实际单词中（Xiao，Kim和Ding 2013）。这使研究人员不仅可以研究说的内容，还可以研究说的方式，检查音调，语气以及其他声音或副语言特征如何塑造行为。</p>
<p>同样，最近的研究开发了分析图像的方法（Liu，Xuan等人2018），既可以表征图像的内容，也可以识别图像中的特征。文本和图像组合的影响的研究很少（例如Hartmann等人2019）。例如，可以根据图像的颜色来描述图像。在印刷广告的上下文中，当与特定调色板的图像结合使用时，文本内容的说服力可能会降低，而其他调色板可能会增强文本的说服力。与简单的图像结合使用，文本的重要性可能会非常明显。但是，当文本与复杂的图像配对时，观看者可能会主要关注图像，从而减少了文本的影响。在这种情况下，作为广告精美图片一部分的法律披露可能不会引起受众的注意。</p>
<p>当文本加到视频中时，其扮演的角色也引发了类似的问题。研究已经提出了表征视频内容的方法（例如Liu等人2018）。除了包含视频脚本之外，文本还可能在视觉上出现。除了在其中显示文本的音频上下文之外，其影响可能还取决于同时显示的视觉效果。也可能是其在视频中相对于视频开头的位置可能会降低其效果。例如，由于多种原因，在视频中稍后说出的情感性文字内容可能缺乏说服力（例如，观众在讲出文字时可能已经不再注意了）。或者，与音频配对的视觉效果可能对观众更具吸引力，或者视频的先前内容可能耗尽了观众的注意力资源。正如我们对图像和视频的讨论所暗示的那样，文本只是营销传播的一个组成部分。未来的研究必须调查其与其他特征的相互作用，不仅包括其出现的内容，还包括其出现的时间（Kanuri，Chen和Sridhar 2018），以及在哪种媒体上。</p>
<h3 id="2-挑战">2. 挑战</h3>
<p>尽管机会众多，但文本数据也带来了各种挑战。首先是面临可解释性的挑战。在某些方面，文本分析似乎提供了衡量行为过程的更客观的方法。例如，一个人可以计算第一人称“ I”和第二人称“ you”。第一人称在文本中越多，说明这个人更关心自己 （Berger 2014），这种量化词语数量的方法提供看起来更像很客观像真理的东西。但是，尽管该过程的一部分肯定是更客观的（例如，不同类型的代词的数量），但此类度量与基础过程（即，关于口碑传播者的说法）之间的联系仍然需要一定程度的解释。其他潜在的行为方式甚至更难以计数。例如，虽然某些词（例如“love”）通常是积极的，但它们的积极性可能在很大程度上取决于特质个体差异和上下文。</p>
<p>更普遍地，在理解文本信息出现的上下文中存在挑战和机遇。例如，餐厅评论可能包含很多否定词，但这是否意味着该人更讨厌食物，服务或餐厅？包含更多第二人称代词（“ you”）的歌曲可能会更成功（Packard and Berger 2019b），但要了解原因，了解歌词是否使用“ you”作为句子的主语或宾语是有帮助的。上下文提供了含义，而且越多的人不仅了解正在使用的单词，而且还了解如何使用它们，则越容易获得新知识新洞察。基于词典工具特别容易对使用场景变化特别敏感，建议尽可能使用针对特定研究环境创建的词典（例如，Loughran和McDonald [2016]开发的财务情感工具）。</p>
<p>数据隐私挑战是一个重大问题。研究通常使用从网站上抓取的在线产品评论和销售排名数据（Wang，Mai和Chiang 2013）或从社交媒体平台上抓取的消费者的活动数据（Godes和Mayzlin 2004；Tirunillai和Tellis 2012）。尽管这种方法很普遍，但是法律问题已经开始出现。LinkedIn未能成功阻止一家初创公司抓取用户公共资料中发布的数据（Rodriguez，2017）。虽然根据法律可能允许收集公共数据，但它可能与那些拥有研究人员感兴趣的数据的平台的服务条款相冲突。</p>
<p>随着从数字化文本和其他形式的数字化内容（例如图像，视频）中提取见解的兴趣日益浓厚，研究人员应确保他们已获得进行工作的适当权限。不这样做可能导致开展此类项目变得更加困难。一种潜在的解决方案是创建一个学术数据集，例如Yelp提供的数据集（https://www.yelp.com/dataset），该数据集可能包含过时或经过清理的数据，以确保不会产生 公司的运营或用户隐私风险。</p>
<p>对数字化文本以及其他用户创建的内容的收集和分析，也引发了有关用户对隐私的期望的问题。随着欧盟《通用数据保护条例》的发布以及有关Cambridge Analytica从Facebook收集用户数据的能力的启示，研究人员必须注意其工作的潜在滥用。我们还应考虑超出用户生成内容的预期用途的程度。例如，尽管用户可能会理解，Facebook采取的行动可能会导致他们针对与其互动的品牌进行专门的广告宣传，但他们可能无法预期其Facebook和Instagram活动的全部内容都将被用于构建其他品牌可能使用的心理特征。了解消费者关于其在线行为及其提供的文字的隐私偏好可以为从业者和研究人员提供重要的指导。未来研究的另一个亮点是可以提高营销的精确度，同时最大限度地减少对隐私的侵犯（Provost et al 2009）。</p>
<br>
<h2 id="总结">总结</h2>
<p>沟通是营销的重要方面，涵盖组织与合作伙伴之间，企业与消费者之间以及消费者之间的沟通。文本数据包含这些交流的详细信息，并且通过自动文本分析，研究人员已准备好将这种原始材料转换成有价值的见解。文本数据使用方面的许多最新进展是在营销之外的领域开发的。当我们展望未来和营销人员的角色时，这些最新进展应作为示例。营销人员在消费者，公司和组织之间的接口上处于有利位置，可以利用和改进工具来提取文本信息，以解决当今企业和社会所面临的一些关键问题，例如错误的信息滥用。营销提供了一种宝贵的观点，对这次对话至关重要，但这只有通过更广阔的视野，打破理论和方法论的孤岛，并与其他学科合作，我们的研究才能吸引尽可能多的受众来影响公众话语。我们希望这个框架能够鼓励人们对界定营销的界限进行反思，并为未来的突破性见解开辟道路。</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>文本分析在经管领域中的应用概述</title>
      <link>https://hidadeng.github.io/blog/review_about_the_application_of_text_mining_in_management_science/</link>
      <pubDate>Tue, 23 Nov 2021 21:30:10 +0600</pubDate>
      
      <guid>/blog/review_about_the_application_of_text_mining_in_management_science/</guid>
      <description>在大数据的今天，通过互联网超文本链接，无数的**个人、团体、公司、政府**等不同组织形态的主体均深深嵌入到互联网世界，在网络世界中留下了大量的文本。**社会、管理、经济、营销、金融**等不同学科，均可以研究网络上海量的文本，扩宽的研究对象和研究领域。下面大部分内容是三份文档翻译汇总而来，我觉得讲的挺明白的，其中加入了我的一点点理解和扩充</description>
      <content:encoded><![CDATA[<p>在大数据的今天，通过互联网超文本链接，无数的<strong>个人、团体、公司、政府</strong>等不同组织形态的主体均深深嵌入到互联网世界，在网络世界中留下了大量的文本。<strong>社会、管理、经济、营销、金融</strong>等不同学科，均可以研究网络上海量的文本，扩宽的研究对象和研究领域。下面大部分内容是三份文档翻译汇总而来，我觉得讲的挺明白的，其中加入了我的一点点理解和扩充。</p>
<h2 id="一文本产生及其作用方式">一、文本产生及其作用方式</h2>
<ul>
<li>How text <strong>reflects</strong> its producer？</li>
<li>How text <strong>impacts</strong> its receiver？</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">graph LR
   Text_Producer --&gt; Text
   Text --&gt; Text_Receiver
   Text_Receiver --&gt;Text
   Text --&gt; Text_Producer
</code></pre></div><p>文本信息的==生产者producer== 与 ==消费者receiver==，涵盖 ==个人、公司(组织)、国家(社会)==三个层面。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">graph LR
    Consumers --&gt; Firms
    Consumers --&gt; Investors
    Consumers --&gt; Society
    Firms --&gt; Consumers
    Firms --&gt; Investors
    Investors --&gt; Firms
    Investors --&gt; Society
    Firms --&gt; Society
    Society --&gt; Investors
    Society --&gt; Consumers
    
</code></pre></div><p><img loading="lazy" src="img/%e7%94%9f%e4%ba%a7%e4%b8%8e%e6%b6%88%e8%b4%b9.png" alt=""  />
</p>
<blockquote>
<p>需要注意的是文本的==反映Reflects==和==影响Impacts==并不是非此即彼，往往会同时起作用。</p>
</blockquote>
<table>
<thead>
<tr>
<th>&mdash;</th>
<th>研究目的</th>
<th>自变量</th>
<th>因变量</th>
<th>因变量</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Reflects</strong></td>
<td>文本可以反映<strong>producer</strong>的一些信息，帮助研究者理解producer。<br>例如试图挖掘producer的个性personality或属于什么社会团体。</td>
<td>了解公司的品牌个性；<br>年报也会有未来业绩表现的有价值线索；<br>消费者们在品牌社区的言语能更深的投射出消费者对品牌的态度；<br>而更宏大的层面，文本也能反映出文化差异。<br>了解消费者是否喜欢新产品，消费者如何看待品牌，消费者最看重什么</td>
<td>文本</td>
<td>文本</td>
</tr>
<tr>
<td><strong>Affects</strong></td>
<td>知道文本如何影响<strong>receiver</strong>，receiver会有什么样的行为和选择。</td>
<td>检验文本是否以及如何导致消费者诸如购买、分享和卷入行为。<br>广告会塑造消费者的消费行为<br>消费者杂志会扭曲消费者产品分类感知<br>电影剧本会影响观众的反应</td>
<td>文本消费者</td>
<td>文本消费者</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="二如何使用文本数据">二、如何使用文本数据</h2>
<table>
<thead>
<tr>
<th>&mdash;</th>
<th>Reflects</th>
<th>Affects</th>
<th>目的</th>
<th>应用</th>
<th>难点</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Predict</strong></td>
<td>预测 <strong>producer</strong>的状态、特性、性格等</td>
<td>预测 <strong>receiver</strong>阅读、分享和购买行为</td>
<td>研究人员不怎么关系任意的文本特质，他们更关心预测的表现。</td>
<td>什么消费者最喜欢贷款;<br>什么电影会大火;<br>未来股市走向;<br></td>
<td>文本数据可以生成成千上万的特征(相当于变量x1，x2&hellip;xn)，而文本数据记录数甚至可能少于特征数。<br>为了解决这个为题，使用新的特征分类方法，减少特征数量，又有可能存在拟合问题。</td>
</tr>
<tr>
<td><strong>Understanding</strong></td>
<td>为什么当人们压抑的时候会使用特殊人称。</td>
<td>来理解为何带有情绪的文本会更容易被阅读和分享</td>
<td>理解为什么事情发生以及如何发生的<br/>这类研究往往会用到心理学、社会学的方法，旨在理解文本的什么特征会导致什么后续结果，以及为什么产生这样的后果。</td>
<td>消费者怎样表达会如何影响口碑;<br>为何某些推文会被挑中分享？<br> 歌曲为何变火？<br> 品牌如何让消费者忠诚？</td>
<td>找出观测数据背后的因果关系。相应的，该领域的工作可能会强调实验数据，以允许对关键的独立变量进行操作。<br>另一个挑战是解释文本特征之间的关系。</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="三文本信息的指标">三、文本信息的指标</h2>
<p>粗略的分，文本信息可以分为定性与定量两种类型</p>
<table>
<thead>
<tr>
<th style="text-align:left">定性/量</th>
<th>分析方法</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>定性（text as text）</strong></td>
<td>质性（扎根）</td>
<td>依靠研究者领域知识，可以对少量的数据做出深刻洞见。</td>
<td>难以应对大规模数据；<br>编码过程并不能保证唯一；</td>
</tr>
<tr>
<td style="text-align:left"><strong>定量 textual data(text as data)</strong></td>
<td>明显的文本特征，如词频、可阅读性</td>
<td>标准如一;<br>适合大规模文本挖掘；<br>纷繁复杂中涌现出潜在规律</td>
<td>需要破坏文本的结构，丧失了部分信息量</td>
</tr>
</tbody>
</table>
<p>早先的营销领域，如在线评论文本分析指标多为</p>
<ul>
<li><strong>数量，如文本长度</strong>(e.g., Godes and Mayzlin 2004; Moe and Trusov2011)</li>
<li>**情感得分(效价，评论评分) **(e.g., Godes and Silva 2012; Moe and Schweidel 2012; Ying, Feinberg and Wedel 2006)·</li>
<li><strong>方差，如信息墒</strong>(e.g., Godes and Mayzlin 2004).</li>
</ul>
<p>然而如今这些指标经常忽略了文本的丰富度。以下几种是更好用的指标</p>
<table>
<thead>
<tr>
<th style="text-align:left">指标</th>
<th style="text-align:left">功能</th>
<th style="text-align:left">补充</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>实体词词频</strong></td>
<td style="text-align:left">使用相应的实体词典，统计实体出现次数，这样可以对不同实体进行比较</td>
<td style="text-align:left">更长的文本通常含有更多的实体(的数量)；<br>还有一个局限就是某些实体会比其他实体更多的出现，如“电脑”商品的在线评论中“电脑”出现次数会远多于其他词。</td>
</tr>
<tr>
<td style="text-align:left"><strong>相似度</strong></td>
<td style="text-align:left">文档之间的相似度感兴趣。<br>如两个广告之间的相似程度如何？<br>两首歌的歌词相似程度多少？</td>
<td style="text-align:left">相似度的计算方法有<br>cos余弦相似<br>jaccard相似</td>
</tr>
<tr>
<td style="text-align:left"><strong>可读性</strong></td>
<td style="text-align:left">同样的意思可以用不同的难度的词汇去表达，造成阅读的难易程度。可读性反映了作者的内容复杂度和读者的阅读难度。</td>
<td style="text-align:left">常见的可读性算法有Flesch–Kincaid和the simple measure of gobbledygook (SMOG)。<br>可阅读性经常将得分设置到1-12分之间，在美国学校里阅读理解成绩水平得分就是1-12分。</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="四文本分析步骤">四、文本分析步骤</h2>
<p><img loading="lazy" src="img/%e5%88%86%e6%9e%90%e6%ad%a5%e9%aa%a4.png" alt=""  />
</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>步骤</th>
<th>解释</th>
<th>中文</th>
<th>英文</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><strong>读取数据</strong></td>
<td>数据一般存储于不同的文件夹不同文件内，需要将其导入到计算机</td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td><strong>分词</strong></td>
<td>导入到计算的文本是字符串数据，需要整理为更好用的列表</td>
<td>例如“我爱你中国”分词后<br>得到[&ldquo;我&rdquo;, &ldquo;爱&rdquo;, &ldquo;你&rdquo;, &ldquo;中国&rdquo;]</td>
<td>&ldquo;I love China&quot;分为<br>[&ldquo;I&rdquo;, &ldquo;love&rdquo;, &ldquo;China&rdquo;]</td>
</tr>
<tr>
<td>3</td>
<td><strong>剔除符号和无意义的停止词</strong></td>
<td>为了降低计算机运行时间，对分析结果影响较小的字符，诸如符号和无意义的词语需要剔除掉</td>
<td>如“的”，“她”， ”呢”， “了”</td>
<td>&ldquo;is&rdquo; , &ldquo;a&rdquo;, &ldquo;the&rdquo;</td>
</tr>
<tr>
<td>4</td>
<td><strong>字母变小写，词干化</strong></td>
<td>同义词归并，同主体词归并</td>
<td>“中铁”，“中国铁建”，“中铁集团”都可以归并为“中铁”</td>
<td>先变为小写，这样“I”和“i”都归并为“i”；<br>“was”，“are”，“is”都归并为“be”</td>
</tr>
<tr>
<td>5</td>
<td><strong>构建文档词频矩阵</strong></td>
<td>使用一定的编码方式，即用某种方式表示文本。常见的有词袋法、tf-idf；<br>可以使用scikit-learn构建文档词频矩阵，但中英文略有区别，需要注意</td>
<td>“我爱你中国”需要先整理为“我 爱 你 中国”</td>
<td>“I love China”</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="五文本分析技术对比">五、文本分析技术对比</h2>
<p><img loading="lazy" src="img/%e5%88%86%e6%9e%90%e6%96%b9%e6%b3%95.png" alt=""  />
</p>
<p>从左向右，自动化程度越来越高，人工介入的越来越少</p>
<table>
<thead>
<tr>
<th>技术</th>
<th>描述</th>
<th>优点</th>
<th>缺点</th>
<th>常被应用(领域)</th>
<th>软件</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>主题分析</strong>Thematic analysis</td>
<td>需要有经验的人员基于自身经验和李俊杰，对研究的数据进行挖掘。编码过程为迭代进行</td>
<td>使用参与者自己的话语或者构念来挖掘数据，对少量文本理解的更深入</td>
<td>属于时间、劳动密集型任务，不适合大规模数据。<br>由于不同的编码人员有不同的经历和偏好，编码过程的标准不可靠</td>
<td>社会学、管理学</td>
<td>Nvivo；</td>
</tr>
<tr>
<td><strong>内容分析/基于字典方法</strong></td>
<td>统计文本中词语/词组的出现频率</td>
<td>允许对研究的数据进行定量分析</td>
<td>采用的词典应尽量与研究问题适应，词典适配性问题突出</td>
<td>管理学</td>
<td>LIWC、Nvivo、DICTION；</td>
</tr>
<tr>
<td><strong>词袋法</strong>（Bag of words）</td>
<td>将文本字符串转为计算机能理解的数字化向量</td>
<td>编码标准稳定简单，具有统计学特性，扩展性强</td>
<td>编码过程忽略词语的先后顺序</td>
<td>管理学</td>
<td>Python的scikit-learn、gensim、nltk等；R</td>
</tr>
<tr>
<td><strong>监督学习</strong>(Supervise models),如SVM、Bayes、Logistic Regression</td>
<td>研究者要知道输入数据X和标签y；需要核实的模型需要X和y之间的关系和规律</td>
<td>允许事先定义编码规则(如选择词袋法还是tfidf)；逻辑简单</td>
<td>需要高质量的标注数据(工作量大)；you与特征词太多，训练的模型很容易过拟合。</td>
<td>计算机学、政治学、管理学</td>
<td>Python的scikit-learn、gensim、nltk等；R（topicmodels， stm）</td>
</tr>
<tr>
<td><strong>无监督学习</strong>(Kmeans、 LDA话题模型)</td>
<td>使用聚类、话题分析，让计算机自动对数据进行分组</td>
<td>在没有人工标注的情况下，加速了数据的“标注”或“分类”</td>
<td>“标注”是机器按照数字特征进行的分组，需要研究者解读才可以赋予“标准“意义；训练过程需要大量的调参</td>
<td>计算机学、政治学、管留学</td>
<td>Python的scikit-learn、gensim、nltk等；R（topicmodels， stm）</td>
</tr>
<tr>
<td><strong>自然语言处理</strong></td>
<td>按照人类对语言的理解进行建模，考虑词语顺序</td>
<td>计算机自动化；可分析语义</td>
<td>大多数模型是人类无法解读的黑箱；<br>虽然代码编程量小，但训练代码耗时巨大</td>
<td>计算科学；市场营销；心理学</td>
<td>pytorch、tensorflow</td>
</tr>
</tbody>
</table>
<p>据被压缩成词组频数，定性的文本数据转化为定量的频数。本课程中会涉及到的内容</p>
<ul>
<li><input disabled="" type="checkbox"> Thematic Analysis 定性</li>
<li><input disabled="" type="checkbox"> Content Analysis</li>
<li><input checked="" disabled="" type="checkbox"> Dictionary</li>
<li><input checked="" disabled="" type="checkbox"> Bag of words 词袋法</li>
<li><input checked="" disabled="" type="checkbox"> Supervised ，监督学习 文本分类问题</li>
<li><input checked="" disabled="" type="checkbox"> Unsupervised，如非监督LDA话题模型</li>
<li><input disabled="" type="checkbox"> Natural language processing</li>
</ul>
<p><br><br></p>
<h2 id="应用案例">应用案例</h2>
<h3 id="众筹融资成功率与语言风格的说服性-基于kickstarter的实证研究">众筹融资成功率与语言风格的说服性-基于Kickstarter的实证研究</h3>
<p>摘要：众筹融资效果决定着众筹平台的兴衰。 众筹行为很大程度上是由投资者的主观因素决定的，而影响主观判断的一个重要因素就是语言的说服性。 而这又是一种典型的用 户产生内容（UGC），项目发起者可以采用任意类型的语言风格对项目进行描述。 不同的语 言风格会改变投资者对项目前景的感知，进而影响他们的投资意愿。</p>
<p>首先，依据 Aristotle 修 辞三元组以及 Hovland 说服模型，采用扎根理论，将众筹项目的语言说服风格分为 5 类：诉诸可信、诉诸情感、诉诸逻辑、诉诸回报和诉诸夸张。</p>
<p>然后，==借助文本挖掘方法，构建说服风格语料库，并对项目摘要进行分类。==</p>
<p>最后，建立语言说服风格对项目筹资影响的计量模型，并 对 ==Kickstarter 平台上的 128345 个项目进行实证分析==。 总体来说，由于项目性质的差异，不同 的项目类别对应于不同的最佳说服风格。</p>
<p>关键词：众筹 融资 语言风格 说服性 投资意愿</p>
<p><img loading="lazy" src="img/%e4%bc%97%e7%ad%b9%e8%af%ad%e8%a8%80%e9%a3%8e%e6%a0%bc.png" alt=""  />
</p>
<h3 id="copycats-vs-original-mobile-apps">Copycats vs. Original Mobile Apps</h3>
<p>摘要: 尽管移动应用程序市场的增长为移动应用程序开发人员创新提供了巨大的市场机会和经济诱因，但它也不可避免地刺激了模仿者开发盗版软件。原始应用的从业人员和开发人员声称，模仿者窃取了原始应用的想法和潜在需求，并呼吁应用平台对此类模仿者采取行动。令人惊讶的是，很少有严格的研究来分析模仿者是否以及如何影响原始应用的需求。</p>
<p>==进行此类研究的主要威慑因素是缺乏一种客观的方法来识别应用程序是模仿者还是原创者。通过结合自然语言处理，潜在语义分析，基于网络的聚类和图像分析等机器学习技术，我们提出了一种将应用识别为原始或模仿者并检测两种模仿者的方法：欺骗性和非欺骗性。==</p>
<p>根据检测结果，我们进行了经济计量分析，以确定五年间在iOS App Store中发布的==5,141个开发人员的10,100个动作游戏应用程序==样本中，模仿应用程序对原始应用程序需求的影响。我们的结果表明，特定模仿者对原始应用需求的影响取决于模仿者的质量和欺骗程度。高质量的非欺骗性复制品会对原件产生负面影响。相比之下，低质量，欺骗性的模仿者正面影响了对原件的需求。</p>
<p>结果表明，从总体上讲，模仿者对原始移动应用程序需求的影响在统计上是微不足道的。==我们的研究通过提供一种识别模仿者的方法==，并提供模仿者对原始应用需求的影响的证据，为越来越多的移动应用消费文献做出了贡献。</p>
<p><img loading="lazy" src="img/copycat.png" alt=""  />
</p>
<h3 id="lazy-prices">LAZY PRICES</h3>
<p>摘要: 使用1995年-2014年所有美国公司季度和年度申报的完整历史记录，研究发现当公司对报告进行积极更改时，这种行为蕴含着公司未来运营的重要信号。</p>
<p>财务报告的语言和结构的变化也对公司的未来收益产生重大影响：做空&quot;变化&quot;的公司（持有的公司，如果其报告发生变化的，做空该公司股票），买入“不变化”的公司，使用这样的投资组合策略，在2006年的每月alpha值高达1.88%的收益（每年超过22％）。报告中涉及执行官（CEO和CFO）团队的话语风格的变化，或者有关诉讼(风险部分)的话语的变化，都对投资的未来收益有重要作用。</p>
<p>研究发现，对10-K的变化可以预测未来的收益、获利能力、未来的新闻公告，甚至未来的公司破产。同时，不做任何变化的公司将获得显著的异常收益。与资产价格典型的反应不足研究不同，我们发现没有任何与这些变化相关的公告效应–仅在后来通过新闻，事件或收益披露信息时才产生回报–暗示投资者并未注意到整个公众领域的这些变化。</p>
<p><img loading="lazy" src="img/lazyprice1.png" alt=""  />
</p>
<blockquote>
<p>纽约时报在2010年4月23日发了一条FDA将有对输液泵(infusion pumps)更严格对审批管理规定的新闻，新闻中提到了Baxter公司。新闻公布当天，Baxter股价大跌。</p>
<p>10天后的（2010年5月4日），Baxter宣布召回问题的输液泵产品，股价当天再次大跌。</p>
</blockquote>
<p><img loading="lazy" src="img/lazyprice2.png" alt=""  />
</p>
<h2 id="相关文献">相关文献</h2>
<blockquote>
<p>[1]Berger, Jonah, Ashlee Humphreys, Stephan Ludwig, Wendy W. Moe, Oded Netzer, and David A. Schweidel. &ldquo;Uniting the tribes: Using text for marketing insight.&rdquo; Journal of Marketing (2019): 0022242919873106.</p>
<p>[2]Kenneth Benoit. July 16, 2019. “Text as Data: An Overview” Forthcoming in Cuirini, Luigi and Robert Franzese, eds. <em>Handbook of Research Methods in Political Science and International Relations</em>. Thousand Oaks: Sage.</p>
<p>[3]Banks, George C., Haley M. Woznyj, Ryan S. Wesslen, and Roxanne L. Ross. &ldquo;A review of best practice recommendations for text analysis in R (and a user-friendly app).&rdquo; <em>Journal of Business and Psychology</em> 33, no. 4 (2018): 445-459.</p>
<p>[4]王伟,陈伟,祝效国,王洪伟. 众筹融资成功率与语言风格的说服性-基于Kickstarter的实证研究.管理世界.2016;5:81-98.</p>
<p>[5]Wang, Quan, Beibei Li, and Param Vir Singh. &ldquo;Copycats vs. original mobile apps: A machine learning copycat-detection method and empirical analysis.&rdquo; <em>Information Systems Research</em> 29, no. 2 (2018): 273-291.</p>
<p>[6]Cohen, Lauren, Christopher Malloy, and Quoc Nguyen. &ldquo;Lazy prices.&rdquo; <em>The Journal of Finance</em> 75, no. 3 (2020): 1371-1415.</p>
</blockquote>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>科研绘图SciencePlots库</title>
      <link>https://hidadeng.github.io/blog/scienceplots/</link>
      <pubDate>Tue, 23 Nov 2021 18:40:10 +0600</pubDate>
      
      <guid>/blog/scienceplots/</guid>
      <description>科研可视化绘图包</description>
      <content:encoded><![CDATA[<h2 id="代码下载">代码下载</h2>
<p><a href="https://github.com/hidadeng/DaDengAndHisPython/blob/master/SciencePlot%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE.zip">https://github.com/hidadeng/DaDengAndHisPython/blob/master/SciencePlot科研绘图.zip</a></p>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">SciencePlots</span>

</code></pre></div><pre><code>Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple/
Collecting SciencePlots
  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/c2/44/7b5c0ecd6f2862671a076425546f86ac540bc48c1a618a82d6faa3b26f58/SciencePlots-1.0.9.tar.gz (10 kB)
  Installing build dependencies ... [?25l/
</code></pre>
<p><strong>tips</strong>:</p>
<p>SciencePlots库需要电脑安装LaTex，其中</p>
<ul>
<li>MacOS电脑安装MacTex  <a href="https://www.tug.org/mactex/">https://www.tug.org/mactex/</a></li>
<li>Windows电脑安装MikTex  <a href="https://miktex.org/">https://miktex.org/</a></li>
</ul>
<h2 id="初始化绘图样式">初始化绘图样式</h2>
<p>在SciencePlots库中科研绘图样式都是用的science</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s1">&#39;science&#39;</span><span class="p">)</span>
</code></pre></div><p>当然你也可以同时设置多个样式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;ieee&#39;</span><span class="p">])</span>
</code></pre></div><p>在上面的代码中， <strong>ieee</strong> 会覆盖掉 <strong>science</strong> 中的某些参数（列宽、字号等）， 以达到符合 <strong>IEEE</strong>论文的绘图要求</p>
<p>如果要临时使用某种绘图样式，科研使用如下语法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#注意，此处是语法示例，</span>
<span class="c1">#如要运行， 请提前准备好x和y的数据</span>
<span class="k">with</span> <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">context</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;ieee&#39;</span><span class="p">]):</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">()</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><h2 id="案例">案例</h2>
<p>定义函数曲线， 准备数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>

<span class="k">def</span> <span class="nf">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">p</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">x</span> <span class="o">**</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">p</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">x</span> <span class="o">**</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">p</span><span class="p">))</span>

<span class="n">pparam</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="n">xlabel</span><span class="o">=</span><span class="s1">&#39;Voltage (mV)&#39;</span><span class="p">,</span> <span class="n">ylabel</span><span class="o">=</span><span class="s1">&#39;Current ($\mu$A)&#39;</span><span class="p">)</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="mf">0.75</span><span class="p">,</span> <span class="mf">1.25</span><span class="p">,</span> <span class="mi">201</span><span class="p">)</span>
</code></pre></div><h3 id="science样式">science样式</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">context</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">]):</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">100</span><span class="p">]:</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">p</span><span class="p">),</span> <span class="n">label</span><span class="o">=</span><span class="n">p</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;Order&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">autoscale</span><span class="p">(</span><span class="n">tight</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="o">**</span><span class="n">pparam</span><span class="p">)</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig1.pdf&#39;</span><span class="p">)</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig1.jpg&#39;</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_12_0.png" width="800" />
    
    
</figure>

<h3 id="scienceieee样式">science+ieee样式</h3>
<p>针对IEEE论文准备的<strong>science+ieee</strong>样式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">context</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;ieee&#39;</span><span class="p">]):</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">100</span><span class="p">]:</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">p</span><span class="p">),</span> <span class="n">label</span><span class="o">=</span><span class="n">p</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;Order&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">autoscale</span><span class="p">(</span><span class="n">tight</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="o">**</span><span class="n">pparam</span><span class="p">)</span>
    <span class="c1"># Note: $\mu$ doesn&#39;t work with Times font (used by ieee style)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;Current (\textmu A)&#39;</span><span class="p">)</span>  
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig2a.pdf&#39;</span><span class="p">)</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig2a.jpg&#39;</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_14_0.png" width="800" />
    
    
</figure>

<h3 id="sciencescatter样式">science+scatter样式</h3>
<p><strong>IEEE</strong> 要求图形以黑白打印时必须可读。 <strong>ieee</strong> 样式还可以将图形宽度设置为适合IEEE论文的一列。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">context</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;scatter&#39;</span><span class="p">]):</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">([</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="s1">&#39;k--&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">fill_between</span><span class="p">([</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="o">-</span><span class="mf">2.2</span><span class="p">,</span> <span class="mf">1.8</span><span class="p">],</span> <span class="p">[</span><span class="o">-</span><span class="mf">1.8</span><span class="p">,</span> <span class="mf">2.2</span><span class="p">],</span>
                    <span class="n">color</span><span class="o">=</span><span class="s1">&#39;dodgerblue&#39;</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">7</span><span class="p">):</span>
        <span class="n">x1</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
        <span class="n">y1</span> <span class="o">=</span> <span class="n">x1</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">y1</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sa">r</span><span class="s2">&#34;$^\#$</span><span class="si">{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;Sample&#39;</span><span class="p">,</span> <span class="n">loc</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">xlbl</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;$\log_</span><span class="si">{10}</span><span class="s2">\left(\frac{L_\mathrm</span><span class="si">{IR}</span><span class="s2">}{\mathrm</span><span class="si">{L}</span><span class="s2">_\odot}\right)$&#34;</span>
    <span class="n">ylbl</span> <span class="o">=</span> <span class="sa">r</span><span class="s2">&#34;$\log_</span><span class="si">{10}</span><span class="s2">\left(\frac{L_\mathrm</span><span class="si">{6.2}</span><span class="s2">}{\mathrm</span><span class="si">{L}</span><span class="s2">_\odot}\right)$&#34;</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="n">xlbl</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="n">ylbl</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_xlim</span><span class="p">([</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set_ylim</span><span class="p">([</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig3.pdf&#39;</span><span class="p">)</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig3.jpg&#39;</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_16_0.png" width="800" />
    
    
</figure>

<h3 id="dark_background-sciencehigh-vis">dark_background +science+high-vis</h3>
<p>您还可以将这些样式与Matplotlib随附的其他样式结合使用。 例如，dark_background +science+high-vis样式：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">context</span><span class="p">([</span><span class="s1">&#39;dark_background&#39;</span><span class="p">,</span> <span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;high-vis&#39;</span><span class="p">]):</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">100</span><span class="p">]:</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">p</span><span class="p">),</span> <span class="n">label</span><span class="o">=</span><span class="n">p</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;Order&#39;</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">autoscale</span><span class="p">(</span><span class="n">tight</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="o">**</span><span class="n">pparam</span><span class="p">)</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig5.pdf&#39;</span><span class="p">)</span>
    <span class="n">fig</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;figures/fig5.jpg&#39;</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_18_0.png" width="800" />
    
    
</figure>

<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>读完本文你就了解什么是文本分析</title>
      <link>https://hidadeng.github.io/blog/read_this_you_will_know_what_is_text_mining/</link>
      <pubDate>Mon, 22 Nov 2021 23:40:10 +0600</pubDate>
      
      <guid>/blog/read_this_you_will_know_what_is_text_mining/</guid>
      <description>专注经济管理科研领域的Python数据分析，涵盖数据分析主要环节，如Python网络爬虫、Pandas数据探索性分析、中英文文本数据清洗、机器学习与自然语言处理。开发有专门的Python经济管理文本数据挖掘视频课程</description>
      <content:encoded><![CDATA[<h2 id="一文本的作用">一、文本的作用</h2>
<p>文本涉及两个主体，即<strong>文本生产者</strong>和<strong>文本消费者</strong>：</p>
<ul>
<li>文本生产者: 生成文本的主体；传递生产者想表达的内容，可能也会潜在蕴含着生产者的一些特质属性</li>
<li>文本消费者: 阅读文本的主体；消费者阅读这段文本时，文本又对消费者认知活动产生影响。</li>
</ul>
<p>在大数据的今天，通过互联网超文本链接，无数的<strong>个人、团体、公司、政府</strong>等不同组织形态的主体均深深嵌入到互联网世界，在网络世界中留下了大量的文本。<strong>社会、管理、经济、营销、金融</strong>等不同学科，均可以研究网络上海量的文本，扩宽的研究对象和研究领域。下面大部分内容是从政治学和经管领域的两份文档翻译来，我觉得讲的挺明白的，其中加入了我的一些理解和扩充。</p>
<p><br><br></p>
<h2 id="二-理解文本">二、 理解文本</h2>
<ul>
<li>text as text 原始的文本，定性的文本</li>
<li>textual data(text as data)  量化后的文本数据，可定量</li>
</ul>
<h3 id="21-text-as-text">2.1 text as text</h3>
<blockquote>
<p>text as text 原始的文本，定性的文本</p>
</blockquote>
<p>文本的重点是传递着某种东西，从某种意义上说，所有形式的文本都包含可以被视为数据形式的信息。因此，文本总是以某种方式提供信息（即使我们不了解如何操作）。但是，言语活动的主要目标不是记录信息，而是进行交流：传达思想，指令，查询等。我们可以记录下来并将其视为数据，但是将我们的想法或思想表达为单词和句子的目的主要是交流，而不是将我们的想法或思想记录为数据形式。大多数数据是这样的：它表征的活动与数据本身完全不同。</p>
<p>例如，在经济学中，可能是我们想要刻画的经济交易（使用价值媒介交换商品或服务），而数据是以某种聚合形式对这些交易进行抽象，这有助于我们理解交易的意义。通过就抽象的相关特征达成共识，我们可以记录并分析人类活动，例如制造业，服务业或农业。从通信行为中提取文本数据特征的过程遵循相同的过程，但有一个主要区别：由于原始文本可以直接通过记录的语言与我们交谈，因此文本首先不需要进行处理或抽象化待分析。但是，<strong>我在这里的论点是，特征抽象的过程是将文本视为数据而不是直接将其视为文本的方法的独特之处</strong>。</p>
<p><strong>具有讽刺意味的是，只有当我们破坏了直接理解文本的能力时，才有可能利用文本的数据获取洞察力</strong>。为了使它作为数据有用，我们必须消除原始文本的结构，将文本转换为结构化的表格数据。定量分析是理解非语言数据的起点；另一方面，非结构的文本变成丑陋表格数据的过程，出于统计分析或机器学习目的，我们经常质疑这一过程丢失了什么信息。</p>
<p>机器是愚蠢的，但是将文本视为数据意味着让愚蠢的机器处理并可能分析我们的文本。关键是，为了<strong>将文本作为数据</strong> 而不是<strong>文本仅仅是文本</strong>，<strong>我们必须破坏原始文本的直接可解释性，但目的是从其样式化特征中进行更系统，更大规模的推断</strong>。我们应该坚定不移地认识到这一过程，但也不要因此而寝食不安，因为<strong>将文本作为数据进行分析的重点永远不是解释数据而是挖掘其深层次的模式</strong>。数据挖掘是一个破坏性的过程-正如采挖矿山资源-为了开采其宝贵资源，开发过程不可避免会破坏地表形态和环境。</p>
<br>
<h3 id="22-latent-versus-manifest-characteristics-from-textual-data">2.2 Latent versus manifest characteristics from textual data</h3>
<blockquote>
<p>textual data(text as data)  量化后的文本数据，可定量的数据。所以小标题我翻译为“量化后的文本数据隐藏的信息vs直观可见的信息”，</p>
</blockquote>
<p>在政治学领域，我们通常最感兴趣的不是文本本身，而是文本透漏给我们有关作者的一些隐藏特性。在政治（以及心理学）研究中，我们有关政治和社会行为者的一些重要理论，很多时候直接观察行为活动很难观察到其内在的品质。</p>
<p>例如，意识形态是研究政治竞争和政治偏好的基础，但是我们没有直接的衡量工具来记录个人或政党有关“社会和道德自由政策与保守政策”的相对偏好。其他偏好，包括支持或反对特定政策，如1846年废除了英国的《玉米法》（Schonhardt-Bailey，2003年）；在关于《莱肯公约》的辩论中支持或反对进一步的欧洲一体化（Benoit等，2005）；再比如支持或反对不信任运动（Laver和Benoit，2002年）。</p>
<p>这些偏好是作为政治行为者的内部状态而存在的，无论这些行为者是立法者，政党，代表还是候选人，都无法直接观察。<strong>非言语行为指标也可用于推断这些信息，但事实表明，政治行为者所说的话比其他行为形式更为真诚。</strong></p>
<p>因此，<strong>文本数据（Textual data）可能包含有关取向和信念的重要信息，对于这些取向和信念，非语言形式的行为可能会充当不良指标。长期以来，心理学领域也一直将言语行为作为可观察到的潜在兴趣状态的暗示，例如人格特质</strong>（例如Tausczik和Pennebaker，2010年）。缺少增强的询问技术或头脑阅读技术来识别政治和社会行为者的偏好，信念，意图，偏见或个性，下一个最佳选择是根据其说话或书写的内容来收集和分析数据。<strong>关注的对象不是文本包含的内容，而是其内容作为有关潜在特征的数据所揭示的内容，这些潜在特征为其提供了可观察的含义</strong>。最后一句话比较难理解，可以理解为万事万物有联系，通过联系思维来挖掘文本中的信息。</p>
<p>文本数据(Textual data)还可能具有较为明显的特征，例如，政治传播的许多领域都与文本所指出的潜在特征无关，而与文本本身所包含的传播形式和性质有关。举一个经典的例子，<strong>在一个著名的政治局委员对斯大林诞辰70周年之际的文章的研究中，莱特斯，伯努特和加索夫（1951）能够衡量各团体在共产主义意识形态方面的差异</strong>。在这一政治事件中，这些信息不仅预示了潜在的方向，而且还预示了在可预见的斯大林死后事件中有关领导权斗争的某种政治动作。这些信息本身是重要的，<strong>这些信息只能从每个政治局委员撰写的公开文章中搜集而来，它们必须充分了解将在党和苏联苏维埃新闻，并由其他政权参与者解释为信号</strong>。再举一个例子，如果我们对一个政治演说家是使用民粹主义还是种族主义语言感兴趣，那么该语言将直接以民粹主义或种族主义术语或参考形式出现在文本中，而要紧的是它们是否被使用。与其说这些术语代表什么，不如说是什么。<strong>例如Jagers和Walgrave（2007）在研究比利时政党的政党政治广播时，发现极右翼政党Vlaams Blok所使用的民粹词语远比其他比利时政党丰富的多。</strong></p>
<p>在实践中，从文本<strong>可观察到的明显特征</strong>与<strong>潜在特征之间的特征</strong>的有时候这两个概念区分的并不明显。举例来说，文体风格可以用一些明显的特征词对文本进行量化，体现出作者的一些写作偏好。例如，在使用适用于政治文本的<strong>可读性度量改编</strong>的研究中，我们可能会对<strong>政治成熟度</strong>的潜在水平感兴趣，这可以用来衡量说话者的意图或<strong>说话者的特征</strong>，这一点从观察到的文本样本中可以看出。或者，我们可能会对它们在可读性上的明显差异感兴趣，这是传播媒介更直接指标。例如，在对英国议会历史演讲的研究中，Spirling（2016）将19世纪末期向简单语言的转变归因于广播扩展特许经营的民主化效应。Benoit，Munger和Spirling（2019）使用类似的措施，比较了同一位总统当天在同一天发表的美国总统国情咨文演讲的样本，但其口头和书面形式均表明口头形式使用的语言较为简单。前一项研究可能对语言的<strong>易用性</strong>感兴趣，该语言的易用性是政治代表制更潜在的特征的指标，而后一项分析可能更侧重于交付媒介的明显后果。<strong>对于许多使用文本数据的研究设计而言，区别更多是研究目标的问题，而不是结构化和分析文本数据的某些内在方式。</strong></p>
<br>
<h3 id="23-文本分析的步骤">2.3 文本分析的步骤</h3>
<p><img loading="lazy" src="img/textprocesssteps.png" alt=""  />
</p>
<p>完整的文本分析步骤包括:</p>
<ol>
<li>读取数据</li>
<li>分词(中文必须有这一步，由于英文是空格间隔的语言，英文有时候不需要分词）</li>
<li>剔除符号和无意义的停止词</li>
<li>字母变小写，词干化</li>
<li>使用一定的编码方式构建文档词频矩阵</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>步骤</th>
<th>解释</th>
<th>中文</th>
<th>英文</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><strong>读取数据</strong></td>
<td>数据一般存储于不同的文件夹不同文件内，需要将其导入到计算机</td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td><strong>分词</strong></td>
<td>导入到计算的文本是字符串数据，需要整理为更好用的列表</td>
<td>例如“我爱你中国”分词后<br>得到[&ldquo;我&rdquo;, &ldquo;爱&rdquo;, &ldquo;你&rdquo;, &ldquo;中国&rdquo;]</td>
<td>&ldquo;I love China&quot;分为<br>[&ldquo;I&rdquo;, &ldquo;love&rdquo;, &ldquo;China&rdquo;]</td>
</tr>
<tr>
<td>3</td>
<td><strong>剔除符号和无意义的停止词</strong></td>
<td>为了降低计算机运行时间，对分析结果影响较小的字符，诸如符号和无意义的词语需要剔除掉</td>
<td>如“的”，“她”， ”呢”， “了”</td>
<td>&ldquo;is&rdquo; , &ldquo;a&rdquo;, &ldquo;the&rdquo;</td>
</tr>
<tr>
<td>4</td>
<td><strong>字母变小写，词干化</strong></td>
<td>同义词归并，同主体词归并</td>
<td>“中铁”，“中国铁建”，“中铁集团”都可以归并为“中铁”</td>
<td>先变为小写，这样“I”和“i”都归并为“i”；<br>“was”，“are”，“is”都归并为“be”</td>
</tr>
<tr>
<td>5</td>
<td><strong>构建文档词频矩阵</strong></td>
<td>使用一定的编码方式，即用某种方式表示文本。常见的有词袋法、tf-idf；<br>可以使用scikit-learn构建文档词频矩阵，但中英文略有区别，需要注意</td>
<td>“我爱你中国”需要先整理为“我 爱 你 中国”</td>
<td>“I love China”</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="三常见的文本分析技术有">三、常见的文本分析技术有</h2>
<ul>
<li>主题分析(Thematic analysis)</li>
<li>内容分析(content analysis)</li>
<li>基于词典的方法(dictionary analysis)</li>
<li>文本向量化(Bag-of-words)</li>
<li>监督学习如SVM、Bayes和Regression</li>
<li>无监督学习，如LDA话题模型</li>
<li>自然语言处理</li>
</ul>
<p>上述文本分析技术，按照人与机器参与程度，绘制在下图。一般来说，越向右，文本分析技术的自动化程度越高，需要注意的是自动化越高，并不代表人的工作量就越少。</p>
<p><img loading="lazy" src="img/textautomate.png" alt=""  />
</p>
<br>
<h3 id="31-主题分析thematic-analysis">3.1 主题分析Thematic Analysis</h3>
<p>主题分析(Thematic analysis)是一种专家方法，一般与扎根理论方法相结合(Baumer, Mimno, Guha, Quan, &amp; Gay, 2017)。扎根理论与主题分析的理念是基于专家自身经验和对世界的理解，做出对数据的见解，从而构建新理论。主题分析常见于组织科学和传播学(Gioia, Corley, &amp; Hamilton, 2013; Strauss &amp; Corbin, 1998)。</p>
<p>主题分析涉及一个反复迭代的过程，在此过程中，研究人员将开发出一系列源自文本的代码和类别。除非要精炼理论，否则一般在分析开始之前尚不知道类别。在这种情况下，数据分析需要对文献和数据进行不断的比较。</p>
<ol>
<li>研究人员从参与者自己的语言开始（称为“一阶编码”或“开放式编码”；Gioia等人，2013；Strauss＆Corbin，1998）</li>
<li>然后将相似的代码归为一类（称为“二阶代码”或“主轴编码”；Strauss＆Corbin，1998）。</li>
</ol>
<p>诸如NVivo和ATLAS.ti之类的计算机软件可以帮助简化上述过程，但文本的分类通常依赖于人类编码衍生的类别的操作定义，计算机自动化的程度依旧很低，分析的数据量通常不大。而且编码过程对编码者的要求严格，通常是对该领域有较深理解的人才适合做此类工作。</p>
<br>
<h3 id="32-内容分析基于词典的方法法">3.2 内容分析/基于词典的方法法</h3>
<p><strong>内容分析</strong> 和 <strong>其他基于字典的方法</strong> 通常是通过对特定文本中 <strong>单词/词组</strong> 的频率计数进行的（Reinard，2008；Short，Broberg，Cogliser＆Brigham，2010）。因为按照这种方法，文本数据被压缩成词组频数，定性的文本数据转化为定量的频数，索引可用于回答更多以定量为导向的研究问题（McKenny等，2016；Reinard，2008）。</p>
<p>比如进行文本情感分析，我们可以用很简单的思路。即统计文本中正面词出现的总数和负面词出现的总数，得出文本的情感值。而在此分析过程中，我们需要事先拥有一个正面词词典和负面词词典。</p>
<p>是否有成熟的领域词典、或者构建领域词典，这需要研究者对研究问题和研究的数据有一定的领域知识，工作量也会因是否有词典而不同。一般有现成的成熟的词典，计算机自动化程度高，人工工作量低。</p>
<p>与主题分析类似，计算机软件可以协助内容分析过程。像DICTION这样的程序会使用 <strong>分类字典</strong> 自动对文本评分（即，根据单词或n-gram而非操作定义确定主题）。可以与主题分析类似地使用其他程序，例如NVivo或ATLAS.ti，在主题分析中，通过软件的帮助手动进行编码和分类，以组织数据。</p>
<br>
<h3 id="33-词袋法bag-of-words">3.3 词袋法Bag-of-words</h3>
<p><img loading="lazy" src="img/bagofwords.png" alt=""  />
</p>
<p>文本数据是非结构化的定性数据，计算机并不能直接使用。我们需要按照计算机容易理解的方式去组织数据，类似于上图的第一步骤,四段英文文本被组织成一个文档特征矩阵（document-feature-matrix），矩阵中</p>
<ul>
<li>每一行代表一个英文文档</li>
<li>每一个列代表一个特征词</li>
</ul>
<h4 id="331-词袋法-vs-主题分析中的编码者">3.3.1 词袋法 vs 主题分析中的编码者</h4>
<p>为了理解词袋法，可以类比<strong>主题分析</strong> 中的编码者。我们可以将词袋法看做是一个死板的，不知变通的人，脑子很简单，只知道统计特征词在每个文档中出现的词频。那么据此我们就知道词袋法和人的优缺点。</p>
<p>对于词袋法，优点是规则标准统一，缺点是不知变通，牺牲了文本中很多的信息量。强调编码过程的高标准，牺牲了分析的深度。</p>
<p>对于研究者参与 <strong>主题分析</strong> 这样的编码过程，优点是研究者有很强的领域知识和强大的洞察力，可以灵活洞察规律，缺点是每个研究者都具有特殊的经历和偏好，编码标准不统一。用研究者编码的过程，强调编码的深度和质量，牺牲了编码分析过程的标准性。</p>
<h4 id="332-词袋法的用途">3.3.2 词袋法的用途</h4>
<p>词袋法编码是计算科学领域对文本数据的简化和压缩的方法，后续可以据此进行监督学习和无监督学习。</p>
<br>
<h3 id="34-监督学习">3.4 监督学习</h3>
<p>在有监督的方法中，研究人员事先知道ta正在寻找什么（罗伯茨等，2014）。比如要判断论文的作者身份这个问题，研究人员为程序提供输入（在这种情况下为文本）和输出（例如，文本作者的身份），然后系统创建一种算法来映射两者之间的联系（Janasik， Honkela和Bruun，2009年）。Mosteller and Wallace（1963）通过使用简单的贝叶斯单词概率来预测12篇有争议的联邦主义者论文（詹姆斯·麦迪逊或亚历山大·汉密尔顿）的作者身份。如今，朴素贝叶斯（Bayes）和支持向量机（SVM）等技术是用于文本分析的流行的监督算法（Manning，Prabhakar和Hinrich，2008年）。</p>
<br>
<h3 id="35-无监督学习">3.5 无监督学习</h3>
<p>无监督算法，如主题分析（Janasik等，2009）可识别数据中的<strong>单词簇</strong>和<strong>主题</strong>。但是，与<strong>主题分析</strong>不同，<strong>主题建模</strong>使用高度自动化的方法来确定重要主题，分析过程所需的时间和领域知识相对较少。尽管人类的洞察力仍然对帮助解释出现的主题很重要，主题建模适合分析大规模文本数据（Kobayashi1，Mol，Berkers，Kismihok和Den Hartog，2017）。<strong>主题建模利用了主题分析（即人类洞察力、解释力）和机器学习（即快速分析大量文本）的优势</strong>。</p>
<br>
<h3 id="36-自然语言处理">3.6 自然语言处理</h3>
<p>最后，自然语言处理(Natural Language Processing)通常是文本分析中自动化程度最高的形式（有关综述，请参阅Manning等人，2008）。这种方法模拟了人类如何理解和处理语言（Chowdhury，2003；Collobert等，2011；Joshi，1991）。例如，NLP技术可以标记句子中单词的词性（例如，名词，形容词等），将文档从一种语言翻译成另一种语言，甚至使用句子的上下文来阐明词语的词义（Buntine＆Jakulin，2004年）。</p>
<p>因此，与<strong>词袋法</strong>不同，NLP认为单词顺序很重要。当使用训练集时，使用深度学习和多模式（即结合文本和图像）等尖端技术进行情感分析是NLP的一种流行形式（Kouloumpis，Wilson和Moore，2011）。这种特殊的分析将文本的总体态度，情感或观点分类为肯定，否定或中立。</p>
<p>与<strong>主题分析</strong>形成鲜明对比的是，自然语言处理是一个完全计算机自动化的过程，因此几乎不需要人类的理解和或解释（Quinn等人，2010）。此外，相对于需要人工编码（例如，主题分析）的技术，NLP的执行速度非常快，并且比其他方法更具系统性。例如，计算机科学，信息科学，语言学和心理学的研究人员利用NLP作为文本分析工具（Chowdhury，2003年）。</p>
<p>大邓提醒一下，自然语言处理属于人工智能范畴，人工智能技术没有那么神，我们应该将其理解为“人工”+“智能”可能更妥当一些，即数据准备阶段用大量的人工时对数据进行标注，产生训练数据集合。之后借助于计算机的“智能”学习数据集中的规律，因此人工智能脱离了人工标注数据的喂养，只能做很简单的事情，更像是人工智障。</p>
<br>
<h3 id="37-不同文本分析技术汇总对比">3.7 不同文本分析技术汇总对比</h3>
<table>
<thead>
<tr>
<th>技术</th>
<th>描述</th>
<th>优点</th>
<th>缺点</th>
<th>常被应用(领域)</th>
<th>软件</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>主题分析</strong>Thematic analysis</td>
<td>需要有经验的人员基于自身经验和李俊杰，对研究的数据进行挖掘。编码过程为迭代进行</td>
<td>使用参与者自己的话语或者构念来挖掘数据，对少量文本理解的更深入</td>
<td>属于时间、劳动密集型任务，不适合大规模数据。<br>由于不同的编码人员有不同的经历和偏好，编码过程的标准不可靠</td>
<td>社会学、管理学</td>
<td>Nvivo；</td>
</tr>
<tr>
<td><strong>内容分析/基于字典方法</strong></td>
<td>统计文本中词语/词组的出现频率</td>
<td>允许对研究的数据进行定量分析</td>
<td>采用的词典应尽量与研究问题适应，词典适配性问题突出</td>
<td>管理学</td>
<td>LIWC、Nvivo、DICTION；</td>
</tr>
<tr>
<td><strong>词袋法</strong>（Bag of words）</td>
<td>将文本字符串转为计算机能理解的数字化向量</td>
<td>编码标准稳定简单，具有统计学特性，扩展性强</td>
<td>编码过程忽略词语的先后顺序</td>
<td>管理学</td>
<td>Python的scikit-learn、gensim、nltk等；R</td>
</tr>
<tr>
<td><strong>监督学习</strong>(Supervise models),如SVM、Bayes、Logistic Regression</td>
<td>研究者要知道输入数据X和标签y；需要核实的模型需要X和y之间的关系和规律</td>
<td>允许事先定义编码规则(如选择词袋法还是tfidf)；逻辑简单</td>
<td>需要高质量的标注数据(工作量大)；you与特征词太多，训练的模型很容易过拟合。</td>
<td>计算机学、政治学、管理学</td>
<td>Python的scikit-learn、gensim、nltk等；R（topicmodels， stm）</td>
</tr>
<tr>
<td><strong>无监督学习</strong>(Kmeans、 LDA话题模型)</td>
<td>使用聚类、话题分析，让计算机自动对数据进行分组</td>
<td>在没有人工标注的情况下，加速了数据的“标注”或“分类”</td>
<td>“标注”是机器按照数字特征进行的分组，需要研究者解读才可以赋予“标准“意义；训练过程需要大量的调参</td>
<td>计算机学、政治学、管留学</td>
<td>Python的scikit-learn、gensim、nltk等；R（topicmodels， stm）</td>
</tr>
<tr>
<td><strong>自然语言处理</strong></td>
<td>按照人类对语言的理解进行建模，考虑词语顺序</td>
<td>计算机自动化；可分析语义</td>
<td>大多数模型是人类无法解读的黑箱；<br>虽然代码编程量小，但训练代码耗时巨大</td>
<td>计算科学；市场营销；心理学</td>
<td>pytorch、tensorflow</td>
</tr>
</tbody>
</table>
<br>
<h3 id="38-python能做哪些">3.8 Python能做哪些？</h3>
<p>计算机能做的文本分析，Python都能做到，包括</p>
<ul>
<li>基于词典的分析法；如基于词典法的情感计算</li>
<li>词袋法；可以进行文本相似度计算</li>
<li>有监督机器学习；如基于机器学习的情感分析；文本分类</li>
<li>无监督机器学习；lda话题模型对文本进行话题分析</li>
<li>自然语言处理；考虑词语顺序的LSTM</li>
</ul>
<p>除了自然语言处理部分，四种方法在我的<a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">《Python网络爬虫与文本数据分析》</a>视频课程中都有相关的讲解和实战代码</p>
<p><br><br></p>
<h2 id="相关文献">相关文献</h2>
<blockquote>
<p>[1]Berger, Jonah, Ashlee Humphreys, Stephan Ludwig, Wendy W. Moe, Oded Netzer, and David A. Schweidel. &ldquo;Uniting the tribes: Using text for marketing insight.&rdquo; Journal of Marketing (2019): 0022242919873106.</p>
</blockquote>
<blockquote>
<p>[2]Kenneth Benoit. July 16, 2019. “[Text as Data: An Overview](<a href="https://kenbenoit.net/pdfs/28">https://kenbenoit.net/pdfs/28</a> Benoit Text as Data draft 2.pdf).” Forthcoming in Cuirini, Luigi and Robert Franzese, eds. <em>Handbook of Research Methods in Political Science and International Relations</em>. Thousand Oaks: Sage.</p>
</blockquote>
<blockquote>
<p>[3]Banks, George C., Haley M. Woznyj, Ryan S. Wesslen, and Roxanne L. Ross. &ldquo;A review of best practice recommendations for text analysis in R (and a user-friendly app).&rdquo; <em>Journal of Business and Psychology</em> 33, no. 4 (2018): 445-459.</p>
</blockquote>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>70G上交所年报数据集</title>
      <link>https://hidadeng.github.io/blog/70g_china_market_anunal_report_datasets/</link>
      <pubDate>Mon, 22 Nov 2021 20:40:10 +0600</pubDate>
      
      <guid>/blog/70g_china_market_anunal_report_datasets/</guid>
      <description>Python网络爬虫与文本分析， 70g会计年报pdf数据集免费下载</description>
      <content:encoded><![CDATA[<h2 id="70g年报pdf数据集">70G年报pdf数据集</h2>
<p><img loading="lazy" src="img/1.gif" alt=""  />
</p>
<h2 id="数据下载说明">数据下载说明</h2>
<p>所有pdf均来自上海证券交易所官网，使用shreport库进行的下载。</p>
<p><img loading="lazy" src="img/2.png" alt=""  />
</p>
<h2 id="报告信息汇总文件">报告信息汇总文件</h2>
<h4 id="heading"></h4>
<p><img loading="lazy" src="img/3.gif" alt=""  />
</p>
<p>summary.xlsx内字段</p>
<ul>
<li>company 上市公司企业名</li>
<li>code 股票代码</li>
<li>type 报告类型</li>
<li>year 报告年份</li>
<li>date 报告发布日期</li>
<li>pdf 报告pdf文件下载链接</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">import pandas as pd
from pathlib import Path


#报告汇总文件summary.xlsx
df = pd.read_excel(&#39;summary.xlsx&#39;)
df.head()
</code></pre></div><p><img loading="lazy" src="img/4.png" alt=""  />
</p>
<p>一共有报告71126份</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">len(df)
71149
</code></pre></div><p>一共有上市公司1486家</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">len(df[&#39;company&#39;].unique())
1486
</code></pre></div><h2 id="summary文件夹">summary文件夹</h2>
<p>summary文件夹内是每家公司的报告披露情况</p>
<p><img loading="lazy" src="img/5.gif" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df1 = pd.read_excel(&#39;summary/600000.xlsx&#39;)
df1.head()
</code></pre></div><p><img loading="lazy" src="img/6.png" alt=""  />
</p>
<p>浦发银行一共有75份定期报告</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">len(df1)
75
</code></pre></div><h2 id="reports文件夹">reports文件夹</h2>
<p>reports文件夹存放着以各各公司股票代码命名的文件夹</p>
<p>文件夹内是该公司所有定期报告</p>
<p><img loading="lazy" src="img/7.gif" alt=""  />
</p>
<h2 id="读取pdf报告">读取pdf报告</h2>
<p>可使用pdfdocx库读取pdf,</p>
<p>pdfdocx文档链接 <a href="https://github.com/thunderhit/pdfdocx">https://github.com/thunderhit/pdfdocx</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">from pdfdocx import read_pdf

p_text = read_pdf(&#39;reports/600000/600000_2012_1.pdf&#39;)
p_text
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">上海浦东发展银行股份有限公司 \n\n2012 年第一季度报告 \n\n \n\n \n\n§1 重要提示 \n\n1.1 公司董事会、监事会及其董事、监事、高级管理人员保证本报告所载资料不存在任何虚假记载、\n\n误导性陈述或者重大遗漏，并对其内容的真实性、准确性和完整性承担个别及连带责任。\n\n1.2 公司于 2012 年 4 月 26 日以通讯表决的方式召开第四届董事会第二十六次会议审议通过本报告，\n\n1.4 公司董事长、行长吉晓辉、财务总监刘信义及财务机构负责人傅能声明：保证本季度报告中财务\n\n公司全体董事出席董事会会议并行使表决权。\n\n1.3 公司第一季度财务报告未经审计。\n\n报告的真实、完整。\n\n \n§2 公司基本情况 \n\n2.1 主要会计数据及财务指标 \n\n本报告期末 \n\n上年度期末 \n\n币种:人民币 \n\n本报告期末比上年\n度期末增减(%) \n\n总资产(千元) \n\n归属于上市公司股东的所有者权益(千元) \n\n2,804,646,567\n\n157,055,724\n\n2,684,693,689 \n148,891,235 \n\n归属于上市公司股东的每股净资产(元) \n\n8.420\n\n7.982 \n\n4.47 \n5.48 \n5.49 \n\n经营活动产生的现金流量净额(千元) \n\n每股经营活动产生的现金流\n\n \n\n \n \n母公司现金流量表 \n \n2012 年 1—3 月 \n \n编制单位: 上海浦东发展银行股份有限公司....
</code></pre></div><h2 id="70g数据下载">70G数据下载</h2>
<p>链接:https://pan.baidu.com/s/14PI6MbxunFQ3fZOfR33zkw 密码:osoi</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>人工智能与图数据库技术</title>
      <link>https://hidadeng.github.io/blog/ai_and_graph_database_technology/</link>
      <pubDate>Tue, 16 Nov 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/ai_and_graph_database_technology/</guid>
      <description>通过领域知识和关联数据提高AI性能,人工智能与图数据库技术。</description>
      <content:encoded><![CDATA[
<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-01.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-02.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-03.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-04.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-05.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-06.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-07.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-08.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-09.png" width="100%" />
    
    
</figure>


<figure >
    
        <img src="img/Neo4j-ai-graph-technology-white-paper-ZH-10.png" width="100%" />
    
    
</figure>

<br>
<h2 id="代码下载">代码下载</h2>
<p><a href="https://github.com/hidadeng/DaDengAndHisPython/blob/master/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E4%B8%8E%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%80%E6%9C%AF.pdf">https://github.com/hidadeng/DaDengAndHisPython/blob/master/人工智能与图数据库技术.pdf</a></p>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>中文金融情感词典</title>
      <link>https://hidadeng.github.io/blog/chinese_financial_dictionary/</link>
      <pubDate>Tue, 13 Jul 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/chinese_financial_dictionary/</guid>
      <description>基于 姚加权，冯绪，王赞钧，纪荣嵘，张维. 语调、情绪及市场影响：基于金融情绪词典. 管理科学学报 开发了中文的金融情感词典第一个权威的中文情感词典|配合cnsenti使用</description>
      <content:encoded><![CDATA[<p>可以使用cnsenti库中的自定义方法，计算年报或财经类社交媒体的文本情绪。</p>
<blockquote>
<p>姚加权，冯绪，王赞钧，纪荣嵘，张维. 语调、情绪及市场影响：基于金融情绪词典. 管理科学学报，2021. 24(5), 26-46.</p>
</blockquote>
<p>该论文开发了中文的金融情感词典，已有的中文金融情感词典有以下不足：</p>
<ul>
<li>大多采用形容情绪词，对于金融场景适用性差</li>
<li>将LM英文词典本土化，制作中文金融情绪词典</li>
<li>词典构建方法多为人工</li>
</ul>
<p>该论文开发中文情绪词典，从年报和社交媒体两个数据源出发，借助数据挖掘和深度学习算法，构建了正式用语 和 非正式用于两大类情感词典。</p>
<h2 id="标注思路">标注思路</h2>
<p>一般构建词典要么用多个词典融合，要么人工标准训练。该论文采用了一定的技巧，不需要人工标注即可实现近乎人工标注的效果。</p>
<h3 id="正式词典标注思路">正式词典标注思路</h3>
<p>正式用语情感词典，通过年报公布后3个交易日累积正负收益率为标准，将年报标记为正负面情绪两类。</p>
<h3 id="非正式词典标注思路">非正式词典标注思路</h3>
<p>使用所有中国上市公司在雪球论坛和东方财富股吧内相关帖子，共8130万条。</p>
<p>在网络股票论坛，用户发表自己的意见时，经常带有表情符号，从而使得帖子带有明显的情绪指标。 这种含有特殊指标的帖子，省去了人工标注文本情绪的工作。</p>
<br>
<p>具体构建词典的步骤，大家可以阅读论文原文。论文已经公开了中文情感词典，我已将其整理为4个txt文件</p>
<ul>
<li>formal_pos.txt  正式用语<strong>正面</strong>情绪词典</li>
<li>formal_neg.txt  正式用语<strong>负面</strong>情绪词典</li>
<li>unformal_pos.txt  非正式用语<strong>正面</strong>情绪词典</li>
<li>unformal_neg.txt  非正式用语<strong>负面</strong>情绪词典</li>
</ul>
<br>
<h2 id="中文金融词典使用方法">中文金融词典使用方法</h2>
<p>cnsenti实现了自定义词典功能，导入不同的txt词典文件，即可实现不同方面的情绪词统计。</p>
<h3 id="年报正式用语词典">年报正式用语词典</h3>
<ul>
<li>dict/formal_pos.txt   正式用语<strong>正面</strong>情绪词典</li>
<li>dict/formal_neg.txt    正式用语<strong>负面</strong>情绪词典</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">cnsenti</span> <span class="kn">import</span> <span class="n">Sentiment</span>

<span class="n">senti</span> <span class="o">=</span> <span class="n">Sentiment</span><span class="p">(</span><span class="n">pos</span><span class="o">=</span><span class="s1">&#39;dict/formal_pos.txt&#39;</span><span class="p">,</span>  <span class="c1">#正面词典txt文件相对路径</span>
                  <span class="n">neg</span><span class="o">=</span><span class="s1">&#39;dict/formal_neg.txt&#39;</span><span class="p">,</span>  <span class="c1">#负面词典txt文件相对路径</span>
                  <span class="n">merge</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>             <span class="c1">#是否将cnsenti自带词典和用户导入的自定义词典融合</span>
                  <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>      <span class="c1">#两txt均为utf-8编码</span>

<span class="n">test_text</span> <span class="o">=</span> <span class="s1">&#39;这家公司是行业的引领者，是中流砥柱。今年的业绩非常好。&#39;</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">senti</span><span class="o">.</span><span class="n">sentiment_count</span><span class="p">(</span><span class="n">test_text</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;sentiment_count&#39;</span><span class="p">,</span><span class="n">result</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">sentiment_count {&#39;words&#39;: 16, &#39;sentences&#39;: 2, &#39;pos&#39;: 3, &#39;neg&#39;: 0}
</code></pre></div><br>
<h3 id="财经社交媒体非正式用语词典">财经社交媒体非正式用语词典</h3>
<ul>
<li>dict/unformal_pos.txt   非正式用语<strong>正面</strong>情绪词典</li>
<li>dict/unformal_neg.txt    非正式用语<strong>负面</strong>情绪词典</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">cnsenti</span> <span class="kn">import</span> <span class="n">Sentiment</span>

<span class="n">senti</span> <span class="o">=</span> <span class="n">Sentiment</span><span class="p">(</span><span class="n">pos</span><span class="o">=</span><span class="s1">&#39;dict/unformal_pos.txt&#39;</span><span class="p">,</span>  <span class="c1">#正面词典txt文件相对路径</span>
                  <span class="n">neg</span><span class="o">=</span><span class="s1">&#39;dict/unformal_neg.txt&#39;</span><span class="p">,</span>  <span class="c1">#负面词典txt文件相对路径</span>
                  <span class="n">merge</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>             <span class="c1">#融合cnsenti自带词典和用户导入的自定义词典</span>
                  <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>      <span class="c1">#两txt均为utf-8编码</span>

<span class="n">test_text</span> <span class="o">=</span> <span class="s1">&#39;这个股票前期走势承压，现在阴跌，散户只能割肉离场，这股票真垃圾&#39;</span>
<span class="n">result</span> <span class="o">=</span> <span class="n">senti</span><span class="o">.</span><span class="n">sentiment_count</span><span class="p">(</span><span class="n">test_text</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;sentiment_count&#39;</span><span class="p">,</span><span class="n">result</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">sentiment_count {&#39;words&#39;: 18, &#39;sentences&#39;: 1, &#39;pos&#39;: 0, &#39;neg&#39;: 2}
</code></pre></div><br>
<h2 id="说明">说明</h2>
<p>读者如需使用本项目词典，请引用如下参考文献：</p>
<blockquote>
<p>姚加权，冯绪，王赞钧，纪荣嵘，张维. 语调、情绪及市场影响：基于金融情绪词典. 管理科学学报，2021. 24(5), 26-46.</p>
</blockquote>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>causalinference库 | 使用Python做因果推断</title>
      <link>https://hidadeng.github.io/blog/causal_inference/</link>
      <pubDate>Sun, 09 Feb 2020 10:43:10 +0600</pubDate>
      
      <guid>/blog/causal_inference/</guid>
      <description>使用Python做因果推断</description>
      <content:encoded><![CDATA[<p>python虽然与R一样都可以做数据分析，但是在计量方面较为薄弱，python更像是干脏活，清洗数据用的。现在慢慢的python也有一些在计量的包，比如causalinference，这个包可以做因果推断分析。</p>
<h2 id="下载">下载</h2>
<p><a href="causal_inference.zip">click to download the code</a></p>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">causalinference</span>
</code></pre></div><br>
<h2 id="数据导入">数据导入</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<table>
<thead>
<tr>
<th style="text-align:right"></th>
<th style="text-align:right">y</th>
<th style="text-align:right">istreatment</th>
<th style="text-align:right">x1</th>
<th style="text-align:right">x2</th>
<th style="text-align:right">x3</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:right">4.63639</td>
<td style="text-align:right">1</td>
<td style="text-align:right">-0.355052</td>
<td style="text-align:right">0.441348</td>
<td style="text-align:right">0.908629</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:right">-1.96549</td>
<td style="text-align:right">0</td>
<td style="text-align:right">-0.81926</td>
<td style="text-align:right">-0.712998</td>
<td style="text-align:right">0.0375631</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:right">0.581781</td>
<td style="text-align:right">0</td>
<td style="text-align:right">1.39134</td>
<td style="text-align:right">-0.0172917</td>
<td style="text-align:right">-0.804188</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:right">-2.06729</td>
<td style="text-align:right">0</td>
<td style="text-align:right">-0.831021</td>
<td style="text-align:right">0.49786</td>
<td style="text-align:right">0.349555</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:right">9.54683</td>
<td style="text-align:right">1</td>
<td style="text-align:right">1.68232</td>
<td style="text-align:right">0.608986</td>
<td style="text-align:right">0.937725</td>
</tr>
</tbody>
</table>
<p>数据描述</p>
<ul>
<li>x1，x2，x3 协变量(控制变量)</li>
<li>y 因变量</li>
<li>istreatment 处置变量D，标注每条数据隶属于treatment或control组。1为treatment， 0为control。</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">causalinference</span> <span class="kn">import</span> <span class="n">CausalModel</span>

<span class="n">Y</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;y&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
<span class="n">D</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;istreatment&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
<span class="n">X</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span><span class="s1">&#39;x1&#39;</span><span class="p">,</span> <span class="s1">&#39;x2&#39;</span><span class="p">,</span> <span class="s1">&#39;x3&#39;</span><span class="p">]]</span><span class="o">.</span><span class="n">values</span>

<span class="c1">#CausalModel参数依次为Y， D， X。其中Y为因变量</span>
<span class="n">causal</span> <span class="o">=</span> <span class="n">CausalModel</span><span class="p">(</span><span class="n">Y</span><span class="p">,</span> <span class="n">D</span><span class="p">,</span> <span class="n">X</span><span class="p">)</span>
<span class="n">causal</span>
</code></pre></div><p>Run</p>
<pre><code>&lt;causalinference.causal.CausalModel at 0x7fd3ad0edee0&gt;
</code></pre>
<br>
<h2 id="描述性统计分析">描述性统计分析</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">causal</span><span class="o">.</span><span class="n">summary_stats</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>Summary Statistics

                      Controls (N_c=2509)        Treated (N_t=2491)             
       Variable         Mean         S.d.         Mean         S.d.     Raw-diff
--------------------------------------------------------------------------------
              Y       -1.012        1.742        4.978        3.068        5.989

                      Controls (N_c=2509)        Treated (N_t=2491)             
       Variable         Mean         S.d.         Mean         S.d.     Nor-diff
--------------------------------------------------------------------------------
             X0       -0.343        0.940        0.336        0.961        0.714
             X1       -0.347        0.936        0.345        0.958        0.730
             X2       -0.313        0.940        0.306        0.963        0.650
</code></pre>
<p>causal.summary_stats含有的指标字段名</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">causal</span><span class="o">.</span><span class="n">summary_stats</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<pre><code>dict_keys(['N', 'K', 'N_c', 'N_t', 'Y_c_mean', 'Y_t_mean', 'Y_c_sd', 'Y_t_sd', 'rdiff', 'X_c_mean', 'X_t_mean', 'X_c_sd', 'X_t_sd', 'ndiff'])
</code></pre>
<br>
<h2 id="使用ols估计处置效应">使用OLS估计处置效应</h2>
<p>估计处置效应最简单的方法是使用OLS方法，</p>
<p><img loading="lazy" src="img/ols.png" alt=""  />
</p>
<p>CausalModel.est_via_ols(adj)</p>
<p>该方法有一个参数adj</p>
<ul>
<li>adj=0  模型未使用X(协变量）</li>
<li>adj=1  模型使用了D(是否为处置组)和X（协变量）。</li>
<li>adj=2  模型使用了D(是否为处置组)、X（协变量）、D与X的交互</li>
<li>adj默认为2</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">causal</span><span class="o">.</span><span class="n">est_via_ols</span><span class="p">(</span><span class="n">adj</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">causal</span><span class="o">.</span><span class="n">estimates</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>Treatment Effect Estimates: OLS

                     Est.       S.e.          z      P&gt;|z|      [95% Conf. int.]
--------------------------------------------------------------------------------
           ATE      3.017      0.034     88.740      0.000      2.950      3.083
           ATC      2.031      0.040     51.183      0.000      1.953      2.108
           ATT      4.010      0.039    103.964      0.000      3.934      4.086
</code></pre>
<p>参数解读</p>
<ul>
<li>ATE  平均处置效应(average treatment eﬀect)</li>
<li>ATC  控制组的平均处置效应(average treatment eﬀect for the controls)</li>
<li>ATT  处置组的平均处置效应(average treatment eﬀect for the treated)</li>
</ul>
<p>你们再试试adj设置为0和1分别运行出什么结果</p>
<br>
<h2 id="倾向得分估计">倾向得分估计</h2>
<p>我们估计处置效应时，很希望处置组和控制组很类似。比如研究受教育水平对个人收入的影响，其他变量如家庭背景、年龄、地区等协变量存在差异，我们希望控制组和处置组的之间的协变量平衡性尽可能的好，这样两个组就会很像，当对这两个组的受教育水平进行操作时，两个组的收入差异可以认为是受教育水平带来的。</p>
<p>让两个组很像，这里就用到倾向得分估计。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">causal</span><span class="o">.</span><span class="n">est_propensity_s</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">causal</span><span class="o">.</span><span class="n">propensity</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>Estimated Parameters of Propensity Score

                    Coef.       S.e.          z      P&gt;|z|      [95% Conf. int.]
--------------------------------------------------------------------------------
     Intercept      0.005      0.035      0.145      0.885     -0.063      0.073
            X1      0.999      0.041     24.495      0.000      0.919      1.079
            X0      1.000      0.041     24.543      0.000      0.920      1.080
            X2      0.933      0.040     23.181      0.000      0.855      1.012
</code></pre>
<br>
<h2 id="分层方法估计处置效应">分层方法估计处置效应</h2>
<p>倾向得分估计，让两个组尽量相似，但实际上这个相似值范围有点大。比如假设受教育水平对个人收入的影响，身高、体重等颜值信息（协变量）其实对收入也是有影响的，那么就应该对人群进行分层，不同颜值水平下受教育水平对个人收入的影响。</p>
<p>分层方法估计CausalModel.stratify_s 自动选择协变量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">causal</span><span class="o">.</span><span class="n">stratify_s</span><span class="p">()</span>  
<span class="nb">print</span><span class="p">(</span><span class="n">causal</span><span class="o">.</span><span class="n">strata</span><span class="p">)</span> 
</code></pre></div><p>Run</p>
<pre><code>Stratification Summary

              Propensity Score         Sample Size     Ave. Propensity   Outcome
   Stratum      Min.      Max.  Controls   Treated  Controls   Treated  Raw-diff
--------------------------------------------------------------------------------
         1     0.001     0.043       153         5     0.024     0.029    -0.049
         2     0.043     0.069       148         8     0.056     0.059     0.142
         3     0.070     0.118       283        29     0.093     0.092     0.953
         4     0.119     0.178       268        45     0.147     0.147     1.154
         5     0.178     0.240       247        65     0.208     0.210     1.728
         6     0.240     0.361       451       174     0.299     0.300     2.093
         7     0.361     0.427       196       117     0.393     0.395     2.406
         8     0.427     0.499       153       159     0.465     0.464     2.868
         9     0.499     0.532        82        75     0.515     0.515     2.973
        10     0.532     0.568        65        91     0.551     0.553     3.259
        11     0.568     0.630       114       198     0.600     0.601     3.456
        12     0.630     0.758       180       445     0.693     0.696     3.918
        13     0.758     0.818        77       236     0.787     0.789     4.503
        14     0.818     0.876        57       255     0.845     0.849     4.937
        15     0.876     0.933        23       289     0.904     0.904     5.171
        16     0.933     0.998        12       300     0.957     0.963     6.822
</code></pre>
<p><br><br></p>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>当cnsenti遇上streamlit</title>
      <link>https://hidadeng.github.io/blog/cnsenti_streamlit/</link>
      <pubDate>Thu, 07 Jun 2018 10:40:10 +0600</pubDate>
      
      <guid>/blog/cnsenti_streamlit/</guid>
      <description>streamlit是web包，cnsenti是文本分析包，两者结合即可制造在线文本分析网站。</description>
      <content:encoded><![CDATA[<h1 id="cnsentidemo">cnsentiDemo</h1>
<p>这是使用streamlit库将中文情感分析[<strong>cnsenti</strong> 部署到网络世界，可<strong>在线提供简单的中文文本的情绪及情感计算</strong>。</p>
<p><strong>streamlit库</strong>(<a href="https://docs.streamlit.io/en/stable/">https://docs.streamlit.io/en/stable/</a>)， 是目前简单易用的数据可视化web框架，比flask和django少了很多的扩展性，但是容易学习上手，适合初学者把玩。</p>
<iframe
    src="//player.bilibili.com/player.html?bvid=bv17V411H7sZ&page=1"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<p><a href="https://cnsenti.herokuapp.com/"><strong>Demo</strong></a>
<img loading="lazy" src="img/%e6%95%88%e6%9e%9c%e5%9b%be.png" alt=""  />
</p>
<p><br><br></p>
<h1 id="网站">网站</h1>
<p>现在技术有限，该网站大致内容分为三部分</p>
<ul>
<li>准备数据</li>
<li>数据分析
<ul>
<li>情感分析</li>
<li>词云图</li>
</ul>
</li>
<li>谢谢支持</li>
</ul>
<p><br><br></p>
<h1 id="本地使用">本地使用</h1>
<p>本网站的<strong>cnsentiDemo项目文件夹</strong>的文件有</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- main.py
- cnsenti_example.csv
- 大邓和他的Python.png
- requirements.txt
- 其他文件
</code></pre></div><p>将cnsentiDemo项目下载，在<strong>电脑本地离线使用cnsenti的方法</strong></p>
<ol>
<li><a href="cnsentiDemo.zip">下载解压到桌面desktop</a></li>
<li>命令行, 执行 <code>cd desktop/cnsentiDemo</code></li>
<li>命令行，执行 <code>pip3 install -r requirements.txt</code></li>
<li>命令行, 执行 <code>streamlit run main.py</code></li>
<li>根据命令行的提示，复制粘贴网址到桌面。我这里是 <code>**http://localhost:8501**</code></li>
<li>浏览器打开效果就会与视频等同</li>
</ol>
<p>上述过程中，Mac和Win会有一些缺点导致无法使用，需要根据命令行提示解决各自系统的小问题，例如</p>
<ol>
<li>Win需要使用64位的Python</li>
<li>Mac可能需要安装Xcode-install</li>
<li>其他可能的问题</li>
</ol>
<p><br><br></p>
<h1 id="web部署方法">Web部署方法</h1>
<p>如果想将自己的streamlit项目部署成网站，可以使用Heroku和github帮助你完成人生第一个小网站。操作方法：</p>
<ol>
<li>将写好的streamlit项目上传至github自有仓库</li>
<li>Heroku注册账号</li>
<li>点击Heroku网页右上角New， 选择Create new app</li>
<li>绑定github，连接github里的streamlit项目</li>
<li>部署</li>
</ol>
<p>部署方法也可参考  <a href="https://www.youtube.com/watch?v=zK4Ch6e1zq8&amp;list=PLtqF5YXg7GLmCvTswG32NqQypOuYkPRUE&amp;index=5">Youtube视频</a></p>
<br>
<br>
<h1 id="广而告之">广而告之</h1>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>推荐系统与协同过滤、奇异值分解</title>
      <link>https://hidadeng.github.io/blog/svd_in_recommendation_system/</link>
      <pubDate>Thu, 07 Jun 2018 10:40:10 +0600</pubDate>
      
      <guid>/blog/svd_in_recommendation_system/</guid>
      <description>通过网络中留下的痕迹，例如观影记录，挖掘人潜在的偏好向量，进而物以类聚人以群分，开展个性化推荐</description>
      <content:encoded><![CDATA[<p>昨天我从PyData2018发现一个视频，讲如何在数据缺失的情况下挖掘出用户和产品的特征向量, 用于产品推荐系统。</p>
<blockquote>
<p>Daniel Pyrathon - A practical guide to Singular Value Decomposition in Python PyCon2018</p>
</blockquote>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/d7iIb_XVkZs" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>如果视频无法观看，可以前往<a href="https://v.qq.com/x/page/i0679novb10.html">腾讯视频</a></p>
<br>
<h1 id="一预备知识">一、预备知识</h1>
<h2 id="11-协同过滤">1.1 协同过滤</h2>
<p>日常生活中，像亚马逊、淘宝、京东、今日头条等各大互联网公司会无时不刻的收集我们的网络用户行为数据，并根据积累的历史行为数据对我们推送推荐内容或者推荐商品。这就是我们不曾感受到存在的推荐算法所起到的作用，这之中比较常见的实现方式是<strong>协同过滤</strong>（Collaberative Filtering）。数据设计到用户、产品及产品评价三种信息，数据类似于下图
<img loading="lazy" src="img/01-%e7%94%a8%e6%88%b7%e8%af%84%e5%88%86%e4%bf%a1%e6%81%af.png" alt=""  />
</p>
<br>
<h2 id="12-相似的人更容易做相似的事">1.2 相似的人更容易做相似的事</h2>
<p>协同过滤的核心想法是相似的人往往会做相似的事情。比如，A 和 B 是两个崇尚科技的人（相似信息源于大量的观影数据），而 B 喜欢 看科幻片 ，那么我们猜测 A 也喜欢 科幻片。
<img loading="lazy" src="img/02-%e7%94%a8%e6%88%b7%e8%af%84%e5%88%86%e7%9f%a9%e9%98%b5.png" alt=""  />

<img loading="lazy" src="img/03-%e9%a2%84%e6%b5%8b%e7%94%a8%e6%88%b7%e5%af%b9%e7%94%b5%e5%bd%b1%e7%9a%84%e5%96%9c%e5%a5%bd.png" alt=""  />
</p>
<br>
<h2 id="13-问题提出">1.3 问题提出</h2>
<p>上面我们展示的用户电影可视化图，实际上就是推荐算法中经常用到的<strong>用户-评价矩阵</strong>,</p>
<ul>
<li>那么我们如何对矩阵进行计算，才能获取相似性信息？</li>
<li>有了相似性信息我们又如何去利用相似性信息去做产品推荐？</li>
<li>我们知道两个向量通过余弦相似计算就可以得出两个向量的近似程度，那么这些向量我们又该如何从<strong>用户-评价矩阵</strong>提取呢？</li>
</ul>
<br>
<h2 id="14-奇异值分解svd">1.4 奇异值分解SVD</h2>
<p>这就用到奇异值分解（Singular Value Decompositon），简称SVD。具体怎么提取不是我们本文的重点，Python都帮我们实现了，我们只需要稍微了解下SVD，就直接上手用。</p>
<p>比如我们现在有了<strong>用户-评价矩阵</strong>
<img loading="lazy" src="img/04-%e7%94%a8%e6%88%b7%e8%af%84%e4%bb%b7%e7%9f%a9%e9%98%b5.png" alt=""  />
</p>
<br>
<p>给定一个矩阵，我们都可以分解得到两种矩阵，一种是用户信息矩阵，一种是评价信息（产品）矩阵。这两种矩阵在本例中使用了n_features = 2，即对于用户向量或者产品评价向量长度均为2，实际上也可以为其他数字（比如3，4。。）
<img loading="lazy" src="img/05-%e4%b8%a4%e7%a7%8d%e7%9f%a9%e9%98%b5.png" alt=""  />
</p>
<p>那么User1对于蓝色电影的喜欢程度是可以通过向量计算得出3.52
<img loading="lazy" src="img/06-%e9%a2%84%e6%b5%8b%e8%ae%a1%e7%ae%97.png" alt=""  />
</p>
<br>
<h2 id="15-用户相似性">1.5 用户相似性</h2>
<p>如下图，在二维坐标中我们可以看出不同用户间的相似度。
<img loading="lazy" src="img/07-%e7%94%a8%e6%88%b7%e7%9b%b8%e4%bc%bc%e5%ba%a6.png" alt=""  />
</p>
<p><br><br></p>
<h1 id="二项目实战">二、项目实战</h1>
<p>我们将使用Python的surprise库，对MovieLens数据集构建一个简单的协同过滤推荐系统。</p>
<p>安装方法:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pip3</span> <span class="n">install</span> <span class="n">scikit</span><span class="o">-</span><span class="n">surprise</span>
</code></pre></div><p>如果你的anaconda自带jupyter notebook。那么你可能需要使用下面的安装方法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">conda</span> <span class="n">install</span> <span class="o">-</span><span class="n">c</span> <span class="n">conda</span><span class="o">-</span><span class="n">forge</span> <span class="n">scikit</span><span class="o">-</span><span class="n">surprise</span>
</code></pre></div><p>从安装名我们发现其余scikit的特殊关系，所以熟悉scikit的同学看本文会比较轻松。</p>
<br>
<h2 id="代码下载">代码下载</h2>
<p><a href="svd_in_recommendation_system.zip">点击下载</a></p>
<br>
## 2.1 准备数据
MovieLens数据集含有1000个用户的100000个观影评分记录。其中我们只需要使用该数据集中的u.data文件，该文件以行存储，每一行包括``userID itemID rating timestamp``,且各个字段之间以``\t``间隔。部分数据如下
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;196\t242\t3\t881250949\n&#39;, 
&#39;186\t302\t3\t891717742\n&#39;, 
&#39;22\t377\t1\t878887116\n&#39;, 
&#39;244\t51\t2\t880606923\n&#39;, 
&#39;166\t346\t1\t886397596\n&#39;]
</code></pre></div><br>
<h2 id="22-切割数据">2.2 切割数据</h2>
<p>在surprise库中我们可以创建读取器Reader的格式。在本例中，我们使用<code>\t</code>将每行数据分隔后分配给</p>
<p><code>user item rating timestamp</code></p>
<p>定义好Reader格式后，我们使用Dataset对象对数据进行读取操作。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">surprise</span> <span class="kn">import</span> <span class="n">Reader</span><span class="p">,</span> <span class="n">Dataset</span>

<span class="c1">#定义数据格式</span>
<span class="n">reader</span> <span class="o">=</span> <span class="n">Reader</span><span class="p">(</span><span class="n">line_format</span><span class="o">=</span><span class="s1">&#39;user item rating timestamp&#39;</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="c1">#使用reader格式从u.data文件中读取数据</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">Dataset</span><span class="o">.</span><span class="n">load_from_file</span><span class="p">(</span><span class="s1">&#39;u.data&#39;</span><span class="p">,</span> <span class="n">reader</span><span class="o">=</span><span class="n">reader</span><span class="p">)</span>
</code></pre></div><br>
<h2 id="23-交叉检验">2.3 交叉检验</h2>
<p>surprise提供了交叉验证（crossvalidation）的接口，crossvalidation是啥？</p>
<p>我们先看图解释下</p>
<p>一份数据平均的分成5份，如果4份做训练集，1份做测试集。那么当我们训练模型的时候有1/5的数据我们的模型是无法学习的，这就浪费了20%。</p>
<p>但是我们又不能拿把所有的数据经过一次训练，再拿其中训练过的数据去做预测。因为这样会导致准确率a非常高，但放到实践中这个模型的预测准确率实际上是低于a的。</p>
<p>所以就有了crossvalidation交叉检验。我们一份数据训练5次，每次完整的数据分成4份训练1份测试。这样就解决了上面遇到的问题。如下图</p>
<p><img loading="lazy" src="img/08-crossvalidation.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#n_folds=5是指数据分成5份，做5次训练预测</span>
<span class="n">data</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">n_folds</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div><br>
<h2 id="24-最优化optimization">2.4 最优化Optimization</h2>
<p>训练怎么达到最优，那就要有Optimization，也就是要有一个可供参考的标准。</p>
<p>训练的方式与其他机器学习方法类似，要使得一种算法试图优化其<strong>预测值</strong>尽可能接近<strong>真实值</strong>。在协作过滤应用中，我们的算法将尝试预测某个<strong>用户-电影</strong>组合的评级，并将该<strong>预测值</strong>与<strong>真实值</strong>进行比较。 使用经典误差测量如均方根误差（Root mean squared error，RMSE）和平均绝对误差（Mean absolute error，MAE）来测量预测值和真实值之间的差异。</p>
<p>在surprise库中，我们有广泛的算法可供选择，并为每种算法（SVD，NMF，KNN）提供多种参数选择。 就我们的例子而言，我们将使用SVD算法。 优化目标<code>measures</code>采用<code>RMSE', 'MAE</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">surprise</span> <span class="kn">import</span> <span class="n">SVD</span><span class="p">,</span> <span class="n">evaluate</span>

<span class="c1">#相当于scikit的机器学习算法的初始化</span>
<span class="n">svd</span> <span class="o">=</span> <span class="n">SVD</span><span class="p">()</span>

<span class="c1">#相当于scikit中的score，模型评估</span>
<span class="n">evaluate</span><span class="p">(</span><span class="n">svd</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">measures</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;RMSE&#39;</span><span class="p">,</span> <span class="s1">&#39;MAE&#39;</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<pre><code>Evaluating RMSE, MAE of algorithm SVD.

------------
Fold 1
RMSE: 0.9324
MAE:  0.7346
------------
Fold 2
RMSE: 0.9422
MAE:  0.7423
------------
Fold 3
RMSE: 0.9367
MAE:  0.7398
------------
Fold 4
RMSE: 0.9310
MAE:  0.7323
------------
Fold 5
RMSE: 0.9393
MAE:  0.7422
------------
------------
Mean RMSE: 0.9363
Mean MAE : 0.7382
------------
------------





CaseInsensitiveDefaultDict(list,
                           {'mae': [0.734621556055766,
                             0.7422621194493935,
                             0.7398192302116903,
                             0.7323079165231016,
                             0.7422361108902022],
                            'rmse': [0.9324301825022976,
                             0.9421845177536299,
                             0.9366580726086371,
                             0.9310376368987473,
                             0.9392636694333337]})
</code></pre>
<p>从上面运行结果看，optimizer选用RMSE后，5次训练的平均准确率高达93.63%。</p>
<br>
<h2 id="25-预测">2.5 预测</h2>
<p>最后我们还是很想看看训练出模型，其预测能力到底结果怎么样？</p>
<p>这次我们就做交叉验证了，省事点直接全部丢给SVD去训练</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">surprise</span> <span class="kn">import</span> <span class="n">SVD</span>
<span class="kn">from</span> <span class="nn">surprise</span> <span class="kn">import</span> <span class="n">Reader</span><span class="p">,</span> <span class="n">Dataset</span>

<span class="c1">#读取数据</span>
<span class="n">reader</span> <span class="o">=</span> <span class="n">Reader</span><span class="p">(</span><span class="n">line_format</span><span class="o">=</span><span class="s1">&#39;user item rating timestamp&#39;</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">Dataset</span><span class="o">.</span><span class="n">load_from_file</span><span class="p">(</span><span class="s1">&#39;u.data&#39;</span><span class="p">,</span> <span class="n">reader</span><span class="o">=</span><span class="n">reader</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">build_full_trainset</span><span class="p">()</span> 

<span class="c1">#初始化svd模型,用data训练模型</span>
<span class="n">svd</span> <span class="o">=</span><span class="n">SVD</span><span class="p">()</span>
<span class="n">svd</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    &lt;surprise.prediction_algorithms.matrix_factorization.SVD at 0x10ab7d7f0&gt;
</code></pre></div><p>上面的代码</p>
<p>data = data.build_full_trainset()</p>
<p>这一行本来我没有写，但是当我注释掉这一行。出现下面的错误，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">DatasetAutoFolds&#39; object has no attribute &#39;global_mean&#39; on python surprise
</code></pre></div><p>最后在stackoverflow中找到解决办法，需要将data转化为surprise能够用的trainset类。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">https://stackoverflow.com/questions/49263964/datasetautofolds-object-has-no-attribute-global-mean-on-python-surprise
</code></pre></div><p>下面继续我们的预测，userid为196，itemid为302， 其真实评分为4。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">userid</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="mi">196</span><span class="p">)</span>
<span class="n">itemid</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="mi">302</span><span class="p">)</span>
<span class="n">actual_rating</span> <span class="o">=</span> <span class="mi">4</span>
<span class="nb">print</span><span class="p">(</span><span class="n">svd</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">userid</span><span class="p">,</span> <span class="mi">302</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
</code></pre></div><pre><code>user: 196        item: 302        r_ui = 4.00   est = 3.41   {'was_impossible': False}
</code></pre>
<p>预测值为3.41， 真实值为4。还是相对靠谱的。</p>
<br>
<br>
<h1 id="广而告之">广而告之</h1>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用scipy实现层次聚类分析</title>
      <link>https://hidadeng.github.io/blog/hierarchy_dendrogram_tutorial/</link>
      <pubDate>Fri, 18 May 2018 10:40:10 +0600</pubDate>
      
      <guid>/blog/hierarchy_dendrogram_tutorial/</guid>
      <description>使用scipy实现层次聚类分析</description>
      <content:encoded><![CDATA[<h2 id="代码下载">代码下载</h2>
<p><a href="hierarchy_dendrogram_code.zip"><strong>click to download</strong></a></p>
<h2 id="实验目的">实验目的</h2>
<p>如果您以前从未使用过树状图，那么使用树状图是查看多维数据如何聚集在一起的好方法。 在这本笔记本中，我将简单探索通过层次分析，借助树状图将其可视化。</p>
<br>
<h2 id="层次分析">层次分析</h2>
<p>层次分析是聚类分析的一种，scipy有这方面的封装包。</p>
<p>linkage函数从字面意思是链接，层次分析就是不断链接的过程，最终从n条数据，经过不断链接，最终聚合成一类，算法就此停止。</p>
<p>dendrogram是用来绘制树形图的函数。</p>
<br>
<h2 id="实验数据">实验数据</h2>
<p>grain_variety是标签，其他列为多种属性的值（特征）。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">scipy.cluster.hierarchy</span> <span class="kn">import</span> <span class="n">linkage</span><span class="p">,</span> <span class="n">dendrogram</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">seeds_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;seeds-less-rows.csv&#39;</span><span class="p">)</span>
<span class="n">seeds_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>area</th>
      <th>perimeter</th>
      <th>compactness</th>
      <th>length</th>
      <th>width</th>
      <th>asymmetry_coefficient</th>
      <th>groove_length</th>
      <th>grain_variety</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>14.88</td>
      <td>14.57</td>
      <td>0.8811</td>
      <td>5.554</td>
      <td>3.333</td>
      <td>1.018</td>
      <td>4.956</td>
      <td>Kama wheat</td>
    </tr>
    <tr>
      <th>1</th>
      <td>14.69</td>
      <td>14.49</td>
      <td>0.8799</td>
      <td>5.563</td>
      <td>3.259</td>
      <td>3.586</td>
      <td>5.219</td>
      <td>Kama wheat</td>
    </tr>
    <tr>
      <th>2</th>
      <td>14.03</td>
      <td>14.16</td>
      <td>0.8796</td>
      <td>5.438</td>
      <td>3.201</td>
      <td>1.717</td>
      <td>5.001</td>
      <td>Kama wheat</td>
    </tr>
    <tr>
      <th>3</th>
      <td>19.31</td>
      <td>16.59</td>
      <td>0.8815</td>
      <td>6.341</td>
      <td>3.810</td>
      <td>3.477</td>
      <td>6.238</td>
      <td>Rosa wheat</td>
    </tr>
    <tr>
      <th>4</th>
      <td>17.99</td>
      <td>15.86</td>
      <td>0.8992</td>
      <td>5.890</td>
      <td>3.694</td>
      <td>2.068</td>
      <td>5.837</td>
      <td>Rosa wheat</td>
    </tr>
  </tbody>
</table>
</div>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#移除文本数据列</span>
<span class="n">varieties</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">seeds_df</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="s1">&#39;grain_variety&#39;</span><span class="p">))</span>
<span class="n">varieties</span>
</code></pre></div><pre><code>['Kama wheat',
 'Kama wheat',
 'Kama wheat',
 'Rosa wheat',
 'Rosa wheat',
 'Rosa wheat',
 'Rosa wheat',
 'Rosa wheat',
 'Canadian wheat',
 'Canadian wheat',
 'Canadian wheat',
 'Canadian wheat',
 'Canadian wheat',
 'Canadian wheat']
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">samples</span> <span class="o">=</span> <span class="n">seeds_df</span><span class="o">.</span><span class="n">values</span>
<span class="nb">print</span><span class="p">(</span><span class="n">samples</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;samples的维度&#39;</span><span class="p">,</span><span class="n">samples</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div><pre><code>[[14.88   14.57    0.8811  5.554   3.333   1.018   4.956 ]
 [14.69   14.49    0.8799  5.563   3.259   3.586   5.219 ]
 [14.03   14.16    0.8796  5.438   3.201   1.717   5.001 ]
 [19.31   16.59    0.8815  6.341   3.81    3.477   6.238 ]
 [17.99   15.86    0.8992  5.89    3.694   2.068   5.837 ]
 [18.85   16.17    0.9056  6.152   3.806   2.843   6.2   ]
 [19.38   16.72    0.8716  6.303   3.791   3.678   5.965 ]
 [17.36   15.76    0.8785  6.145   3.574   3.526   5.971 ]
 [13.32   13.94    0.8613  5.541   3.073   7.035   5.44  ]
 [11.43   13.13    0.8335  5.176   2.719   2.221   5.132 ]
 [11.26   13.01    0.8355  5.186   2.71    5.335   5.092 ]
 [12.46   13.41    0.8706  5.236   3.017   4.987   5.147 ]
 [11.81   13.45    0.8198  5.413   2.716   4.898   5.352 ]
 [11.23   12.88    0.8511  5.14    2.795   4.325   5.003 ]]
samples的维度 (14, 7)
</code></pre>
<h3 id="使用linkage函数对samples进行层次聚类">使用linkage函数对samples进行层次聚类</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">X = linkage(y, method=&#39;single&#39;, metric=&#39;euclidean&#39;) 
</code></pre></div><p>sacipy中y是距离矩阵，我对此只是傻傻的理解成特征矩阵。 (m*n) m行代表m条记录,n代表n个特征</p>
<p>返回结果X是(m-1)*4的矩阵。 具体含义请看下面的案例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mergings</span> <span class="o">=</span> <span class="n">linkage</span><span class="p">(</span><span class="n">samples</span><span class="p">)</span>

<span class="c1">#我们发现mergings比samples少一行</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;sample维度&#39;</span><span class="p">,</span><span class="n">samples</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;mergings维度&#39;</span><span class="p">,</span><span class="n">mergings</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div><pre><code>sample维度 (14, 7)
mergings维度 (13, 4)
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#层次分析可视化，leaf的字体不旋转，大小为10。</span>
<span class="c1">#这里我们不显示每一条数据的具体名字标签（varieties），默认以数字标签显示</span>
<span class="n">dendrogram</span><span class="p">(</span><span class="n">mergings</span><span class="p">,</span><span class="n">leaf_rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">leaf_font_size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
<span class="c1">#在图中显示的数字是最细粒度的叶子，相当于每个样本数据点。</span>
</code></pre></div><p><img loading="lazy" src="output_7_0.png" alt="png"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mergings</span>
</code></pre></div><pre><code>array([[ 3.        ,  6.        ,  0.37233454,  2.        ],
       [11.        , 12.        ,  0.77366442,  2.        ],
       [10.        , 15.        ,  0.89804259,  3.        ],
       [ 5.        , 14.        ,  0.90978998,  3.        ],
       [13.        , 16.        ,  1.02732924,  4.        ],
       [ 0.        ,  2.        ,  1.18832161,  2.        ],
       [ 4.        , 17.        ,  1.28425969,  4.        ],
       [ 7.        , 20.        ,  1.62187345,  5.        ],
       [ 1.        , 19.        ,  2.02587613,  3.        ],
       [ 9.        , 18.        ,  2.13385537,  5.        ],
       [ 8.        , 23.        ,  2.323123  ,  6.        ],
       [22.        , 24.        ,  2.87625877,  9.        ],
       [21.        , 25.        ,  3.12231564, 14.        ]])
</code></pre>
<p>层次分析图从上到下看，依次是枝和叶。</p>
<p>第一列和第二列代表类标签，包含叶子和枝子。</p>
<p>第三列代表叶叶（或叶枝，枝枝）之间的距离</p>
<p>第四列代表该层次类中含有的样本数（记录数）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">X = linkage(y, method=&#39;single&#39;, metric=&#39;euclidean&#39;) 
</code></pre></div><p>method是指计算类间距离的方法,比较常用的有3种:</p>
<p>(1)single:最近邻,把类与类间距离最近的作为类间距</p>
<p>(2)average:平均距离,类与类间所有pairs距离的平均</p>
<p>(3)complete:最远邻,把类与类间距离最远的作为类间距</p>
<p>我们写曾侧分析法函数，看看不同的method从图中有什么区别</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">hierarchy_analysis</span><span class="p">(</span><span class="n">samples</span><span class="p">,</span><span class="n">method</span><span class="o">=</span><span class="s1">&#39;single&#39;</span><span class="p">):</span>
    <span class="n">mergings</span> <span class="o">=</span> <span class="n">linkage</span><span class="p">(</span><span class="n">samples</span><span class="p">,</span> <span class="n">method</span><span class="o">=</span><span class="n">method</span><span class="p">)</span>

    <span class="n">dendrogram</span><span class="p">(</span><span class="n">mergings</span><span class="p">,</span>
              <span class="n">labels</span><span class="o">=</span><span class="n">varieties</span><span class="p">,</span>
              <span class="n">leaf_rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">,</span>
              <span class="n">leaf_font_size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#single</span>
<span class="n">hierarchy_analysis</span><span class="p">(</span><span class="n">samples</span><span class="p">,</span><span class="n">method</span><span class="o">=</span><span class="s1">&#39;single&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="output_12_0.png" alt="png"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#average</span>
<span class="n">hierarchy_analysis</span><span class="p">(</span><span class="n">samples</span><span class="p">,</span><span class="n">method</span><span class="o">=</span><span class="s1">&#39;average&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="output_13_0.png" alt="png"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#complete</span>
<span class="n">hierarchy_analysis</span><span class="p">(</span><span class="n">samples</span><span class="p">,</span><span class="n">method</span><span class="o">=</span><span class="s1">&#39;complete&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="output_14_0.png" alt="png"  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">由于数据量比较少</span><span class="err">，</span><span class="n">complete和average方法做出来的图完全一样</span><span class="err">。</span>
</code></pre></div><br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>词嵌入测量不同群体对某概念的态度(偏见)</title>
      <link>https://hidadeng.github.io/blog/embeddingsandattitude/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/embeddingsandattitude/</guid>
      <description>人类在留下语言、文字的过程中，也留下了自己的偏见、态度等主观认知信息（偏见、态度）。词嵌入做为一种词向量模型，可以隐含上下文的情景信息，态度及偏见很容易保留在词向量的某些维度中。通过**词向量距离**的测算，就可以间接测得**不同群体** 对 **某概念**(组织、群体、品牌、地域等)的态度偏见。</description>
      <content:encoded><![CDATA[<p>前几天刚刚分享了，</p>
<p><a href="https://hidadeng.github.io/blog/wordembeddingsinsocialscience/">大数据时代下社会科学研究方法的拓展—基于词嵌入技术的文本分析的应用</a></p>
<p>人类在留下语言、文字的过程中，也留下了自己的偏见、态度等主观认知信息（偏见、态度）。词嵌入做为一种词向量模型，可以隐含上下文的情景信息，态度及偏见很容易保留在词向量的某些维度中。通过<strong>词向量距离</strong>的测算，就可以间接测得<strong>不同群体</strong> 对 <strong>某概念</strong>(组织、群体、品牌、地域等)的态度偏见。</p>
<p>下面整理了几篇 <strong>集智俱乐部</strong> 分享过词嵌入解读文章， 部分含视频讲解。文章末尾还有更多词嵌入的最新文献，感兴趣的同学也可以收藏。</p>
<h2 id="tips">Tips</h2>
<p>pnas的数据挖掘的论文，大多都含有数据及代码。这里有几个python库，可以可视化刻板印象</p>
<ul>
<li>
<p><a href="https://hidadeng.github.io/blog/whatlies/">whatlies库|可视化词向量</a></p>
</li>
<li>
<p><a href="https://github.com/uber-research/parallax">parallax</a></p>
</li>
<li>
<p><a href="https://github.com/bhavyaghai/WordBias">WordBias</a></p>
</li>
</ul>
<br>
<h2 id="偏见">偏见</h2>
<h3 id="文化中的几何词嵌入如何捕捉文化社会学的微妙关系">文化中的几何：词嵌入如何捕捉文化社会学的微妙关系</h3>
<blockquote>
<p>Kozlowski, A.C., Taddy, M. and Evans, J.A., 2019. The geometry of culture: Analyzing the meanings of class through word embeddings. American Sociological Review, 84(5), pp.905-949.</p>
</blockquote>
<p>来自芝加哥大学和亚马逊的研究者，针对海量文本资料，将所有词向量分解为性别，阶级和种族三个维度，并通过将不同词向量在这三个维度上的投影来给出该词的性别、阶级和种族属性。本文是对这项工作的解读。</p>
<p><a href="https://mp.weixin.qq.com/s/vhtlIggfSp7GUUXNSocYmA">点击查看详细解读</a></p>
<br>
<h3 id="故事的形态可预期其成功">故事的形态可预期其成功</h3>
<blockquote>
<p>Toubia, O., Berger, J. and Eliashberg, J., 2021. How quantifying the shape of stories predicts their success. <em>Proceedings of the National Academy of Sciences</em>, <em>118</em>(26).</p>
</blockquote>
<p>通过NLP，分析了电影、电视剧及科研论文的叙事模式，与其成功之间的关系。发现不同类型的文章，由于大众的认知偏好，促成其成功的叙事模式是不同。作为计算社会学的一部分，该研究通过量化分析，确认了面对不同的叙事模式，存在普遍的认知偏好。</p>
<p><a href="https://mp.weixin.qq.com/s/Y0pDte4GeAAqoZhmP8B8WA">点击查看详细解读</a></p>
<br>
<h3 id="童话里都是骗人的用词向量解析故事中的性别偏见">童话里都是骗人的？用词向量解析故事中的性别偏见</h3>
<blockquote>
<ul>
<li>Xu H, Zhang Z, Wu L, Wang C_J. The Cinderella Complex: Word Embeddings Quantify Gender Stereotypes in Movies and Books. Available from <a href="https://arxiv.org/abs/1811.04599">https://arxiv.org/abs/1811.04599</a>. 2019.06.</li>
<li>Caliskan A, Bryson JJ, Narayanan A. Semantics derived automatically from language corpora contain human-like biases. Science. 2017;356: 183–186.</li>
<li>Garg N, Schiebinger L, Jurafsky D, Zou J. Word embeddings quantify 100 years of gender and ethnic stereotypes . Proceedings of the National Academy of Sciences. 2018. pp. E3635–E3644. doi:10.1073/pnas.1720347115</li>
<li>Dowling C. The Cinderella Complex: Women’s Hidden Fear of Independence. 1982.</li>
</ul>
</blockquote>
<p>“男人是女人通往幸福的道路”——这种偏见是如何通过一个精心设计的故事创造出来的？灰姑娘式的叙事结构形成并强化了&quot;灰姑娘情结&quot;，即女性对独立的恐惧和被他人照顾的无意识欲望。&ldquo;灰姑娘情结&quot;在不同时期和不同文化中广泛存在，这提醒研究我们有必要通过教育、政策和其他方面创造新的叙述方式来与之作斗争。</p>
<p>研究者提出了计算机化的框架分析，通过描绘故事的形状来测量性别刻板印象。词嵌入技术提供了一个强大的替代情感词典的方法，首先，研究团队构建一个“高兴——不高兴”的情感轴，然后计算余弦相似性来得到每一个词的情感得分。</p>
<p><a href="https://mp.weixin.qq.com/s/jY_hobh589D9mEN2-IZKVA">点击查看详细解读</a></p>
<br>
<h3 id="词向量带你洞悉美国性别与种族歧视的100年历史演变">词向量带你洞悉美国性别与种族歧视的100年历史演变</h3>
<p>性别歧视、种族歧视都是存在了上百年的社会现象，这些现象在不同历史时期有怎样的发展变化呢？发表在PNAS这篇论文中，研究者用词向量的方法研究大量文本数据，挖掘出美国近一百年文化刻板印象的演化。</p>
<blockquote>
<p>Garg, N., Schiebinger, L., Jurafsky, D. and Zou, J., 2018. Word embeddings quantify 100 years of gender and ethnic stereotypes. <em>Proceedings of the National Academy of Sciences</em>, <em>115</em>(16), pp.E3635-E3644.</p>
</blockquote>
<p>详细解读请看 <a href="https://mp.weixin.qq.com/s/VroknX42MBdckptv4tELJg">https://mp.weixin.qq.com/s/VroknX42MBdckptv4tELJg</a></p>
<br>
<h3 id="利用向量表征挖掘知识的创造和组织">利用向量表征挖掘知识的创造和组织</h3>
<p>词向量是自然语言处理中的一项基础性技术，通过词语之间的共同出现网络，可以在低维空间表征词汇间的语义相关性。4月23日发表在 Science Advences 的论文，通过论文引用网络，结合神经网络为不同的学科的科研期刊构建了连续的向量化嵌入表征，从中可以了解新知是如何被创造和组织的。</p>
<blockquote>
<p>Peng, H., Ke, Q., Budak, C., Romero, D.M. and Ahn, Y.Y., 2021. Neural embeddings of scholarly periodicals reveal complex disciplinary organizations. <em><strong>Science Advances</strong></em>, <em>7</em>(17), p.eabb9004.</p>
</blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/372087496">点击查看详细解读</a></p>
<br>
<h3 id="量化在线平台中的社会组织和政治两极分化">量化在线平台中的社会组织和政治两极分化</h3>
<p>大量选择志同道合的人可能会分裂和极化网络社会，特别是在党派差异方面。 通过利用大规模的聚合行为模式来量化在线社区在社会维度上的定位。应用 14 年来在 Reddit 上 10,000 个社区中发表的 51 亿条评论，我们衡量了宏观社区结构在年龄、性别和美国政治党派方面的组织方式。</p>
<p>检查政治内容，我们发现 Reddit 在 2016 年美国总统大选前后经历了一次重大的两极分化事件。然而，与传统观念相反，个人层面的两极分化是罕见的。 2016 年的系统级转变主要是由新用户的到来推动的。 Reddit 上的政治两极分化与平台上的先前活动无关，而是在时间上与外部事件保持一致。</p>
<p>研究还观察到明显的意识形态不对称，2016 年两极分化的急剧增加完全归因于右翼活动的变化。这种方法广泛适用于在线互动的研究，我们的研究结果对在线平台的设计、理解在线行为的社会背景以及量化在线两极分化的动态和机制具有重要意义。</p>
<blockquote>
<p>Waller, I. and Anderson, A., 2021. Quantifying social organization and political polarization in online platforms. <em>Nature</em>, <em>600</em>(7888), pp.264-268.
<a href="https://www.bilibili.com/video/av422602096">点击查看详细解读</a></p>
</blockquote>
<br>
<br>
<h2 id="更多文献">更多文献</h2>
<ul>
<li>Arseniev-Koehler, A., Cochran, S.D., Mays, V.M., Chang, K.W. and Foster, J.G., 2022. Integrating topic modeling and word embedding to characterize violent deaths. <em>Proceedings of the National Academy of Sciences</em>, <em>119</em>(10), p.e2108801119.</li>
<li>Bollen, J., Ten Thij, M., Breithaupt, F., Barron, A.T., Rutter, L.A., Lorenzo-Luaces, L. and Scheffer, M., 2021. Historical language records reveal a surge of cognitive distortions in recent decades. <em>Proceedings of the National Academy of Sciences</em>, <em>118</em>(30).</li>
<li>Kim, L., Smith, D.S., Hofstra, B. and McFarland, D.A., 2022. Gendered knowledge in fields and academic careers. <em>Research Policy</em>, <em>51</em>(1), p.104411.</li>
<li>Lawson, M.A., Martin, A.E., Huda, I. and Matz, S.C., 2022. Hiring women into senior leadership positions is associated with a reduction in gender stereotypes in organizational language. <em>Proceedings of the National Academy of Sciences</em>, <em>119</em>(9), p.e2026443119.</li>
<li>Brady, W.J., McLoughlin, K., Doan, T.N. and Crockett, M.J., 2021. How social learning amplifies moral outrage expression in online social networks. <em>Science Advances</em>, <em>7</em>(33), p.eabe5641.</li>
<li>Bailey, A.H., Williams, A. and Cimpian, A., 2022. Based on billions of words on the internet, people= men. <em>Science Advances</em>, <em>8</em>(13), p.eabm2463.</li>
<li>Lewis, M. and Lupyan, G., 2020. Gender stereotypes are reflected in the distributional structure of 25 languages. <em>Nature human behaviour</em>, <em>4</em>(10), pp.1021-1028.</li>
<li>Schramowski, P., Turan, C., Andersen, N., Rothkopf, C.A. and Kersting, K., 2022. Large pre-trained language models contain human-like biases of what is right and wrong to do. <em>Nature Machine Intelligence</em>, <em>4</em>(3), pp.258-268.</li>
<li>Costa-jussà, M.R., 2019. An analysis of gender bias studies in natural language processing. <em>Nature Machine Intelligence</em>, <em>1</em>(11), pp.495-496.</li>
<li>Rodman, E., 2020. A timely intervention: Tracking the changing meanings of political concepts with word vectors. <em><strong>Political Analysis</strong></em>, <em>28</em>(1), pp.87-111.</li>
<li>Bhatia, S., 2017. Associative judgment and vector space semantics. <em><strong>Psychological review</strong></em>, <em>124</em>(1), p.1.</li>
<li>Kurdi, B., Mann, T.C., Charlesworth, T.E. and Banaji, M.R., 2019. The relationship between implicit intergroup attitudes and beliefs. <em>Proceedings of the National Academy of Sciences</em>, <em>116</em>(13), pp.5862-5871.</li>
<li>Charlesworth, T.E., Yang, V., Mann, T.C., Kurdi, B. and Banaji, M.R., 2021. Gender stereotypes in natural language: Word embeddings show robust consistency across child and adult language corpora of more than 65 million words. <em><strong>Psychological Science</strong></em>, <em>32</em>(2), pp.218-240.</li>
<li>Bhatia, S., 2019. Predicting risk perception: New insights from data science. <em><strong>Management Science</strong></em>, <em>65</em>(8), pp.3800-3823.</li>
<li>Rheault, L. and Cochrane, C., 2020. Word embeddings for the analysis of ideological placement in parliamentary corpora. <em>Political Analysis</em>, <em>28</em>(1), pp.112-133.</li>
<li>Yang, K., Lau, R.Y. and Abbasi, A., 2022. Getting Personal: A Deep Learning Artifact for Text-Based Measurement of Personality. <em><strong>Information Systems Research</strong></em>.</li>
<li>Rodman, E., 2020. A timely intervention: Tracking the changing meanings of political concepts with word vectors. <em>Political Analysis</em>, <em>28</em>(1), pp.87-111.</li>
<li>Margulis, E.H., Wong, P.C., Turnbull, C., Kubit, B.M. and McAuley, J.D., 2022. Narratives imagined in response to instrumental music reveal culture-bounded intersubjectivity. <em>Proceedings of the National Academy of Sciences</em>, <em>119</em>(4).</li>
<li>Thompson, B., Roberts, S.G. and Lupyan, G., 2020. Cultural influences on word meanings revealed through large-scale semantic alignment. <em>Nature Human Behaviour</em>, <em>4</em>(10), pp.1029-1038.</li>
</ul>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
