<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ggplot2 on 邓旭东</title>
    <link>/tags/ggplot2/</link>
    <description>Recent content in ggplot2 on 邓旭东</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 20 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>R语言 |  使用ggsci包绘制sci风格图表</title>
      <link>https://textdata.cn/blog/2022-09-20-r-ggsci/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-20-r-ggsci/</guid>
      <description>使用R语言ggsci包定制sci风格的绘图</description>
      <content:encoded><![CDATA[


<p>今天分享一个R语言ggsci包，帮你绘制出美观舒服，又合期刊编辑审美风格的图表。</p>
<p><br></p>
<div id="安装" class="section level2">
<h2>安装</h2>
<pre class="r"><code>install.packages(&quot;ggsci&quot;)
#remotes::install_github(&quot;nanxstats/ggsci&quot;)</code></pre>
<p>使用 <code>vignette("ggsci")</code>可以查看ggsci的vignette。</p>
<p><br></p>
</div>
<div id="期刊风格" class="section level2">
<h2>期刊风格</h2>
<p>ggsci支持的主题风格主要参考自期刊、可视化库</p>
<table>
<colgroup>
<col width="50%" />
<col width="50%" />
</colgroup>
<thead>
<tr class="header">
<th align="left">风格</th>
<th align="left">期刊、技术框架</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left"><strong>NPG</strong></td>
<td align="left">Nature旗下期刊(Nature Publishing Group)</td>
</tr>
<tr class="even">
<td align="left"><strong>AAAS</strong></td>
<td align="left">Science旗下期刊()</td>
</tr>
<tr class="odd">
<td align="left"><strong>NEJM</strong></td>
<td align="left">新英格兰医学杂志(New England Journal of Medicine)</td>
</tr>
<tr class="even">
<td align="left"><strong>Lancet</strong></td>
<td align="left">柳叶刀杂志(Lancet Oncology)</td>
</tr>
<tr class="odd">
<td align="left"><strong>JAMA</strong></td>
<td align="left">美国医学学会杂志(Journal of the American Medical Association)</td>
</tr>
<tr class="even">
<td align="left"><strong>JCO</strong></td>
<td align="left">临床肿瘤学杂志(Journal of Clinical Oncology)</td>
</tr>
<tr class="odd">
<td align="left"><strong>UCSCGB</strong></td>
<td align="left">UCSC基因组浏览器(UCSC Genome Browser)</td>
</tr>
<tr class="even">
<td align="left"><strong>D3</strong></td>
<td align="left">d3.js</td>
</tr>
<tr class="odd">
<td align="left">…</td>
<td align="left">…</td>
</tr>
</tbody>
</table>
<p><br></p>
</div>
<div id="基本图表" class="section level2">
<h2>基本图表</h2>
<p>这里准备一个常见的ggplot2图表</p>
<pre class="r"><code>library(&quot;ggsci&quot;)
library(&quot;ggplot2&quot;)
library(&quot;gridExtra&quot;)

data(&quot;diamonds&quot;)

p1 = ggplot(subset(diamonds, carat &gt;= 2.2),
       aes(x = table, y = price, colour = cut)) +
  geom_point(alpha = 0.7) +
  geom_smooth(method = &quot;loess&quot;, alpha = 0.05, size = 1, span = 1) +
  theme_bw()

p2 = ggplot(subset(diamonds, carat &gt; 2.2 &amp; depth &gt; 55 &amp; depth &lt; 70),
       aes(x = depth, fill = cut)) +
  geom_histogram(colour = &quot;black&quot;, binwidth = 1, position = &quot;dodge&quot;) +
  theme_bw()

grid.arrange(p1, p2, ncol=2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-2-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="gallery" class="section level2">
<h2>Gallery</h2>
<div id="npg" class="section level3">
<h3>NPG</h3>
<p>ature旗下期刊(Nature Publishing Group)配色风格</p>
<pre class="r"><code>p1_npg = p1 + scale_color_npg()
p2_npg = p2 + scale_fill_npg()
grid.arrange(p1_npg, p2_npg, ncol = 2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-3-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="aaas" class="section level3">
<h3>AAAS</h3>
<p>Science旗下期刊(American Association for the Advancement of Science)配色风格</p>
<pre class="r"><code>p1_aaas = p1 + scale_color_aaas()
p2_aaas = p2 + scale_fill_aaas()
grid.arrange(p1_aaas, p2_aaas, ncol = 2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-4-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="nejm" class="section level3">
<h3>NEJM</h3>
<p>新英格兰医学杂志(New England Journal of Medicine)配色风格</p>
<pre class="r"><code>p1_nejm = p1 + scale_color_nejm()
p2_nejm = p2 + scale_fill_nejm()
grid.arrange(p1_nejm, p2_nejm, ncol = 2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-5-1.png" width="672" />
<br></p>
</div>
<div id="lancet" class="section level3">
<h3>Lancet</h3>
<p>柳叶刀杂(Lancet)志配色风格</p>
<pre class="r"><code>p1_lancet = p1 + scale_color_lancet()
p2_lancet = p2 + scale_fill_lancet()
grid.arrange(p1_lancet, p2_lancet, ncol = 2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-6-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="jama" class="section level3">
<h3>JAMA</h3>
<p>美国医学学会杂志(Journal of the American Medical Association)配色风格</p>
<pre class="r"><code>p1_jama = p1 + scale_color_jama()
p2_jama = p2 + scale_fill_jama()
grid.arrange(p1_jama, p2_jama, ncol = 2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-7-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="jco" class="section level3">
<h3>JCO</h3>
<p>临床肿瘤学杂志(Journal of Clinical Oncology)配色风格</p>
<pre class="r"><code>p1_jco = p1 + scale_color_jco()
p2_jco = p2 + scale_fill_jco()
grid.arrange(p1_jco, p2_jco, ncol = 2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-8-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="d3" class="section level3">
<h3>D3</h3>
<p>d3.js配色风格</p>
<pre class="r"><code>p1_d3 = p1 + scale_color_d3()
p2_d3 = p2 + scale_fill_d3()
grid.arrange(p1_d3, p2_d3, ncol = 2)</code></pre>
<p><img src="/blog/2022-09-20-r-ggsci/index_files/figure-html/unnamed-chunk-9-1.png" width="672" /></p>
<p><br></p>
</div>
</div>
<div id="广而告之" class="section level2">
<h2>广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>R语言 | ggpubr包让数据可视化更加优雅</title>
      <link>https://textdata.cn/blog/2022-09-20-r-ggplot2-ggpubr/</link>
      <pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-20-r-ggplot2-ggpubr/</guid>
      <description>ggplot2能绘制很多美观图表，但是语法太难。ggpubr包让数据可视化更加优雅</description>
      <content:encoded><![CDATA[


<p><a href="https://ggplot2.tidyverse.org/">Hadley Wickham的ggplot2</a> 是一个出色且灵活的包，用于在 R 中进行优雅的数据可视化。但是，默认生成的图需要一些格式才能发送它们以供发布。 此外，要自定义 ggplot，语法是负责的，这提高了没有高级 R 编程技能的研究人员的难度。</p>
<p><strong><a href="https://rpkgs.datanovia.com/ggpubr">ggpubr包</a></strong> 提供了一些易于使用的功能，可以使用更简单的语法代码绘制出可供发表出版的图表。</p>
<p><br></p>
<div id="安装" class="section level2">
<h2>安装</h2>
<pre class="r"><code>install.packages(&quot;ggpubr&quot;)</code></pre>
<p><br>
## 折线图</p>
<pre class="r"><code>library(ggpubr)

df &lt;- data.frame(supp=rep(c(&quot;VC&quot;, &quot;OJ&quot;), each=3),
   dose=rep(c(&quot;D0.5&quot;, &quot;D1&quot;, &quot;D2&quot;),2),
   len=c(6.8, 15, 33, 4.2, 10, 29.5))
#print(df)
#&gt;   supp dose  len
#&gt; 1   VC D0.5  6.8
#&gt; 2   VC   D1 15.0
#&gt; 3   VC   D2 33.0
#&gt; 4   OJ D0.5  4.2
#&gt; 5   OJ   D1 10.0
#&gt; 6   OJ   D2 29.5

# Plot &quot;len&quot; by &quot;dose&quot; and
# Change line types and point shapes by a second groups: &quot;supp&quot;
ggline(df, x=&quot;dose&quot;, y=&quot;len&quot;,
  linetype = &quot;supp&quot;, shape = &quot;supp&quot;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-2-1.png" width="672" /></p>
<pre class="r"><code># Change colors
# +++++++++++++++++++++

# Change color by group: &quot;supp&quot;
# Use custom color palette
ggline(df, x=&quot;dose&quot;, y=&quot;len&quot;,
   linetype = &quot;supp&quot;, shape = &quot;supp&quot;,
   color = &quot;supp&quot;, palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;))</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-3-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="散点图" class="section level2">
<h2>散点图</h2>
<pre class="r"><code># Load data
data(&quot;mtcars&quot;)
df &lt;- mtcars
df$cyl &lt;- as.factor(df$cyl)
#head(df[, c(&quot;wt&quot;, &quot;mpg&quot;, &quot;cyl&quot;)], 3)
#&gt;                  wt  mpg cyl
#&gt; Mazda RX4     2.620 21.0   6
#&gt; Mazda RX4 Wag 2.875 21.0   6
#&gt; Datsun 710    2.320 22.8   4

# Textual annotation
# +++++++++++++++++
df$name &lt;- rownames(df)
ggscatter(df, x = &quot;wt&quot;, y = &quot;mpg&quot;,
   color = &quot;cyl&quot;, palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),
   label = &quot;name&quot;, repel = TRUE)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-4-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="饼形图" class="section level2">
<h2>饼形图</h2>
<pre class="r"><code>df &lt;- data.frame(
 group = c(&quot;Male&quot;, &quot;Female&quot;, &quot;Child&quot;),
  value = c(25, 25, 50))

#head(df)
#&gt;    group value
#&gt; 1   Male    25
#&gt; 2 Female    25
#&gt; 3  Child    50


# Basic pie charts
# ++++++++++++++++++++++++++++++++

ggpie(df, &quot;value&quot;, label = &quot;group&quot;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-5-1.png" width="672" /></p>
<pre class="r"><code>ggpie(df, &quot;value&quot;, label = &quot;group&quot;, fill=&quot;group&quot;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-6-1.png" width="672" /></p>
<pre class="r"><code>ggpie(df, &quot;value&quot;, label = &quot;group&quot;, fill=&quot;group&quot;, color=&#39;white&#39;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-7-1.png" width="672" /></p>
<pre class="r"><code>ggpie(df, &quot;value&quot;, label = &quot;group&quot;, fill=&quot;group&quot;, 
      palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),
      color=&#39;white&#39;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-8-1.png" width="672" /></p>
<pre class="r"><code>labs &lt;- paste0(df$group, &quot; (&quot;, df$value, &quot;%)&quot;)
#&gt; &quot;Male (25%)&quot;   &quot;Female (25%)&quot; &quot;Child (50%)&quot; 

ggpie(df, &quot;value&quot;, label = labs, fill=&quot;group&quot;, 
      palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),
      color=&#39;white&#39;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-9-1.png" width="672" /></p>
<pre class="r"><code>labs &lt;- paste0(df$group, &quot; (&quot;, df$value, &quot;%)&quot;)
#&gt; &quot;Male (25%)&quot;   &quot;Female (25%)&quot; &quot;Child (50%)&quot; 

ggpie(df, &quot;value&quot;, label = labs, fill=&quot;group&quot;, 
      lab.pos = &quot;in&quot;, lab.font = &quot;white&quot;,
      palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),
      color=&#39;white&#39;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-10-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="甜甜圈图" class="section level2">
<h2>甜甜圈图</h2>
<pre class="r"><code>#&gt; head(df)
#&gt;    group value
#&gt; 1   Male    25
#&gt; 2 Female    25
#&gt; 3  Child    50
#&gt; 
# Change the position and font color of labels
ggdonutchart(df, &quot;value&quot;, label = labs,
   lab.pos = &quot;in&quot;, lab.font = &quot;white&quot;,
   fill = &quot;group&quot;, color = &quot;white&quot;,
   palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;))</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-11-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="点图" class="section level2">
<h2>点图</h2>
<pre class="r"><code># Load data
data(&quot;mtcars&quot;)
dfm &lt;- mtcars
# Convert the cyl variable to a factor
dfm$cyl &lt;- as.factor(dfm$cyl)
# Add the name colums
dfm$name &lt;- rownames(dfm)
# Inspect the data
#head(dfm[, c(&quot;name&quot;, &quot;wt&quot;, &quot;mpg&quot;, &quot;cyl&quot;)])
#&gt;                                name    wt  mpg cyl
#&gt; Mazda RX4                 Mazda RX4 2.620 21.0   6
#&gt; Mazda RX4 Wag         Mazda RX4 Wag 2.875 21.0   6
#&gt; Datsun 710               Datsun 710 2.320 22.8   4
#&gt; Hornet 4 Drive       Hornet 4 Drive 3.215 21.4   6
#&gt; Hornet Sportabout Hornet Sportabout 3.440 18.7   8
#&gt; Valiant                     Valiant 3.460 18.1   6

ggdotchart(dfm, x = &quot;name&quot;, y = &quot;mpg&quot;,
           color = &quot;cyl&quot;,                                # Color by groups
           palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;), # Custom color palette
           sorting = &quot;ascending&quot;,                        # Sort value in descending order
           add = &quot;segments&quot;,                             # Add segments from y = 0 to dots
           ggtheme = theme_pubr()                        # ggplot2 theme
           )</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-12-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="密度图" class="section level2">
<h2>密度图</h2>
<pre class="r"><code>set.seed(1234)
wdata = data.frame(
   sex = factor(rep(c(&quot;F&quot;, &quot;M&quot;), each=200)),
   weight = c(rnorm(200, 55), rnorm(200, 58)))
#head(wdata, 4)
#&gt;   sex   weight
#&gt; 1   F 53.79293
#&gt; 2   F 55.27743
#&gt; 3   F 56.08444
#&gt; 4   F 52.65430

# Density plot with mean lines and marginal rug
# :::::::::::::::::::::::::::::::::::::::::::::::::::
# Change outline and fill colors by groups (&quot;sex&quot;)
# Use custom palette
ggdensity(wdata, x = &quot;weight&quot;, color=&#39;sex&#39;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-13-1.png" width="672" /></p>
<pre class="r"><code>ggdensity(wdata, x = &quot;weight&quot;, color=&#39;sex&#39;, add=&#39;mean&#39;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-14-1.png" width="672" /></p>
<pre class="r"><code>ggdensity(wdata, x = &quot;weight&quot;, color=&#39;sex&#39;, add=&#39;mean&#39;, rug=TRUE)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-15-1.png" width="672" /></p>
<pre class="r"><code>ggdensity(wdata, x = &quot;weight&quot;, color=&#39;sex&#39;, add=&#39;mean&#39;, rug=TRUE, fill=&#39;sex&#39;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-16-1.png" width="672" /></p>
<pre class="r"><code>ggdensity(wdata, x = &quot;weight&quot;, color=&#39;sex&#39;, add=&#39;mean&#39;, rug=TRUE, fill=&#39;sex&#39;, 
          palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;))</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-17-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="直方图" class="section level2">
<h2>直方图</h2>
<pre class="r"><code># Histogram plot with mean lines and marginal rug
# :::::::::::::::::::::::::::::::::::::::::::::::::::
# Change outline and fill colors by groups (&quot;sex&quot;)
# Use custom color palette
gghistogram(wdata, x = &quot;weight&quot;,
   add = &quot;mean&quot;, rug = TRUE,
   color = &quot;sex&quot;, fill = &quot;sex&quot;,
   palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;))</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-18-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="箱图" class="section level2">
<h2>箱图</h2>
<pre class="r"><code># Load data
data(&quot;ToothGrowth&quot;)
df &lt;- ToothGrowth
#head(df, 4)
#&gt;    len supp dose
#&gt; 1  4.2   VC  0.5
#&gt; 2 11.5   VC  0.5
#&gt; 3  7.3   VC  0.5
#&gt; 4  5.8   VC  0.5

# Box plots with jittered points
# :::::::::::::::::::::::::::::::::::::::::::::::::::
# Change outline colors by groups: dose
# Use custom color palette
# Add jitter points and change the shape by groups
 p &lt;- ggboxplot(df, x = &quot;dose&quot;, y = &quot;len&quot;, add = &quot;jitter&quot;,
                color = &quot;dose&quot;, shape = &quot;dose&quot;, 
                palette =c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;))
 p</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-19-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="条形图" class="section level2">
<h2>条形图</h2>
<pre class="r"><code># Load data
data(&quot;mtcars&quot;)
dfm &lt;- mtcars
# Convert the cyl variable to a factor
dfm$cyl &lt;- as.factor(dfm$cyl)
# Add the name colums
dfm$name &lt;- rownames(dfm)
# Inspect the data
#head(dfm[, c(&quot;name&quot;, &quot;wt&quot;, &quot;mpg&quot;, &quot;cyl&quot;)])
#&gt;                                name    wt  mpg cyl
#&gt; Mazda RX4                 Mazda RX4 2.620 21.0   6
#&gt; Mazda RX4 Wag         Mazda RX4 Wag 2.875 21.0   6
#&gt; Datsun 710               Datsun 710 2.320 22.8   4
#&gt; Hornet 4 Drive       Hornet 4 Drive 3.215 21.4   6
#&gt; Hornet Sportabout Hornet Sportabout 3.440 18.7   8
#&gt; Valiant                     Valiant 3.460 18.1   6

ggbarplot(dfm, x = &quot;name&quot;, y = &quot;mpg&quot;,
          fill = &quot;cyl&quot;,               # change fill color by cyl
          color = &quot;white&quot;,            # Set bar border colors to white
          palette = &quot;jco&quot;,            # jco journal color palett. see ?ggpar
          sort.val = &quot;desc&quot;,          # Sort the value in dscending order
          sort.by.groups = TRUE,      # Sort inside each group
          x.text.angle = 90           # Rotate vertically x axis texts
          )</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-20-1.png" width="672" /></p>
<pre class="r"><code>ggbarplot(dfm, x = &quot;name&quot;, y = &quot;mpg&quot;,
          fill = &quot;cyl&quot;,               # change fill color by cyl
          color = &quot;white&quot;,            # Set bar border colors to white
          palette = &quot;jco&quot;,            # jco journal color palett. see ?ggpar
          sort.val = &quot;desc&quot;,          # Sort the value in dscending order
          sort.by.groups = TRUE,      # Don&#39;t sort inside each group
          x.text.angle = 90,          # Rotate vertically x axis texts
          legend.title = &quot;CYL&quot;        # Set legend title
          )</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-21-1.png" width="672" />
<br></p>
</div>
<div id="表格" class="section level2">
<h2>表格</h2>
<pre class="r"><code>#Medium blue (mBlue) theme
ggtexttable(head(iris), rows = NULL, theme = ttheme(&quot;mBlue&quot;))</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-22-1.png" width="672" /></p>
<pre class="r"><code>main.title &lt;- &quot;Edgar Anderson&#39;s Iris Data&quot;
subtitle &lt;- paste0(
&quot;This famous (Fisher&#39;s or Anderson&#39;s) iris data set gives the measurements&quot;,
&quot; in centimeters of the variables sepal length and width and petal length and width,&quot;,
 &quot; respectively, for 50 flowers from each of 3 species of iris.&quot;,
 &quot; The species are Iris setosa, versicolor, and virginica.&quot;
) %&gt;%
 strwrap(width = 80) %&gt;%
 paste(collapse = &quot;\n&quot;)

tab &lt;- ggtexttable(head(iris), theme = ttheme(&quot;light&quot;))
tab %&gt;%
 tab_add_title(text = subtitle, face = &quot;plain&quot;, size = 10) %&gt;%
 tab_add_title(text = main.title, face = &quot;bold&quot;, padding = unit(0.1, &quot;line&quot;)) %&gt;%
 tab_add_footnote(text = &quot;*Table created using ggpubr&quot;, size = 10, face = &quot;italic&quot;)</code></pre>
<p><img src="/blog/2022-09-20-r-ggplot2-ggpubr/index_files/figure-html/unnamed-chunk-23-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="广而告之" class="section level2">
<h2>广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>R语言 |  ggplot2简明绘图之直方图</title>
      <link>https://textdata.cn/blog/2022-09-04-r-ggplot2-histogram/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-04-r-ggplot2-histogram/</guid>
      <description>教你理解图层、数geom、labs等函数，轻松上手ggplot2</description>
      <content:encoded><![CDATA[


<blockquote>
<p>原文: <a href="https://www.miriamheiss.com/posts/histogram-ggplot/" class="uri">https://www.miriamheiss.com/posts/histogram-ggplot/</a></p>
</blockquote>
<p>ggplot() 函数对任何数据科学家都是必不可少的, ta是一种非常简单的绘图函数。刚开始接触可能看起来很难， 不过不要害怕，因为一旦学了基础知识，一切都会变得清晰！ 让我们开始！</p>
<p>之前分享过 <a href="https://textdata.cn/blog/2022-09-04-r-ggplot2-simple-tutorial/">R语言 | ggplot2简明绘图之散点图</a>,是以散点图为例简单讲解ggplot2的绘图，今天我们将以直方图作为主讲图形。</p>
<p><img src="img/nobel-vis.png" /></p>
<p>直方图是另一种ggplot2常用的图形，与散点图类似，也是分多个图层进行逐层绘制。</p>
<p><br></p>
<div id="准备" class="section level2">
<h2>准备</h2>
<p>导入本文要用到的包</p>
<pre class="r"><code>library(tidyverse) </code></pre>
<pre><code>## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
## ✔ ggplot2 3.3.6     ✔ purrr   0.3.4
## ✔ tibble  3.1.8     ✔ dplyr   1.0.9
## ✔ tidyr   1.2.0     ✔ stringr 1.4.1
## ✔ readr   2.1.2     ✔ forcats 0.5.1
## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
## ✖ dplyr::filter() masks stats::filter()
## ✖ dplyr::lag()    masks stats::lag()</code></pre>
<pre class="r"><code>library(primer.data) #准备数据
library(showtext)</code></pre>
<pre><code>## Loading required package: sysfonts
## Loading required package: showtextdb</code></pre>
<pre class="r"><code>showtext_auto()  #显示中文

#install.packages(&quot;MetBrewer&quot;)
library(MetBrewer) #配色包</code></pre>
<p><br></p>
</div>
<div id="选择数据" class="section level2">
<h2>选择数据</h2>
<p>使用data()函数可以查看现有的数据集有哪些，</p>
<pre><code>data()</code></pre>
<p>这里选择nobel，使用View(nobel)可以在新打开一个窗口，方便了解数据</p>
<pre><code>View(nobel)</code></pre>
<p><img src="img/View.png" /></p>
<p><br></p>
</div>
<div id="画布gglot" class="section level2">
<h2>画布gglot</h2>
<p>画画需要画布，对于数据分析的绘图也是同理。导入相关R包后， 用ggplot函数构造一个画布。因为还没设定数据，所以这是一个空画布</p>
<pre class="r"><code>ggplot()</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-2-1.png" width="672" /></p>
<p>我们将使用 nobel数据集，传入数据的代码ggplot(data=nobel)</p>
<pre class="r"><code>ggplot(data=nobel)</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-3-1.png" width="672" /></p>
<p>画布看起来依然是空白的，不要紧张。理解这个之前类比PS这类绘图软件，将修图工作看做是很多个图层的叠加。现在我们使用时依然在最底层的ggplot图层，在ggplot函数内添加mapping=aes()参数，准备添加x轴、y轴、color。的图层。</p>
<pre class="r"><code>ggplot(data=nobel,
       mapping=aes())</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-4-1.png" width="672" /></p>
<p>注意了，现在图层即将发生变化。我们选择设置x轴 <code>aes(x=year)</code></p>
<ul>
<li>x轴 year</li>
</ul>
<pre class="r"><code>ggplot(data=nobel,
       mapping=aes(x=year))</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-5-1.png" width="672" /></p>
<p>现在我们将开始添加高层次的图层，也会显示越来越多的信息。</p>
<p><br></p>
</div>
<div id="添加geom" class="section level2">
<h2>添加geom</h2>
<p>现在添加geom层，该层是通过 <code>+</code> 构建在ggplot层之上。这里使用 <code>geom_histogram()</code> 绘制直方图，</p>
<pre class="r"><code>ggplot(data=nobel,
       mapping=aes(x=year))+
  geom_histogram()</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-6-1.png" width="672" /></p>
<p>不错，接下来添加color</p>
<p><br></p>
</div>
<div id="fill和color" class="section level2">
<h2>fill和color</h2>
<p>按照学科对每个时期的诺奖进行专业分类，使用aes中的fill参数。</p>
<pre class="r"><code>ggplot(data=nobel,
       mapping=aes(x=year, fill=field))+
  geom_histogram()</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-7-1.png" width="672" /></p>
<p>但同一时期，不同专业之间没有边界区分，容易混乱。这里设置 <code>geom_histogram()</code> 的 <code>color="white"</code>。</p>
<pre class="r"><code>ggplot(data=nobel,
       mapping=aes(x=year, fill=field))+
  geom_histogram(color=&quot;white&quot;)</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-8-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="更改配色" class="section level2">
<h2>更改配色</h2>
<p>更改geom层的颜色，所以该层紧贴geom层，且在geom层之上。设置方法可以使用 <code>scale_fill_manual()</code> 即可。<code>scale_fill_munual()</code> 中的values可以传入颜色字符串。</p>
<pre class="r"><code>ggplot(data=nobel,
       mapping=aes(x=year, fill=field))+
  scale_fill_manual(values=c(&quot;red&quot;,
                             &quot;orange&quot;,
                             &quot;yellow&quot;,
                             &quot;green&quot;,
                             &quot;blue&quot;,
                             &quot;purple&quot;))+
  geom_histogram(color=&quot;white&quot;)</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-9-1.png" width="672" /></p>
<p>漂亮！ 这些颜色真的很明艳， <code>scale_fill_munual()</code> 还可以选择十六进制颜色字符串进行颜色自定义</p>
<pre class="r"><code>ggplot(data = nobel,
       mapping = aes(x = year,
                     fill = field)) +
  scale_fill_manual(values = c(&quot;#f73c39&quot;,
                               &quot;#f79b39&quot;,
                               &quot;#f7ee39&quot;,
                               &quot;#228c14&quot;,
                               &quot;#1e80c7&quot;,
                               &quot;#7c148c&quot;)) + 
  geom_histogram(color = &quot;white&quot;)</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-10-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="配色包metbrewer" class="section level2">
<h2>配色包MetBrewer</h2>
<p>对于我们普通人而言， 不需要记住那么多颜色，只需要在配色方案中选择好看的配色即可。 <a href="https://github.com/BlakeRMills/MetBrewer">MetBrewer</a>是R语言的配色包，在文章开头已经提前导入了。下图是MetBrewer的配色方案，选择一种配色方案的名字,如Signac</p>
<p><img src="img/metbrewer_palettes.png" /></p>
<pre class="r"><code>ggplot(data = nobel,
       mapping = aes(x = year,
                     fill = field)) +
  #选择Signac配色方案，使用其中6种颜色
  scale_fill_manual(values = met.brewer(&#39;Signac&#39;, 6)) + 
  geom_histogram(color = &quot;white&quot;)</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-11-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="标签labs" class="section level2">
<h2>标签labs</h2>
<p>现在我们需要用<code>labs()</code> 函数给图片添加标签图层。例如title、subtitle、caption、x、y、legend。</p>
<pre class="r"><code>ggplot(data = nobel,
       mapping = aes(x = year,
                     fill = field)) +
  scale_fill_manual(values = met.brewer(&quot;Signac&quot;, 6)) + 
  geom_histogram(color = &quot;white&quot;) +
  labs(title = &quot;Nobel prize laureate numbers have gone up in past 50 years&quot;,
       subtitle = &quot;Physics, Medicine, and Chemistry have largest numbers of laureates&quot;,
       x = &quot;Year&quot;,
       y = &quot;Number of laureates&quot;)</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-12-1.png" width="672" /></p>
<p>现在x轴、y轴、标题都是大写，需要将field也大写。这里在labs(fill=‘Year’)更改year为Year</p>
<pre class="r"><code>ggplot(data = nobel,
       mapping = aes(x = year,
                     fill = field)) +
  scale_fill_manual(values = met.brewer(&quot;Signac&quot;, 6)) + 
  geom_histogram(color = &quot;white&quot;) +
  labs(title = &quot;Nobel prize laureate numbers have gone up in past 50 years&quot;,
       subtitle = &quot;Physics, Medicine, and Chemistry have largest numbers of laureates&quot;,
       x = &quot;Year&quot;,
       y = &quot;Number of laureates&quot;,
       fill=&#39;Field&#39;)</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-13-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="中文" class="section level2">
<h2>中文</h2>
<p>默认ggplot2不支持中文，为了能显示中文，使用showtext包。前文已提前导入并初始化</p>
<pre><code>library(showtext) #支持中文
showtext_auto()</code></pre>
<p>运行中文的代码</p>
<pre class="r"><code>#把学科转为中文
nobel2 &lt;- nobel %&gt;% 
  mutate(
    field = case_when(field==&#39;Chemistry&#39; ~ &#39;化学&#39;,
                       field==&#39;Economics&#39; ~ &#39;经济学&#39;,
                       field==&#39;Medicine&#39; ~ &#39;经济学&#39;,
                       field==&#39;Peace&#39; ~ &#39;和平&#39;,
                       field==&#39;Physics&#39; ~ &#39;物理学&#39;,
                       field==&#39;Literature&#39; ~ &#39;文学&#39;))



#绘图
ggplot(data = nobel2,
       mapping = aes(x = year,
                     fill = field)) +
  scale_fill_manual(values = met.brewer(&quot;Signac&quot;, 6)) + 
  geom_histogram(color = &quot;white&quot;) +
  labs(title = &quot;过去50年诺贝尔奖得主人数一直保持增长趋势&quot;,
       subtitle = &quot;物理学、医学和化学的获奖者人数最多&quot;,
       x = &quot;年份&quot;,
       y = &quot;获奖人数&quot;,
       fill=&#39;领域&#39;)</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-histogram/index_files/figure-html/unnamed-chunk-14-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="广而告之" class="section level2">
<h2>广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>R语言 | ggplot2简明绘图之动态图</title>
      <link>https://textdata.cn/blog/2022-09-04-r-ggplot2-ggplotly/</link>
      <pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-04-r-ggplot2-ggplotly/</guid>
      <description>轻松上手ggplotly</description>
      <content:encoded><![CDATA[
<script src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/htmlwidgets/htmlwidgets.js"></script>
<script src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/plotly-binding/plotly.js"></script>
<script src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/typedarray/typedarray.min.js"></script>
<script src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/jquery/jquery.min.js"></script>
<link href="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/crosstalk/css/crosstalk.min.css" rel="stylesheet" />
<script src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/crosstalk/js/crosstalk.min.js"></script>
<link href="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/plotly-htmlwidgets-css/plotly-htmlwidgets.css" rel="stylesheet" />
<script src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/plotly-main/plotly-latest.min.js"></script>


<blockquote>
<p>原文: <a href="https://www.miriamheiss.com/posts/graphing-with-ggplot/" class="uri">https://www.miriamheiss.com/posts/graphing-with-ggplot/</a></p>
</blockquote>
<p>ggplot() 函数对任何数据科学家都是必不可少的, ta是一种非常简单的绘图函数。刚开始接触可能看起来很难， 不过不要害怕，因为一旦学了基础知识，一切都会变得清晰！ 让我们开始！</p>
<p>ggplotly函数可以直接创建动态交互图标， 该函数内置于ggplot()中。 今天我们要绘制动态散点图</p>
<p><br></p>
<div id="准备" class="section level2">
<h2>准备</h2>
<p>导入本文要用到的包</p>
<pre class="r"><code>library(tidyverse) 
library(gapminder) #准备数据
library(MetBrewer) #配色包
library(plotly) #动态图</code></pre>
<p><br></p>
</div>
<div id="quick-start" class="section level2">
<h2>quick-start</h2>
<p>只要会ggplot，只增多一行代码即可绘制出动态图。鼠标悬浮处会显示一个黑色弹出框。</p>
<pre class="r"><code>library(plotly)
library(dplyr)
library(gapminder)

#选出2007年的数据
gapminder_2007 &lt;- gapminder %&gt;% 
  filter(year==&quot;2007&quot;) %&gt;% 
  dplyr::select(-year)

p &lt;- ggplot(data = gapminder_2007, 
            mapping = aes(x=gdpPercap, 
                          y=lifeExp, 
                          size = pop)) +
  geom_point(alpha=0.7)

#将静态图转为动态图
ggplotly(p)</code></pre>
<div id="htmlwidget-1" style="width:672px;height:480px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-1">{"x":{"data":[{"x":[974.5803384,5937.029526,6223.367465,4797.231267,12779.37964,34435.36744,36126.4927,29796.04834,1391.253792,33692.60508,1441.284873,3822.137084,7446.298803,12569.85177,9065.800825,10680.79282,1217.032994,430.0706916,1713.778686,2042.09524,36319.23501,706.016537,1704.063724,13171.63885,4959.114854,7006.580419,986.1478792,277.5518587,3632.557798,9645.06142,1544.750112,14619.22272,8948.102923,22833.30851,35278.41874,2082.481567,6025.374752,6873.262326,5581.180998,5728.353514,12154.08975,641.3695236,690.8055759,33207.0844,30470.0167,13206.48452,752.7497265,32170.37442,1327.60891,27538.41188,5186.050003,942.6542111,579.231743,1201.637154,3548.330846,39724.97867,18008.94444,36180.78919,2452.210407,3540.651564,11605.71449,4471.061906,40675.99635,25523.2771,28569.7197,7320.880262,31656.06806,4519.461171,1463.249282,1593.06548,23348.13973,47306.98978,10461.05868,1569.331442,414.5073415,12057.49928,1044.770126,759.3499101,12451.6558,1042.581557,1803.151496,10956.99112,11977.57496,3095.772271,9253.896111,3820.17523,823.6856205,944,4811.060429,1091.359778,36797.93332,25185.00911,2749.320965,619.6768924,2013.977305,49357.19017,22316.19287,2605.94758,9809.185636,4172.838464,7408.905561,3190.481016,15389.92468,20509.64777,19328.70901,7670.122558,10808.47561,863.0884639,1598.435089,21654.83194,1712.472136,9786.534714,862.5407561,47143.17964,18678.31435,25768.25759,926.1410683,9269.657808,28821.0637,3970.095407,2602.394995,4513.480643,33859.74835,37506.41907,4184.548089,28718.27684,1107.482182,7458.396327,882.9699438,18008.50924,7092.923025,8458.276384,1056.380121,33203.26128,42951.65309,10611.46299,11415.80569,2441.576404,3025.349798,2280.769906,1271.211593,469.7092981],"y":[43.828,76.423,72.301,42.731,75.32,81.235,79.829,75.635,64.062,79.441,56.728,65.554,74.852,50.728,72.39,73.005,52.295,49.58,59.723,50.43,80.653,44.741,50.651,78.553,72.961,72.889,65.152,46.462,55.322,78.782,48.328,75.748,78.273,76.486,78.332,54.791,72.235,74.994,71.338,71.878,51.579,58.04,52.947,79.313,80.657,56.735,59.448,79.406,60.022,79.483,70.259,56.007,46.388,60.916,70.198,82.208,73.338,81.757,64.698,70.65,70.964,59.545,78.885,80.745,80.546,72.567,82.603,72.535,54.11,67.297,78.623,77.588,71.993,42.592,45.678,73.952,59.443,48.303,74.241,54.467,64.164,72.801,76.195,66.803,74.543,71.164,42.082,62.069,52.906,63.785,79.762,80.204,72.899,56.867,46.859,80.196,75.64,65.483,75.537,71.752,71.421,71.688,75.563,78.098,78.746,76.442,72.476,46.242,65.528,72.777,63.062,74.002,42.568,79.972,74.663,77.926,48.159,49.339,80.941,72.396,58.556,39.613,80.884,81.701,74.143,78.4,52.517,70.616,58.42,69.819,73.923,71.777,51.542,79.425,78.242,76.384,73.747,74.249,73.422,62.698,42.384,43.487],"text":["gdpPercap:   974.5803<br />lifeExp: 43.828<br />pop:   31889923","gdpPercap:  5937.0295<br />lifeExp: 76.423<br />pop:    3600523","gdpPercap:  6223.3675<br />lifeExp: 72.301<br />pop:   33333216","gdpPercap:  4797.2313<br />lifeExp: 42.731<br />pop:   12420476","gdpPercap: 12779.3796<br />lifeExp: 75.320<br />pop:   40301927","gdpPercap: 34435.3674<br />lifeExp: 81.235<br />pop:   20434176","gdpPercap: 36126.4927<br />lifeExp: 79.829<br />pop:    8199783","gdpPercap: 29796.0483<br />lifeExp: 75.635<br />pop:     708573","gdpPercap:  1391.2538<br />lifeExp: 64.062<br />pop:  150448339","gdpPercap: 33692.6051<br />lifeExp: 79.441<br />pop:   10392226","gdpPercap:  1441.2849<br />lifeExp: 56.728<br />pop:    8078314","gdpPercap:  3822.1371<br />lifeExp: 65.554<br />pop:    9119152","gdpPercap:  7446.2988<br />lifeExp: 74.852<br />pop:    4552198","gdpPercap: 12569.8518<br />lifeExp: 50.728<br />pop:    1639131","gdpPercap:  9065.8008<br />lifeExp: 72.390<br />pop:  190010647","gdpPercap: 10680.7928<br />lifeExp: 73.005<br />pop:    7322858","gdpPercap:  1217.0330<br />lifeExp: 52.295<br />pop:   14326203","gdpPercap:   430.0707<br />lifeExp: 49.580<br />pop:    8390505","gdpPercap:  1713.7787<br />lifeExp: 59.723<br />pop:   14131858","gdpPercap:  2042.0952<br />lifeExp: 50.430<br />pop:   17696293","gdpPercap: 36319.2350<br />lifeExp: 80.653<br />pop:   33390141","gdpPercap:   706.0165<br />lifeExp: 44.741<br />pop:    4369038","gdpPercap:  1704.0637<br />lifeExp: 50.651<br />pop:   10238807","gdpPercap: 13171.6388<br />lifeExp: 78.553<br />pop:   16284741","gdpPercap:  4959.1149<br />lifeExp: 72.961<br />pop: 1318683096","gdpPercap:  7006.5804<br />lifeExp: 72.889<br />pop:   44227550","gdpPercap:   986.1479<br />lifeExp: 65.152<br />pop:     710960","gdpPercap:   277.5519<br />lifeExp: 46.462<br />pop:   64606759","gdpPercap:  3632.5578<br />lifeExp: 55.322<br />pop:    3800610","gdpPercap:  9645.0614<br />lifeExp: 78.782<br />pop:    4133884","gdpPercap:  1544.7501<br />lifeExp: 48.328<br />pop:   18013409","gdpPercap: 14619.2227<br />lifeExp: 75.748<br />pop:    4493312","gdpPercap:  8948.1029<br />lifeExp: 78.273<br />pop:   11416987","gdpPercap: 22833.3085<br />lifeExp: 76.486<br />pop:   10228744","gdpPercap: 35278.4187<br />lifeExp: 78.332<br />pop:    5468120","gdpPercap:  2082.4816<br />lifeExp: 54.791<br />pop:     496374","gdpPercap:  6025.3748<br />lifeExp: 72.235<br />pop:    9319622","gdpPercap:  6873.2623<br />lifeExp: 74.994<br />pop:   13755680","gdpPercap:  5581.1810<br />lifeExp: 71.338<br />pop:   80264543","gdpPercap:  5728.3535<br />lifeExp: 71.878<br />pop:    6939688","gdpPercap: 12154.0897<br />lifeExp: 51.579<br />pop:     551201","gdpPercap:   641.3695<br />lifeExp: 58.040<br />pop:    4906585","gdpPercap:   690.8056<br />lifeExp: 52.947<br />pop:   76511887","gdpPercap: 33207.0844<br />lifeExp: 79.313<br />pop:    5238460","gdpPercap: 30470.0167<br />lifeExp: 80.657<br />pop:   61083916","gdpPercap: 13206.4845<br />lifeExp: 56.735<br />pop:    1454867","gdpPercap:   752.7497<br />lifeExp: 59.448<br />pop:    1688359","gdpPercap: 32170.3744<br />lifeExp: 79.406<br />pop:   82400996","gdpPercap:  1327.6089<br />lifeExp: 60.022<br />pop:   22873338","gdpPercap: 27538.4119<br />lifeExp: 79.483<br />pop:   10706290","gdpPercap:  5186.0500<br />lifeExp: 70.259<br />pop:   12572928","gdpPercap:   942.6542<br />lifeExp: 56.007<br />pop:    9947814","gdpPercap:   579.2317<br />lifeExp: 46.388<br />pop:    1472041","gdpPercap:  1201.6372<br />lifeExp: 60.916<br />pop:    8502814","gdpPercap:  3548.3308<br />lifeExp: 70.198<br />pop:    7483763","gdpPercap: 39724.9787<br />lifeExp: 82.208<br />pop:    6980412","gdpPercap: 18008.9444<br />lifeExp: 73.338<br />pop:    9956108","gdpPercap: 36180.7892<br />lifeExp: 81.757<br />pop:     301931","gdpPercap:  2452.2104<br />lifeExp: 64.698<br />pop: 1110396331","gdpPercap:  3540.6516<br />lifeExp: 70.650<br />pop:  223547000","gdpPercap: 11605.7145<br />lifeExp: 70.964<br />pop:   69453570","gdpPercap:  4471.0619<br />lifeExp: 59.545<br />pop:   27499638","gdpPercap: 40675.9964<br />lifeExp: 78.885<br />pop:    4109086","gdpPercap: 25523.2771<br />lifeExp: 80.745<br />pop:    6426679","gdpPercap: 28569.7197<br />lifeExp: 80.546<br />pop:   58147733","gdpPercap:  7320.8803<br />lifeExp: 72.567<br />pop:    2780132","gdpPercap: 31656.0681<br />lifeExp: 82.603<br />pop:  127467972","gdpPercap:  4519.4612<br />lifeExp: 72.535<br />pop:    6053193","gdpPercap:  1463.2493<br />lifeExp: 54.110<br />pop:   35610177","gdpPercap:  1593.0655<br />lifeExp: 67.297<br />pop:   23301725","gdpPercap: 23348.1397<br />lifeExp: 78.623<br />pop:   49044790","gdpPercap: 47306.9898<br />lifeExp: 77.588<br />pop:    2505559","gdpPercap: 10461.0587<br />lifeExp: 71.993<br />pop:    3921278","gdpPercap:  1569.3314<br />lifeExp: 42.592<br />pop:    2012649","gdpPercap:   414.5073<br />lifeExp: 45.678<br />pop:    3193942","gdpPercap: 12057.4993<br />lifeExp: 73.952<br />pop:    6036914","gdpPercap:  1044.7701<br />lifeExp: 59.443<br />pop:   19167654","gdpPercap:   759.3499<br />lifeExp: 48.303<br />pop:   13327079","gdpPercap: 12451.6558<br />lifeExp: 74.241<br />pop:   24821286","gdpPercap:  1042.5816<br />lifeExp: 54.467<br />pop:   12031795","gdpPercap:  1803.1515<br />lifeExp: 64.164<br />pop:    3270065","gdpPercap: 10956.9911<br />lifeExp: 72.801<br />pop:    1250882","gdpPercap: 11977.5750<br />lifeExp: 76.195<br />pop:  108700891","gdpPercap:  3095.7723<br />lifeExp: 66.803<br />pop:    2874127","gdpPercap:  9253.8961<br />lifeExp: 74.543<br />pop:     684736","gdpPercap:  3820.1752<br />lifeExp: 71.164<br />pop:   33757175","gdpPercap:   823.6856<br />lifeExp: 42.082<br />pop:   19951656","gdpPercap:   944.0000<br />lifeExp: 62.069<br />pop:   47761980","gdpPercap:  4811.0604<br />lifeExp: 52.906<br />pop:    2055080","gdpPercap:  1091.3598<br />lifeExp: 63.785<br />pop:   28901790","gdpPercap: 36797.9333<br />lifeExp: 79.762<br />pop:   16570613","gdpPercap: 25185.0091<br />lifeExp: 80.204<br />pop:    4115771","gdpPercap:  2749.3210<br />lifeExp: 72.899<br />pop:    5675356","gdpPercap:   619.6769<br />lifeExp: 56.867<br />pop:   12894865","gdpPercap:  2013.9773<br />lifeExp: 46.859<br />pop:  135031164","gdpPercap: 49357.1902<br />lifeExp: 80.196<br />pop:    4627926","gdpPercap: 22316.1929<br />lifeExp: 75.640<br />pop:    3204897","gdpPercap:  2605.9476<br />lifeExp: 65.483<br />pop:  169270617","gdpPercap:  9809.1856<br />lifeExp: 75.537<br />pop:    3242173","gdpPercap:  4172.8385<br />lifeExp: 71.752<br />pop:    6667147","gdpPercap:  7408.9056<br />lifeExp: 71.421<br />pop:   28674757","gdpPercap:  3190.4810<br />lifeExp: 71.688<br />pop:   91077287","gdpPercap: 15389.9247<br />lifeExp: 75.563<br />pop:   38518241","gdpPercap: 20509.6478<br />lifeExp: 78.098<br />pop:   10642836","gdpPercap: 19328.7090<br />lifeExp: 78.746<br />pop:    3942491","gdpPercap:  7670.1226<br />lifeExp: 76.442<br />pop:     798094","gdpPercap: 10808.4756<br />lifeExp: 72.476<br />pop:   22276056","gdpPercap:   863.0885<br />lifeExp: 46.242<br />pop:    8860588","gdpPercap:  1598.4351<br />lifeExp: 65.528<br />pop:     199579","gdpPercap: 21654.8319<br />lifeExp: 72.777<br />pop:   27601038","gdpPercap:  1712.4721<br />lifeExp: 63.062<br />pop:   12267493","gdpPercap:  9786.5347<br />lifeExp: 74.002<br />pop:   10150265","gdpPercap:   862.5408<br />lifeExp: 42.568<br />pop:    6144562","gdpPercap: 47143.1796<br />lifeExp: 79.972<br />pop:    4553009","gdpPercap: 18678.3144<br />lifeExp: 74.663<br />pop:    5447502","gdpPercap: 25768.2576<br />lifeExp: 77.926<br />pop:    2009245","gdpPercap:   926.1411<br />lifeExp: 48.159<br />pop:    9118773","gdpPercap:  9269.6578<br />lifeExp: 49.339<br />pop:   43997828","gdpPercap: 28821.0637<br />lifeExp: 80.941<br />pop:   40448191","gdpPercap:  3970.0954<br />lifeExp: 72.396<br />pop:   20378239","gdpPercap:  2602.3950<br />lifeExp: 58.556<br />pop:   42292929","gdpPercap:  4513.4806<br />lifeExp: 39.613<br />pop:    1133066","gdpPercap: 33859.7484<br />lifeExp: 80.884<br />pop:    9031088","gdpPercap: 37506.4191<br />lifeExp: 81.701<br />pop:    7554661","gdpPercap:  4184.5481<br />lifeExp: 74.143<br />pop:   19314747","gdpPercap: 28718.2768<br />lifeExp: 78.400<br />pop:   23174294","gdpPercap:  1107.4822<br />lifeExp: 52.517<br />pop:   38139640","gdpPercap:  7458.3963<br />lifeExp: 70.616<br />pop:   65068149","gdpPercap:   882.9699<br />lifeExp: 58.420<br />pop:    5701579","gdpPercap: 18008.5092<br />lifeExp: 69.819<br />pop:    1056608","gdpPercap:  7092.9230<br />lifeExp: 73.923<br />pop:   10276158","gdpPercap:  8458.2764<br />lifeExp: 71.777<br />pop:   71158647","gdpPercap:  1056.3801<br />lifeExp: 51.542<br />pop:   29170398","gdpPercap: 33203.2613<br />lifeExp: 79.425<br />pop:   60776238","gdpPercap: 42951.6531<br />lifeExp: 78.242<br />pop:  301139947","gdpPercap: 10611.4630<br />lifeExp: 76.384<br />pop:    3447496","gdpPercap: 11415.8057<br />lifeExp: 73.747<br />pop:   26084662","gdpPercap:  2441.5764<br />lifeExp: 74.249<br />pop:   85262356","gdpPercap:  3025.3498<br />lifeExp: 73.422<br />pop:    4018332","gdpPercap:  2280.7699<br />lifeExp: 62.698<br />pop:   22211743","gdpPercap:  1271.2116<br />lifeExp: 42.384<br />pop:   11746035","gdpPercap:   469.7093<br />lifeExp: 43.487<br />pop:   12311143"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(0,0,0,1)","opacity":0.7,"size":[6.70929835135528,4.73930360976545,6.77527173254923,5.598900411863,7.07528369289545,6.12061399094626,5.2515712457991,4.1508288847182,10.1588656081799,5.44107849786917,5.24035330707835,5.33385387656466,4.86531670289218,4.40395768399738,10.9497220287062,5.16855282584858,5.7356199392208,5.26901439581437,5.72211801075065,5.9564773609874,6.77784403625228,4.8422259478741,5.42852631166044,5.86681801798997,22.6771653543307,7.23282911414924,4.15169850163956,7.9562662998771,4.76713328307226,4.81182340745332,5.97611663817011,4.85794694387522,5.52260397354913,5.42769965273683,4.97410786436283,4.06305719383881,5.35122378867242,5.69571313317988,8.43636871732964,5.1306777542305,4.08813627550005,4.90865391372741,8.32592567062337,4.94778140481952,7.84043376621969,4.36262596871136,4.41454467512776,8.49809123744673,6.25770233060098,5.46648280699294,5.61021330347734,5.40445197132612,4.3666011970112,5.27919109958551,5.18415329737334,5.13475345805415,5.40514308400654,3.9460291298415,21.1203680953071,11.5573968303758,8.11057131553749,6.49879524068774,4.8085649745634,5.07824026167466,7.74130405516196,4.6155666029278,9.65077587363648,5.03869129857133,6.87649613589243,6.28100350114513,7.4168446506104,4.56983839481089,4.78354392302204,4.480300710223,4.68010775450673,5.03693920169262,6.0461636385333,5.66517797748393,6.36196165910748,5.5697344023561,4.69148323166173,4.31315004312066,9.20063061292984,4.63065651672448,4.14203032052794,6.79437672410524,6.09253246174489,7.36876387589759,4.48845333089755,6.56775273775666,5.88528441607637,4.80944439195868,4.99737544049698,5.6338762963756,9.82271393327331,4.87472139425141,4.68175365529605,10.5466615830696,4.68733172329479,5.10307852744492,6.55670348636785,8.74086596862592,7.00115515259145,5.46138101214586,4.78640121163658,4.18215900239245,6.22484391610449,5.3111594952501,3.77952755905512,6.50384061768477,5.58747695964146,5.42123845033248,5.04848038390226,4.86541785279541,4.97176812735327,4.47964255788798,5.33382085391144,7.22380829377829,7.0812884751231,6.11737587407916,7.1561065468969,4.282361176813,5.32616181946541,5.19097245574501,6.05493528307165,6.27409491409121,6.98520027409899,7.97119993399054,5.00028803920838,4.26132881438327,5.43159101796171,8.16356363915206,6.580769078434,7.83015990857845,12.807919245623,4.71746231550028,6.42738713411734,8.57951329437571,4.79655097614072,6.22127948111281,5.54798462578679,5.59074371141117],"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(0,0,0,1)"}},"hoveron":"points","showlegend":false,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":26.2283105022831,"r":7.30593607305936,"b":40.1826484018265,"l":37.2602739726027},"plot_bgcolor":"rgba(235,235,235,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[-2176.430056865,51811.172085565],"tickmode":"array","ticktext":["0","10000","20000","30000","40000","50000"],"tickvals":[0,10000,20000,30000,40000,50000],"categoryorder":"array","categoryarray":["0","10000","20000","30000","40000","50000"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"gdpPercap","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[37.4635,84.7525],"tickmode":"array","ticktext":["40","50","60","70","80"],"tickvals":[40,50,60,70,80],"categoryorder":"array","categoryarray":["40","50","60","70","80"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(255,255,255,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"lifeExp","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":null,"line":{"color":null,"width":0,"linetype":[]},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":false,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.88976377952756,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"pop","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"6d507cad2d7b":{"x":{},"y":{},"size":{},"type":"scatter"}},"cur_data":"6d507cad2d7b","visdat":{"6d507cad2d7b":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
</div>
<div id="画布gglot" class="section level2">
<h2>画布gglot</h2>
<p>用ggplot函数构造一个画布, 使用gapminder数据集</p>
<p><img src="img/gapminder.png" /></p>
<ul>
<li>将gdpPercap设定为x轴</li>
<li>将lifeExp设定为y轴</li>
</ul>
<pre class="r"><code>ggplot(data = gapminder_2007,
       mapping = aes(x = gdpPercap,
                     y = lifeExp))</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/figure-html/unnamed-chunk-3-1.png" width="672" /></p>
<p>现在我们将开始添加高层次的图层，会显示越来越多的信息。</p>
<p><br></p>
</div>
<div id="添加geom" class="section level2">
<h2>添加geom</h2>
<p>现在添加geom层，该层是通过 <code>+</code> 构建在ggplot层之上。这里使用 <code>geom_ponit()</code> 绘制散点图，</p>
<pre class="r"><code>ggplot(data = gapminder_2007,
       mapping = aes(x = gdpPercap,
                     y = lifeExp))+
  geom_point() #透明度</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/figure-html/unnamed-chunk-4-1.png" width="672" /></p>
<p>生成的图仅仅是黑白图，为了美观，可以设置为更靓丽的颜色。</p>
<p><br></p>
</div>
<div id="aescolor" class="section level2">
<h2>aes(color)</h2>
<p>二维空间显示三维信息，
- x轴 gdpPercap
- y轴 lifeExp
- color continent</p>
<pre class="r"><code>ggplot(data = gapminder_2007,
       mapping = aes(x = gdpPercap,     #gdp
                     y = lifeExp,       #预期寿命
                     color=continent))+ #大陆
  geom_point() </code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/figure-html/unnamed-chunk-5-1.png" width="672" /></p>
<p>现在可以清晰地看出哪些大陆更加富裕、更加健康, 要是配色再好看点就好了。</p>
<p><br></p>
</div>
<div id="调整配色" class="section level2">
<h2>调整配色</h2>
<p>在 [<a href="https://textdata.cn/blog/2022-09-04-r-ggplot2-histogram/" class="uri">https://textdata.cn/blog/2022-09-04-r-ggplot2-histogram/</a>]中首次使用了MetBrewer配色包。</p>
<p>这里会用5个具有区分度的颜色，我们选择 <code>Lakota</code> 配色方案。同时，在图中绘制对应的人口规模，以size方式显示。</p>
<pre class="r"><code>ggplot(data = gapminder_2007,
       mapping = aes(x = gdpPercap,     #gdp
                     y = lifeExp,       #预期寿命
                     size = pop,        #人口
                     color=continent))+ #大陆
  geom_point()+                
  scale_color_manual(values=met.brewer(&quot;Lakota&quot;, 5))</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/figure-html/unnamed-chunk-6-1.png" width="672" /></p>
<p>为了让数据更加平滑，对x轴取对数</p>
<pre class="r"><code>ggplot(data = gapminder_2007,
       mapping = aes(x = gdpPercap,     #gdp
                     y = lifeExp,       #预期寿命
                     size = pop,        #人口
                     color=continent))+ #大陆
  geom_point()+                
  scale_color_manual(values = met.brewer(&quot;Lakota&quot;, 5))+
  scale_x_log10(breaks = c(400, 4000, 40000))</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/figure-html/unnamed-chunk-7-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="更换主题" class="section level2">
<h2>更换主题</h2>
<p>使用 <code>theme_bw</code> 更改绘图的主题风格</p>
<pre class="r"><code>ggplot(data = gapminder_2007,
       mapping = aes(x = gdpPercap,     #gdp
                     y = lifeExp,       #预期寿命
                     size = pop,        #人口
                     color=continent))+ #大陆
  geom_point()+                
  scale_color_manual(values = met.brewer(&quot;Lakota&quot;, 5))+
  scale_x_log10(breaks = c(400, 4000, 40000))+
  theme_bw()</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/figure-html/unnamed-chunk-8-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="标签labs" class="section level2">
<h2>标签labs</h2>
<pre class="r"><code>p2 &lt;- ggplot(data = gapminder_2007,
       mapping = aes(x = gdpPercap,     #gdp
                     y = lifeExp,       #预期寿命
                     size = pop,        #人口
                     color=continent,   #大陆
                     text = country))+  #国家
  geom_point()+                #透明度
  scale_color_manual(values = met.brewer(&quot;Lakota&quot;, 5))+
  scale_x_log10(breaks = c(400, 4000, 40000))+
  theme_bw()+
  labs(title = &quot;Gdp and Life Expectancy in 142 countries&quot;,
       subtitle = &quot;Most of Africa is sick and poor,\nwhile Europe is thriving and rich&quot;,
       x = &quot;Gdp Per Capita&quot;,
       y = &quot;Life Expectancy&quot;,
       fill = &quot;Continent&quot;,
       size = &quot;Population&quot;)

p2</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-ggplotly/index_files/figure-html/unnamed-chunk-9-1.png" width="672" /></p>
<p>使用ggplotly将p2从静态图转为动态图， 鼠标悬浮处弹出圆圈对应的国家。</p>
<pre class="r"><code>ggplotly(p2, tooltip = &quot;text&quot;)</code></pre>
<div id="htmlwidget-2" style="width:672px;height:480px;" class="plotly html-widget"></div>
<script type="application/json" data-for="htmlwidget-2">{"x":{"data":[{"x":[3.79402544509666,3.68099065562682,3.1587498285201,4.09933015629768,3.08530235219712,2.63353984732021,3.31007599301138,2.848814873635,3.23148583131337,2.99394204506796,2.44334414004637,3.56021253312911,3.18885823537455,3.31858116595608,3.74672610693845,4.08472243900371,2.80710831941093,2.83935583435696,4.12078722664154,2.87665060639063,3.1230701584329,2.9743524119827,2.76285235400399,3.16531831968284,3.19571467604724,2.61753222691212,4.08125724466051,3.01902074595738,2.88044194586588,3.0181100381011,3.25603221652431,4.03969130967891,3.58208328429303,2.91576148434958,3.68224081186337,2.79216530171644,3.30405457229069,3.88480230343241,2.93605531183875,3.20369500466057,3.23362351372365,2.93577962517273,2.96667714274902,3.96706370233863,3.41537321502711,3.65451158423759,3.04433674769752,2.94594592049266,3.85082524675123,3.02382022004224,3.10421784482941,2.67182915731664],"y":[72.301,42.731,56.728,50.728,52.295,49.58,50.43,44.741,50.651,65.152,46.462,55.322,48.328,54.791,71.338,51.579,58.04,52.947,56.735,59.448,60.022,56.007,46.388,54.11,42.592,45.678,73.952,59.443,48.303,54.467,64.164,72.801,71.164,42.082,52.906,56.867,46.859,76.442,46.242,65.528,63.062,42.568,48.159,49.339,58.556,39.613,52.517,58.42,73.923,51.542,42.384,43.487],"text":["Algeria","Angola","Benin","Botswana","Burkina Faso","Burundi","Cameroon","Central African Republic","Chad","Comoros","Congo, Dem. Rep.","Congo, Rep.","Cote d'Ivoire","Djibouti","Egypt","Equatorial Guinea","Eritrea","Ethiopia","Gabon","Gambia","Ghana","Guinea","Guinea-Bissau","Kenya","Lesotho","Liberia","Libya","Madagascar","Malawi","Mali","Mauritania","Mauritius","Morocco","Mozambique","Namibia","Niger","Nigeria","Reunion","Rwanda","Sao Tome and Principe","Senegal","Sierra Leone","Somalia","South Africa","Sudan","Swaziland","Tanzania","Togo","Tunisia","Uganda","Zambia","Zimbabwe"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(4,163,189,1)","opacity":1,"size":[6.77527173254923,5.598900411863,5.24035330707835,4.40395768399738,5.7356199392208,5.26901439581437,5.9564773609874,4.8422259478741,5.42852631166044,4.15169850163956,7.9562662998771,4.76713328307226,5.97611663817011,4.06305719383881,8.43636871732964,4.08813627550005,4.90865391372741,8.32592567062337,4.36262596871136,4.41454467512776,6.25770233060098,5.40445197132612,4.3666011970112,6.87649613589243,4.480300710223,4.68010775450673,5.03693920169262,6.0461636385333,5.66517797748393,5.5697344023561,4.69148323166173,4.31315004312066,6.79437672410524,6.09253246174489,4.48845333089755,5.6338762963756,9.82271393327331,4.18215900239245,5.3111594952501,3.77952755905512,5.58747695964146,5.04848038390226,5.33382085391144,7.22380829377829,7.1561065468969,4.282361176813,6.98520027409899,5.00028803920838,5.43159101796171,6.580769078434,5.54798462578679,5.59074371141117],"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(4,163,189,1)"}},"hoveron":"points","name":"Africa","legendgroup":"Africa","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[4.10650977201769,3.58230625931688,3.95740617340857,4.56013669242519,4.11963981438709,3.84550611104731,3.98430499758718,3.95173097080165,3.77998406330737,3.83716291957619,3.75802981175127,3.71483669984604,3.0797733480287,3.55002410662006,3.86456330372846,4.07836889751077,3.43922544380543,3.99163295350919,3.6204315729333,3.86975405900188,4.28620284789525,4.25547776303394,4.632979883279,4.02577526370184,4.05750656798335],"y":[75.32,65.554,72.39,80.653,78.553,72.889,78.782,78.273,72.235,74.994,71.878,70.259,60.916,70.198,72.567,76.195,72.899,75.537,71.752,71.421,78.746,69.819,78.242,76.384,73.747],"text":["Argentina","Bolivia","Brazil","Canada","Chile","Colombia","Costa Rica","Cuba","Dominican Republic","Ecuador","El Salvador","Guatemala","Haiti","Honduras","Jamaica","Mexico","Nicaragua","Panama","Paraguay","Peru","Puerto Rico","Trinidad and Tobago","United States","Uruguay","Venezuela"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(240,190,61,1)","opacity":1,"size":[7.07528369289545,5.33385387656466,10.9497220287062,6.77784403625228,5.86681801798997,7.23282911414924,4.81182340745332,5.52260397354913,5.35122378867242,5.69571313317988,5.1306777542305,5.61021330347734,5.27919109958551,5.18415329737334,4.6155666029278,9.20063061292984,4.99737544049698,4.68733172329479,5.10307852744492,6.55670348636785,4.78640121163658,4.26132881438327,12.807919245623,4.71746231550028,6.42738713411734],"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(240,190,61,1)"}},"hoveron":"points","name":"Americas","legendgroup":"Americas","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[2.98881764549129,4.47415867018597,3.143406361057,3.23395473727517,3.6954041667466,4.59906367268864,3.38955773121288,3.54908318988216,4.06467188236304,3.65041068311967,4.40693643553008,4.50045697098462,3.65508665949928,3.20223362703668,4.3682522837381,4.67492531406996,4.01957563822304,4.09522710701315,3.49076900592376,2.97497199429807,3.03796794384465,4.34862010618943,3.41596567540354,3.50385616482709,4.33555481758265,4.67341887079622,3.59880094359832,3.62164856315343,4.45815837772449,3.87264545733796,3.38767031916547,3.4807755960326,3.35808147396803],"y":[43.828,75.635,64.062,59.723,72.961,82.208,64.698,70.65,70.964,59.545,80.745,82.603,72.535,67.297,78.623,77.588,71.993,74.241,66.803,62.069,63.785,75.64,65.483,71.688,72.777,79.972,72.396,74.143,78.4,70.616,74.249,73.422,62.698],"text":["Afghanistan","Bahrain","Bangladesh","Cambodia","China","Hong Kong, China","India","Indonesia","Iran","Iraq","Israel","Japan","Jordan","Korea, Dem. Rep.","Korea, Rep.","Kuwait","Lebanon","Malaysia","Mongolia","Myanmar","Nepal","Oman","Pakistan","Philippines","Saudi Arabia","Singapore","Sri Lanka","Syria","Taiwan","Thailand","Vietnam","West Bank and Gaza","Yemen, Rep."],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(147,30,24,1)","opacity":1,"size":[6.70929835135528,4.1508288847182,10.1588656081799,5.72211801075065,22.6771653543307,5.13475345805415,21.1203680953071,11.5573968303758,8.11057131553749,6.49879524068774,5.07824026167466,9.65077587363648,5.03869129857133,6.28100350114513,7.4168446506104,4.56983839481089,4.78354392302204,6.36196165910748,4.63065651672448,7.36876387589759,6.56775273775666,4.68175365529605,10.5466615830696,8.74086596862592,6.50384061768477,4.86541785279541,6.11737587407916,6.05493528307165,6.27409491409121,7.97119993399054,8.57951329437571,4.79655097614072,6.22127948111281],"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(147,30,24,1)"}},"hoveron":"points","name":"Asia","legendgroup":"Asia","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[3.77356920876217,4.55782580062218,4.52753459151331,3.87194045947979,4.02860349094832,4.16492428251317,4.35856884462783,4.54750911081685,4.52123074598147,4.48387269225076,4.50745611553652,4.43993889119905,4.25548825822109,4.55847803563392,4.60933819969144,4.45590597950278,3.96632461957789,4.56582342810493,4.69335042800253,4.18723649435127,4.31195820191596,4.03376444688129,3.990628940935,4.27133768016358,4.41108505321789,4.4597100052953,4.52968372605252,4.57410560181062,3.92728187211911,4.52118074293136],"y":[76.423,79.829,79.441,74.852,73.005,75.748,76.486,78.332,79.313,80.657,79.406,79.483,73.338,81.757,78.885,80.546,74.543,79.762,80.196,75.563,78.098,72.476,74.002,74.663,77.926,80.941,80.884,81.701,71.777,79.425],"text":["Albania","Austria","Belgium","Bosnia and Herzegovina","Bulgaria","Croatia","Czech Republic","Denmark","Finland","France","Germany","Greece","Hungary","Iceland","Ireland","Italy","Montenegro","Netherlands","Norway","Poland","Portugal","Romania","Serbia","Slovak Republic","Slovenia","Spain","Sweden","Switzerland","Turkey","United Kingdom"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(218,121,1,1)","opacity":1,"size":[4.73930360976545,5.2515712457991,5.44107849786917,4.86531670289218,5.16855282584858,4.85794694387522,5.42769965273683,4.97410786436283,4.94778140481952,7.84043376621969,8.49809123744673,5.46648280699294,5.40514308400654,3.9460291298415,4.8085649745634,7.74130405516196,4.14203032052794,5.88528441607637,4.87472139425141,7.00115515259145,5.46138101214586,6.22484391610449,5.42123845033248,4.97176812735327,4.47964255788798,7.0812884751231,5.32616181946541,5.19097245574501,8.16356363915206,7.83015990857845],"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(218,121,1,1)"}},"hoveron":"points","name":"Europe","legendgroup":"Europe","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null},{"x":[4.53700472145269,4.40114211228811],"y":[81.235,80.204],"text":["Australia","New Zealand"],"type":"scatter","mode":"markers","marker":{"autocolorscale":false,"color":"rgba(36,125,63,1)","opacity":1,"size":[6.12061399094626,4.80944439195868],"symbol":"circle","line":{"width":1.88976377952756,"color":"rgba(36,125,63,1)"}},"hoveron":"points","name":"Oceania","legendgroup":"Oceania","showlegend":true,"xaxis":"x","yaxis":"y","hoverinfo":"text","frame":null}],"layout":{"margin":{"t":43.7625570776256,"r":7.30593607305936,"b":40.1826484018265,"l":37.2602739726027},"plot_bgcolor":"rgba(255,255,255,1)","paper_bgcolor":"rgba(255,255,255,1)","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187},"title":{"text":"Gdp and Life Expectancy in 142 countries","font":{"color":"rgba(0,0,0,1)","family":"","size":17.5342465753425},"x":0,"xref":"paper"},"xaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[2.33084382564856,4.80585074240034],"tickmode":"array","ticktext":["400","4000","40000"],"tickvals":[2.60205999132796,3.60205999132796,4.60205999132796],"categoryorder":"array","categoryarray":["400","4000","40000"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"y","title":{"text":"Gdp Per Capita","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"yaxis":{"domain":[0,1],"automargin":true,"type":"linear","autorange":false,"range":[37.4635,84.7525],"tickmode":"array","ticktext":["40","50","60","70","80"],"tickvals":[40,50,60,70,80],"categoryorder":"array","categoryarray":["40","50","60","70","80"],"nticks":null,"ticks":"outside","tickcolor":"rgba(51,51,51,1)","ticklen":3.65296803652968,"tickwidth":0.66417600664176,"showticklabels":true,"tickfont":{"color":"rgba(77,77,77,1)","family":"","size":11.689497716895},"tickangle":-0,"showline":false,"linecolor":null,"linewidth":0,"showgrid":true,"gridcolor":"rgba(235,235,235,1)","gridwidth":0.66417600664176,"zeroline":false,"anchor":"x","title":{"text":"Life Expectancy","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}},"hoverformat":".2f"},"shapes":[{"type":"rect","fillcolor":"transparent","line":{"color":"rgba(51,51,51,1)","width":0.66417600664176,"linetype":"solid"},"yref":"paper","xref":"paper","x0":0,"x1":1,"y0":0,"y1":1}],"showlegend":true,"legend":{"bgcolor":"rgba(255,255,255,1)","bordercolor":"transparent","borderwidth":1.88976377952756,"font":{"color":"rgba(0,0,0,1)","family":"","size":11.689497716895},"title":{"text":"continent<br />Population","font":{"color":"rgba(0,0,0,1)","family":"","size":14.6118721461187}}},"hovermode":"closest","barmode":"relative"},"config":{"doubleClick":"reset","modeBarButtonsToAdd":["hoverclosest","hovercompare"],"showSendToCloud":false},"source":"A","attrs":{"6d507d3656d6":{"x":{},"y":{},"size":{},"colour":{},"text":{},"type":"scatter"}},"cur_data":"6d507d3656d6","visdat":{"6d507d3656d6":["function (y) ","x"]},"highlight":{"on":"plotly_click","persistent":false,"dynamic":false,"selectize":false,"opacityDim":0.2,"selected":{"opacity":1},"debounce":0},"shinyEvents":["plotly_hover","plotly_click","plotly_selected","plotly_relayout","plotly_brushed","plotly_brushing","plotly_clickannotation","plotly_doubleclick","plotly_deselect","plotly_afterplot","plotly_sunburstclick"],"base_url":"https://plot.ly"},"evals":[],"jsHooks":[]}</script>
<p><br></p>
</div>
<div id="广而告之" class="section level2">
<h2>广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>R语言 |  ggplot2简明绘图之散点图</title>
      <link>https://textdata.cn/blog/2022-09-04-r-ggplot2-scatter/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-04-r-ggplot2-scatter/</guid>
      <description>教你理解图层、数geom、labs等函数，轻松上手ggplot2</description>
      <content:encoded><![CDATA[


<blockquote>
<p>原文: <a href="https://www.miriamheiss.com/posts/graphing-with-ggplot/" class="uri">https://www.miriamheiss.com/posts/graphing-with-ggplot/</a></p>
</blockquote>
<p>ggplot() 函数对任何数据科学家都是必不可少的, ta是一种非常简单的绘图函数。刚开始接触可能看起来很难， 不过不要害怕，因为一旦学了基础知识，一切都会变得清晰！ 让我们开始！</p>
<div id="准备" class="section level2">
<h2>准备</h2>
<p>在这里，我需要导入本节需要的包。 <code>tidyverse</code> 包括八个包，其中之一是 <code>ggplot2</code>。 <code>primer.data</code>包 拥有比R 内置的更多的数据集。</p>
<pre class="r"><code>library(ggplot2)
library(primer.data) #准备数据
library(showtext)</code></pre>
<pre><code>## Loading required package: sysfonts</code></pre>
<pre><code>## Loading required package: showtextdb</code></pre>
<pre class="r"><code>showtext_auto()  #显示中文</code></pre>
</div>
<div id="画布gglot" class="section level2">
<h2>画布gglot</h2>
<p>画画需要画布，对于数据分析的绘图也是同理。导入相关R包后， 用ggplot函数构造一个画布。因为还没设定数据，所以这是一个空画布</p>
<pre class="r"><code>ggplot()</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-2-1.png" width="672" /></p>
<p>我们将使用nhanes数据集，传入数据的代码ggplot(data=nhanes)</p>
<pre class="r"><code>ggplot(data=nhanes)</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-3-1.png" width="672" /></p>
<p>画布看起来依然是空白的，不要紧张。理解这个之前类比PS这类绘图软件，将修图工作看做是很多个图层的叠加。现在我们使用时依然在最底层的ggplot图层，在ggplot函数内添加mapping=aes()参数，准备添加x轴、y轴、color。的图层。</p>
<p>Aesthetic mappings审美映射。</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes())</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-4-1.png" width="672" /></p>
<p>注意了，现在图层即将发生变化。我们选择设置x轴、y轴、color的字段。</p>
<ul>
<li>x轴 height身高</li>
<li>y轴 weight体重</li>
<li>color gender性别</li>
</ul>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-5-1.png" width="672" /></p>
<p>现在我们将开始添加高层次的图层，也会显示越来越多的信息。</p>
<p><br></p>
</div>
<div id="添加geom" class="section level2">
<h2>添加geom</h2>
<p>现在添加geom层(geom是geomeric缩写)，该层是通过 <code>+</code> 构建在ggplot层之上。这里使用 <code>geom_point()</code> 绘制散点图，</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping = aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point()</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-6-1.png" width="672" /></p>
<p>Wow! 不错的开始，不过这个图中的点互相之间重叠的有一点点严重，需要设定点的大小size和透明度alpha来控制重叠效果。</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.3, size=0.5)</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-7-1.png" width="672" /></p>
<p>much better! 但能否按性别，分别绘制男、女的散点图。</p>
<p><br></p>
</div>
<div id="分面facet" class="section level2">
<h2>分面facet</h2>
<p>接下来添加一个分面函数 <code>facet_wrap</code>。该函数会分别生成男性分面、女性分面</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.3, size=0.5)+
  facet_wrap(~gender)</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-8-1.png" width="672" /></p>
<p>现在我们有了两个分面图</p>
<p><br></p>
</div>
<div id="添加第二个geom" class="section level2">
<h2>添加第二个geom</h2>
<p>现在我们需要添加一个趋势线，可以使用 <code>geom_smooth()</code> 函数，因为geom_smooth和geom_point都是geom层的函数，理所当然它俩比 facet_wrap层更近一些。为了让趋势线更明显，将散点的透明度设置的更浅，比如0.1</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth()+
  facet_wrap(~gender)</code></pre>
<pre><code>## `geom_smooth()` using method = &#39;gam&#39; and formula &#39;y ~ s(x, bs = &quot;cs&quot;)&#39;</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-9-1.png" width="672" /></p>
<p>现在，我们想让趋势线更平滑一些。在<code>geom_smooth()</code>中，我们会设置 <code>method="loess"</code>以使得趋势线更平滑。 <code>formula=y~x</code>表示y的变化与x有关。</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  facet_wrap(~gender)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-10-1.png" width="672" />
<br></p>
</div>
<div id="标签labs" class="section level2">
<h2>标签labs</h2>
<p>现在我们需要用<code>labs()</code>函数给图片添加标签图层。例如title、subtitle、caption、x、y、legend。</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  facet_wrap(~gender)+
  labs(title = &quot;Heights in the U.S.&quot;,
       subtitle = &quot;On average, men weigh more and are taller than women&quot;)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-11-1.png" width="672" />
现在有了正副标题，横纵坐标没有数量单位，不太nice，这里更改为 <code>Height(cm)、Weight(kg)</code></p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  facet_wrap(~gender)+
  labs(title = &quot;Heights in the U.S.&quot;,
       subtitle = &quot;On average, men weigh more and are taller than women&quot;,
       x=&quot;Height (cm)&quot;,
       y=&quot;Weight (kg)&quot;)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-12-1.png" width="672" />
Awesome! 但图例Lengend中的 <code>gender</code> 依然是小写，我希望改为大写。我们知道x、y、color分别对应height、weight、gender，所以如果更改gender，需要设置的是color。</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  facet_wrap(~gender)+
  labs(title = &quot;Heights in the U.S.&quot;,
       subtitle = &quot;On average, men weigh more and are taller than women&quot;,
       x=&quot;Height (cm)&quot;,
       y=&quot;Weight (kg)&quot;,
       color=&quot;Gender&quot;)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-13-1.png" width="672" /></p>
<p>但是看到这个图片时，其他人会想原始数据是啥情况，怎么来的。这时候我们需要告诉大家nhances数据集来自于 <code>National Health and Nutrition Examination Survey</code>。通过设置labs的caption参数即可。</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  facet_wrap(~gender)+
  labs(title = &quot;Heights in the U.S.&quot;,
       subtitle = &quot;On average, men weigh more and are taller than women&quot;,
       x=&quot;Height (cm)&quot;,
       y=&quot;Weight (kg)&quot;,
       color=&quot;Gender&quot;,
       caption=&quot;Source: National Health and Nutrition Examination Survey&quot;)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-14-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="更改配色" class="section level2">
<h2>更改配色</h2>
<p>绘图已经相当完整，但geom层的散点颜色可能不是咱的最爱，如何设置颜色呢？</p>
<p>更改geom层的颜色，所以该层紧贴geom层，且在geom层之上。设置方法使用 <code>scale_color_manual()</code> 即可。<code>scale_color_munual()</code> 中的values可以传入颜色十六进制的字符串，还可以传入颜色字符串。</p>
<pre class="r"><code>ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  scale_color_manual(values=c(&quot;magenta&quot;, &quot;blue&quot;))+
  facet_wrap(~gender)+
  labs(title = &quot;Heights in the U.S.&quot;,
       subtitle = &quot;On average, men weigh more and are taller than women&quot;,
       x=&quot;Height (cm)&quot;,
       y=&quot;Weight (kg)&quot;,
       color=&quot;Gender&quot;,
       caption=&quot;Source: National Health and Nutrition Examination Survey&quot;)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-15-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="设置主题" class="section level2">
<h2>设置主题</h2>
<ul>
<li>theme_bw()</li>
<li>theme_dark()</li>
<li>theme_gray()</li>
<li>theme_light()</li>
<li>theme_minimal()</li>
</ul>
<pre class="r"><code>g &lt;- ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  scale_color_manual(values=c(&quot;magenta&quot;, &quot;blue&quot;))+
  facet_wrap(~gender)+
  labs(title = &quot;Heights in the U.S.&quot;,
       subtitle = &quot;On average, men weigh more and are taller than women&quot;,
       x=&quot;Height (cm)&quot;,
       y=&quot;Weight (kg)&quot;,
       color=&quot;Gender&quot;,
       caption=&quot;Source: National Health and Nutrition Examination Survey&quot;)
  
g + theme_minimal()</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-16-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="保存" class="section level2">
<h2>保存</h2>
<pre class="r"><code>ggsave(
  filename = &quot;scatter.png&quot;,
  plot = g,
  width = 10,
  height = 8,
  dpi = 100,
  device = &quot;png&quot;
)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><br></p>
</div>
<div id="中文问题" class="section level2">
<h2>中文问题</h2>
<p>默认ggplot2不支持中文，为了能显示中文，需要使用showtext包</p>
<pre class="r"><code>library(ggplot2)
library(primer.data) #提供数据
library(showtext) #支持中文
showtext_auto()

ggplot(data=nhanes,
       mapping=aes(
         x=height,
         y=weight,
         color=gender))+
  geom_point(alpha=0.1, size=0.5)+
  geom_smooth(method=&quot;loess&quot;, formula=y~x)+
  scale_color_manual(values=c(&quot;magenta&quot;, &quot;blue&quot;))+
  facet_wrap(~gender)+
  labs(title = &quot;美国身高&quot;,
       subtitle = &quot;平均而言，男性群体的身高会高于女性群体&quot;,
       x=&quot;身高(cm)&quot;,
       y=&quot;体重(kg)&quot;,
       color=&quot;性别&quot;,
       caption=&quot;数据源: National Health and Nutrition Examination Survey&quot;)</code></pre>
<pre><code>## Warning: Removed 366 rows containing non-finite values (stat_smooth).</code></pre>
<pre><code>## Warning: Removed 366 rows containing missing values (geom_point).</code></pre>
<p><img src="/blog/2022-09-04-r-ggplot2-scatter/index_files/figure-html/unnamed-chunk-18-1.png" width="672" /></p>
<p><br></p>
</div>
<div id="广而告之" class="section level2">
<h2>广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
</div>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
