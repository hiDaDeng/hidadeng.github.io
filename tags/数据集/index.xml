<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>数据集 on 大邓和他的PYTHON</title>
    <link>/tags/%E6%95%B0%E6%8D%AE%E9%9B%86/</link>
    <description>Recent content in 数据集 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 28 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E6%95%B0%E6%8D%AE%E9%9B%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LIST | 可供社科(经管)领域使用的科研数据集清单</title>
      <link>https://textdata.cn/blog/datasets_available_for_management_science/</link>
      <pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/datasets_available_for_management_science/</guid>
      <description>可供社科(经管)使用的数据集</description>
      <content:encoded><![CDATA[<p>按照科研层次，将数据集(资源)类型划分为如下四方面</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 社会
- 企业
- 用户
- 其他
</code></pre></div><p>本列表所展示的数据集，均为整理自网络公开内容。  为方便经管社科领域学者开展大数据范式的科学研究，本列表将展示如何用Python处理这类大体量数据集。</p>
<p>如有任何问题， 可加微信372335839，备注「姓名-学校-专业」。</p>
<p><br><br></p>
<h2 id="社会">社会</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">数据集 | 含 人民日报/经济日报/光明日报 等 120 家报纸(2025.3)</a></li>
<li><a href="https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/">数据集 | 人民网地方领导留言板原始文本(2011-2023.12)</a></li>
<li><a href="https://textdata.cn/blog/2025-03-03-global-cell-towers-dataset/">数据集 | 4628w条全球手机蜂窝基站数据(2006~2024.5)</a></li>
<li><a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/">数据集 | 5112w+专利申请数据集(1985-2025)</a></li>
<li><a href="https://textdata.cn/blog/2024-06-22-usa_today_daily-news-dataset/">数据集 | USA Today 新闻数据集(2012~2024)</a></li>
<li><a href="https://textdata.cn/blog/2024-07-12-china-daily-dataset/">数据集 | ChinaDaily 新闻数据集(2008 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/">数据集 | 企业家 Entrepreneur 杂志数据集(1996 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-nytimes-news-dataset-from-2000-to-2025/">数据集 | 纽约时报 NYTimes 新闻数据集(2000~2025.3.1)</a></li>
<li><a href="https://textdata.cn/blog/2024-06-03-podcasts-dataset/">数据集 | 30w播客(Podcast)的560w条评论数据(2005-2023)</a></li>
<li><a href="https://textdata.cn/blog/2024-06-05-wenzheng-hunan-dataset/">数据集 | 30w条「问政湖南」留言&amp;回复数据(2010-2024)</a></li>
<li><a href="https://textdata.cn/blog/2023-12-03-china-mainland-corporate-registration-information/">数据集 | 2.49亿条中国工商注册企业信息(23.9更新)</a></li>
<li><a href="https://textdata.cn/blog/2023-05-07-china-law-judgment-documents-datasets/">数据集 | 中国裁判文书网(2010-2021)</a></li>
<li><a href="https://textdata.cn/blog/2023-09-03-government-procurement-contract-data/">数据集 | 372w政府采购合同公告明细数据（2024.03)</a></li>
<li><a href="https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/">数据集 | 国、省、市三级政府工作报告文本(1954-2023)</a></li>
</ul>
<br> 
<ul>
<li><a href="https://textdata.cn/blog/2025-03-21-the-arxiv-metadata-dataset-of-millions-of-scholarly-papers/">数据集 | arXiv网站 269w 学术论文元数据 (2007 ~ 2025)</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-netherlands-daily-news-dataset-from-2015-to-2025/">数据集 | NOS.nl荷兰新闻数据集(2015~2025.2.28)</a></li>
<li><a href="https://textdata.cn/blog/2024-07-13-cbs-news-dataset/">数据集 | CBS News 新闻数据集(1998 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2024-04-16-douban-movie-1000w-ratings-comments-dataset/">数据集 |  使用 1000w 条豆瓣影评训练Word2Vec</a></li>
<li><a href="https://textdata.cn/blog/2024-04-17-douban-book-3394w-ratings-comments-dataset/">数据集 | 3394w条豆瓣书评数据集</a></li>
<li><a href="https://textdata.cn/blog/2023-12-29-china-area-dataset/">数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）</a></li>
<li><a href="https://textdata.cn/blog/2023-12-29-china-area-division-change/">数据集 | 行政区划代码历史沿革数据集</a></li>
<li><a href="https://textdata.cn/blog/2023-04-12-china-poi-datasets/">数据集 | 3.9G 全国 POI 地点兴趣点数据集</a></li>
<li><a href="https://textdata.cn/blog/2025-03-14-google-map-review-dataset/">数据集 | 6.6亿条美国谷歌地图POI评论数据(~2021.9)</a></li>
<li><a href="https://textdata.cn/blog/2024-07-08-open-sanctions-dataset/">数据源 | 使用该网站可查询被制裁的个人、企业组织等制裁清单</a></li>
<li><a href="https://textdata.cn/blog/2025-03-14-uk-glassdoor-review-dataset/">数据集 | Glassdoor网站 990w 条英国公司(职位)评论数据(2008~2023.7)</a></li>
<li><a href="https://textdata.cn/blog/2025-03-17-the_mother_of_all_movie_review_datasets/">数据集 | 5513w条外文电影评论数据(1902~2024)</a></li>
</ul>
<p><br><br></p>
<h2 id="企业">企业</h2>
<ul>
<li><a href="https://textdata.cn/blog/2025-03-03-china-share-market-interaction-platform-dataset/">数据集 | 536w条「上证e互动、深证互动易」问答记录(2011-2024.12.31)</a></li>
<li><a href="https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/">数据集|  美股年报10-K、20-F数据(2000-2023.12)</a></li>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/">数据集 | 港股年报文本数据集(2007 ~ 2023.12)</a></li>
<li><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/">数据集 | 三板上市公司年报(2002-2023.12)</a></li>
<li><a href="https://textdata.cn/blog/2025-02-25-china-fund-annual-report-dataset/">数据集 | 1998-2023年中国基金年度报告</a></li>
<li><a href="https://textdata.cn/blog/2025-03-06-china-recruitment-dataset-of-listed-companies/">数据集 | 上市公司招聘数据(2014~2023)</a></li>
<li><a href="https://textdata.cn/blog/2025-03-06-chinese-fresh-graduates-recruitment-dataset/">数据集 | 应届生招聘数据集(2014~2024.12)</a></li>
<li><a href="https://textdata.cn/blog/2024-06-26-hongkong-environmental-social-governance-dataset/">数据集 | 2012年-2023年港股ESG报告数据集</a></li>
<li><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">数据集 | 2001年-2023年A股上市公司年报&amp;管理层讨论与分析</a></li>
<li><a href="https://textdata.cn/blog/2023-08-11-china-a-market-corporate-social-responsibility-dataste/">数据集 | 2006年-2023年A股企业社会责任报告/环境报告书/可持续发展报告</a></li>
<li><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">词向量 | 使用MD&amp;A2001-2022语料训练Word2Vec模型</a></li>
<li><a href="https://textdata.cn/blog/2024-04-18-china-a-listed-company-figure-characteristic-dataset/">数据集 |  上市公司董监高人员的个人特征/教育背景/任职情况</a></li>
<li><a href="https://textdata.cn/blog/2023-04-17-china-a-market-inquiry-letter-datasets/">数据集 | 2014年-2023年「问询函」</a></li>
<li><a href="https://textdata.cn/blog/2023-09-08-china-a-share-market-listed-company-earnings-communication-conference/">数据集 | 84w条业绩说明会问答数据(2005-2023)</a></li>
<li><a href="https://textdata.cn/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/">数据集 | 上市公司 208 万条专利数据集 (1991-2022)</a></li>
</ul>
<br> 
<ul>
<li><a href="https://textdata.cn/blog/2025-03-11-layline-insider-trading-dataset/">数据集 | Layline美股内幕交易数据集</a></li>
<li><a href="https://textdata.cn/blog/2024-07-19-csrwise-dataset/">数据集 | 聚焦美股企业社会责任CSR Wire网站新闻数据集(1999-2024)</a></li>
<li><a href="https://textdata.cn/blog/2024-01-03-listed-company-arbitration-dataset/">数据集 | 36330条上市公司仲裁数据(2000-2021.9)</a></li>
<li><a href="https://textdata.cn/blog/2023-04-26-entrusted-loan-dataset/">数据集 | 07-21年上市公司「委托贷款公告」</a></li>
<li><a href="https://textdata.cn/blog/2022-11-25-senior-manager-resume-dataset/">数据集 | 90w 条中国上市公司高管数据</a></li>
<li><a href="https://textdata.cn/blog/2022-12-10-1850w-poi-dataset/">数据集| 1850万条世界地图 POI 兴趣点数据集</a></li>
</ul>
<p><br><br></p>
<h2 id="用户">用户</h2>
<ul>
<li><a href="https://textdata.cn/blog/2025-03-05-consumer-complaint-dataset/">数据集 | 1500w+ 消费者投诉数据集(2018 ~ 2024.8)</a></li>
</ul>
<br> 
<ul>
<li><a href="https://textdata.cn/blog/2025-03-06-consumer-finance-complaints-dataset/">数据集 | 消费者金融投诉数据集(2011 ~ 2025.3)</a></li>
<li><a href="https://textdata.cn/blog/2024-04-10-kiva-crowdfunding/">数据集 | 众筹平台 kiva 借贷信息</a></li>
<li><a href="https://textdata.cn/blog/2023-11-22-1000w-github-developer-dataset/">数据集 | 1000万 Github 用户数据</a></li>
<li><a href="https://textdata.cn/blog/2023-11-22-open-dataset-gharchive-org/">数据集 | 使用 GH Archive 获取 Github 社区用户数据</a></li>
<li><a href="https://textdata.cn/blog/2023-12-24-instagram-influencer-dataset/">数据集 | 3.3万 Instagram Influencer 的 1018万条推文数据</a></li>
<li><a href="https://textdata.cn/blog/yelpdataset_10g/">数据集 | YelpDaset 酒店管理类数据集</a></li>
<li><a href="https://textdata.cn/blog/2022-12-08-indiegogo-dataset/">数据集 | 200万条 Indiegogo 众筹项目信息</a></li>
<li><a href="https://textdata.cn/blog/2022-12-04-kickstarters_dataset/">数据集 | 23w条 Kickstarter 项目信息</a></li>
<li><a href="https://textdata.cn/blog/2023-05-10-100m-bilibili-user-info-dataset/">数据集 | B站/哔哩哔哩 1 亿用户数据(脱敏)</a></li>
<li><a href="https://textdata.cn/blog/2023-03-06-zhihurec-dataset/">数据集 | 80w 知乎用户问答数据(脱敏)</a></li>
<li><a href="https://textdata.cn/blog/2023-03-06-bedtime-news-datasets/">数据集 | 马前卒工作室 睡前消息文稿汇总</a></li>
</ul>
<p><br><br></p>
<h2 id="其他">其他</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">词向量 | 使用 MD&amp;A2001-2022 语料训练 Word2Vec 模型</a></li>
<li><a href="https://textdata.cn/blog/2023-12-28-train-word2vec-using-renmin-gov-leader-board-dataset/">词向量  | 使用人民网领导留言板语料训练 Word2Vec 模型</a></li>
</ul>
<br> 
<ul>
<li><a href="https://textdata.cn/blog/embeddings_resource_usage_method/">词向量 | 中文词向量资源汇总 &amp; 使用方法</a></li>
<li><a href="https://textdata.cn/blog/pretained_nlp_models/">词向量 | 汽车、金融等 9 大领域预训练词向量模型下载资源</a></li>
<li><a href="https://textdata.cn/blog/2023-03-08-edgar-w2v-and-corpus/">词向量| 25 年数据的预训练词向量模型(EDGAR）</a></li>
<li><a href="https://textdata.cn/blog/2022-10-16-aligned-word-vectors/">词向量 | 多语言对齐词向量预训练模型</a></li>
<li><a href="https://textdata.cn/blog/2023-04-05-chinese-concreteness-dictionary-from-behavior-research-method/">词典 | 中文心理词典，含具体性、可成象性等指标</a></li>
<li><a href="https://textdata.cn/blog/2024-02-27-ancw-affective-norms-for-4030-chinese-words/">词典 | ANCW 4030 词的中文情感词典(效价、唤醒度、主导度、具体性)</a></li>
<li><a href="https://textdata.cn/blog/2023-03-20-nature-six-semantic-dimension-database/">词典 | Nature通用中英文六维语义情感词典</a></li>
<li><a href="https://textdata.cn/blog/chinese_semantic_kb/">词典| 中文语义常用词典(ChineseSemanticKB)</a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>实验 | 使用Stanford Glove代码训练中文语料的Glove模型</title>
      <link>https://textdata.cn/blog/2025-03-28-train_a_glove_model_on_chinese_corpus_using_stanfordnlp/</link>
      <pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-28-train_a_glove_model_on_chinese_corpus_using_stanfordnlp/</guid>
      <description>&lt;h2 id=&#34;一简介&#34;&gt;一、简介&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://nlp.stanford.edu/projects/glove/&#34;&gt;Stanford GloVe&lt;/a&gt;（Global Vectors for Word Representation）算法作为一种融合全局统计信息与局部上下文窗口的词嵌入模型，相较于Word2Vec仅依赖局部上下文，GloVe利用全局统计信息，能更精准地反映词频分布特征。例如，在高维词向量（如200D）中，GloVe在词语类比任务中准确率达75%，并在命名实体识别任务中优于其他词嵌入模型。因其高效的语义表征能力，在社会学、管理学等领域展现出广泛的应用价值。 相关词嵌入文献资料可阅读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-03-organization-science-with-word-embeddings/&#34;&gt;https://textdata.cn/blog/2023-11-03-organization-science-with-word-embeddings/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2022-04-07-word-embeddings-in-social-science/&#34;&gt;转载|大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science/&#34;&gt;词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2022-04-09-literature-about-embeddings/&#34;&gt;文献汇总 | 词嵌入 与 社会科学中的偏见(态度)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2022-04-01-embeddings-and-attitude/&#34;&gt;词嵌入测量不同群体对某概念的态度(偏见)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二环境准备&#34;&gt;二、环境准备&lt;/h2&gt;
&lt;h3 id=&#34;21-windows&#34;&gt;2.1 Windows&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt;（建议以管理员身份运行）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行以下命令来安装 &lt;em&gt;&lt;strong&gt;Chocolatey&lt;/strong&gt;&lt;/em&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; iex ((New-Object System.Net.WebClient).DownloadString(&amp;#39;https://community.chocolatey.org/install.ps1&amp;#39;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装完成后，重新打开一个新的 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt; 窗口。 运行以下命令确认 &lt;em&gt;&lt;strong&gt;Chocolatey&lt;/strong&gt;&lt;/em&gt; 是否成功安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;choco --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;em&gt;&lt;strong&gt;make&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;choco install make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装完成后，重新打开一个新的 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt; 窗口。 运行以下命令确认 &lt;em&gt;&lt;strong&gt;make&lt;/strong&gt;&lt;/em&gt; 是否成功安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;make --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取&lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/&#34;&gt;cntext2.x&lt;/a&gt; 的安装文件 &lt;em&gt;&lt;strong&gt;cntext-2.1.4-py3-none-any.whl&lt;/strong&gt;&lt;/em&gt;，并将该whl文件放置于桌面。执行以下安装命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd Desktop
pip install cntext-2.1.4-py3-none-any.whl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-mac&#34;&gt;2.2 Mac&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开 &lt;em&gt;&lt;strong&gt;terminal&lt;/strong&gt;&lt;/em&gt;，执行命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装完成后，重新打开一个新的 &lt;em&gt;&lt;strong&gt;terminal&lt;/strong&gt;&lt;/em&gt; 窗口。 运行以下命令确认 &lt;em&gt;&lt;strong&gt;Homebrew&lt;/strong&gt;&lt;/em&gt; 是否成功安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;brew --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;em&gt;&lt;strong&gt;make&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;brew install make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装完成后，重新打开一个新的 &lt;em&gt;&lt;strong&gt;terminal&lt;/strong&gt;&lt;/em&gt; 窗口。 运行以下命令确认 &lt;em&gt;&lt;strong&gt;make&lt;/strong&gt;&lt;/em&gt; 是否成功安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;make --version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取&lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/&#34;&gt;cntext2.x&lt;/a&gt; 的安装文件 &lt;em&gt;&lt;strong&gt;cntext-2.1.4-py3-none-any.whl&lt;/strong&gt;&lt;/em&gt;，并将该whl文件放置于桌面。执行以下安装命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd desktop
pip3 install cntext-2.1.4-py3-none-any.whl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三训练中文glove&#34;&gt;三、训练中文GloVe&lt;/h2&gt;
&lt;h3 id=&#34;31-准备中文语料&#34;&gt;3.1 准备中文语料&lt;/h3&gt;
&lt;p&gt;以三体小说为例，&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-santi.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 读取原始数据「raw三体.txt」&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;raw_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;raw三体.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 去除非中文字符&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;chinese_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[\u4e00-\u9fa5]+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;raw_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 分词并保存到「三体.txt」中&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;三体.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jieba&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lcut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;32-下载glove&#34;&gt;3.2 下载GloVe&lt;/h3&gt;
&lt;p&gt;这里大邓准备了两个选择&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- stanfordnlp/GloVe            https://github.com/stanfordnlp/GloVe  
- hiDaDeng/GloVe               https://github.com/hiDaDeng/GloVe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/stanfordnlp/GloVe&#34;&gt;&lt;em&gt;&lt;strong&gt;stanfordnlp/GloVe&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;设计很巧妙， 但该项目没有展示环境配置、中文实验数据、中文实验结果。&lt;/p&gt;
&lt;p&gt;因此， 大邓在 &lt;a href=&#34;https://github.com/stanfordnlp/GloVe&#34;&gt;&lt;em&gt;&lt;strong&gt;stanfordnlp/GloVe&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; 基础上， 添加了增加了环境配置、代码参数说明、准备中文实验数据、中文实验结果等说明。&lt;/p&gt;
&lt;p&gt;接下来以 &lt;a href=&#34;https://github.com/hiDaDeng/GloVe&#34;&gt;&lt;em&gt;&lt;strong&gt;hiDaDeng/GloVe&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; 做说明。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-download.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;33-glove文件目录&#34;&gt;3.3 GloVe文件目录&lt;/h3&gt;
&lt;p&gt;从  &lt;a href=&#34;https://github.com/hiDaDeng/GloVe&#34;&gt;&lt;em&gt;&lt;strong&gt;hiDaDeng/GloVe&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt; 解压后得到 &lt;em&gt;&lt;strong&gt;GloVe-master&lt;/strong&gt;&lt;/em&gt; 文件夹。 &lt;em&gt;&lt;strong&gt;GloVe-master&lt;/strong&gt;&lt;/em&gt; 目录(含义)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;GloVe
├── README.md  GloVe代码说明文档
├── src        GloVe算法C语言源代码
├── eval       评估代码
├── demo.sh    GloVe训练命令(这里是重点)
├── output     GloVe训练输出文件夹；此处存储着大邓使用{三体.txt}训练出的Glove模型相关文件
│   ├── 三体_cooccurrence.bin
│   └── 三体_cooccurrence.shuf.bin
│   └── 三体_vectors.txt
│   └── 三体_vectors.bin 三体_vocab.txt
│   └── 三体_vocab.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;这里我们展示下 &lt;em&gt;&lt;strong&gt;demo.sh&lt;/strong&gt;&lt;/em&gt;的源代码， 并对部分代码进行展示说明。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 设置语料数据文件&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 注意: 中文语料文件必须是分词后的文本文件。&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 如 「我是中国人，我爱中国」 要整备成 「我 是 中国人 ， 我 爱 中国」&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;CORPUS_FILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 三体.txt

&lt;span class=&#34;c1&#34;&gt;# 创建 output 文件夹，保存训练结果(模型文件bin/txt等文件)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;OUTPUT_DIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;output&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 程序运行时允许使用的最大内存，单位为 GB&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 注意: 此值越大，程序运行速度可能越快，但也会占用更多系统资源&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;MEMORY&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 4.0

&lt;span class=&#34;c1&#34;&gt;# 词汇表中单词的最小出现次数&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 出现次数低于此值的单词将被忽略，以减少词汇表的大小&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 注意: 此值越大，模型可能越精确，但词汇表也会越小&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;VOCAB_MIN_COUNT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 每个单词向量的维度大小&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 维度越大，向量表示的信息越丰富，但计算成本也越高&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;VECTOR_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;   

&lt;span class=&#34;c1&#34;&gt;# 训练模型的最大迭代次数&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 迭代次数越多，模型可能越精确，但训练时间也会相应增加&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;MAX_ITER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 计算共现矩阵时考虑的上下文窗口大小&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 即当前单词前后各多少个单词会被考虑在内&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;WINDOW_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;   

&lt;span class=&#34;c1&#34;&gt;# 训练模型时使用的线程数量&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 线程数越多，训练速度可能越快，但也会占用更多系统资源&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;NUM_THREADS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 共现矩阵中元素的最大计数值； 超过此值的元素将被截断为该值&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;X_MAX&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;34-开始训练&#34;&gt;3.4 开始训练&lt;/h3&gt;
&lt;p&gt;以准备好的 &lt;em&gt;&lt;strong&gt;三体.txt&lt;/strong&gt;&lt;/em&gt; 语料文件为例， 训练 50 维的 GloVe 模型(VECTOR_SIZE=50)， 结果保存到  &lt;em&gt;&lt;strong&gt;output&lt;/strong&gt;&lt;/em&gt; 文件夹内。&lt;/p&gt;
&lt;br&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt; (Mac用户打开terminal) 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 &lt;em&gt;&lt;strong&gt;GloVe-master&lt;/strong&gt;&lt;/em&gt; 文件夹移动到桌面。 在 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt; 执行以下命令，切换工作目录到 &lt;em&gt;&lt;strong&gt;GloVe-master&lt;/strong&gt;&lt;/em&gt; 文件夹。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd desktop/GloVe-master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt; 中执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;./demo.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大概运行了几分钟就出结果了。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-output.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;35-转化成word2vec格式&#34;&gt;3.5 转化成Word2Vec格式&lt;/h3&gt;
&lt;p&gt;打开 &lt;em&gt;&lt;strong&gt;三体_vectors.txt&lt;/strong&gt;&lt;/em&gt; 查看不同词语对应的词向量&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-vector-txt.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;注意刚刚生成的 &lt;em&gt;&lt;strong&gt;output/三体_vectors.txt&lt;/strong&gt;&lt;/em&gt; 是无法用 python 直接利用的。&lt;/p&gt;
&lt;p&gt;使用 gensim库 或 cntext2.x 库将其转化为 word2vec 格式的txt文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;glove_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;output/三体_vectors.txt&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;word2vec_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;output/三体_vectors_word2vec.txt&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 将Glove转化为Word2Vec格式&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glove2word2vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glove_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word2vec_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-g2v.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;其实两个txt文件的区别，仅仅是在 &lt;em&gt;&lt;strong&gt;三体_vectors_word2vec.txt&lt;/strong&gt;&lt;/em&gt; 在第一行多了两个数字， 分别代表词汇表大小和向量维度。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;四使用中文glove模型&#34;&gt;四、使用中文GloVe模型&lt;/h2&gt;
&lt;h3 id=&#34;41-加载模型&#34;&gt;4.1 加载模型&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;word2vec_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;output/三体_vectors_word2vec.txt&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 加载word2vec模型.txt文件&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wv_model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word2vec_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;binary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wv_model&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;lt;gensim.models.keyedvectors.KeyedVectors at 0x336ff8dd0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;42-keyedvectors的操作方法或属性&#34;&gt;4.2 KeyedVectors的操作方法(或属性)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KeyedVectors.key_to_index&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取单词到索引的映射。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KeyedVectors.vector_size&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取GloVe模型中任意词向量的维度。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KeyedVectors.get_vector(word)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取给定单词的词向量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KeyedVectors.index_to_key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取词汇表中的所有单词。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KeyedVectors.similar_by_word(word, topn=10)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取某词语最相似的10个近义词。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;KeyedVectors.similar_by_vector(vector, topn=10)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取词向量最相似的10个近义词。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;421-词表&#34;&gt;4.2.1 词表&lt;/h3&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;wv_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index_to_key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;的&amp;#39;,
 &amp;#39;了&amp;#39;,
 &amp;#39;在&amp;#39;,
...
 &amp;#39;引力&amp;#39;,
 &amp;#39;所说&amp;#39;,
 &amp;#39;星际&amp;#39;,
 ...]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;422-词表映射&#34;&gt;4.2.2 词表映射&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;wv_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_to_index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;{&amp;#39;的&amp;#39;: 0,
 &amp;#39;了&amp;#39;: 1,
 &amp;#39;在&amp;#39;: 2,
...
 &amp;#39;引力&amp;#39;: 997,
 &amp;#39;所说&amp;#39;: 998,
 &amp;#39;星际&amp;#39;: 999,
 ...}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;423-向量维度数&#34;&gt;4.2.3 向量维度数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;词表有 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key_to_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; 个词&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;向量是 &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector_size&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; 维&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;词表有 4365 个词
向量是 50 维
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;424-获取词向量&#34;&gt;4.2.4 获取词向量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 查看「降临」的词向量&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;降临&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;array([ 0.672314,  0.020081,  0.653733,  0.598732, -0.680517, -0.049689,
       -0.16845 , -0.06759 , -0.147955,  0.024006,  0.264551, -0.050127,
        0.252063, -0.475633,  0.103722, -0.012481,  0.040755,  1.154912,
        0.742695,  0.048619, -0.514424, -1.184054,  0.515892, -0.1034  ,
        0.368755, -0.690357, -0.784287, -0.505814,  0.035807, -0.166354,
       -0.26149 ,  0.015089,  0.10626 , -0.215666, -0.374001, -0.123558,
        0.422617, -0.075277, -0.316387, -0.484295,  0.059687,  0.132621,
        0.192094, -0.591919,  0.236281,  0.164198, -0.058724,  1.285457,
        0.905606, -0.52032 ], dtype=float32)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;425-近义词&#34;&gt;4.2.5 近义词&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;similar_by_word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;三体&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[(&amp;#39;叛军&amp;#39;, 0.7699569463729858),
 (&amp;#39;更新&amp;#39;, 0.7687217593193054),
 (&amp;#39;地球&amp;#39;, 0.760529100894928),
 (&amp;#39;全集&amp;#39;, 0.7575182914733887),
 (&amp;#39;最快&amp;#39;, 0.7426372170448303),
 (&amp;#39;世界&amp;#39;, 0.7262137532234192),
 (&amp;#39;最新&amp;#39;, 0.7219281792640686),
 (&amp;#39;游戏&amp;#39;, 0.7180070877075195),
 (&amp;#39;危机&amp;#39;, 0.7020451426506042),
 (&amp;#39;教&amp;#39;, 0.7012627720832825)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;426-计算多个词的中心向量&#34;&gt;4.2.6 计算多个词的中心向量&lt;/h3&gt;
&lt;p&gt;我们可以计算「三体」、「降临」、「组织」、「拯救」的中心向量eto_vector。 并试图寻找中心向量eto_vector的最相似的10个词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;eto_vector&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;semantic_centroid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;三体&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;降临&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;组织&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;拯救&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eto_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 寻找 eto_vector 语义最相似的10个词&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;similar_by_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eto_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[ 0.6267875   0.08975425  0.48438451  0.405128   -0.49928901  0.11347825
 -0.90057975  0.11877625 -0.27053049  0.344603    0.4368495  -0.3839495
  0.02633176 -0.138534    0.2531555  -0.0060905  -0.48776849  0.75548999
  0.72575876 -0.446079   -0.30361701 -1.039792    0.457687   -0.4286315
  0.44577325 -0.39119426 -0.4783935  -0.2596135  -0.32513325 -0.10315975
 -0.42880575 -0.48328425  0.129438   -0.17085625 -0.13454625 -0.070053
  0.68060375  0.16736924 -0.15664874 -0.20528575  0.385481    0.206432
  0.18913225 -0.93453825  0.58597099  0.60727924  0.009064    0.87661726
  0.65814423 -0.356567  ]

[(&amp;#39;降临&amp;#39;, 0.8707027435302734),
 (&amp;#39;组织&amp;#39;, 0.8625670671463013),
 (&amp;#39;三体&amp;#39;, 0.8621653914451599),
 (&amp;#39;派&amp;#39;, 0.8343338966369629),
 (&amp;#39;拯救&amp;#39;, 0.8301094174385071),
 (&amp;#39;叛军&amp;#39;, 0.784512460231781),
 (&amp;#39;地球&amp;#39;, 0.7536635398864746),
 (&amp;#39;世界&amp;#39;, 0.7245718836784363),
 (&amp;#39;外部&amp;#39;, 0.7078365087509155),
 (&amp;#39;入侵&amp;#39;, 0.6962169408798218)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;熟悉三体的朋友应该能联想到背叛人类的ETO(地球三体组织)有两个派别，分别是拯救派和降临派。&lt;/p&gt;
&lt;p&gt;ETO开发了一款虚拟现实游戏，它向参与者展示了三体世界的真实情况，包括其恶劣的自然条件、三体文明的历史及其科技水平等。通过参与这个游戏，玩家们能够逐渐了解三体世界的真相，并最终决定是否要加入到支持三体文明入侵地球的行列中来。&lt;/p&gt;
&lt;p&gt;这个游戏不仅充当了信息传递的媒介，也是甄别志同道合者的工具，让那些对人类社会现状不满、渴望变革的人们找到了组织，进而成为了背叛人类的叛军一员。在这个过程中，“三体游戏”起到了关键的作用，是连接地球人与三体世界的重要桥梁。&lt;/p&gt;
&lt;br&gt;</description>
      <content:encoded><![CDATA[<h2 id="一简介">一、简介</h2>
<p><a href="https://nlp.stanford.edu/projects/glove/">Stanford GloVe</a>（Global Vectors for Word Representation）算法作为一种融合全局统计信息与局部上下文窗口的词嵌入模型，相较于Word2Vec仅依赖局部上下文，GloVe利用全局统计信息，能更精准地反映词频分布特征。例如，在高维词向量（如200D）中，GloVe在词语类比任务中准确率达75%，并在命名实体识别任务中优于其他词嵌入模型。因其高效的语义表征能力，在社会学、管理学等领域展现出广泛的应用价值。 相关词嵌入文献资料可阅读</p>
<ul>
<li><a href="https://textdata.cn/blog/2023-11-03-organization-science-with-word-embeddings/">https://textdata.cn/blog/2023-11-03-organization-science-with-word-embeddings/</a></li>
<li><a href="https://textdata.cn/blog/2022-04-07-word-embeddings-in-social-science/">转载|大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用</a></li>
<li><a href="https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science/">词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总</a></li>
<li><a href="https://textdata.cn/blog/2022-04-09-literature-about-embeddings/">文献汇总 | 词嵌入 与 社会科学中的偏见(态度)</a></li>
<li><a href="https://textdata.cn/blog/2022-04-01-embeddings-and-attitude/">词嵌入测量不同群体对某概念的态度(偏见)</a></li>
</ul>
<p><br><br></p>
<h2 id="二环境准备">二、环境准备</h2>
<h3 id="21-windows">2.1 Windows</h3>
<ol>
<li>
<p>打开 <em><strong>cmd</strong></em>（建议以管理员身份运行）。</p>
</li>
<li>
<p>运行以下命令来安装 <em><strong>Chocolatey</strong></em>：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://community.chocolatey.org/install.ps1&#39;))
</code></pre></div></li>
<li>
<p>安装完成后，重新打开一个新的 <em><strong>cmd</strong></em> 窗口。 运行以下命令确认 <em><strong>Chocolatey</strong></em> 是否成功安装：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">choco --version
</code></pre></div></li>
<li>
<p>安装 <em><strong>make</strong></em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">choco install make
</code></pre></div></li>
<li>
<p>安装完成后，重新打开一个新的 <em><strong>cmd</strong></em> 窗口。 运行以下命令确认 <em><strong>make</strong></em> 是否成功安装：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">make --version
</code></pre></div></li>
<li>
<p>获取<a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">cntext2.x</a> 的安装文件 <em><strong>cntext-2.1.4-py3-none-any.whl</strong></em>，并将该whl文件放置于桌面。执行以下安装命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd Desktop
pip install cntext-2.1.4-py3-none-any.whl
</code></pre></div></li>
</ol>
<br>
<h3 id="22-mac">2.2 Mac</h3>
<ol>
<li>
<p>打开 <em><strong>terminal</strong></em>，执行命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">/bin/bash -c &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&#34;
</code></pre></div></li>
<li>
<p>安装完成后，重新打开一个新的 <em><strong>terminal</strong></em> 窗口。 运行以下命令确认 <em><strong>Homebrew</strong></em> 是否成功安装：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">brew --version
</code></pre></div></li>
<li>
<p>安装 <em><strong>make</strong></em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">brew install make
</code></pre></div></li>
<li>
<p>安装完成后，重新打开一个新的 <em><strong>terminal</strong></em> 窗口。 运行以下命令确认 <em><strong>make</strong></em> 是否成功安装：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">make --version
</code></pre></div></li>
<li>
<p>获取<a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">cntext2.x</a> 的安装文件 <em><strong>cntext-2.1.4-py3-none-any.whl</strong></em>，并将该whl文件放置于桌面。执行以下安装命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop
pip3 install cntext-2.1.4-py3-none-any.whl
</code></pre></div></li>
</ol>
<p><br><br></p>
<h2 id="三训练中文glove">三、训练中文GloVe</h2>
<h3 id="31-准备中文语料">3.1 准备中文语料</h3>
<p>以三体小说为例，</p>
<p><img loading="lazy" src="img/01-santi.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">jieba</span>

<span class="c1"># 读取原始数据「raw三体.txt」</span>
<span class="n">raw_text</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;raw三体.txt&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

<span class="c1"># 去除非中文字符</span>
<span class="n">chinese_text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;[\u4e00-\u9fa5]+&#39;</span><span class="p">,</span> <span class="n">raw_text</span><span class="p">))</span>

<span class="c1"># 分词并保存到「三体.txt」中</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;三体.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)))</span>
</code></pre></div><br>
<h3 id="32-下载glove">3.2 下载GloVe</h3>
<p>这里大邓准备了两个选择</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- stanfordnlp/GloVe            https://github.com/stanfordnlp/GloVe  
- hiDaDeng/GloVe               https://github.com/hiDaDeng/GloVe
</code></pre></div><p><a href="https://github.com/stanfordnlp/GloVe"><em><strong>stanfordnlp/GloVe</strong></em></a>设计很巧妙， 但该项目没有展示环境配置、中文实验数据、中文实验结果。</p>
<p>因此， 大邓在 <a href="https://github.com/stanfordnlp/GloVe"><em><strong>stanfordnlp/GloVe</strong></em></a> 基础上， 添加了增加了环境配置、代码参数说明、准备中文实验数据、中文实验结果等说明。</p>
<p>接下来以 <a href="https://github.com/hiDaDeng/GloVe"><em><strong>hiDaDeng/GloVe</strong></em></a> 做说明。</p>
<p><img loading="lazy" src="img/02-download.png" alt=""  />
</p>
<br>
<h3 id="33-glove文件目录">3.3 GloVe文件目录</h3>
<p>从  <a href="https://github.com/hiDaDeng/GloVe"><em><strong>hiDaDeng/GloVe</strong></em></a> 解压后得到 <em><strong>GloVe-master</strong></em> 文件夹。 <em><strong>GloVe-master</strong></em> 目录(含义)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">GloVe
├── README.md  GloVe代码说明文档
├── src        GloVe算法C语言源代码
├── eval       评估代码
├── demo.sh    GloVe训练命令(这里是重点)
├── output     GloVe训练输出文件夹；此处存储着大邓使用{三体.txt}训练出的Glove模型相关文件
│   ├── 三体_cooccurrence.bin
│   └── 三体_cooccurrence.shuf.bin
│   └── 三体_vectors.txt
│   └── 三体_vectors.bin 三体_vocab.txt
│   └── 三体_vocab.txt
</code></pre></div><br>
<p>这里我们展示下 <em><strong>demo.sh</strong></em>的源代码， 并对部分代码进行展示说明。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># 设置语料数据文件</span>
<span class="c1"># 注意: 中文语料文件必须是分词后的文本文件。</span>
<span class="c1"># 如 「我是中国人，我爱中国」 要整备成 「我 是 中国人 ， 我 爱 中国」</span>
<span class="nv">CORPUS_FILE</span> <span class="o">=</span> 三体.txt

<span class="c1"># 创建 output 文件夹，保存训练结果(模型文件bin/txt等文件)</span>
<span class="nv">OUTPUT_DIR</span> <span class="o">=</span> <span class="s2">&#34;output&#34;</span>

<span class="c1"># 程序运行时允许使用的最大内存，单位为 GB</span>
<span class="c1"># 注意: 此值越大，程序运行速度可能越快，但也会占用更多系统资源</span>
<span class="nv">MEMORY</span> <span class="o">=</span> 4.0

<span class="c1"># 词汇表中单词的最小出现次数</span>
<span class="c1"># 出现次数低于此值的单词将被忽略，以减少词汇表的大小</span>
<span class="c1"># 注意: 此值越大，模型可能越精确，但词汇表也会越小</span>
<span class="nv">VOCAB_MIN_COUNT</span> <span class="o">=</span> <span class="m">5</span>

<span class="c1"># 每个单词向量的维度大小</span>
<span class="c1"># 维度越大，向量表示的信息越丰富，但计算成本也越高</span>
<span class="nv">VECTOR_SIZE</span> <span class="o">=</span> <span class="m">50</span>   

<span class="c1"># 训练模型的最大迭代次数</span>
<span class="c1"># 迭代次数越多，模型可能越精确，但训练时间也会相应增加</span>
<span class="nv">MAX_ITER</span> <span class="o">=</span> <span class="m">15</span>

<span class="c1"># 计算共现矩阵时考虑的上下文窗口大小</span>
<span class="c1"># 即当前单词前后各多少个单词会被考虑在内</span>
<span class="nv">WINDOW_SIZE</span> <span class="o">=</span> <span class="m">15</span>   

<span class="c1"># 训练模型时使用的线程数量</span>
<span class="c1"># 线程数越多，训练速度可能越快，但也会占用更多系统资源</span>
<span class="nv">NUM_THREADS</span> <span class="o">=</span> <span class="m">8</span>

<span class="c1"># 共现矩阵中元素的最大计数值； 超过此值的元素将被截断为该值</span>
<span class="nv">X_MAX</span> <span class="o">=</span> <span class="m">10</span> 
</code></pre></div><br>
<h3 id="34-开始训练">3.4 开始训练</h3>
<p>以准备好的 <em><strong>三体.txt</strong></em> 语料文件为例， 训练 50 维的 GloVe 模型(VECTOR_SIZE=50)， 结果保存到  <em><strong>output</strong></em> 文件夹内。</p>
<br>
<ol>
<li>
<p>打开 <em><strong>cmd</strong></em> (Mac用户打开terminal) 。</p>
</li>
<li>
<p>将 <em><strong>GloVe-master</strong></em> 文件夹移动到桌面。 在 <em><strong>cmd</strong></em> 执行以下命令，切换工作目录到 <em><strong>GloVe-master</strong></em> 文件夹。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop/GloVe-master
</code></pre></div></li>
<li>
<p>在 <em><strong>cmd</strong></em> 中执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">./demo.sh
</code></pre></div></li>
</ol>
<p>大概运行了几分钟就出结果了。</p>
<p><img loading="lazy" src="img/03-output.png" alt=""  />
</p>
<br>
<h3 id="35-转化成word2vec格式">3.5 转化成Word2Vec格式</h3>
<p>打开 <em><strong>三体_vectors.txt</strong></em> 查看不同词语对应的词向量</p>
<p><img loading="lazy" src="img/04-vector-txt.png" alt=""  />
</p>
<p>注意刚刚生成的 <em><strong>output/三体_vectors.txt</strong></em> 是无法用 python 直接利用的。</p>
<p>使用 gensim库 或 cntext2.x 库将其转化为 word2vec 格式的txt文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">glove_file</span> <span class="o">=</span> <span class="s1">&#39;output/三体_vectors.txt&#39;</span>
<span class="n">word2vec_file</span> <span class="o">=</span> <span class="s1">&#39;output/三体_vectors_word2vec.txt&#39;</span>

<span class="c1"># 将Glove转化为Word2Vec格式</span>
<span class="n">ct</span><span class="o">.</span><span class="n">glove2word2vec</span><span class="p">(</span><span class="n">glove_file</span><span class="p">,</span> <span class="n">word2vec_file</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-g2v.png" alt=""  />
</p>
<p>其实两个txt文件的区别，仅仅是在 <em><strong>三体_vectors_word2vec.txt</strong></em> 在第一行多了两个数字， 分别代表词汇表大小和向量维度。</p>
<br>
<h2 id="四使用中文glove模型">四、使用中文GloVe模型</h2>
<h3 id="41-加载模型">4.1 加载模型</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">word2vec_file</span> <span class="o">=</span> <span class="s1">&#39;output/三体_vectors_word2vec.txt&#39;</span>

<span class="c1"># 加载word2vec模型.txt文件</span>
<span class="n">wv_model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_wv</span><span class="p">(</span><span class="n">word2vec_file</span><span class="p">,</span> <span class="n">binary</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">wv_model</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&lt;gensim.models.keyedvectors.KeyedVectors at 0x336ff8dd0&gt;
</code></pre></div><br>
<h3 id="42-keyedvectors的操作方法或属性">4.2 KeyedVectors的操作方法(或属性)</h3>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>KeyedVectors.key_to_index</code></td>
<td>获取单词到索引的映射。</td>
</tr>
<tr>
<td><code>KeyedVectors.vector_size</code></td>
<td>获取GloVe模型中任意词向量的维度。</td>
</tr>
<tr>
<td><code>KeyedVectors.get_vector(word)</code></td>
<td>获取给定单词的词向量。</td>
</tr>
<tr>
<td><code>KeyedVectors.index_to_key</code></td>
<td>获取词汇表中的所有单词。</td>
</tr>
<tr>
<td><code>KeyedVectors.similar_by_word(word, topn=10)</code></td>
<td>获取某词语最相似的10个近义词。</td>
</tr>
<tr>
<td><code>KeyedVectors.similar_by_vector(vector, topn=10)</code></td>
<td>获取词向量最相似的10个近义词。</td>
</tr>
<tr>
<td>&hellip;</td>
<td>&hellip;</td>
</tr>
</tbody>
</table>
<h3 id="421-词表">4.2.1 词表</h3>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">wv_model</span><span class="o">.</span><span class="n">index_to_key</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;的&#39;,
 &#39;了&#39;,
 &#39;在&#39;,
...
 &#39;引力&#39;,
 &#39;所说&#39;,
 &#39;星际&#39;,
 ...]

</code></pre></div><br>
<h3 id="422-词表映射">4.2.2 词表映射</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">wv_model</span><span class="o">.</span><span class="n">key_to_index</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;的&#39;: 0,
 &#39;了&#39;: 1,
 &#39;在&#39;: 2,
...
 &#39;引力&#39;: 997,
 &#39;所说&#39;: 998,
 &#39;星际&#39;: 999,
 ...}
</code></pre></div><br>
<h3 id="423-向量维度数">4.2.3 向量维度数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;词表有 </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">wv_model</span><span class="o">.</span><span class="n">key_to_index</span><span class="p">)</span><span class="si">}</span><span class="s1"> 个词&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;向量是 </span><span class="si">{</span><span class="n">wv_model</span><span class="o">.</span><span class="n">vector_size</span><span class="si">}</span><span class="s1"> 维&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">词表有 4365 个词
向量是 50 维
</code></pre></div><br>
<h3 id="424-获取词向量">4.2.4 获取词向量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 查看「降临」的词向量</span>
<span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;降临&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([ 0.672314,  0.020081,  0.653733,  0.598732, -0.680517, -0.049689,
       -0.16845 , -0.06759 , -0.147955,  0.024006,  0.264551, -0.050127,
        0.252063, -0.475633,  0.103722, -0.012481,  0.040755,  1.154912,
        0.742695,  0.048619, -0.514424, -1.184054,  0.515892, -0.1034  ,
        0.368755, -0.690357, -0.784287, -0.505814,  0.035807, -0.166354,
       -0.26149 ,  0.015089,  0.10626 , -0.215666, -0.374001, -0.123558,
        0.422617, -0.075277, -0.316387, -0.484295,  0.059687,  0.132621,
        0.192094, -0.591919,  0.236281,  0.164198, -0.058724,  1.285457,
        0.905606, -0.52032 ], dtype=float32)
</code></pre></div><br>
<h3 id="425-近义词">4.2.5 近义词</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">wv</span><span class="o">.</span><span class="n">similar_by_word</span><span class="p">(</span><span class="s1">&#39;三体&#39;</span><span class="p">,</span> <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;叛军&#39;, 0.7699569463729858),
 (&#39;更新&#39;, 0.7687217593193054),
 (&#39;地球&#39;, 0.760529100894928),
 (&#39;全集&#39;, 0.7575182914733887),
 (&#39;最快&#39;, 0.7426372170448303),
 (&#39;世界&#39;, 0.7262137532234192),
 (&#39;最新&#39;, 0.7219281792640686),
 (&#39;游戏&#39;, 0.7180070877075195),
 (&#39;危机&#39;, 0.7020451426506042),
 (&#39;教&#39;, 0.7012627720832825)]
</code></pre></div><br>
<h3 id="426-计算多个词的中心向量">4.2.6 计算多个词的中心向量</h3>
<p>我们可以计算「三体」、「降临」、「组织」、「拯救」的中心向量eto_vector。 并试图寻找中心向量eto_vector的最相似的10个词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">eto_vector</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">semantic_centroid</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> <span class="n">words</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;三体&#39;</span><span class="p">,</span> <span class="s1">&#39;降临&#39;</span><span class="p">,</span> <span class="s1">&#39;组织&#39;</span><span class="p">,</span> <span class="s1">&#39;拯救&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="n">eto_vector</span><span class="p">)</span>
<span class="c1"># 寻找 eto_vector 语义最相似的10个词</span>
<span class="n">wv</span><span class="o">.</span><span class="n">similar_by_vector</span><span class="p">(</span><span class="n">eto_vector</span><span class="p">,</span> <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[ 0.6267875   0.08975425  0.48438451  0.405128   -0.49928901  0.11347825
 -0.90057975  0.11877625 -0.27053049  0.344603    0.4368495  -0.3839495
  0.02633176 -0.138534    0.2531555  -0.0060905  -0.48776849  0.75548999
  0.72575876 -0.446079   -0.30361701 -1.039792    0.457687   -0.4286315
  0.44577325 -0.39119426 -0.4783935  -0.2596135  -0.32513325 -0.10315975
 -0.42880575 -0.48328425  0.129438   -0.17085625 -0.13454625 -0.070053
  0.68060375  0.16736924 -0.15664874 -0.20528575  0.385481    0.206432
  0.18913225 -0.93453825  0.58597099  0.60727924  0.009064    0.87661726
  0.65814423 -0.356567  ]

[(&#39;降临&#39;, 0.8707027435302734),
 (&#39;组织&#39;, 0.8625670671463013),
 (&#39;三体&#39;, 0.8621653914451599),
 (&#39;派&#39;, 0.8343338966369629),
 (&#39;拯救&#39;, 0.8301094174385071),
 (&#39;叛军&#39;, 0.784512460231781),
 (&#39;地球&#39;, 0.7536635398864746),
 (&#39;世界&#39;, 0.7245718836784363),
 (&#39;外部&#39;, 0.7078365087509155),
 (&#39;入侵&#39;, 0.6962169408798218)]
</code></pre></div><br>
<p>熟悉三体的朋友应该能联想到背叛人类的ETO(地球三体组织)有两个派别，分别是拯救派和降临派。</p>
<p>ETO开发了一款虚拟现实游戏，它向参与者展示了三体世界的真实情况，包括其恶劣的自然条件、三体文明的历史及其科技水平等。通过参与这个游戏，玩家们能够逐渐了解三体世界的真相，并最终决定是否要加入到支持三体文明入侵地球的行列中来。</p>
<p>这个游戏不仅充当了信息传递的媒介，也是甄别志同道合者的工具，让那些对人类社会现状不满、渴望变革的人们找到了组织，进而成为了背叛人类的叛军一员。在这个过程中，“三体游戏”起到了关键的作用，是连接地球人与三体世界的重要桥梁。</p>
<br>]]></content:encoded>
    </item>
    
    <item>
      <title>新闻数据集(中文) | 含 人民日报/光明日报/参考消息/经济日报 等 120 家媒体(2025.03)</title>
      <link>https://textdata.cn/blog/2023-12-14-daily-news-dataset/</link>
      <pubDate>Sat, 22 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-14-daily-news-dataset/</guid>
      <description>日报数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<h2 id="本文声明">本文声明</h2>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="一中文新闻报刊数据集概况">一、「中文新闻报刊数据集」概况</h2>
<p>报纸(数字版)数据集，媒体源 120 家，</p>
<ul>
<li>35家国级，如 人民日报、光明日报、经济日报、人民政协报、中国青年报等</li>
<li>85家省市级报刊(覆盖30个省份) ， 新华日报(江苏)、扬子晚报(江苏)；河北日报、燕赵晚报；天津日报、今晚报；宁波日报、青岛日报、杭州日报等</li>
</ul>
<blockquote>
<p>需要注意，一般日报是偏正式、严肃。而晚报、商报、都市报，内容更多样，风格较为轻松。 大家使用前注意下内容风格。</p>
</blockquote>
<br>
<blockquote>
<p>如Excel打开csv乱码， 请百度搜【在 Excel 中正确打开 CSV UTF-8 文件】</p>
</blockquote>
<br>
<h2 id="11-国家级报刊">1.1 国家级报刊</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">+------+----------------+-------------------------+---------+-----------+
| 省份 |      报刊       |         起止日期          |  记录数  |    体积   |
+------+----------------+-------------------------+---------+-----------+
|      |    新闻联播    | 2016-02-04 ~ 2025-03-22 |   44623  |  164 M  |
|      |    人民日报    | 1946-05-15 ~ 2025-03-22 | 2045970 | 3968.50 M |
|      |    光明日报    | 1985-01-01 ~ 2024-06-22 |  862987 |  4022.7 M |
|      |    经济日报    | 2008-01-27 ~ 2025-03-22 |  380934 |  1230 M |
|      |   中国青年报   | 2005-01-01 ~ 2025-03-22 |  340700 | 1075.73 M |
|      |    农民日报    | 2011-01-01 ~ 2025-03-22 |  219795 | 1057.30 M |
|      |   人民政协报   | 2008-01-02 ~ 2024-05-24 |  346525 |  734.6 M  |
|      |   中国消费报   | 2010-01-01 ~ 2025-03-15 |  110451 |  732.40 M |
|      |    参考消息    | 1957-03-09 ~ 2002-12-31 |  528545 |  633.15 M |
|      |   经济参考报   | 2015-01-05 ~ 2025-03-22 |  97196  |  646.16 M |
|      |   人民法院报   | 2010-01-01 ~ 2025-03-22 |  165747 |  435.58 M |
|      |    工人日报    | 2014-01-01 ~ 2025-03-22 |  206364 |  412.78 M |
|      |   中国气象报   | 1989-01-16 ~ 2025-03-22 |  234826 |  366.86 M |
|      |  中国经济导报  | 2012-09-01 ~ 2024-06-22 |  51371   |  312.6 M |
|      |    法治日报    | 2021-01-01 ~ 2024-06-22 |  60984  |  290.40 M |
|      |   中国贸易报   | 2011-01-25 ~ 2025-03-22 |  75419  |  145.80 M |
|      |   中国工业报   | 2012-02-23 ~ 2024-05-24 |  90987  |  170.18 M |
|      |    消费日报    | 2019-10-08 ~ 2025-03-22 |   6321  |  166.85 M  |
|      |  每日经济新闻  | 2018-02-01 ~ 2025-03-21 |  47215  |  178.981 M |
|      |   中国工商报   | 2016-01-05 ~ 2024-05-24 |  70673  |  126.33 M |
|      |   中国财经报   | 2017-11-11 ~ 2025-03-22 |  53533  |  142.52 M |
|       |   中国企业报   | 2011-04-01 ~ 2025-03-22 |  49735  |  124.15 M |
|      |   中国经营报   | 2022-01-03 ~ 2025-03-22 |   11614  |  114.73 M |
|      |    检察日报    | 2022-01-01 ~ 2025-03-22 |  47743  |  133.30 M  |
|      |   中国城市报   | 2021-01-04 ~ 2025-03-22 |   8325  |  31.58 M  |
|      |   中国教育报   | 2021-01-01 ~ 2025-03-22 |  24060  |  92.02 M  |
|      |    科技日报    | 2021-01-04 ~ 2025-03-22 |  39811  |  106.54 M  |
|      |   中国妇女报   | 2021-01-20 ~ 2025-03-22 |  33005  |  93.51 M  |
|      |   中国能源报   | 2019-01-07 ~ 2025-03-22 |  20436  |  61.92 M  |
|      | 中国政府采购报 | 2017-11-17 ~ 2025-03-22 |  25206  |  77.98 M  |
|      |   中国电影报   | 2019-05-29 ~ 2025-03-22 |  14591  |  60.28 M  |
|      |    科普时报    | 2018-01-05 ~ 2025-03-22 |  14188  |  48.59 M  |
+------+----------------+-------------------------+---------+-----------+
</code></pre></div><b>
<h2 id="12-省市级">1.2 省市级</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">+--------+--------------+-------------------------+--------+-----------+
|  省份  |     报刊     |         起止日期        | 记录数 |    体积   |
+--------+--------------+-------------------------+--------+-----------+
|  北京  |    新京报    | 2012-01-01 ~ 2024-05-24 | 117047 |  402.23 M |
|  北京  |   北京日报   | 2021-01-01 ~ 2025-03-22 | 90313  |  333.57 M |
|  北京  |   北京晚报   | 2020-07-13 ~ 2025-03-22 | 100659  |  305.71 M |
|  上海  |    文汇报    | 2019-01-01 ~ 2025-03-22 | 84888  |  381.06 M |
|  上海  |   解放日报   | 2023-01-01 ~ 2024-12-15 | 34388  |  138.69 M |
|  上海  |   新民晚报   | 2018-12-28 ~ 2025-03-22 | 13488  |  75.56 M |
|  天津  |   天津日报   | 2022-09-01 ~ 2025-03-22 | 61052  |  166.44 M  |
|  天津  |    今晚报    | 2023-12-25 ~ 2025-03-22 | 50457  |  83.49 M  |
|  重庆  |   重庆日报   | 2022-01-01 ~ 2025-03-22 | 49056  |  210.46 M |
|  重庆  |   重庆晚报   | 2023-01-03 ~ 2025-03-22 |  12075  |  26.27 M  |
|  辽宁  |   辽宁日报   | 2019-01-01 ~ 2025-03-07 | 116778 |  292.69 M |
|  辽宁  |   辽沈晚报   | 2018-09-05 ~ 2025-03-21 | 69911  |  200.74 M |
|  辽宁  |   半岛晨报   | 2017-02-04 ~ 2023-04-14	 | 101453 |  221.38 M |
|  吉林  |   吉林日报   | 2022-01-01 ~ 2025-03-22 | 39130  |  122.34 M  |
|  吉林  |   城市晚报   | 2016-11-14 ~ 2025-03-22 | 82037  |  192.84 M |
| 黑龙江 |    生活报    | 2020-08-22 ~ 2025-03-22 | 37611  |  77.85 M |
| 黑龙江 |  黑龙江日报  | 2020-12-06 ~ 2025-03-22 | 54712  |  171.98 M  |
|x  山东  |   齐鲁晚报   | 2012-01-01 ~ 2025-01-27 | 325611 |  941.76 M |
|  山东  |  半岛都市报  | 2017-01-01 ~ 2024-05-24 | 191003 |  830.37 M |
|  山东  |   大众日报   | 2021-01-01 ~ 2025-03-22 | 72185  |  344.34 M |
|  山东  |   济南日报   | 2022-11-01 ~ 2025-03-22 | 26183  |  214.10 M  |
|  山东  |   济南时报   | 2022-11-01 ~ 2025-03-22 | 22651  |  131.12 M  |
|  山东  |  经济观察报  | 2006-01-02 ~ 2025-03-22 | 63673  |  320.74 M |
|  山东  |   青岛日报   | 2022-05-29 ~ 2025-03-22 | 41530  |  150.73 M  |
|x  山东  |   青岛晚报   | 2018-01-01 ~ 2020-04-18 | 58930  |  76.73 M  |
|  江苏  |   新华日报   | 2021-12-01 ~ 2025-03-22 | 93524  |  349.58 M |
|  江苏  |   南京日报   | 2024-01-01 ~ 2025-03-22 |  22462  |  70.37 M  |
|  江苏  |   扬子晚报   | 2020-08-01 ~ 2025-03-22 | 86034  |  216.76 M |
|  浙江  |   杭州日报   | 2022-01-01 ~ 2025-03-22 | 65039  |  216.11 M |
|  浙江  |   钱江晚报   | 2006-01-01 ~ 2025-03-22 | 680553 | 1522.17 M |
|  浙江  |   每日商报   | 2022-01-01 ~ 2025-03-22 | 54631  |  140.01 M |
|  浙江  |   浙江日报   | 2006-01-01 ~ 2025-03-22 | 444705 |  1200 M |
|  浙江  |   宁波日报   | 2014-01-01 ~ 2025-03-22 | 156861 |  485.16 M |
|  浙江  |   都市快报   | 2022-01-01 ~ 2025-03-22 | 61844  |  186.12 M |
|  河北  |   河北日报   | 2018-01-02 ~ 2025-03-22 | 155344 |  527.95 M |
|  河北  |   燕赵晚报   | 2021-01-01 ~ 2025-03-22 | 47526  |  138.88 M |
|  河南  |    大河报    | 2010-06-09 ~ 2024-05-23 | 300201 | 1273.86 M |
|  河南  |   河南商报   | 2007-11-20 ~ 2024-05-17 | 98273  |  468.26 M |
|  河南  |   郑州晚报   | 2008-06-02 ~ 2024-05-24 | 474628 |  1553.1 M |
|  安徽  |   安徽商报   | 2007-03-28 ~ 2025-03-22 | 97426  |  221.47 M |
|  安徽  |   安徽日报   | 2023-06-25 ~ 2025-03-22 | 35021  |  90.93 M  |
|  安徽  |   新安晚报   | 2022-01-04 ~ 2025-03-22 | 33270  |  79.97 M  |
|  安徽  |   合肥晚报   | 2023-06-25 ~ 2025-03-20 | 21646  |  55.13 M  |
|  安徽  |   合肥日报   | 2023-06-25 ~ 2025-03-22 | 20175  |  52.19 M  |
|  湖北  |  楚天都市报  | 2023-01-01 ~ 2025-03-22 | 25889  |  75.64 M  |
|  湖北  |   湖北日报   | 2023-01-01 ~ 2025-03-22 | 40700  |  129.34 M |
|  湖南  |   湖南日报   | 2021-01-01 ~ 2025-03-22 | 93529  |  307.3 M  |
|  湖南  |   潇湘晨报   | 2008-01-01 ~ 2024-05-24 | 267006 |  536.57 M |
|  江西  |   江西日报   | 2018-09-01 ~ 2025-03-22 | 139453 |  372.83 M |
|  福建  |   福建日报   | 2023-04-01 ~ 2025-03-22 | 36185  |  116.32 M  |
|  福建  |   福州日报   | 2021-04-24 ~ 2025-03-22 | 52508  |  133.53 M  |
|  福建  |   福州晚报   | 2023-01-01 ~ 2025-03-22 | 31196  |  60.22 M  |
|  福建  |   厦门日报   | 2022-08-01 ~ 2025-03-22 | 40189  |  124.79 M  |
|  福建  |  海峡都市报  | 2022-08-12 ~ 2025-03-22 | 25663  |  80.72 M  |
|  福建  |   厦门晚报   | 2022-08-01 ~ 2025-03-22 | 31102  |   67.4 M  |
|  广东  |   南方周末   | 2008-01-02 ~ 2023-05-31 | 75734  |  872.59 M |
|  广东  |   羊城晚报   | 2018-01-01 ~ 2024-05-24 | 208619 |  863.59 M |
|  广东  |  深圳特区报  | 2017-05-01 ~ 2025-03-22 | 178568 |  836.4 M  |
|  广东  |  珠海特区报  | 2018-01-01 ~ 2025-03-22 | 145925 |  523.58 M |
|  广东  |  南方都市报  | 2020-01-01 ~ 2025-03-22 | 67300  |  522.24 M |
|  广东  |   南方日报  | 2023-01-01 ~ 2025-03-22 | 73086  |  405.51 M |
|  广东  |   深圳晚报   | 2017-05-02 ~ 2025-03-22 | 106239 |  390.9 M  |
|  广东  |   珠江晚报   | 2018-01-01 ~ 2025-03-22 | 90142  |  130.94 M  |
|  广东  |   广州日报   | 2022-05-29 ~ 2025-03-22 | 33159  |  174.92 M  |
|  广西  |   广西日报   | 2020-01-01 ~ 2025-03-22 | 196384 |  403.17 M |
|  海南  |   海南日报   | 2008-03-01 ~ 2025-03-22 | 532478 |  1200.39 M |
|  海南  |  南国都市报  | 2013-01-01 ~ 2025-03-22 | 310493 |  539.18 M |
|  云南  |   云南日报   | 2021-05-15 ~ 2025-03-22 | 75128  |  192.66 M |
|  云南  |   春城晚报   | 2019-01-02 ~ 2025-03-22 | 72508  |  173.62 M |
|  贵州  |   贵州日报   | 2022-01-01 ~ 2025-03-22 | 82836  |  236.38 M |
|  四川  |  华西都市报  | 2009-01-01 ~ 2025-03-22 | 274883 | 683.56 M |
|  四川  |   四川日报   | 2022-01-01 ~ 2025-03-22 | 39919  |  141.44 M  |
|  甘肃  |   甘肃日报   | 2018-01-01 ~ 2025-03-22 | 131932 |  406.6 M  |
|  甘肃  | 甘肃经济日报  | 2017-04-06 ~ 2025-03-22 | 88153  |  213.59 M |
|  陕西  |   陕西日报   | 2020-01-01 ~ 2025-03-22 | 77204  |  268.79 M |
|  陕西  |   西安日报   | 2019-06-10 ~ 2025-03-22 | 91032  |  261.26 M |
|  陕西  |   西安晚报   | 2019-06-10 ~ 2025-03-12 | 85106  |  219.2 M  |
|  山西  |   山西晚报   | 2021-01-01 ~ 2025-03-12 | 38930  |  108.47 M |
|  山西  |   山西日报   | 2022-08-01 ~ 2025-03-22 | 52260  |  97.54 M  |
|  宁夏  |   宁夏日报   | 2022-02-01 ~ 2025-03-22 | 49040  |  148.85 M  |
| 内蒙古 |  内蒙古日报  | 2017-01-01 ~ 2025-03-22 | 118069 |  355.55 M |
|  新疆  |   新疆日报   | 2018-01-01 ~ 2025-03-22 | 99149  |  325.84 M |
|  西藏  |   西藏日报   | 2019-12-01 ~ 2025-03-22 | 65555  |  233.25 M |
|  青海  |   青海日报   | 2022-01-01 ~ 2025-03-22 | 51042  |  172.16 M  |
|  青海  |  西海都市报  | 2022-01-01 ~ 2025-03-22 | 34222  |  93.34 M  |
+--------+--------------+-------------------------+--------+-----------+
</code></pre></div><br>
<h2 id="13-数据格式">1.3 数据格式</h2>
<p>所有数据均为 <em><strong>csv</strong></em> 文件，所含字段<em><strong>date</strong></em>、<em><strong>title</strong></em>、<em><strong>content</strong></em> 。数据集总体积 40+G。</p>
<blockquote>
<p>少数几个媒体，只含date、content， 如人民日报、光明日报、中国青年报、中国政协报</p>
</blockquote>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-经济日报">2.1 经济日报</h3>
<p>国家级媒体， 如人民日报、光明日报、中国青年报、中国政协报， 时间跨度长， 记录量大。 特别适合构建诸如经济政策不确定性 EPU 指数。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;经济日报.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-jjrb-df.png" alt=""  />
</p>
<br>
<h3 id="22-海南日报">2.2 海南日报</h3>
<p>省级日报中相对数据量比较大的日报， 覆盖日期 2008~2025。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;海南日报.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/02-hnrb.png" alt=""  />
</p>
<br>
<h3 id="23-钱江晚报">2.3 钱江晚报</h3>
<p>浙江省的省级都市报，记录数挺多的， 覆盖日期 2006~2025。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;钱江晚报.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三数据用途">三、数据用途</h2>
<p><a href="https://www.yunzhan365.com/newspapers/catalog.html">中文新闻报刊类</a>数据集 可提取丰富的指标，包括但不限于 <strong>经济政策不确定性指数</strong> 、<strong>环境政策不确定性</strong>、 <strong>媒体关注度指数</strong>、<strong>文本相似度</strong>、<strong>情感分析</strong>。此外， 可训练词向量，开发新的概念词典。数据带时间， 参照前面指标， 依主体、日期、指标进行计算， 可构造面板数据，构建新的指标指数。因此在经济学、管理学、新闻传播学、公共管理、社会学等领域均有较高的研究价值。</p>
<p>相关参考文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]洪永淼,刘俸奇,薛涧坡.政府与市场心理因素的经济影响及其测度[J].管理世界,2023,39(03):30-51.
[2]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[3]张一帆,林建浩,樊嘉诚.新闻文本大数据与消费增速实时预测——基于叙事经济学的视角[J].金融研究,2023,(05):152-169.
[4]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[5]欧阳资生,陈世丽,杨希特,刘凤根,周学伟.经济政策不确定性、网络舆情与金融机构系统性风险[J].管理科学学报,2023,26(04):62-86.
[6]逯东,宋昕倍.媒体报道、上市公司年报可读性与融资约束[J].管理科学学报,2021,24(12):45-61.
[7]彭涛,黄福广,孙凌霞.经济政策不确定性与风险承担:基于风险投资的证据[J].管理科学学报,2021,24(03):98-114.
[8]庞锐.采纳与内化：多重制度压力如何影响河长制创新扩散——基于省级政府的定向配对事件史分析[J].公共管理学报,2023,20(02):25-37+165-166.
</code></pre></div><br>
<br>
<h2 id="四相关内容">四、相关内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/datasets_available_for_management_science/"><strong>LIST | 可供社科(经管)领域使用的数据集汇总</strong></a></p>
</li>
</ul>
<p><br><br></p>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a>
<br>
<br></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 5513w条外文电影评论数据(1900~2021.9)</title>
      <link>https://textdata.cn/blog/2025-03-17-the_mother_of_all_movie_review_datasets/</link>
      <pubDate>Mon, 17 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-17-the_mother_of_all_movie_review_datasets/</guid>
      <description>数据集采集自Rotten Tomatoes网站， 含 10500部电影，5600万&#43; 用户评价！其中有 100 万&#43;为精选评论！ 电影从20世纪初到2024年的都有！英语、法语、日语、 Hindi 以及许多其他语言的电影！ 该数据集的用途包括计算机科学自然语言处理，社会学文化演变、刻板印象，传播学等。</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名: 电影评论数据
数据来源: https://www.rottentomatoes.com/
电影年份: 1902 ~ 2024
评论日期: 1996-01-19 ~ 2024-07-17
评论数量: 55130430 (5513w)
评论人数: 8766682 (876w)
电影数量: 10411(9026英文，其余为各种语言)
所含字段: 电影id、评论者id、评论文本、评分、电影上映日期等。
数据格式: csv
下载数据: https://www.kaggle.com/datasets/bwandowando/rotten-tomatoes-9800-movie-critic-and-user-reviews
本文声明: 科研用途； 如分享有问题，可加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pa</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;user_reviews.csv&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">55130430
CPU times: user 1min 29s, sys: 14.4 s, total: 1min 43s
Wall time: 1min 47s
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-覆盖日期">2.2 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;creationDate&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;creationDate&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;评论覆盖日期: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;creationDate&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;creationDate&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">评论覆盖日期: 1996-01-19 ~ 2024-07-17
</code></pre></div><br>
<h3 id="23-电影数量">2.3 电影数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">movieId</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">10411
</code></pre></div><br>
<h3 id="24-评论人数">2.4 评论人数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">userId</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">8766682
</code></pre></div><br>]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 6.6亿条美国谷歌地图评论数据(~2021.9)</title>
      <link>https://textdata.cn/blog/2025-03-14-google-map-review-dataset/</link>
      <pubDate>Fri, 14 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-14-google-map-review-dataset/</guid>
      <description>这个数据集包含截至 2021 年 9 月美国谷歌地图上的评论信息（评分、文本、图片等），企业元数据（地址、地理信息、描述、类别信息、价格、营业时间以及其它信息），以及相关企业的链接。</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名: 美国谷歌地图评论数据集
数据来源: Google Map
覆盖日期: 2008-01-25 ~ 2021-09 
评论数量: 666,324,103(6.6亿)
用户数量: 113,643,107(1.1亿用户)
实体数量: 4,963,111家商铺
所含字段: 评分、文本、图片、地址、地理信息、价格、营业时间等
数据格式: json文件
下载数据: 
    - https://datarepo.eng.ucsd.edu/mcauley_group/gdrive/googlelocal/
    - https://mcauleylab.ucsd.edu/public_datasets/gdrive/googlelocal/
本文声明: 科研用途； 如分享有问题，可加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-google-map-review.png" alt=""  />
</p>
<h3 id="11-引用数据">1.1 引用数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Li, Jiacheng, Jingbo Shang, and Julian McAuley. &#34;UCTopic: Unsupervised contrastive learning for phrase representations and topic mining.&#34; arXiv preprint arXiv:2202.13469 (2022).
[2]Yan, An, Zhankui He, Jiacheng Li, Tianyang Zhang, and Julian McAuley. &#34;Personalized showcases: Generating multi-modal explanations for recommendations.&#34; In Proceedings of the 46th International ACM SIGIR Conference on Research and Development in Information Retrieval, pp. 2251-2255. 2023.
</code></pre></div><p><img loading="lazy" src="img/02-opendataset.png" alt=""  />
</p>
<p><br><br></p>
<h3 id="12-下载数据">1.2 下载数据</h3>
<p><img loading="lazy" src="img/03-new-york.png" alt=""  />
</p>
<p>选择 <em><strong>Complete review data</strong></em> -&gt; <em><strong>New York</strong></em>, 分别点击<em><strong>review</strong></em> 和 <em><strong>metadata</strong></em>， 下载得到<em><strong>review-New_York.json.gz</strong></em> 和 <em><strong>meta-New_York.json.gz</strong></em> 。</p>
<p>下面分别以 <em><strong>review-New_York.json.gz</strong></em> 和 <em><strong>meta-New_York.json.gz</strong></em> 进行讲解。</p>
<p><br><br></p>
<h2 id="二meta-new_yorkjsongz">二、meta-New_York.json.gz</h2>
<p><em><strong>.json.gz</strong></em> 是json文件的压缩文件， 压缩格式为<em><strong>gzip</strong></em>。 双击可以使用解压软件进行解压。</p>
<p>json文件内，每条评论是一行 json 格式的数据。 如需进一步了解数据，请参见以下示例。</p>
<h3 id="21-使用jsonlines读取">2.1 使用jsonlines读取</h3>
<p>使用jsonlines读取前1行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 读取meta-New_York.json.gz 前1行记录</span>
<span class="n">first_n_json_objects</span> <span class="o">=</span> <span class="n">read_json_nlines</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s1">&#39;meta-New_York.json.gz&#39;</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">first_n_json_objects</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[{&#39;name&#39;: &#39;A-Top Insurance&#39;,
  &#39;address&#39;: &#39;A-Top Insurance, 1009 Brighton Beach Ave, Brooklyn, NY 11235&#39;,
  &#39;gmap_id&#39;: &#39;0x89c24469c758686b:0x641f5b84cb9bedfa&#39;,
  &#39;description&#39;: None,
  &#39;latitude&#39;: 40.5782537,
  &#39;longitude&#39;: -73.9591269,
  &#39;category&#39;: [&#39;Insurance broker&#39;, &#39;Insurance agency&#39;],
  &#39;avg_rating&#39;: 2,
  &#39;num_of_reviews&#39;: 4,
  &#39;price&#39;: None,
  &#39;hours&#39;: [[&#39;Thursday&#39;, &#39;10AM–6PM&#39;],
   [&#39;Friday&#39;, &#39;10AM–6PM&#39;],
   [&#39;Saturday&#39;, &#39;Closed&#39;],
   [&#39;Sunday&#39;, &#39;Closed&#39;],
   [&#39;Monday&#39;, &#39;10AM–6PM&#39;],
   [&#39;Tuesday&#39;, &#39;10AM–6PM&#39;],
   [&#39;Wednesday&#39;, &#39;10AM–6PM&#39;]],
  &#39;MISC&#39;: None,
  &#39;state&#39;: &#39;Open ⋅ Closes 6PM&#39;,
  &#39;relative_results&#39;: [&#39;0x89c24449907718fb:0x31b554a0983f621d&#39;,
   &#39;0x4065f38ac8af66fd:0x991c223e83658501&#39;,
   &#39;0x89c24450d471cd67:0x169d824916e1d42&#39;,
   &#39;0x89c25bae39b5a677:0x5f129fa988693a25&#39;,
   &#39;0x89c245029897765d:0xa04072e1ef9ab823&#39;],
  &#39;url&#39;: &#39;https://www.google.com/maps/place//data=!4m2!3m1!1s0x89c24469c758686b:0x641f5b84cb9bedfa?authuser=-1&amp;hl=en&amp;gl=us&#39;}]
</code></pre></div><br>
<h3 id="22-使用pandas读取">2.2 使用pandas读取</h3>
<p>使用pandas读取 <em><strong>meta-New_York.json.gz</strong></em> 全部数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#读取前2行 </span>
<span class="c1">#mdf = pd.read_json(&#39;meta-New_York.json.gz&#39;, nrows=2, compression=&#39;gzip&#39;, lines=True)</span>

<span class="c1">#全部读取</span>
<span class="n">mdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_json</span><span class="p">(</span><span class="s1">&#39;meta-New_York.json.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">lines</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">mdf</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 2.65 s, sys: 2.71 s, total: 5.36 s
Wall time: 2.55 s
</code></pre></div><p><img loading="lazy" src="img/05-df.png" alt=""  />
</p>
<br>
<h3 id="23-字段含义">2.3 字段含义</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">name             商业实体名称
address          地址
gmap_id          商业实体ID
description      业务描述
latitude         纬度
longitude        经度
category         商业的类别
avg_rating       该业务的平均评分
num_of_reviews   评论数量
price            业务价格
hours            营业时间
MISC             MISC信息
state            当前状态（例如，永久关闭）
relative_results 谷歌推荐的相关商业信息
url              企业的网址
</code></pre></div><br>
<h3 id="24-字段缺失程度">2.4 字段缺失程度</h3>
<p>字段缺失程度如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">mdf</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/07-meta-miss.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三review-new_yorkjsongz">三、review-New_York.json.gz</h2>
<h3 id="31-使用jsonlines读取">3.1 使用jsonlines读取</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">gzip</span>
<span class="kn">import</span> <span class="nn">jsonlines</span>


<span class="k">def</span> <span class="nf">read_json_nlines</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">nrows</span><span class="p">):</span>
    <span class="n">json_objects</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">with</span> <span class="n">gzip</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s1">&#39;rt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">gz_file</span><span class="p">:</span>
        <span class="n">reader</span> <span class="o">=</span> <span class="n">jsonlines</span><span class="o">.</span><span class="n">Reader</span><span class="p">(</span><span class="n">gz_file</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">nrows</span><span class="p">):</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">json_objects</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">reader</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
            <span class="k">except</span> <span class="ne">EOFError</span><span class="p">:</span>
                <span class="k">break</span> <span class="c1"># 如果到达文件末尾，则退出循环</span>
    <span class="k">return</span> <span class="n">json_objects</span>

<span class="c1"># 读取review-New_York.json.gz 前2行记录</span>
<span class="n">first_n_json_objects</span> <span class="o">=</span> <span class="n">read_json_nlines</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s1">&#39;review-New_York.json.gz&#39;</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">first_n_json_objects</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[
  {&#39;user_id&#39;: &#39;101855823232666695168&#39;,
  &#39;name&#39;: &#39;R Mac&#39;,
  &#39;time&#39;: 1629141186463,
  &#39;rating&#39;: 1,
  &#39;text&#39;: &#39;Natalia may be the worst agent I have ever dealt with. Look up the definition of entitled b**** in the dictionary and there she would be. Look at their reviews...they are garbage through and through.&#39;,
  &#39;pics&#39;: None,
  &#39;resp&#39;: None,
  &#39;gmap_id&#39;: &#39;0x89c24469c758686b:0x641f5b84cb9bedfa&#39;},

 {&#39;user_id&#39;: &#39;105821946869087882225&#39;,
  &#39;name&#39;: &#39;Beck TJ&#39;,
  &#39;time&#39;: 1528477593994,
  &#39;rating&#39;: 1,
  &#39;text&#39;: &#39;The lady at the front desk is rude. The bathroom key is supposed to be available for anyone who is visiting the business and any question must be answered in a nice manner.&#39;,
  &#39;pics&#39;: None,
  &#39;resp&#39;: None,
  &#39;gmap_id&#39;: &#39;0x89c24469c758686b:0x641f5b84cb9bedfa&#39;}
  
  ]
</code></pre></div><br>
<h3 id="32-使用pandas读取">3.2 使用pandas读取</h3>
<p>使用 pandas 读取 <em><strong>review-New_York.json.gz</strong></em> 全部数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#读取前2行 </span>
<span class="c1">#rdf = pd.read_json(&#39;review-New_York.json.gz&#39;, nrows=2, compression=&#39;gzip&#39;, lines=True)</span>
<span class="c1">#全部读取</span>
<span class="n">rdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_json</span><span class="p">(</span><span class="s1">&#39;review-New_York.json.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">lines</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">rdf</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 1min 30s, sys: 2min 2s, total: 3min 32s
Wall time: 4min 11s
</code></pre></div><p><img loading="lazy" src="img/06-df.png" alt=""  />
</p>
<br>
<h3 id="33-字段含义">3.3 字段含义</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">user_id   评论者的 ID
name      评论者的姓名
time      评论时间（unix 时间戳）
rating    对企业的评分
text      评论文本
pics      评论图片链接
resp      商家对评论的回复，包括 unix 时间戳和回复文本
gmap_id   商业 ID
</code></pre></div><br>
<h3 id="34-字段缺失程度">3.4 字段缺失程度</h3>
<p>字段缺失程度如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">rdf</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/08-review-miss.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="相关内容">相关内容</h2>
<p>可以借鉴这篇 <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>代码 | 如何用pandas处理超大csv文件</strong></a>  ， 了解如何处理远超内存的数据文件。</p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | arXiv网站 269w 学术论文元数据 (2007 ~ 2025)</title>
      <link>https://textdata.cn/blog/2025-03-21-the-arxiv-metadata-dataset-of-millions-of-scholarly-papers/</link>
      <pubDate>Fri, 14 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-21-the-arxiv-metadata-dataset-of-millions-of-scholarly-papers/</guid>
      <description>在这些独特的全球挑战时期，从数据中高效提取洞察至关重要。为了使 arXiv 更加易于访问，我们在此提供一个免费的开源 Kaggle 管道，用于机器可读的 arXiv 数据集：一个包含 170 万篇文章的仓库，具有相关特征，如文章标题、作者、类别、摘要、全文 PDF 等。In these times of unique global challenges, efficient extraction of insights from data is essential. To help make the arXiv more accessible, we present a free, open pipeline on Kaggle to the machine-readable arXiv dataset: a repository of 1.7 million articles, with relevant features such as article titles, authors, categories, abstracts, full text PDFs, and more.</description>
      <content:encoded><![CDATA[<p>近 30 年来，arXiv 一直向公众和研究社区提供开放访问的学术文章，从物理学的广阔分支到计算机科学的众多子学科，再到经济学等所有领域，包括数学、统计学、电气工程、定量生物学等。这一丰富的信息库提供了重要的深度，但有时也会显得令人难以应对。</p>
<p>在这些独特的全球挑战时期，从数据中高效提取洞察至关重要。为了使 arXiv 更加易于访问，康奈尔大学将 arXiv元信息数据集存放在 Kaggle 供大家下载，该数据集目前含 268 万篇元信息，如文章标题、作者、类别、摘要、全文 PDF 等。</p>
<br>
<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名: arXiv学术论文元数据
数据来源: https://arxiv.org/
提交日期: 1986-04-25 ~ 2025-03-13（数据每周更新)
论文数量: 2689088(截止到2025.3.14)
所含字段: 标题、作者、摘要、期刊信息、DOI等
数据格式: json
数据体积: 4.58G
下载数据: https://www.kaggle.com/datasets/Cornell-University/arxiv
本文声明: 科研用途； 如分享有问题，可加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_json</span><span class="p">(</span><span class="s1">&#39;arxiv-metadata-oai-snapshot.json&#39;</span><span class="p">,</span> <span class="n">lines</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;论文数量: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">论文数量: 2689088
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-提交日期">2.2 提交日期</h3>
<p>字段 <em><strong>versions</strong></em> 中含论文提交日期信息，可以通过如下代码提取并保存为字段 <em><strong>created</strong></em> 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;versions&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">text</span><span class="p">:</span> <span class="n">text</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="s1">&#39;created&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;提交日期: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;update_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;update_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">提交日期:  1986-04-25 ~ 2025-03-13
</code></pre></div><br>
<h3 id="23-所含字段">2.3 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - id               ArXiv ID（可以用来访问论文，详情请见下方）
 - submitter        论文提交者
 - authors          论文作者
 - title            标题
 - comments         附加信息，例如页数和图表数量
 - journal-ref      论文发表的期刊信息
 - doi              论文的DOI号(数字对象标识符)
 - report-no        报告编号(作者在提交到arXiv前已经获得作者所属机构的报告编号)
 - categories       arXiv 系统的类别/标签
 - license          论文所依据的许可协议
 - abstract         论文摘要
 - versions         版本历史
 - update_date      论文更新日期
 - authors_parsed   论文作者
</code></pre></div><br>
<p>字段数据的缺失程度</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/02-vis.png" alt=""  />
</p>
<br>
<h3 id="24-作者">2.4 作者</h3>
<p>可以使用字段 <em><strong>authors_parsed</strong></em> 计算每篇论文的作者数量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;N_authors&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;authors_parsed&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">ap</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">ap</span><span class="p">))</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;N_authors&#39;</span><span class="p">]</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0          4
1          2
2          1
3          1
4          2
          ..
2689083    7
2689084    4
2689085    3
2689086    1
2689087    3
Name: N_authors, Length: 2689088, dtype: int64
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">data</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;N_authors&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">data</span><span class="p">[</span><span class="s1">&#39;N_authors&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;N_authors&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
<span class="n">data</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三可视化">三、可视化</h2>
<h3 id="31-论文年度提交量">3.1 论文年度提交量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">created</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;created&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;arXiv论文年度提交量趋势图(1986-2025.3)&#39;</span><span class="p">,</span>
          <span class="n">x</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
          <span class="n">y</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="o">+</span> <span class="n">annotate</span><span class="p">(</span>
        <span class="s1">&#39;text&#39;</span><span class="p">,</span>
        <span class="n">x</span><span class="o">=</span> <span class="mi">1986</span><span class="p">,</span>
        <span class="n">y</span><span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;count&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">*</span> <span class="mf">1.05</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s1">&#39;公众号: 大邓和他的Python&#39;</span><span class="p">,</span>
        <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;left&#39;</span><span class="p">,</span>
        <span class="n">va</span><span class="o">=</span><span class="s1">&#39;top&#39;</span><span class="p">,</span>
        <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">1986</span><span class="p">,</span> <span class="mi">2026</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span>
           <span class="n">text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">family</span><span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="s1">&#39;bold&#39;</span><span class="p">),</span>
           <span class="n">axis_text_x</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-vis.png" alt=""  />
</p>
<br>
<h3 id="32-作者数量分布图">3.2 作者数量分布图</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;N_authors&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">20</span><span class="p">),</span> <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;N_authors&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;arXiv每篇论文作者数量分布图&#39;</span><span class="p">,</span>
          <span class="n">x</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
          <span class="n">y</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="o">+</span> <span class="n">annotate</span><span class="p">(</span>
        <span class="s1">&#39;text&#39;</span><span class="p">,</span>
        <span class="n">x</span><span class="o">=</span> <span class="mi">16</span><span class="p">,</span>
        <span class="n">y</span><span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;count&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s1">&#39;公众号: 大邓和他的Python&#39;</span><span class="p">,</span>
        <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;left&#39;</span><span class="p">,</span>
        <span class="n">va</span><span class="o">=</span><span class="s1">&#39;top&#39;</span><span class="p">,</span>
        <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span>
           <span class="n">text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">family</span><span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="s1">&#39;bold&#39;</span><span class="p">),</span>
           <span class="n">axis_text_x</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-author.png" alt=""  />
</p>
<br>
<h3 id="33-前10大研究热点">3.3 前10大研究热点</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;categories&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">data</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">data</span><span class="p">[</span><span class="s1">&#39;categories&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Categorical</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;categories&#39;</span><span class="p">],</span> <span class="n">categories</span><span class="o">=</span><span class="n">data</span><span class="p">[</span><span class="s1">&#39;categories&#39;</span><span class="p">],</span> <span class="n">ordered</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;categories&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>  <span class="c1"># 注意这里x和y的位置</span>
    <span class="o">+</span> <span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span> <span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;arXiv每篇论文作者数量分布图&#39;</span><span class="p">,</span>
           <span class="n">x</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
           <span class="n">y</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="o">+</span> <span class="n">coord_flip</span><span class="p">()</span>  <span class="c1"># 翻转坐标轴以创建水平条形图</span>
    <span class="o">+</span> <span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span>
            <span class="n">text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">family</span><span class="o">=</span><span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
            <span class="n">plot_title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="s1">&#39;bold&#39;</span><span class="p">),</span>
            <span class="n">axis_text_x</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-hot.png" alt=""  />
</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | Glassdoor网站 990w 条英国公司(职位)评论数据(2008~2023.7)</title>
      <link>https://textdata.cn/blog/2025-03-14-uk-glassdoor-review-dataset/</link>
      <pubDate>Fri, 14 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-14-uk-glassdoor-review-dataset/</guid>
      <description>Glassdoor 成立于2007年，总部位于美国加利福尼亚州的 Mill Valley。 Glassdoor允许员工匿名发布对公司、工作环境、薪资等方面的评价，同时也提供了职位搜索、公司评分、面试经验分享等功能，为求职者和在职员工提供参考。尽管Glassdoor起源于美国，但它已经扩展到包括英国在内的多个国家和地区，为全球用户提供服务。这意味着用户可以在Glassdoor上查找来自世界各地的公司信息和职位空缺，包括但不限于：公司评论和评分、薪资报告、面试问题和经验、职位招聘信息因此，虽然Glassdoor可以在英国使用，并且对英国的职场人士非常有用，但它并不是一个仅限于英国或由英国运营的网站。它是一个跨国平台，旨在为全球用户提供有关职场和招聘过程中的透明信息。</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名: 英国公司(职位)评论数据
数据来源: Glassdooor
覆盖日期: 2008-01-25 ~ 2023-07-26
评价数量: 9901889 条
公司数量: 35541家
下载数据: https://www.kaggle.com/datasets/davidgauthier/glassdoor-job-reviews-2/data
本文声明: 科研用途； 如分享有问题，可加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/00-glassdoor.png" alt=""  />
</p>
<br>
<h3 id="11-网站介绍">1.1 网站介绍</h3>
<p>Glassdoor 成立于2007年，总部位于美国加利福尼亚州的 Mill Valley。 Glassdoor允许员工匿名发布对公司、工作环境、薪资等方面的评价，同时也提供了职位搜索、公司评分、面试经验分享等功能，为求职者和在职员工提供参考。</p>
<p>尽管Glassdoor起源于美国，但它已经扩展到包括英国在内的多个国家和地区，为全球用户提供服务。这意味着用户可以在Glassdoor上查找来自世界各地的公司信息和职位空缺，包括但不限于：</p>
<ul>
<li>公司评论和评分</li>
<li>薪资报告</li>
<li>面试问题和经验</li>
<li>职位招聘信息</li>
</ul>
<p>因此，虽然Glassdoor可以在英国使用，并且对英国的职场人士非常有用，但它并不是一个仅限于英国或由英国运营的网站。它是一个跨国平台，旨在为全球用户提供有关职场和招聘过程中的透明信息。</p>
<br>
<h3 id="12-字段">1.2 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">-  rating                    总体评分(1~5分)
-  title                     评论的标题
-  status                    员工状态(在职、离职，以及在该公司的工作时长)
-  pros                      公司的优点
-  cons                      公司的缺点
-  advice                    建议
-  Recommend                 推荐程度(v正面，r轻微，x负面，o无意见)
-  CEO Approval              对CEO的认可程度(v正面，r轻微，x负面，o无意见)
-  Business Outlook          公司(业务)前景(v正面，r轻微，x负面，o无意见)
-  Career Opportunities      职业发展机会评分(1~5分) 
-  Compensation and Benefits 薪酬与福利评分(1~5分) 
-  Senior Management         高级管理层评分(1~5分) 
-  Work/Life Balance         工作与生活平衡评分(1~5分) 
-  Culture &amp; Values          文化&amp;价值观评分(1~5分) 
-  Diversity &amp; Inclusion     多样性&amp;包容性评分(1~5分) 
-  firm_link                 公司链接
-  date                      评论发布日期
-  job                       职位
</code></pre></div><p><img loading="lazy" src="img/01-glassdoor.png" alt=""  />
</p>
<p><img loading="lazy" src="img/02-glassdoor-pros-cons.jpg" alt=""  />
</p>
<p><br><br></p>
<h2 id="二实验">二、实验</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;glassdoor_review.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 27.4 s, sys: 3.47 s, total: 30.9 s
Wall time: 31 s
</code></pre></div><p><img loading="lazy" src="img/02-df.jpg" alt=""  />
</p>
<br>
<h3 id="22-字段缺失程度">2.2 字段缺失程度</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-miss.png" alt=""  />
</p>
<p>从上图可知， advice字段条纯白， 几乎全为缺失值。 而黑白相间的则存在一定比例的缺失值， 如</p>
<ul>
<li>Career Opportunities</li>
<li>Compensation and Benefits</li>
<li>Senior Management</li>
<li>Work/Life Balance</li>
<li>Culture &amp; Values</li>
<li>Diversity &amp; Inclusion</li>
</ul>
<br>
<h3 id="23-公司数">2.3 公司数</h3>
<p>数据集中涉及的公司数量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;公司数:&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">firm_link</span><span class="o">.</span><span class="n">nunique</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">公司数:35541
</code></pre></div><br>
<h3 id="24-覆盖日期">2.4 覆盖日期</h3>
<p>员工评价发布日期覆盖(起止)范围</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;覆盖日期: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">date</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
<span class="nb">print</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖日期: 2008-01-25 ~2023-07-26
</code></pre></div><br>
<h2 id="三可视化">三、可视化</h2>
<p>可视化数据集内英国公司评论记录量（2008.1~2023.7），绘制柱状图。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">years</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>


<span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">y_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">freq</span><span class="o">=</span><span class="s1">&#39;YE&#39;</span><span class="p">)):</span>
    <span class="n">years</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="p">)</span>
    <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y_df</span><span class="p">))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="n">years</span><span class="p">,</span> 
                     <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">})</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;数据集内英国公司评论记录量（2008.1~2023.7）&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span> <span class="o">=</span> <span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span> <span class="o">=</span> <span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span> <span class="o">=</span> <span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2008</span><span class="p">,</span> <span class="mi">2024</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-vis.png" alt=""  />
</p>
<br>]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | Layline美股内幕交易数据集</title>
      <link>https://textdata.cn/blog/2025-03-11-layline-insider-trading-dataset/</link>
      <pubDate>Tue, 11 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-11-layline-insider-trading-dataset/</guid>
      <description>该数据集捕捉了公开交易公司的内幕交易活动。证券交易委员会自 2003 年中以来在其网站上以结构化格式提供了这些内幕交易报告。然而，大多数学术论文使用的是商业数据库而非直接使用监管文件，这使得复制变得困难，因为商业数据库中的数据操作和聚合步骤是不透明的，而且随着时间的推移，数据提供者可能会更改历史记录。为了克服这些限制，本数据集是从原始监管文件创建的；它每天更新，并包括内幕人士报告的所有信息，未经修改。This dataset captures insider trading activity at publicly traded companies. The Securities and Exchange Commission has made these insider trading reports available on its web site in a structured format since mid-2003. However, most academic papers use proprietary commercial databases instead of regulatory filings directly, which makes replication challenging because the data manipulation and aggregation steps in commercial databases are opaque and historical records could be altered by the data provider over time. To overcome these limitations, the presented dataset is created from the original regulatory filings; it is updated daily and includes all information reported by insiders without alteration.</description>
      <content:encoded><![CDATA[<p>该数据集捕捉了上市公司内幕交易活动。投资者和投资分析师需要这些信息，因为高管、董事和大股东被认为比外界人士更了解其公司的前景。内幕交易中的股票买卖可能揭示了财务报表中未披露的公司业务信息。如果内幕人士能够更好地解读有关公司的公开信息，这些交易还可能传递出预测股价变动的新信息。</p>
<p>自 2003 年中起，证券交易委员会以结构化格式向公众提供了这些内幕交易报告； 然而，大多数学术论文使用的是商业数据库而非直接的监管文件。这使得复制研究变得困难，因为数据处理和聚合过程不透明，历史记录可能会随着时间被数据库提供商修改。为了克服这些限制，本数据集是从原始监管文件创建的；它每天更新，并包括内幕人士报告的所有信息，未经修改。</p>
<p><br><br></p>
<h2 id="一-数据集介绍">一、 数据集介绍</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名:  Layline内幕交易数据集(Layline insider trading dataset)
覆盖日期: 2003-06-30 ~ 2023-02-02
数据体积:  解压后35G(截止2023-02-02)
数据来源: https://www.sec.gov/edgar
下载数据:  https://www.kaggle.com/datasets/layline/insidertrading
引用数据:  Balogh, Attila, 2023, &#34;Layline insider trading dataset&#34;, https://doi.org/10.7910/DVN/VH6GVH, Harvard Dataverse, V419
本文说明: 科研用途; 如有问题，请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-harvard.png" alt=""  />
</p>
<br>
<blockquote>
<p>Layline项目是一个研究倡议，旨在利用高性能和云计算创建金融经济学领域的公开可访问数据集。它通过民主化数据访问来降低进入门槛，同时也通过促进复制研究增加了该领域的透明度。</p>
</blockquote>
<p><img loading="lazy" src="img/05-layline.png" alt=""  />
</p>
<br>
<br>
<h2 id="二实验代码">二、实验代码</h2>
<p><strong>一般1G大小的csv，对应着要消耗电脑内 1G ~ 5G 内存</strong> 。 该数据集相关文件截图如下， 可以看到文件的体积都比较大。 目前大家使用的电脑，内存参数大多是8G或16G， 少部分同学们使用的32G+。接下来以 <em><strong>lit_footnotes.csv</strong></em> 为例， 简单学下 <em><strong>pd.read_csv</strong></em> 读取技巧。</p>
<p><img loading="lazy" src="img/02-screen.png" alt=""  />
</p>
<p><strong>pd.read_csv(filepath_or_buffer, nrows, usecols, engine=&lsquo;pyarrow&rsquo;, dtype_backend=&lsquo;pyarrow&rsquo;,  chunksize)</strong></p>
<ul>
<li><em><strong>filepath_or_buffer</strong></em>   csv数据文件路径</li>
<li><em><strong>nrows</strong></em>  限定读取行数</li>
<li><em><strong>usecols</strong></em> 选取部分字段进行读取(列表)</li>
<li><em><strong>engine</strong></em>  设置读取引擎， 可选python、c、pyarrow。
<ul>
<li>其中python为默认方式， 兼容性最佳。</li>
<li>c和pyarrow读取速度较python更快</li>
<li>pyarrow可并行读取，速度最快，但兼容性差，容易报错。</li>
</ul>
</li>
<li><em><strong>dtype_backend</strong></em>  设置pyarrow后，大大降低python中该数据内存占用量</li>
<li><em><strong>chunksize</strong></em>  每批次行数； 如果文件体积远超电脑内存时， 可将一个大文件拆分， 分批次读取。</li>
</ul>
<br>
<p>这里设计一个df内存查看函数，单位GB</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">bytes_to_GB</span><span class="p">(</span><span class="n">df</span><span class="p">):</span>  
    <span class="n">bytes_value</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">memory_usage</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
    <span class="k">return</span> <span class="nb">round</span><span class="p">(</span><span class="n">bytes_value</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">**</span> <span class="mi">3</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>  
  
  
<span class="k">def</span> <span class="nf">bytes_to_MB</span><span class="p">(</span><span class="n">df</span><span class="p">):</span>  
    <span class="n">bytes_value</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">memory_usage</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
    <span class="k">return</span> <span class="nb">round</span><span class="p">(</span><span class="n">bytes_value</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">**</span> <span class="mi">2</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>  
</code></pre></div><br>
<h3 id="21-nrows">2.1 nrows</h3>
<p>使用 <em><strong>nrows</strong></em> 参数设置只读取前n条记录， 了解csv字段有哪些</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#只读取csv中前5条记录</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#只读取csv中前5条记录</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;内存占用: </span><span class="si">{</span><span class="n">bytes_to_GB</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="si">}</span><span class="s2"> GB&#34;</span><span class="p">)</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 35.7 s, sys: 4.55 s, total: 40.3 s
Wall time: 37.5 s

内存占用: 10.84 GB
</code></pre></div><br>
<h3 id="22-usecols">2.2 usecols</h3>
<p>指定某几个字段进行读取</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#指定某些字段读取</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;filingDate&#39;</span><span class="p">,</span> <span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="s1">&#39;content&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;内存占用: </span><span class="si">{</span><span class="n">bytes_to_GB</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="si">}</span><span class="s2"> GB&#34;</span><span class="p">)</span> 
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">内存占用: 6.95 GB
CPU times: user 32.2 s, sys: 1.55 s, total: 33.8 s
Wall time: 34.1 s
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<br>
<h3 id="23-engine">2.3 engine</h3>
<p>可指定 <em><strong>engine=&lsquo;pyarrow&rsquo;</strong></em>,  来提高读取速度。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">,</span> <span class="n">engine</span><span class="o">=</span><span class="s1">&#39;pyarrow&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;内存占用: </span><span class="si">{</span><span class="n">bytes_to_GB</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="si">}</span><span class="s2"> GB&#34;</span><span class="p">)</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">内存占用: 10.84 GB
CPU times: user 23.3 s, sys: 12.6 s, total: 35.9 s
Wall time: 19.7 s
</code></pre></div><p><strong>注: 有时候使用engine=&lsquo;pyarrow&rsquo;, 容易代码报错， 这时候就只能放弃这个方法乖乖的默认读取。</strong> 经大邓实验，本数据集全部csv文件均可正常使用 <em><strong>engine=&lsquo;pyarrow&rsquo;</strong></em> 。</p>
<br>
<h3 id="24-dtype_backend">2.4 dtype_backend</h3>
<p>指定 <em><strong>dtype_backend=&lsquo;pyarrow&rsquo;</strong></em> 理论上会大大降低内存占用，但读取速度可能不一定提高。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">,</span> <span class="n">dtype_backend</span><span class="o">=</span><span class="s1">&#39;pyarrow&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;内存占用: </span><span class="si">{</span><span class="n">bytes_to_GB</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="si">}</span><span class="s2"> GB&#34;</span><span class="p">)</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">内存占用: 7.19 GB
CPU times: user 44 s, sys: 8 s, total: 52 s
Wall time: 53.5 s
</code></pre></div><br>
<p>同时指定 <em><strong>engine</strong></em> 和 <em><strong>dtype_backend</strong></em> 两个参数， 会明显提高读取速度。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">,</span> <span class="n">engine</span><span class="o">=</span><span class="s1">&#39;pyarrow&#39;</span><span class="p">,</span> <span class="n">dtype_backend</span><span class="o">=</span><span class="s1">&#39;pyarrow&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;内存占用: </span><span class="si">{</span><span class="n">bytes_to_GB</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="si">}</span><span class="s2"> GB&#34;</span><span class="p">)</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">内存占用: 7.19 GB
CPU times: user 9.88 s, sys: 7.55 s, total: 17.4 s
Wall time: 2.12 s
</code></pre></div><br>
<h3 id="对比">对比</h3>
<table>
<thead>
<tr>
<th>参数</th>
<th>解析速度</th>
<th>内存占用</th>
</tr>
</thead>
<tbody>
<tr>
<td><em><strong>pd.read_csv(csvf)</strong></em></td>
<td>最慢</td>
<td>最大</td>
</tr>
<tr>
<td><em><strong>pd.read_csv(csvf. engine=&lsquo;pyarrow&rsquo;)</strong></em></td>
<td>较快</td>
<td>中等</td>
</tr>
<tr>
<td><em><strong>pd.read_csv(csvf, engine=&lsquo;pyarrow&rsquo;, dtype_backend=&lsquo;pyarrow&rsquo;)</strong></em></td>
<td><strong>最快</strong></td>
<td><strong>最小</strong></td>
</tr>
</tbody>
</table>
<br>
<h3 id="25-chunksize">2.5 chunksize</h3>
<p>当探索完前n行，选中某些列，我们已经了解了哪些字段是我们必须要用的， 占用系统内存的大小。</p>
<p>接下来，我们就可以尝试着按照批次读取数据。</p>
<p>为了让实验简单高效，我们假设只读取前50000行， 每批次是10000 行。 对比下占用系统内存的量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#一次性读取50000条记录</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">50000</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;一次性读取内存占用: </span><span class="si">{</span><span class="n">bytes_to_MB</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="si">}</span><span class="s2"> MB&#34;</span><span class="p">)</span> 


<span class="c1">#分批次读取</span>
<span class="c1">#每10000条记录是一个批次，得到chunk_dfs</span>
<span class="n">chunk_dfs</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;lit_footnotes.csv&#39;</span><span class="p">,</span> <span class="n">nrows</span><span class="o">=</span><span class="mi">50000</span><span class="p">,</span> <span class="n">chunksize</span><span class="o">=</span><span class="mi">10000</span><span class="p">)</span>
<span class="c1">#每个chunk_df就是我们熟悉的dataframe类型数据</span>
<span class="k">for</span> <span class="n">chunk_df</span> <span class="ow">in</span> <span class="n">chunk_dfs</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;分批次读取内存占用: </span><span class="si">{</span><span class="n">bytes_to_MB</span><span class="p">(</span><span class="n">chunk_df</span><span class="p">)</span><span class="si">}</span><span class="s2"> MB&#34;</span><span class="p">)</span> 
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">一次性读取内存占用: 23.04 MB
分批次读取内存占用: 4.71 MB
分批次读取内存占用: 4.73 MB
分批次读取内存占用: 4.43 MB
分批次读取内存占用: 4.68 MB
分批次读取内存占用: 4.5 MB
</code></pre></div><br>
<p>在实践中，<em><strong>nrows</strong></em>  和 <em><strong>chunksize</strong></em> 不会同时出现， 而且 <em><strong>chunksize</strong></em> 一般都会设置的很大，例如1000000条。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">chunk_dfs = pd.read_csv(&#39;csv文件&#39;, chunksize=1000000)
</code></pre></div><p>看到 <em><strong>chunk_dfs</strong></em> 也不要害怕，其实每个 <em><strong>chunk_df</strong></em> 就是我们熟悉的 <em><strong>df</strong></em> ，即dataframe数据类型。</p>
<br>
<br>
<h2 id="三总结">三、总结</h2>
<p>记住这行代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pd.read_csv(csvf, nrows, usecols, engine, dtype_backend, chunksize)
</code></pre></div><p>8G内存的电脑， 通过以上技巧，基本可以把我们应对大数据的潜力放大N倍。  N可以是几倍、十几倍、几十倍、上百倍&hellip;，<strong>放大潜力的过程</strong></p>
<ul>
<li><em><strong>usecols</strong></em> 和 <em><strong>chunksize</strong></em>  起主要作用，百试百爽，稳定不出错。</li>
<li><em><strong>engine</strong></em>  和  <em><strong>dtype_backend</strong></em>  提高读取速度并降低内存占用，但代码容易出错。</li>
<li><em><strong>chunksize</strong></em>、<em><strong>nrows</strong></em> 参数不能与 <em><strong>engine</strong></em>、<em><strong>dtype_backend</strong></em>同时使用。</li>
</ul>
<p><br><br></p>
<h2 id="相关内容">相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
<li><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">推荐 | 如何处理远超电脑内存的csv文件</a></li>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的科研数据集清单</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>代码 | 使用5112w专利申请数据集构造面板数据</title>
      <link>https://textdata.cn/blog/2024-12-18-how-to-extract-data-from-patent-application-dataset/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-12-18-how-to-extract-data-from-patent-application-dataset/</guid>
      <description>使用5112w专利申请数据生成面板数据</description>
      <content:encoded><![CDATA[<h2 id="相关代码">相关代码</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/">代码 | 使用jjrb/rmrb数据构造某类概念词频「面板数据」</a></li>
<li><a href="https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/">代码 | 使用cctv新闻联播文稿构造面板数据</a></li>
</ul>
<p><br><br></p>
<h2 id="一任务">一、任务</h2>
<p>设计筛选条件，将某类专利(如<strong>人工智能</strong>)申请信息， 按 <strong>省份、年度、专利申请数</strong> 构造面板数据。如下图</p>
<p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二专利数据集">二、专利数据集</h2>
<p><a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/">数据集 | 5112万条专利申请数据集(1985-2025年)</a></p>
<br>
<h3 id="21-概况">2.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 数据集名称：中国专利申请数据集
- 时间跨度：1985.1-2025.1，专利申请总量3571万
- 数据来源：『国家知识产权局』
- 数据来源：『国家知识产权局』
- 数据体积:  解压后整个文件夹大概 90 G+
</code></pre></div><p><img loading="lazy" src="img/screen-datasets.png" alt=""  />
</p>
<br>
<h3 id="22-获取数据">2.2 获取数据</h3>
<ul>
<li>免费下载 <a href="%E4%B8%93%E5%88%A9%E9%9D%A2%E6%9D%BF%E6%95%B0%E6%8D%AE.ipynb">专利面板数据.ipynb</a></li>
<li>免费下载 <a href="AI_panel.xlsx">AI_panel.xlsx</a></li>
<li>免费下载 <a href="AI_details.csv.gz">AI_details.csv</a></li>
</ul>
<br>
<p><a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/">5112万条专利申请数据集(1985-2025.1年)</a></p>
<p><br><br></p>
<h2 id="三实验代码">三、实验代码</h2>
<p>本实验代码文件目录结构</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">  |- 专利面板数据.ipynb
  |- Word2Vec
     |-1000w专利摘要文本.100.6.bin
     |-1000w专利摘要文本.100.6.bin.syn1neg.npy
     |-1000w专利摘要文本.100.6.bin.wv.vectors.npy
  |5112万专利申请全量数据1985-2025年
     |-广东省.csv.gz
     |-...
     |-西藏自治区.csv.gz
  |-AI_details.xlsx
  |-AI_panel.xlsx
</code></pre></div><br>
<h3 id="31-人工智能相关词">3.1 人工智能相关词</h3>
<p>使用之前 <a href="https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/"><strong>词向量(付费) | 使用1985年-2025年专利申请摘要训练Word2Vec模型</strong></a>  来扩展 「大数据」相关关键词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#2.1.4版cntext，未公开，需要私信372335839</span>
<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#查看版本</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">__version__</span><span class="p">)</span>

<span class="n">w2v_m</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="s1">&#39;Word2Vec/1000w专利摘要文本.100.6.bin&#39;</span><span class="p">)</span>
<span class="n">w2v_m</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2.1.4
Loading word2vec model...
&lt;gensim.models.word2vec.Word2Vec at 0x109a8c810&gt;
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#我能想到的AI技术就这四个词</span>
<span class="n">w2v_m</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar</span><span class="p">([</span><span class="s1">&#39;人工智能&#39;</span><span class="p">],</span> <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;AI&#39;, 0.8372030854225159),
 (&#39;人工智能技术&#39;, 0.7714870572090149),
 (&#39;AI智能&#39;, 0.74532151222229),
 (&#39;智能决策&#39;, 0.7404459714889526),
 (&#39;AI人工智能&#39;, 0.7198485732078552),
 (&#39;云计算&#39;, 0.7136917114257812),
 (&#39;人工智能学习&#39;, 0.7058480381965637),
 (&#39;深度学习&#39;, 0.6903414130210876),
 (&#39;交互式&#39;, 0.6859808564186096),
 (&#39;智慧校园&#39;, 0.6856474876403809),
 (&#39;信息技术&#39;, 0.6841551661491394),
 (&#39;智慧养老&#39;, 0.682081937789917),
 (&#39;智慧旅游&#39;, 0.6777652502059937),
 (&#39;智慧医疗&#39;, 0.6757360100746155),
 (&#39;智能机器人&#39;, 0.6742302179336548),
 (&#39;智慧&#39;, 0.6734717488288879),
 (&#39;人工智能语音&#39;, 0.6727728247642517),
 (&#39;物联网&#39;, 0.66999351978302),
 (&#39;机器学习&#39;, 0.6683002710342407),
 (&#39;健康管理&#39;, 0.6656192541122437),
 (&#39;人工智能AI&#39;, 0.6648072600364685),
 (&#39;AI视觉&#39;, 0.6609936356544495),
 (&#39;智慧社区&#39;, 0.6581154465675354),
 (&#39;自主学习&#39;, 0.6569625735282898),
 (&#39;图像识别&#39;, 0.6551436185836792),
 (&#39;健康管理系统&#39;, 0.6537778377532959),
 (&#39;数据分析系统&#39;, 0.6528143882751465),
 (&#39;教学系统&#39;, 0.6516135334968567),
 (&#39;图形化编程&#39;, 0.6513208150863647),
 (&#39;计算机技术&#39;, 0.6512178182601929)]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">w2v_m</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar</span><span class="p">([</span><span class="s1">&#39;人工智能&#39;</span><span class="p">,</span> <span class="s1">&#39;机器学习&#39;</span><span class="p">,</span> <span class="s1">&#39;AI&#39;</span><span class="p">,</span> <span class="s1">&#39;NLP&#39;</span><span class="p">,</span> <span class="s1">&#39;智能机器人&#39;</span><span class="p">],</span> <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;人工智能技术&#39;, 0.8236023783683777),
 (&#39;人工智能学习&#39;, 0.7996466159820557),
 (&#39;自然语言理解&#39;, 0.7942413687705994),
 (&#39;深度学习&#39;, 0.7931050658226013),
 (&#39;智能决策&#39;, 0.7848177552223206),
 (&#39;上下文感知&#39;, 0.7765907049179077),
 (&#39;自然语言处理&#39;, 0.7757146954536438),
 (&#39;智能问答&#39;, 0.7602421641349792),
 (&#39;自主学习&#39;, 0.7582942247390747),
 (&#39;问答系统&#39;, 0.7564904093742371),
 (&#39;在线学习&#39;, 0.7510443329811096),
 (&#39;人工智能算法&#39;, 0.7500166296958923),
 (&#39;数据挖掘&#39;, 0.7495553493499756),
 (&#39;AI算法&#39;, 0.7419456839561462),
 (&#39;自我学习&#39;, 0.7414599061012268),
 (&#39;AI模型&#39;, 0.7412964105606079),
 (&#39;人工智能AI&#39;, 0.7401654720306396),
 (&#39;知识推理&#39;, 0.7398316860198975),
 (&#39;语音语义&#39;, 0.7393308877944946),
 (&#39;行为识别&#39;, 0.7342970967292786),
 (&#39;人工智能语音&#39;, 0.7332825660705566),
 (&#39;多任务&#39;, 0.7270201444625854),
 (&#39;神经机器翻译&#39;, 0.7220420837402344),
 (&#39;边云协同&#39;, 0.7219405174255371),
 (&#39;图形化编程&#39;, 0.7205625772476196),
 (&#39;云计算&#39;, 0.7199273109436035),
 (&#39;众包&#39;, 0.7197409272193909),
 (&#39;AI智能&#39;, 0.7154985666275024),
 (&#39;NLU&#39;, 0.7152286767959595),
 (&#39;AI人工智能&#39;, 0.7139929533004761)]
</code></pre></div><br>
<p>通过运行多次查询相似词，不断浓缩，得到人工智能技术相关技术词(不一定全，只是演示)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">AI_rela_words</span> <span class="o">=</span> <span class="s1">&#39;人工智能|机器学习|AI|NLP|智能问答|智能问答|神经机器翻译|NLU|增量学习&#39;</span>
</code></pre></div><br>
<h3 id="32-读取专利数据">3.2 读取专利数据</h3>
<p>尝试读取一个文件
写代码先局部后整体，先小后大。 能在局部小文件做实验成功，就可以for循环推广到所有的文件。这里我们选择 <em><strong>内蒙古自治区.csv.gz</strong></em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;5112万专利申请全量数据1985-2025年/内蒙古自治区.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#含有的字段</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;专利名称&#39;, &#39;专利类型&#39;, &#39;申请人&#39;, &#39;申请人类型&#39;, &#39;申请人地址&#39;, &#39;申请人国家&#39;, &#39;申请人省份&#39;, &#39;申请人城市&#39;,
       &#39;申请人区县&#39;, &#39;申请号&#39;, &#39;申请日&#39;, &#39;申请年份&#39;, &#39;公开公告号&#39;, &#39;公开公告日&#39;, &#39;公开公告年份&#39;, &#39;授权公告号&#39;,
       &#39;授权公告日&#39;, &#39;授权公告年份&#39;, &#39;IPC分类号&#39;, &#39;IPC主分类号&#39;, &#39;发明人&#39;, &#39;摘要文本&#39;, &#39;主权项内容&#39;, &#39;当前权利人&#39;,
       &#39;当前专利权人地址&#39;, &#39;专利权人类型&#39;, &#39;统一社会信用代码&#39;, &#39;引证次数&#39;, &#39;被引证次数&#39;, &#39;自引次数&#39;, &#39;他引次数&#39;,
       &#39;被自引次数&#39;, &#39;被他引次数&#39;, &#39;家族引证次数&#39;, &#39;家族被引证次数&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><br>
<h3 id="33-筛选专利">3.3 筛选专利</h3>
<p>使用逻辑条件把 <em><strong>专利名称</strong></em> 、 <em><strong>摘要文本</strong></em> 、<em><strong>主权项内容</strong></em> 中含 <em><strong>人工智能</strong></em> 相关概念词的申请记录筛选出来。 注意， 筛选条件的严格程度根据自己需要调整，这里使用的最严格的条件，即 人工智能词同时出现在专利名称和专利摘要，才将该专利识别为人工智能专利。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">AI_rela_words</span> <span class="o">=</span> <span class="s1">&#39;人工智能|机器学习|AI|NLP|智能问答|智能问答|神经机器翻译|NLU|增量学习&#39;</span>

<span class="n">mask1</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>
<span class="n">mask2</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;摘要文本&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>
<span class="n">mask3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;主权项内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>

<span class="c1">#内容太多， 选择需要的字段进行展示</span>
<span class="n">selected_fields</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;专利名称&#39;</span><span class="p">,</span> <span class="s1">&#39;摘要文本&#39;</span><span class="p">,</span> <span class="s1">&#39;主权项内容&#39;</span><span class="p">,</span> <span class="s1">&#39;申请日&#39;</span><span class="p">,</span> <span class="s1">&#39;IPC分类号&#39;</span><span class="p">]</span>
<span class="c1">#专利</span>
<span class="n">ai_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">mask1</span> <span class="o">&amp;</span> <span class="n">mask2</span> <span class="o">&amp;</span> <span class="n">mask3</span><span class="p">][</span><span class="n">selected_fields</span><span class="p">]</span>
<span class="n">ai_df</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<p>筛选结果基本上都是人工智能相关专利技术。</p>
<br>
<h3 id="34-年度申请量">3.4 年度申请量</h3>
<p>计算内蒙古自治区，人工智能相关专利年度申请量。 根据申请日， 先生成year字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">ai_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ai_df</span><span class="p">[</span><span class="s2">&#34;申请日&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">d</span><span class="p">:</span><span class="n">d</span><span class="p">[:</span><span class="mi">4</span><span class="p">])</span>

<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">ai_year_df</span> <span class="ow">in</span> <span class="n">ai_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">ai_year_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2014 2
2016 2
2017 13
2018 25
2019 38
2020 65
2021 83
2022 123
2023 4
2024 75
</code></pre></div><br>
<h3 id="36-获取年度各种专利类型的数量">3.6 获取年度各种专利类型的数量</h3>
<p>计算内蒙古自治区，人工智能领域各类型专利的年度申请量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">ai_year_df</span> <span class="ow">in</span> <span class="n">ai_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">):</span>
    <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;年度&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">year</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;实用新型&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;实用新型&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;发明公开&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;发明公开&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;外观设计&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;外观设计&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;发明授权&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;发明授权&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;省份&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;内蒙古自治区&#39;</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;年度&#39;: &#39;2014&#39;, &#39;实用新型&#39;: 0, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 1, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2016&#39;, &#39;实用新型&#39;: 0, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 1, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2017&#39;, &#39;实用新型&#39;: 1, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 3, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2018&#39;, &#39;实用新型&#39;: 1, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 6, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2019&#39;, &#39;实用新型&#39;: 5, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 9, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2020&#39;, &#39;实用新型&#39;: 12, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 14, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2021&#39;, &#39;实用新型&#39;: 7, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 11, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2022&#39;, &#39;实用新型&#39;: 14, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 14, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2023&#39;, &#39;实用新型&#39;: 0, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 0, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
{&#39;年度&#39;: &#39;2024&#39;, &#39;实用新型&#39;: 2, &#39;发明公开&#39;: 0, &#39;外观设计&#39;: 0, &#39;发明授权&#39;: 1, &#39;省份&#39;: &#39;内蒙古自治区&#39;}
</code></pre></div><br>
<h3 id="37-路径列表">3.7 路径列表</h3>
<p>使用glob库查看专利申请数据集内的含 <em><strong>csv.gz</strong></em> 的所有文件路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">glob</span>

<span class="n">files</span> <span class="o">=</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;5112万专利申请全量数据1985-2025年/*.csv.gz&#39;</span><span class="p">)</span>
<span class="n">files</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">files</span> <span class="k">if</span> <span class="n">f</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">not_in</span><span class="p">]</span>
<span class="n">files</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;5112万专利申请全量数据1985-2025年/北京市.csv.gz&#39;,
 &#39;5112万专利申请全量数据1985-2025年/广西壮族自治区.csv.gz&#39;,
 &#39;5112万专利申请全量数据1985-2025年/河北省.csv.gz&#39;,
 &#39;5112万专利申请全量数据1985-2025年/海南省.csv.gz&#39;,
 &#39;5112万专利申请全量数据1985-2025年/天津市.csv.gz&#39;,
 ......
 &#39;5112万专利申请全量数据1985-2025年/新疆维吾尔自治区.csv.gz&#39;,
 &#39;5112万专利申请全量数据1985-2025年/辽宁省.csv.gz&#39;,
 &#39;5112万专利申请全量数据1985-2025年/河南省.csv.gz&#39;,
 &#39;5112万专利申请全量数据1985-2025年/宁夏回族自治区.csv.gz&#39;]
</code></pre></div><br>
<h3 id="38-批量运算">3.8 批量运算</h3>
<p>现在对所有省市进行刚刚的操作， 筛选出的人工智能专利详细信息保存到 <em><strong>AI_details.csv</strong></em> , 同时汇总面板数据(年度、省份、专利数量), 得到 <em><strong>AI_panel.xlsx</strong></em> 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>

<span class="n">AI_rela_words</span> <span class="o">=</span> <span class="s1">&#39;人工智能|机器学习|AI|NLP|智能问答|智能问答|神经机器翻译|NLU|增量学习&#39;</span>
<span class="n">AI_Relatives_Patents</span> <span class="o">=</span> <span class="p">[]</span>


<span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">prov</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;.csv.gz&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>

    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> 
                     <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> 
                     <span class="n">usecols</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;专利名称&#39;</span><span class="p">,</span> <span class="s1">&#39;摘要文本&#39;</span><span class="p">,</span> <span class="s1">&#39;主权项内容&#39;</span><span class="p">,</span> <span class="s1">&#39;申请日&#39;</span><span class="p">,</span> <span class="s1">&#39;专利类型&#39;</span><span class="p">]</span>
                    <span class="p">)</span>
    
    <span class="n">mask1</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>
    <span class="n">mask2</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;摘要文本&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>
    <span class="n">mask3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;主权项内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>

    <span class="n">ai_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">mask1</span> <span class="o">&amp;</span> <span class="n">mask2</span> <span class="o">&amp;</span> <span class="n">mask3</span><span class="p">]</span>
    <span class="n">ai_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ai_df</span><span class="p">[</span><span class="s2">&#34;申请日&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">d</span><span class="p">:</span><span class="n">d</span><span class="p">[:</span><span class="mi">4</span><span class="p">])</span>
    
    <span class="c1">#保存全国AI专利详情信息</span>
    <span class="n">ai_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;AI_details.csv&#39;</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    
    <span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">ai_year_df</span> <span class="ow">in</span> <span class="n">ai_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">):</span>
        <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;年度&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">year</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;实用新型&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;实用新型&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;发明公开&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;发明公开&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;外观设计&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;外观设计&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;发明授权&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;发明授权&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;省份&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">prov</span>
        <span class="n">AI_Relatives_Patents</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>


<span class="n">ai_panel_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">AI_Relatives_Patents</span><span class="p">)</span>
<span class="n">ai_panel_df</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;AI_panel.xlsx&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录数:&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">ai_panel_df</span><span class="p">))</span>
<span class="n">ai_panel_df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">5112万专利申请全量数据1985-2025年/北京市.csv.gz
5112万专利申请全量数据1985-2025年/广西壮族自治区.csv.gz
......
5112万专利申请全量数据1985-2025年/河南省.csv.gz
5112万专利申请全量数据1985-2025年/宁夏回族自治区.csv.gz

记录数: 523
CPU times: user 15min 38s, sys: 46.4 s, total: 16min 24s
Wall time: 16min 27s
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<br>
<h3 id="39-剔除重复">3.9 剔除重复</h3>
<p>AI_details.csv 会有一些重复内容，可以剔除重复内容，删除旧文件，导出新的不重复的文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="n">AI_detail_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;AI_details.csv&#39;</span><span class="p">)</span>
<span class="n">AI_detail_df</span> <span class="o">=</span> <span class="n">AI_detail_df</span><span class="p">[</span><span class="n">AI_detail_df</span><span class="p">[</span><span class="s1">&#39;专利公开号&#39;</span><span class="p">]</span><span class="o">!=</span><span class="s1">&#39;专利公开号&#39;</span><span class="p">]</span>
<span class="n">AI_detail_df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s2">&#34;AI_details.csv&#34;</span><span class="p">)</span>
<span class="n">AI_detail_df</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s2">&#34;AI_details.xlsx&#34;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h3 id="四汇总代码">四、汇总代码</h3>
<p>本文全部代码汇总于此</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">glob</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">tqdm</span> <span class="kn">import</span> <span class="nn">tqdm</span>

<span class="n">AI_rela_words</span> <span class="o">=</span> <span class="s1">&#39;人工智能|机器学习|AI|NLP|智能问答|智能问答|神经机器翻译|NLU|增量学习&#39;</span>

<span class="c1">#剔除港、澳、台、海外</span>
<span class="n">not_in</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;5112万专利申请全量数据1985-2025年/台湾省.csv.gz&#39;</span><span class="p">,</span>
          <span class="s1">&#39;5112万专利申请全量数据1985-2025年/澳门特别行政区.csv.gz&#39;</span><span class="p">,</span> 
          <span class="s1">&#39;5112万专利申请全量数据1985-2025年/香港特别行政区.csv.gz&#39;</span><span class="p">,</span> 
          <span class="s1">&#39;5112万专利申请全量数据1985-2025年/其他国家.csv.gz&#39;</span><span class="p">]</span>
<span class="n">files</span> <span class="o">=</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;5112万专利申请全量数据1985-2025年/*.csv.gz&#39;</span><span class="p">)</span>

<span class="n">AI_Relatives_Patents</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">tqdm</span><span class="p">(</span><span class="n">files</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">prov</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;.csv.gz&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
    
    <span class="c1">#筛选出AI专利</span>
    <span class="n">mask1</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>
    <span class="n">mask2</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;摘要文本&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>
    <span class="n">mask3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;主权项内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">AI_rela_words</span><span class="p">)</span>
    <span class="n">ai_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">mask1</span> <span class="o">&amp;</span> <span class="n">mask2</span> <span class="o">&amp;</span> <span class="n">mask3</span><span class="p">]</span>
    
    <span class="c1">#保存全国AI专利详情信息</span>
    <span class="n">ai_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;AI_details.csv&#39;</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    
    <span class="n">ai_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ai_df</span><span class="p">[</span><span class="s2">&#34;申请日&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">d</span><span class="p">:</span><span class="n">d</span><span class="p">[:</span><span class="mi">4</span><span class="p">])</span>
    <span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">ai_year_df</span> <span class="ow">in</span> <span class="n">ai_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">):</span>
        <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;年度&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">year</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;实用新型&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;实用新型&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;发明公开&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;发明公开&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;外观设计&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;外观设计&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;发明授权&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">ai_year_df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;发明授权&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span><span class="p">[</span><span class="s1">&#39;省份&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">prov</span>
        <span class="n">AI_Relatives_Patents</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
    

<span class="n">china_ai_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">AI_Relatives_Patents</span><span class="p">)</span>
<span class="n">china_ai_df</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;AI_panel.xlsx&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>


<span class="n">AI_detail_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;AI_details.csv&#39;</span><span class="p">)</span>
<span class="n">AI_detail_df</span> <span class="o">=</span> <span class="n">AI_detail_df</span><span class="p">[</span><span class="n">AI_detail_df</span><span class="p">[</span><span class="s1">&#39;专利公开号&#39;</span><span class="p">]</span><span class="o">!=</span><span class="s1">&#39;专利公开号&#39;</span><span class="p">]</span>
<span class="n">AI_detail_df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">os</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="s2">&#34;AI_details.csv&#34;</span><span class="p">)</span>
<span class="n">AI_detail_df</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s2">&#34;AI_details.xlsx&#34;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 5112万条专利申请数据集(1985-2025)</title>
      <link>https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/</link>
      <pubDate>Fri, 07 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/</guid>
      <description>5112万条专利申请数据集(1985-2025)</description>
      <content:encoded><![CDATA[<h2 id="一数据介绍">一、数据介绍</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名：中国专利申请数据集
时间跨度：1985.1-2025.1
记录条数: 5112w
数据来源：『国家知识产权局』
数据体积:  解压后整个文件夹大概 90 G+
本文声明:  科研问题； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-screen-datasets.png" alt=""  />
</p>
<br>
<h3 id="12-字段">1.2 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - 专利名称
 - 专利类型
 - 申请人
 - 申请人类型
 - 申请人地址
 - 申请人国家
 - 申请人省份
 - 申请人城市
 - 申请人区县
 - 申请号
 - 申请日
 - 申请年份
 - 公开公告号
 - 公开公告日
 - 公开公告年份
 - 授权公告号
 - 授权公告日
 - 授权公告年份
 - IPC分类号
 - IPC主分类号
 - 发明人
 - 摘要文本
 - 主权项内容
 - 当前权利人
 - 当前专利权人地址
 - 专利权人类型
 - 统一社会信用代码
 - 引证次数
 - 被引证次数
 - 自引次数
 - 他引次数
 - 被自引次数
 - 被他引次数
 - 家族引证次数
 - 家族被引证次数
</code></pre></div><br>
<h3 id="13-声明">1.3 声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="二实验代码">二、实验代码</h2>
<h3 id="21-读取全库文件">2.1 读取全库文件</h3>
<p>全库 <strong>中国专利数据库.csv.gz</strong> 体积 <strong>25.59G</strong>， 解压后 <em><strong>90G+</strong></em>。 大邓这里有一台内存 <em><strong>256 G</strong></em> 的服务器， 可以任性的试一试。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">mega_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;中国专利数据库.csv.gz&#39;</span><span class="p">,</span>  <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="c1">#mega_df = pd.read_feather(&#39;中国专利数据库.feather&#39;)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 56min 29s,
Wall time: 1h 2min 47s
</code></pre></div><br>
<h3 id="22-读取技巧">2.2 读取技巧</h3>
<p>但平常我们使用的电脑，内存大概16G~32G， 所以只能借助 pandas的一些方法巧妙的读取这个大文件， 详情可参考 <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>代码 | 如何用python处理超大csv文件</strong></a> 。为了后期绘制省份申请量和年度申请量这两个图，因此这里可以选择指定字段进行读取， 减少占用内存量。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;中国专利数据库.csv.gz&#39;</span><span class="p">,</span> 
                 <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> 
                 <span class="n">usecols</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;申请人省份&#39;</span><span class="p">,</span> <span class="s1">&#39;申请日&#39;</span><span class="p">])</span>

<span class="n">memory_size</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">memory_usage</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">/</span><span class="mi">1024</span><span class="o">/</span><span class="mi">1024</span><span class="o">/</span><span class="mi">1024</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;两字段占用内存: </span><span class="si">{</span><span class="n">memory_size</span><span class="si">}</span><span class="s1">G&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 6min 29s, sys: 13 s, total: 6min 42s
Wall time: 6min 44s

两字段占用内存: 6G
</code></pre></div><p><img loading="lazy" src="img/02-alldf.png" alt=""  />
</p>
<br>
<h3 id="23-读取省份文件">2.3 读取省份文件</h3>
<p>数据集中的个别csv文件较大，例如 <strong>河北省.csv.gz</strong>体积528M , 解压得到的 <strong>河北省.csv</strong> 2G。 建议直接读取 <em><strong>.csv.gz</strong></em>，这样会提高数据读取的速度。 需要注意每次分析时不要开其他软件，如Word/PPT/Excel/WPS。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;河北省.csv.gz&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="c1">#df = pd.read_csv(&#39;河北省.csv&#39;, encoding=&#39;utf-8&#39;, low_memory=False)</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;河北省申请量: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">河北省申请量: 1048890
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="24-覆盖日期">2.4 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;覆盖日期: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖日期:  1985-04-01 ~ 2025-01-22
</code></pre></div><br>
<h3 id="25-字段">2.5 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;专利名称&#39;, &#39;专利类型&#39;, &#39;申请人&#39;, &#39;申请人类型&#39;, &#39;申请人地址&#39;, &#39;申请人国家&#39;, &#39;申请人省份&#39;, &#39;申请人城市&#39;,
       &#39;申请人区县&#39;, &#39;申请号&#39;, &#39;申请日&#39;, &#39;申请年份&#39;, &#39;公开公告号&#39;, &#39;公开公告日&#39;, &#39;公开公告年份&#39;, &#39;授权公告号&#39;,
       &#39;授权公告日&#39;, &#39;授权公告年份&#39;, &#39;IPC分类号&#39;, &#39;IPC主分类号&#39;, &#39;发明人&#39;, &#39;摘要文本&#39;, &#39;主权项内容&#39;, &#39;当前权利人&#39;,
       &#39;当前专利权人地址&#39;, &#39;专利权人类型&#39;, &#39;统一社会信用代码&#39;, &#39;引证次数&#39;, &#39;被引证次数&#39;, &#39;自引次数&#39;, &#39;他引次数&#39;,
       &#39;被自引次数&#39;, &#39;被他引次数&#39;, &#39;家族引证次数&#39;, &#39;家族被引证次数&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利类型&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">专利类型
实用新型    480822
发明申请    319386
外观设计    166560
发明授权     82122
Name: count, dtype: int64
</code></pre></div><p><br><br></p>
<h2 id="三字段详情">三、字段详情</h2>
<h3 id="31-字段缺失程度">3.1 字段缺失程度</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">platform</span>

<span class="c1"># 根据操作系统设置字体</span>
<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s1">&#39;font.family&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;SimHei&#39;</span> <span class="k">if</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span> <span class="k">else</span> <span class="s1">&#39;Arial Unicode MS&#39;</span> <span class="k">if</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span> <span class="k">else</span> <span class="s1">&#39;sans-serif&#39;</span>
<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s1">&#39;axes.unicode_minus&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>  <span class="c1"># 解决负号显示问题</span>

<span class="c1"># 绘制缺失值矩阵图</span>
<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">dff</span><span class="p">)</span>

<span class="c1"># 显示图表</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/04-nan.png" alt=""  />
</p>
<p>可以看到图右侧的柱状条存在明显的条纹， 柱状条的空白越多，说明对应字段的缺失程度越大。</p>
<br>
<h3 id="32-专利类型">3.2 专利类型</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;专利类型&#39;].unique()
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([&#39;发明申请&#39;, &#39;实用新型&#39;, &#39;发明授权&#39;, &#39;外观设计&#39;], dtype=object)
</code></pre></div><br>
<h3 id="32-发明人">3.2 发明人</h3>
<p>发明人一般是自然人，但是极少数情况也可以是法人。发明人可以是多个自然人，一般以  <code>; </code>间隔</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;发明人&#39;]
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0                            柴秀芬
1                            秋海滨
2                            葛长虹
3                       孙盛典; 申富德
4                       马建维; 邢建军
                   ...          
1048885             何治东; 刘应梁; 王琴
1048886                 邢维鹏; 王春良
1048887                 张正东; 张宏彬
1048888    张岩鑫; 韩静; 王宏建; 麻俐; 马东泽
1048889        储焰平; 薛志涛; 袁晓峰; 黄博
Name: 发明人, Length: 1048890, dtype: object
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#整个河北省，只有这2条记录是发明人是公司法人</span>
<span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;发明人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;公司&#39;</span><span class="p">)][[</span><span class="s1">&#39;申请号&#39;</span><span class="p">,</span> <span class="s1">&#39;专利名称&#39;</span><span class="p">,</span> <span class="s1">&#39;申请人类型&#39;</span><span class="p">,</span> <span class="s1">&#39;摘要文本&#39;</span><span class="p">,</span> <span class="s1">&#39;发明人&#39;</span><span class="p">,</span> <span class="s1">&#39;申请人&#39;</span><span class="p">]]</span>
</code></pre></div><p><img loading="lazy" src="img/05-df.png" alt=""  />
</p>
<br>
<h3 id="33-申请人">3.3 申请人</h3>
<p>注意，申请人可以是自然人、法人、多个(自然人、法人),  一般以  <code>; </code>间隔。我们先直接看 <code>申请人</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0                       柴秀芬
1                       秋海滨
2                       葛长虹
3                  孙盛典; 申富德
4                  马建维; 邢建军
                 ...       
1048885    昆明浩淼水利水电工程检测有限公司
1048886      海南紫程众投生物科技有限公司
1048887     泸西县宏达农业发展有限责任公司
1048888       辽宁省德明环境检测有限公司
1048889        中冶南方工程技术有限公司
Name: 申请人, Length: 1048890, dtype: object
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#河北省，【申请人类型】大多数是企业</span>
<span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;公司&#39;</span><span class="p">)][[</span><span class="s1">&#39;申请号&#39;</span><span class="p">,</span> <span class="s1">&#39;专利名称&#39;</span><span class="p">,</span> <span class="s1">&#39;申请人类型&#39;</span><span class="p">,</span> <span class="s1">&#39;摘要文本&#39;</span><span class="p">,</span> <span class="s1">&#39;发明人&#39;</span><span class="p">,</span> <span class="s1">&#39;申请人&#39;</span><span class="p">]]</span>
</code></pre></div><p><img loading="lazy" src="img/06-df.png" alt=""  />
</p>
<br>
<h3 id="34-ipc分类号">3.4 IPC分类号</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">dff[[&#39;专利名称&#39;, &#39;主权项内容&#39;, &#39;IPC主分类号&#39;, &#39;IPC分类号&#39;]]
</code></pre></div><p><img loading="lazy" src="img/07-df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四可视化">四、可视化</h2>
<h3 id="41-省份">4.1 省份</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;中国专利数据库.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;申请人省份&#39;</span><span class="p">])</span>
<span class="n">prov_volumes_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;申请人省份&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">size</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;申请数量&#39;</span><span class="p">)</span>
<span class="n">prov_volumes_df</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">&#39;申请数量&#39;</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="c1"># 转换为分类变量并保持原始顺序</span>
<span class="n">prov_volumes_df</span><span class="p">[</span><span class="s1">&#39;申请人省份&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Categorical</span><span class="p">(</span>
    <span class="n">prov_volumes_df</span><span class="p">[</span><span class="s1">&#39;申请人省份&#39;</span><span class="p">],</span>
    <span class="n">categories</span><span class="o">=</span><span class="n">prov_volumes_df</span><span class="p">[</span><span class="s1">&#39;申请人省份&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">(),</span>
    <span class="n">ordered</span><span class="o">=</span><span class="kc">True</span>
<span class="p">)</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">prov_volumes_df</span><span class="p">,</span> <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;申请人省份&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;申请数量&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;省份专利申请量(1985-2025)&#39;</span><span class="p">,</span>
         <span class="n">x</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
         <span class="n">y</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;申请数量&#39;</span><span class="p">),</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>
               <span class="n">size</span><span class="o">=</span><span class="mf">4.5</span><span class="p">,</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="o">+</span> <span class="n">annotate</span><span class="p">(</span>
        <span class="s1">&#39;text&#39;</span><span class="p">,</span>
        <span class="n">x</span><span class="o">=</span> <span class="s1">&#39;新疆维吾尔自治区&#39;</span><span class="p">,</span>
        <span class="n">y</span><span class="o">=</span> <span class="n">prov_volumes_df</span><span class="p">[</span><span class="s1">&#39;申请数量&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">*</span> <span class="mf">1.05</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s1">&#39;公众号: 大邓和他的Python&#39;</span><span class="p">,</span>
        <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;left&#39;</span><span class="p">,</span>
        <span class="n">va</span><span class="o">=</span><span class="s1">&#39;top&#39;</span><span class="p">,</span>
        <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">family</span><span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
           <span class="n">axis_text_x</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
          <span class="p">)</span>
<span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 8min 19s,
Wall time: 8min 44s
</code></pre></div><p><img loading="lazy" src="img/08-prov.png" alt=""  />
</p>
<br>
<h3 id="42-年份">4.2 年份</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span>


<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;中国专利数据库.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">usecols</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">])</span>

<span class="n">date_df</span> <span class="o">=</span> <span class="p">(</span>
    <span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span>
        <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请日&#39;</span><span class="p">])</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">y</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;.0&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)))</span>
    <span class="o">.</span><span class="n">size</span><span class="p">()</span>
    <span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">)</span>
    <span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;申请日&#39;</span><span class="p">:</span> <span class="s1">&#39;year&#39;</span><span class="p">})</span>
<span class="p">)</span>

<span class="n">date_df</span> <span class="o">=</span> <span class="n">date_df</span><span class="p">[</span><span class="n">date_df</span><span class="o">.</span><span class="n">year</span><span class="o">!=</span><span class="s1">&#39;nan&#39;</span><span class="p">]</span>
<span class="n">date_df</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="c1"># 转换为分类变量并保持原始顺序</span>
<span class="n">date_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">Categorical</span><span class="p">(</span>
    <span class="n">date_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">],</span>
    <span class="n">categories</span><span class="o">=</span><span class="n">yc_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">(),</span>
    <span class="n">ordered</span><span class="o">=</span><span class="kc">True</span>
<span class="p">)</span>



<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">date_df</span><span class="p">,</span> <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;专利年度申请量(1985-2025.1)&#39;</span><span class="p">,</span>
         <span class="n">x</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">,</span>
         <span class="n">y</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">),</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>
               <span class="n">size</span><span class="o">=</span><span class="mf">4.1</span><span class="p">,</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="o">+</span> <span class="n">annotate</span><span class="p">(</span>
        <span class="s1">&#39;text&#39;</span><span class="p">,</span>
        <span class="n">x</span><span class="o">=</span> <span class="n">date_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">(),</span>
        <span class="n">y</span><span class="o">=</span> <span class="n">date_df</span><span class="p">[</span><span class="s1">&#39;count&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">*</span> <span class="mf">1.05</span><span class="p">,</span>
        <span class="n">label</span><span class="o">=</span><span class="s1">&#39;公众号: 大邓和他的Python&#39;</span><span class="p">,</span>
        <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;left&#39;</span><span class="p">,</span>
        <span class="n">va</span><span class="o">=</span><span class="s1">&#39;top&#39;</span><span class="p">,</span>
        <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
        <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span>
    <span class="p">)</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">family</span><span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span>
           <span class="n">axis_text_x</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">7</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="s1">&#39;bold&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="c1"># 显式指定坐标轴顺序（可选但保险）</span>
    <span class="o">+</span> <span class="n">scale_x_discrete</span><span class="p">(</span><span class="n">limits</span><span class="o">=</span><span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1985</span><span class="p">,</span> <span class="mi">2026</span><span class="p">)])</span>
<span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">CPU times: user 7min 44s,
Wall time: 8min 10s
</code></pre></div><p><img loading="lazy" src="img/09-date.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="五相关文献">五、相关文献</h2>
<p>使用专利数据做研究的文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Bellstam, Gustaf, Sanjai Bhagat, and J. Anthony Cookson. &#34;A text-based analysis of corporate innovation.&#34; _Management Science_ 67, no. 7 (2021): 4004-4031.
[2]Arts, Sam, Bruno Cassiman, and Jianan Hou. &#34;Position and Differentiation of Firms in Technology Space.&#34; Management Science (2023).
</code></pre></div><p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 上市公司招聘数据(2014~2023)</title>
      <link>https://textdata.cn/blog/2025-03-06-china-recruitment-dataset-of-listed-companies/</link>
      <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-06-china-recruitment-dataset-of-listed-companies/</guid>
      <description>&lt;h2 id=&#34;一上市公司招聘数据集&#34;&gt;一、上市公司招聘数据集&lt;/h2&gt;
&lt;h3 id=&#34;11-概况&#34;&gt;1.1 概况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集名:  上市公司招聘数据集(2014~2023)
数据来源:  招聘网站(如智联招聘、Boss直聘等)
记录数两:  6933415
覆盖日期:  2014-01-07 ~ 2023-12-31
数据格式:  csv
数据体积:  7.37 G
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;12-字段介绍&#34;&gt;1.2 字段介绍&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- company    企业名称
- listed_rel 与上市公司关系
- stkcd      关联股票代码
- job        招聘岗位
- city       工作城市
- area       工作区域
- min_sal    最低月薪
- max_sal    最高月薪
- desc       职位描述
- edu        学历要求
- exp        经验要求
- hires      招聘人数
- category   招聘类别
- class      招聘分级
- loc        公司地点
- work_loc   工作地点
- post_date  发布招聘日期
- close_date 结束招聘日期
- source     招聘发布的平台
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;13-说明&#34;&gt;1.3 说明&lt;/h3&gt;
&lt;p&gt;科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;上市公司招聘大数据2014-2023年.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#或  解压得到csv再读取&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df = pd.read_csv(&amp;#39;上市公司招聘大数据2014-2023年.csv&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;记录条数:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;记录条数: 6933415
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-覆盖日期&#34;&gt;2.2 覆盖日期&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;覆盖日期: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;覆盖日期:  2014-01-07 ~ 2023-12-31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;23-字段缺失程度&#34;&gt;2.3 字段缺失程度&lt;/h3&gt;
&lt;p&gt;使用 &lt;em&gt;&lt;strong&gt;missingno库&lt;/strong&gt;&lt;/em&gt; 可视化数据集的字段缺失程度，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;missingno&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ms&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-missingno.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可以看到 &lt;em&gt;&lt;strong&gt;classs&lt;/strong&gt;&lt;/em&gt;、 &lt;em&gt;&lt;strong&gt;loc&lt;/strong&gt;&lt;/em&gt;、 &lt;em&gt;&lt;strong&gt;work_loc&lt;/strong&gt;&lt;/em&gt;  这几个字段缺失较多， 而其余字段缺失程度很轻。&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;相关文献&#34;&gt;相关文献&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[1]Gao, Janet, Kenneth J. Merkley, Joseph Pacelli, and Joseph H. Schroeder. &amp;#34;Do internal control weaknesses affect firms’ demand for accounting skills? Evidence from US job postings.&amp;#34; The Accounting Review 98, no. 3 (2023): 203-228.
[2]Campello, Murillo, Gaurav Kankanhalli, and Pradeep Muthukrishnan. &amp;#34;Corporate hiring under Covid-19: Financial constraints and the nature of new jobs.&amp;#34; Journal of Financial and Quantitative Analysis 59, no. 4 (2024): 1541-1585.
[3]Cao, Yi, Shijun Cheng, Jennifer Wu Tucker, and Chi Wan. &amp;#34;Technological peer pressure and skill specificity of job postings.&amp;#34; Contemporary Accounting Research 40, no. 3 (2023): 2106-2139.
[4]马双, 肖翰, 李丁, 张鹏. 最低工资与异质性人力资本需求：基于招聘网站数据的研究[J]. 世界经济, 2023, 46 (12): 92-114.
[5]莫怡青, 李力行. 零工经济对创业的影响——以外卖平台的兴起为例[J]. 管理世界, 2022, 38 (02): 31-45+3.
[6]罗楚亮, 刘盼. 公共就业服务机构匹配效率及其地区差异[J]. 管理世界, 2022, 38 (07): 133-147.
[7]刘毓芸, 程宇玮. 重点产业政策与人才需求——来自企业招聘面试的微观证据[J]. 管理世界, 2020, 36 (06): 65-79+245.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;精选内容&#34;&gt;精选内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/datasets_available_for_management_science/&#34;&gt;LIST | 可供社科(经管)领域使用的数据集汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/the_text_analysis_list_about_ms/&#34;&gt;LIST | 社科(经管)数据挖掘文献资料汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/&#34;&gt;推荐 | 文本分析库cntext2.x使用手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-02-14-using-online-large-model-api-to-transform-text-data-into-structured-data/&#34;&gt;教程 | 使用大模型将文本数据转化为结构化数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-03-05-scrape-consumer-complaint-data-with-python/&#34;&gt;爬虫代码 | 使用Python采集黑猫投诉网数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-03-05-consumer-complaint-dataset/&#34;&gt;&lt;strong&gt;数据集| 1500w+消费者投诉数据集(2018 ~ 2024.8)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-03-06-chinese-fresh-graduates-recruitment-dataset/&#34;&gt;&lt;strong&gt;数据集 | 应届生招聘数据集(2014~2024.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一上市公司招聘数据集">一、上市公司招聘数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名:  上市公司招聘数据集(2014~2023)
数据来源:  招聘网站(如智联招聘、Boss直聘等)
记录数两:  6933415
覆盖日期:  2014-01-07 ~ 2023-12-31
数据格式:  csv
数据体积:  7.37 G
</code></pre></div><br>
<h3 id="12-字段介绍">1.2 字段介绍</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- company    企业名称
- listed_rel 与上市公司关系
- stkcd      关联股票代码
- job        招聘岗位
- city       工作城市
- area       工作区域
- min_sal    最低月薪
- max_sal    最高月薪
- desc       职位描述
- edu        学历要求
- exp        经验要求
- hires      招聘人数
- category   招聘类别
- class      招聘分级
- loc        公司地点
- work_loc   工作地点
- post_date  发布招聘日期
- close_date 结束招聘日期
- source     招聘发布的平台
</code></pre></div><br>
<h3 id="13-说明">1.3 说明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;上市公司招聘大数据2014-2023年.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#或  解压得到csv再读取</span>
<span class="c1">#df = pd.read_csv(&#39;上市公司招聘大数据2014-2023年.csv&#39;)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录条数:&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">记录条数: 6933415
</code></pre></div><p><img loading="lazy" src="img/02-df.jpg" alt=""  />
</p>
<br>
<h3 id="22-覆盖日期">2.2 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;覆盖日期: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖日期:  2014-01-07 ~ 2023-12-31
</code></pre></div><p><br><br></p>
<h3 id="23-字段缺失程度">2.3 字段缺失程度</h3>
<p>使用 <em><strong>missingno库</strong></em> 可视化数据集的字段缺失程度，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-missingno.png" alt=""  />
</p>
<p>可以看到 <em><strong>classs</strong></em>、 <em><strong>loc</strong></em>、 <em><strong>work_loc</strong></em>  这几个字段缺失较多， 而其余字段缺失程度很轻。</p>
<br>
<br>
<h2 id="相关文献">相关文献</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Gao, Janet, Kenneth J. Merkley, Joseph Pacelli, and Joseph H. Schroeder. &#34;Do internal control weaknesses affect firms’ demand for accounting skills? Evidence from US job postings.&#34; The Accounting Review 98, no. 3 (2023): 203-228.
[2]Campello, Murillo, Gaurav Kankanhalli, and Pradeep Muthukrishnan. &#34;Corporate hiring under Covid-19: Financial constraints and the nature of new jobs.&#34; Journal of Financial and Quantitative Analysis 59, no. 4 (2024): 1541-1585.
[3]Cao, Yi, Shijun Cheng, Jennifer Wu Tucker, and Chi Wan. &#34;Technological peer pressure and skill specificity of job postings.&#34; Contemporary Accounting Research 40, no. 3 (2023): 2106-2139.
[4]马双, 肖翰, 李丁, 张鹏. 最低工资与异质性人力资本需求：基于招聘网站数据的研究[J]. 世界经济, 2023, 46 (12): 92-114.
[5]莫怡青, 李力行. 零工经济对创业的影响——以外卖平台的兴起为例[J]. 管理世界, 2022, 38 (02): 31-45+3.
[6]罗楚亮, 刘盼. 公共就业服务机构匹配效率及其地区差异[J]. 管理世界, 2022, 38 (07): 133-147.
[7]刘毓芸, 程宇玮. 重点产业政策与人才需求——来自企业招聘面试的微观证据[J]. 管理世界, 2020, 36 (06): 65-79+245.
</code></pre></div><br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
<li><a href="https://textdata.cn/blog/2025-02-14-using-online-large-model-api-to-transform-text-data-into-structured-data/">教程 | 使用大模型将文本数据转化为结构化数据</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-scrape-consumer-complaint-data-with-python/">爬虫代码 | 使用Python采集黑猫投诉网数据</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-consumer-complaint-dataset/"><strong>数据集| 1500w+消费者投诉数据集(2018 ~ 2024.8)</strong></a></li>
<li><a href="https://textdata.cn/blog/2025-03-06-chinese-fresh-graduates-recruitment-dataset/"><strong>数据集 | 应届生招聘数据集(2014~2024.12)</strong></a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 应届生招聘数据集(2014~2024.12)</title>
      <link>https://textdata.cn/blog/2025-03-06-chinese-fresh-graduates-recruitment-dataset/</link>
      <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-06-chinese-fresh-graduates-recruitment-dataset/</guid>
      <description>&lt;h2 id=&#34;一应届生招聘数据集&#34;&gt;一、应届生招聘数据集&lt;/h2&gt;
&lt;h3 id=&#34;11-概况&#34;&gt;1.1 概况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集名:  应届生招聘数据集
数据来源:  招聘网站(如智联招聘、Boss直聘等)
记录数两:  6961787
覆盖日期:  2014-01-17 ~ 2024-12-16
数据格式:  csv
数据体积:  8 G

本文声明: 科研用途; 如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;12-字段介绍&#34;&gt;1.2 字段介绍&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- company    企业名称
- job        招聘岗位
- city       工作城市
- area       工作区域
- min_sal    最低月薪
- max_sal    最高月薪
- desc       职位描述
- edu        学历要求
- exp        经验要求
- hires      招聘人数
- category   招聘类别
- class      招聘分级
- loc        公司地点
- work_loc   工作地点
- post_date  发布招聘日期
- close_date 结束招聘日期
- source     招聘发布的平台
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;13-本文声明&#34;&gt;1.3 本文声明&lt;/h3&gt;
&lt;p&gt;科研用途; 如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;应届生招聘数据2014-2024年.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#或  解压得到csv再读取&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df = pd.read_csv(&amp;#39;应届生招聘数据2014-2024年.csv&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;记录条数:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;记录条数: 6961787
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-覆盖日期&#34;&gt;2.2 覆盖日期&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;覆盖日期: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;覆盖日期:  2014-01-17 ~ 2024-12-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;23-字段缺失程度&#34;&gt;2.3 字段缺失程度&lt;/h3&gt;
&lt;p&gt;使用 &lt;em&gt;&lt;strong&gt;missingno库&lt;/strong&gt;&lt;/em&gt; 可视化数据集的字段缺失程度，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;missingno&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ms&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-missingno.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;可以看到 &lt;em&gt;&lt;strong&gt;classs&lt;/strong&gt;&lt;/em&gt;、 &lt;em&gt;&lt;strong&gt;loc&lt;/strong&gt;&lt;/em&gt;、 &lt;em&gt;&lt;strong&gt;work_loc&lt;/strong&gt;&lt;/em&gt;  这几个字段缺失较多， 而其余字段缺失程度很轻。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关文献&#34;&gt;相关文献&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[1]Gao, Janet, Kenneth J. Merkley, Joseph Pacelli, and Joseph H. Schroeder. &amp;#34;Do internal control weaknesses affect firms’ demand for accounting skills? Evidence from US job postings.&amp;#34; The Accounting Review 98, no. 3 (2023): 203-228.
[2]Campello, Murillo, Gaurav Kankanhalli, and Pradeep Muthukrishnan. &amp;#34;Corporate hiring under Covid-19: Financial constraints and the nature of new jobs.&amp;#34; Journal of Financial and Quantitative Analysis 59, no. 4 (2024): 1541-1585.
[3]Cao, Yi, Shijun Cheng, Jennifer Wu Tucker, and Chi Wan. &amp;#34;Technological peer pressure and skill specificity of job postings.&amp;#34; Contemporary Accounting Research 40, no. 3 (2023): 2106-2139.
[4]马双, 肖翰, 李丁, 张鹏. 最低工资与异质性人力资本需求：基于招聘网站数据的研究[J]. 世界经济, 2023, 46 (12): 92-114.
[5]莫怡青, 李力行. 零工经济对创业的影响——以外卖平台的兴起为例[J]. 管理世界, 2022, 38 (02): 31-45+3.
[6]罗楚亮, 刘盼. 公共就业服务机构匹配效率及其地区差异[J]. 管理世界, 2022, 38 (07): 133-147.
[7]刘毓芸, 程宇玮. 重点产业政策与人才需求——来自企业招聘面试的微观证据[J]. 管理世界, 2020, 36 (06): 65-79+245.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;精选内容&#34;&gt;精选内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/datasets_available_for_management_science/&#34;&gt;LIST | 可供社科(经管)领域使用的数据集汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/the_text_analysis_list_about_ms/&#34;&gt;LIST | 社科(经管)数据挖掘文献资料汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/&#34;&gt;推荐 | 文本分析库cntext2.x使用手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-02-14-using-online-large-model-api-to-transform-text-data-into-structured-data/&#34;&gt;教程 | 使用大模型将文本数据转化为结构化数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-03-05-scrape-consumer-complaint-data-with-python/&#34;&gt;爬虫代码 | 使用Python采集黑猫投诉网数据&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-03-05-consumer-complaint-dataset/&#34;&gt;&lt;strong&gt;数据集| 1500w+消费者投诉数据集(2018 ~ 2024.8)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2025-03-06-china-recruitment-dataset-of-listed-companies/&#34;&gt;&lt;strong&gt;数据集 | 上市公司招聘数据(2014~2023)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一应届生招聘数据集">一、应届生招聘数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名:  应届生招聘数据集
数据来源:  招聘网站(如智联招聘、Boss直聘等)
记录数两:  6961787
覆盖日期:  2014-01-17 ~ 2024-12-16
数据格式:  csv
数据体积:  8 G

本文声明: 科研用途; 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><br>
<h3 id="12-字段介绍">1.2 字段介绍</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- company    企业名称
- job        招聘岗位
- city       工作城市
- area       工作区域
- min_sal    最低月薪
- max_sal    最高月薪
- desc       职位描述
- edu        学历要求
- exp        经验要求
- hires      招聘人数
- category   招聘类别
- class      招聘分级
- loc        公司地点
- work_loc   工作地点
- post_date  发布招聘日期
- close_date 结束招聘日期
- source     招聘发布的平台
</code></pre></div><br>
<h3 id="13-本文声明">1.3 本文声明</h3>
<p>科研用途; 如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;应届生招聘数据2014-2024年.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#或  解压得到csv再读取</span>
<span class="c1">#df = pd.read_csv(&#39;应届生招聘数据2014-2024年.csv&#39;)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录条数:&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">记录条数: 6961787
</code></pre></div><p><img loading="lazy" src="img/02-df.jpg" alt=""  />
</p>
<br>
<h3 id="22-覆盖日期">2.2 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;覆盖日期: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;post_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖日期:  2014-01-17 ~ 2024-12-16
</code></pre></div><p><br><br></p>
<h3 id="23-字段缺失程度">2.3 字段缺失程度</h3>
<p>使用 <em><strong>missingno库</strong></em> 可视化数据集的字段缺失程度，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-missingno.png" alt=""  />
</p>
<p>可以看到 <em><strong>classs</strong></em>、 <em><strong>loc</strong></em>、 <em><strong>work_loc</strong></em>  这几个字段缺失较多， 而其余字段缺失程度很轻。</p>
<p><br><br></p>
<h2 id="相关文献">相关文献</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Gao, Janet, Kenneth J. Merkley, Joseph Pacelli, and Joseph H. Schroeder. &#34;Do internal control weaknesses affect firms’ demand for accounting skills? Evidence from US job postings.&#34; The Accounting Review 98, no. 3 (2023): 203-228.
[2]Campello, Murillo, Gaurav Kankanhalli, and Pradeep Muthukrishnan. &#34;Corporate hiring under Covid-19: Financial constraints and the nature of new jobs.&#34; Journal of Financial and Quantitative Analysis 59, no. 4 (2024): 1541-1585.
[3]Cao, Yi, Shijun Cheng, Jennifer Wu Tucker, and Chi Wan. &#34;Technological peer pressure and skill specificity of job postings.&#34; Contemporary Accounting Research 40, no. 3 (2023): 2106-2139.
[4]马双, 肖翰, 李丁, 张鹏. 最低工资与异质性人力资本需求：基于招聘网站数据的研究[J]. 世界经济, 2023, 46 (12): 92-114.
[5]莫怡青, 李力行. 零工经济对创业的影响——以外卖平台的兴起为例[J]. 管理世界, 2022, 38 (02): 31-45+3.
[6]罗楚亮, 刘盼. 公共就业服务机构匹配效率及其地区差异[J]. 管理世界, 2022, 38 (07): 133-147.
[7]刘毓芸, 程宇玮. 重点产业政策与人才需求——来自企业招聘面试的微观证据[J]. 管理世界, 2020, 36 (06): 65-79+245.
</code></pre></div><br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
<li><a href="https://textdata.cn/blog/2025-02-14-using-online-large-model-api-to-transform-text-data-into-structured-data/">教程 | 使用大模型将文本数据转化为结构化数据</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-scrape-consumer-complaint-data-with-python/">爬虫代码 | 使用Python采集黑猫投诉网数据</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-consumer-complaint-dataset/"><strong>数据集| 1500w+消费者投诉数据集(2018 ~ 2024.8)</strong></a></li>
<li><a href="https://textdata.cn/blog/2025-03-06-china-recruitment-dataset-of-listed-companies/"><strong>数据集 | 上市公司招聘数据(2014~2023)</strong></a></li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 消费者金融投诉数据集(2011 ~ 2025.3)</title>
      <link>https://textdata.cn/blog/2025-03-06-consumer-finance-complaints-dataset/</link>
      <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-06-consumer-finance-complaints-dataset/</guid>
      <description>消费者投诉数据集作为一种典型的**另类数据**(如非结构文本数据)，具有多方面重要科研价值，为多学科研究和企业实践提供了新视角与有力支持：1. **丰富另类数据研究**：该数据集为另类数据研究注入新活力。其数据**体量庞大、时效性好、真实性强且颗粒度细**，克服了传统研究依赖小样本数据的局限。通过对消费者投诉数据信息含量和投资价值的挖掘，能从数据类型和应用场景等多维度丰富相关研究文献，推动另类数据在学术领域的深入发展。2. **补充基本面预测研究**：在金融领域，寻找预测基本面的有效指标意义重大。消费者投诉数据集为该研究提供了新方向。以往研究发现消费者投诉对基本面预测有影响，本数据集利用中国数据和更广泛的消费类公司数据进行拓展，并探讨异质性影响，进一步补充了基本面预测影响因素的研究文献。3. **拓展企业口碑研究**：消费者投诉在很大程度上影响企业口碑。以往企业口碑研究多采用小样本实验或问卷调研，缺乏真实世界大数据支持。基于 “黑猫投诉” 平台的千万级别真实数据构建的数据集，能更准确地分析消费者投诉行为，为企业口碑相关研究提供丰富且可靠的数据支撑，拓展该领域研究深度与广度。4. **助力多主体决策研究**：对监管机构而言，可通过分析投诉数据，实现官方与非官方投诉渠道联动，确定监管重点领域，提升监管效能；对金融监管部门，鉴于投诉数据对公司基本面前瞻性预测能力，纳入监测体系有助于防范金融风险，维护金融市场稳定；对上市公司，利用投诉数据能发现经营问题，改进产品和服务，提高消费者满意度与管理水平；对专业投资者，投诉数据可作为投资决策参考，辅助构建投资组合，获取更高收益。这些应用场景为研究不同主体如何利用投诉数据进行科学决策提供了实践依据</description>
      <content:encoded><![CDATA[<h2 id="一消费者金融投诉数据集">一、消费者金融投诉数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集:  消费者金融投诉数据集
数据来源:  https://cfpb.github.io/api/ccdb/
记录数两:  7978798
覆盖日期:  2011-12-01 ~ 2025-03-03
数据格式:  csv
数据体积:  5 G
所含字段:  标题、投诉时间、投诉问题、投诉对象、消费者地址、公司回应等
</code></pre></div><p><img loading="lazy" src="img/01-consumer-complaint-database.png" alt=""  />
</p>
<h3 id="12-字段介绍">1.2 字段介绍</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- Date_Received       收到投诉的日期
- Product             投诉的金融产品或服务类型(信用报告、债务催收、抵押贷款等)
- Sub_Product         投诉的子产品(更具体的类别)
- Issue               投诉问题或原因
- Sub_Iissue          投诉子问题(进一步详细说明问题)
- Complaint_Narrative 投诉内容(自由格式文本)
- Comp_Public_Resp    公司针对消费者投诉提供的公开回应
- Company             投诉公司名称
- State               消费者居住地
- Zip                 消费者的所在地邮政编码
- Tags                与投诉相关的额外标签或分类
- Consent_Provided    消费者是否同意其投诉信息被收集、处理或公开。
- Submitted_Via       投诉渠道（例如，网络、转介）
- Date_Sent_to_Comp   投诉转交给公司的日期
- Comp_Resp_to_Cons   公司对消费者的投诉的回应。
- Timely_Resp         及时响应，表明该公司是否及时回应了投诉。
- Disputed            消费者异议；表明消费者是否对公司的回应提出了异议
- Complaint_ID        投诉ID
</code></pre></div><br>
<h3 id="13-获取数据">1.3 获取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">-  https://files.consumerfinance.gov/ccdb/complaints.csv.zip
-  备用链接: https://pan.baidu.com/s/1uvhi-waLwAM8yOPzktBnzQ?pwd=kwng 提取码: kwng
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;consumer_finance_complaints.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#或  解压得到csv再读取</span>
<span class="c1">#df = pd.read_csv(&#39;consumer_finance_complaints.csv&#39;)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录条数:&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">记录条数: 7978798
</code></pre></div><p><img loading="lazy" src="img/02-df.jpg" alt=""  />
</p>
<br>
<h3 id="22-覆盖日期">2.2 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;Date_Received&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;Date_Received&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;覆盖日期:&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;Date_Received&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;Date_Received&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖日期: 2011-12-01 ~ 2025-03-03
</code></pre></div><p><br><br></p>
<h3 id="23-字段缺失程度">2.3 字段缺失程度</h3>
<p>使用 <em><strong>missingno库</strong></em> 可视化数据集的字段缺失程度，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>
<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-missingno.png" alt=""  />
</p>
<p>可以看到 <em><strong>Complaint_Narrative</strong></em>、 <em><strong>Comp_Public_Resp</strong></em>、 <em><strong>Tags</strong></em>、 <em><strong>Consent_provided</strong></em>、 <em><strong>Disputed</strong></em>  这几个字段缺失较多， 而其余字段缺失程度很轻甚至没有。</p>
<p><br><br></p>
<h2 id="三获取数据">三、获取数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">-  https://files.consumerfinance.gov/ccdb/complaints.csv.zip
-  备用链接: https://pan.baidu.com/s/1uvhi-waLwAM8yOPzktBnzQ?pwd=kwng 提取码: kwng
</code></pre></div><br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
<li><a href="https://textdata.cn/blog/2025-02-14-using-online-large-model-api-to-transform-text-data-into-structured-data/">教程 | 使用大模型将文本数据转化为结构化数据</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-scrape-consumer-complaint-data-with-python/">爬虫代码 | 使用Python采集黑猫投诉网数据</a></li>
<li><a href="https://textdata.cn/blog/2025-03-05-consumer-complaint-dataset/"><strong>数据集| 1500w+消费者投诉数据集(2018 ~ 2024.8)</strong></a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 纽约时报新闻数据集(2000~2025.3.1)</title>
      <link>https://textdata.cn/blog/2025-03-05-nytimes-news-dataset-from-2000-to-2025/</link>
      <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-05-nytimes-news-dataset-from-2000-to-2025/</guid>
      <description>媒体数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<p>今日分享一个数据集 <a href="https://www.nytimes.com/"><em><strong>纽约时报 nytimes.com</strong></em></a>，该网站在墙内可正常访问。</p>
<p><img loading="lazy" src="img/01-nytimes-cover2025.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="一纽约时报新闻数据集">一、纽约时报新闻数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集:  纽约时报新闻数据集(2000~2025.3.1)
数据来源:  https://www.nytimes.com/
采集方式:  API（https://developer.nytimes.com/apis)
使用语言:  英文
记录数两:  293326
覆盖日期: 2000-01-01~2025.3.1
数据格式: csv
数据体积: 1.75 G
所含字段: title, pub_date, section, subsection, author, abstract, 
         lead_paragraph, keywords, img_url, web_url

本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><br>
<h3 id="12-数据用途">1.2 数据用途</h3>
<p>可提取丰富的指标，包括但不限于 **经济政策不确定性指数 **、<strong>环境政策不确定性</strong>、 <strong>媒体关注度指数</strong>、<strong>文本相似度</strong>、<strong>情感分析</strong>。此外， 可训练词向量，开发新的概念词典。数据带时间， 参照前面指标， 依主体、日期、指标进行计算， 可构造面板数据，构建新的指标指数。因此在经济学、管理学、新闻传播学、公共管理、社会学等领域均有较高的研究价值。</p>
<p>相关参考文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]洪永淼,刘俸奇,薛涧坡.政府与市场心理因素的经济影响及其测度[J].管理世界,2023,39(03):30-51.
[2]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[3]张一帆,林建浩,樊嘉诚.新闻文本大数据与消费增速实时预测——基于叙事经济学的视角[J].金融研究,2023,(05):152-169.
[4]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[5]欧阳资生,陈世丽,杨希特,刘凤根,周学伟.经济政策不确定性、网络舆情与金融机构系统性风险[J].管理科学学报,2023,26(04):62-86.
[6]逯东,宋昕倍.媒体报道、上市公司年报可读性与融资约束[J].管理科学学报,2021,24(12):45-61.
[7]彭涛,黄福广,孙凌霞.经济政策不确定性与风险承担:基于风险投资的证据[J].管理科学学报,2021,24(03):98-114.
[8]庞锐.采纳与内化：多重制度压力如何影响河长制创新扩散——基于省级政府的定向配对事件史分析[J].公共管理学报,2023,20(02):25-37+165-166.
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;纽约时报新闻数据集.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#或  解压得到csv再读取</span>
<span class="c1">#df = pd.read_csv(&#39;纽约时报新闻数据集.csv&#39;)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录条数:&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">记录条数: 2191515
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h3 id="22-所含字段">2.2 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - title               标题
 - pub_date            文章发布日期
 - section             栏目(如运动、观点、纽约、世界、美国等)
 - subsection          二级栏目(如运动、观点、纽约、世界、美国等)
 - author              作者 
 - abstract            摘要
 - lead_paragraph      文章导语
 - keywords            关键词
 - img_url             图片链接
 - web_url             文章原文链接
</code></pre></div><br>
<h3 id="23-覆盖日期">2.3 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;覆盖日期:&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span> <span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖日期: 2000-01-01 05:00:00+00:00 ~ 2025-03-01 00:39:55+00:00
</code></pre></div><p><br><br></p>
<h3 id="三可视化">三、可视化</h3>
<h3 id="31-字段缺失情况">3.1 字段缺失情况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-nan.png" alt=""  />
</p>
<p>从上图可以看出 <em><strong>subsection</strong></em>、  <em><strong>img_url</strong></em> 这两个字段存在较为严重的缺失， <em><strong>author</strong></em> 、 <em><strong>keywords</strong></em>、 <em><strong>abstract</strong></em>、<em><strong>lead_paragraph</strong></em> 存在轻微的缺失情况。</p>
<br>
<h3 id="31-按年度统计发文量">3.1 按年度，统计发文量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 


<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">])</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;pub_date&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">y_df</span> <span class="ow">in</span> <span class="n">df2</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">freq</span><span class="o">=</span><span class="s1">&#39;YE&#39;</span><span class="p">)):</span>
    <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y_df</span><span class="p">))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">2026</span><span class="p">),</span> 
                     <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">})</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;纽约时报nytimes新闻年度发文量(2000-2025.3.1)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;发文量(条)&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span> <span class="mi">2026</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-vis.png" alt=""  />
</p>
<br>
<br>
<h2 id="相关内容">相关内容</h2>
<ul>
<li>
<p><a href="**https://textdata.cn/blog/2024-07-12-china-daily-dataset/**">数据集(中英) | ChinaDaily新闻数据集(2008 ~ 2024)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/">数据集 | 企业家Entrepreneur杂志数据集(1996 ~ 2024)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></p>
</li>
</ul>
<br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></p>
</li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 1500w&#43;消费者投诉数据集(2018 ~ 2024.8)</title>
      <link>https://textdata.cn/blog/2025-03-05-consumer-complaint-dataset/</link>
      <pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-05-consumer-complaint-dataset/</guid>
      <description>消费者投诉数据集作为一种典型的**另类数据**(如非结构文本数据)，具有多方面重要科研价值，为多学科研究和企业实践提供了新视角与有力支持：1. **丰富另类数据研究**：该数据集为另类数据研究注入新活力。其数据**体量庞大、时效性好、真实性强且颗粒度细**，克服了传统研究依赖小样本数据的局限。通过对消费者投诉数据信息含量和投资价值的挖掘，能从数据类型和应用场景等多维度丰富相关研究文献，推动另类数据在学术领域的深入发展。2. **补充基本面预测研究**：在金融领域，寻找预测基本面的有效指标意义重大。消费者投诉数据集为该研究提供了新方向。以往研究发现消费者投诉对基本面预测有影响，本数据集利用中国数据和更广泛的消费类公司数据进行拓展，并探讨异质性影响，进一步补充了基本面预测影响因素的研究文献。3. **拓展企业口碑研究**：消费者投诉在很大程度上影响企业口碑。以往企业口碑研究多采用小样本实验或问卷调研，缺乏真实世界大数据支持。基于 “黑猫投诉” 平台的千万级别真实数据构建的数据集，能更准确地分析消费者投诉行为，为企业口碑相关研究提供丰富且可靠的数据支撑，拓展该领域研究深度与广度。4. **助力多主体决策研究**：对监管机构而言，可通过分析投诉数据，实现官方与非官方投诉渠道联动，确定监管重点领域，提升监管效能；对金融监管部门，鉴于投诉数据对公司基本面前瞻性预测能力，纳入监测体系有助于防范金融风险，维护金融市场稳定；对上市公司，利用投诉数据能发现经营问题，改进产品和服务，提高消费者满意度与管理水平；对专业投资者，投诉数据可作为投资决策参考，辅助构建投资组合，获取更高收益。这些应用场景为研究不同主体如何利用投诉数据进行科学决策提供了实践依据</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="img/01-tousu.jpg" alt=""  />
</p>
<h2 id="一消费者投诉数据集">一、消费者投诉数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集:  消费者投诉数据集
数据来源:  https://tousu.sina.com.cn/
记录数两:  15314398
覆盖日期:  2018-01-25 ~ 2024-08-26
数据格式:  csv
数据体积:  3.6 G
所含字段:  标题、投诉时间、投诉问题、投诉要求、涉诉金额、投诉对象、使用服务、链接、投诉进度、进度时间
本文声明: 科研用途； 如有问题， 加微信 372335839， 备注「姓名-学校-专业-消费者投诉」
</code></pre></div><br>
<h3 id="12-使用价值">1.2 使用价值</h3>
<p>蔡卫星, 蒲雨琦, 李浩民. 顾客至上：消费者在线投诉的基本面预测能力研究[J]. 管理世界, 2024, 40 (05): 139-154.</p>
<p>消费者投诉数据集作为一种典型的<strong>另类数据</strong>(如非结构文本数据)，具有多方面重要科研价值，为多学科研究和企业实践提供了新视角与有力支持：</p>
<ol>
<li><strong>丰富另类数据研究</strong>：该数据集为另类数据研究注入新活力。其数据<strong>体量庞大、时效性好、真实性强且颗粒度细</strong>，克服了传统研究依赖小样本数据的局限。通过对消费者投诉数据信息含量和投资价值的挖掘，能从数据类型和应用场景等多维度丰富相关研究文献，推动另类数据在学术领域的深入发展。</li>
<li><strong>补充基本面预测研究</strong>：在金融领域，寻找预测基本面的有效指标意义重大。消费者投诉数据集为该研究提供了新方向。以往研究发现消费者投诉对基本面预测有影响，本数据集利用中国数据和更广泛的消费类公司数据进行拓展，并探讨异质性影响，进一步补充了基本面预测影响因素的研究文献。</li>
<li><strong>拓展企业口碑研究</strong>：消费者投诉在很大程度上影响企业口碑。以往企业口碑研究多采用小样本实验或问卷调研，缺乏真实世界大数据支持。基于 “黑猫投诉” 平台的千万级别真实数据构建的数据集，能更准确地分析消费者投诉行为，为企业口碑相关研究提供丰富且可靠的数据支撑，拓展该领域研究深度与广度。</li>
<li><strong>助力多主体决策研究</strong>：对监管机构而言，可通过分析投诉数据，实现官方与非官方投诉渠道联动，确定监管重点领域，提升监管效能；对金融监管部门，鉴于投诉数据对公司基本面前瞻性预测能力，纳入监测体系有助于防范金融风险，维护金融市场稳定；对上市公司，利用投诉数据能发现经营问题，改进产品和服务，提高消费者满意度与管理水平；对专业投资者，投诉数据可作为投资决策参考，辅助构建投资组合，获取更高收益。这些应用场景为研究不同主体如何利用投诉数据进行科学决策提供了实践依据</li>
</ol>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;消费者黑猫投诉数据.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#或  解压得到csv再读取</span>
<span class="c1">#df = pd.read_csv(&#39;消费者黑猫投诉数据.csv&#39;)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录条数:&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">记录条数: 15314398
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h3 id="22-所含字段">2.2 所含字段</h3>
<p><img loading="lazy" src="img/03-field.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - 标题
 - 投诉时间
 - 投诉问题
 - 投诉要求
 - 涉诉金额
 - 投诉对象
 - 使用服务
 - 链接
 - 投诉进度
 - 进度时间(当前投诉进度时对应的时间)
</code></pre></div><br>
<h3 id="23-覆盖日期">2.3 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;投诉时间&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;投诉时间&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;进度时间&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;进度时间&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;投诉时间: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;投诉时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span>  <span class="s1">&#39;~ &#39;</span><span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;投诉时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;进度时间: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;进度时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span>  <span class="s1">&#39;~ &#39;</span><span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;进度时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">投诉时间:  2018-01-25 09:18:00 ~  2024-08-26 09:54:00
进度时间:  2018-01-26 09:18:33 ~  2024-11-12 13:00:21
</code></pre></div><br>
<h3 id="24-筛选企业">2.4 筛选企业</h3>
<p>假设你对「拼多多」感兴趣， 想筛选出涉及「拼多多」的所有投诉信息</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">selected_company</span> <span class="o">=</span> <span class="s1">&#39;拼多多&#39;</span>
<span class="n">mask1</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;投诉对象&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">selected_company</span><span class="p">)</span>
<span class="n">mask2</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;使用服务&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">selected_company</span><span class="p">)</span>

<span class="n">selected_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">mask1</span> <span class="o">|</span> <span class="n">mask2</span><span class="p">]</span>
<span class="n">selected_df</span>
</code></pre></div><p><img loading="lazy" src="img/04-pinduoduo.jpg" alt=""  />
</p>
<br>
<br>
<h2 id="三可视化">三、可视化</h2>
<h3 id="31-字段缺失率">3.1 字段缺失率</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="c1"># 根据操作系统设置字体</span>
<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s1">&#39;font.family&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;SimHei&#39;</span> <span class="k">if</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span> <span class="k">else</span> <span class="s1">&#39;Arial Unicode MS&#39;</span> <span class="k">if</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span> <span class="k">else</span> <span class="s1">&#39;sans-serif&#39;</span>
<span class="n">plt</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s1">&#39;axes.unicode_minus&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>  <span class="c1"># 解决负号显示问题</span>

<span class="c1"># 绘制缺失值矩阵图</span>
<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="c1"># 显示图表</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/06-nan.png" alt=""  />
</p>
<p>只有字段 <em><strong>使用服务</strong></em> 有较为严重的缺失情况，其余字段无明显缺失情况。</p>
<br>
<h3 id="32-年度投诉量">3.2 年度投诉量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 


<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;投诉时间&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;投诉时间&#39;</span><span class="p">])</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;投诉时间&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">y_df</span> <span class="ow">in</span> <span class="n">df2</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">freq</span><span class="o">=</span><span class="s1">&#39;YE&#39;</span><span class="p">)):</span>
    <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y_df</span><span class="p">))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span> <span class="mi">2025</span><span class="p">),</span> 
                     <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">})</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;黑猫投诉年度投诉量(2000-2024)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;投诉量(条)&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span> <span class="mi">2025</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-vis.png" alt=""  />
</p>
<br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2025-02-14-using-online-large-model-api-to-transform-text-data-into-structured-data/">教程 | 使用大模型将文本数据转化为结构化数据</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2025-03-05-scrape-consumer-complaint-data-with-python/">爬虫代码 | 使用Python采集黑猫投诉网数据</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2025-03-06-consumer-finance-complaints-dataset/"><strong>数据集| 消费者金融投诉数据集(2011 ~ 2025.3)</strong></a></p>
</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集| NOS.nl荷兰新闻数据集(2015~2025.2.28)</title>
      <link>https://textdata.cn/blog/2025-03-05-netherlands-daily-news-dataset-from-2015-to-2025/</link>
      <pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-05-netherlands-daily-news-dataset-from-2015-to-2025/</guid>
      <description>媒体数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<p>今日分享一个数据集「<a href="https://nos.nl/">NOS.nl</a>」，该网站需通过科学地方式连网访问。</p>
<p><em><strong>NOS.nl</strong></em> 是荷兰公共广播组织（Nederlandse Omroep Stichting）的官方新闻网站，提供涵盖荷兰本土及全球的综合性新闻报道‌1。该网站以新闻时效性和深度分析为核心，内容涉及政治、经济、体育、文化等多个领域，并通过文字报道、实时更新及多媒体内容满足用户需求‌。</p>
<p><br><br></p>
<h2 id="一nosnl新闻数据集">一、NOS.nl新闻数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集:  NOS.nl新闻数据集
数据来源:  https://nos.nl/
使用语言: 荷兰文
记录数两:  293326
覆盖日期: 2015-01-01 ~2025-02-28
数据格式: csv
数据体积: 886 M
所含字段: channel, url, type, title, keywords, section, description,
       published_time, modified_time, image, content

本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><br>
<h3 id="12-数据用途">1.2 数据用途</h3>
<p>可提取丰富的指标，包括但不限于 **经济政策不确定性指数 **、<strong>环境政策不确定性</strong>、 <strong>媒体关注度指数</strong>、<strong>文本相似度</strong>、<strong>情感分析</strong>。此外， 可训练词向量，开发新的概念词典。数据带时间， 参照前面指标， 依主体、日期、指标进行计算， 可构造面板数据，构建新的指标指数。因此在经济学、管理学、新闻传播学、公共管理、社会学等领域均有较高的研究价值。</p>
<p>相关参考文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]洪永淼,刘俸奇,薛涧坡.政府与市场心理因素的经济影响及其测度[J].管理世界,2023,39(03):30-51.
[2]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[3]张一帆,林建浩,樊嘉诚.新闻文本大数据与消费增速实时预测——基于叙事经济学的视角[J].金融研究,2023,(05):152-169.
[4]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[5]欧阳资生,陈世丽,杨希特,刘凤根,周学伟.经济政策不确定性、网络舆情与金融机构系统性风险[J].管理科学学报,2023,26(04):62-86.
[6]逯东,宋昕倍.媒体报道、上市公司年报可读性与融资约束[J].管理科学学报,2021,24(12):45-61.
[7]彭涛,黄福广,孙凌霞.经济政策不确定性与风险承担:基于风险投资的证据[J].管理科学学报,2021,24(03):98-114.
[8]庞锐.采纳与内化：多重制度压力如何影响河长制创新扩散——基于省级政府的定向配对事件史分析[J].公共管理学报,2023,20(02):25-37+165-166.
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;NOL荷兰新闻数据集.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#或  解压得到csv再读取</span>
<span class="c1">#df = pd.read_csv(&#39;NOL荷兰新闻数据集.csv&#39;)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;记录条数:&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">记录条数: 293326
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h3 id="22-所含字段">2.2 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- channel        频道 [两个不同的频道：nos, nieuwsuur]
- url            文章链接[NOS.nl 网站]
- type           文章类型 [2 种类型： article, liveblog]
- title          文章的标题
- keywords       关键词 [例如：moord谋杀，liquidatie暗杀，afrekening清算]
- section        例如：体育sports, 经济economie
- description    描述 [文章内容的简要概述]
- published_time 发布日期 [格式: 2024-10-31 23:00:42]
- modified_time  修改日期 [格式: 2024-10-31 23:00:42]
- image          图片链接
- content        原文html内容
</code></pre></div><br>
<h3 id="23-覆盖日期">2.3 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;published_time&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;published_time&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;覆盖日期:&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;published_time&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span> <span class="p">,</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;published_time&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">覆盖日期: 2015-01-01 00:32:52 ~ 2025-02-28 23:34:07
</code></pre></div><br>
<h3 id="三可视化">三、可视化</h3>
<h3 id="31-字段缺失情况">3.1 字段缺失情况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-nan.png" alt=""  />
</p>
<p>该数据集只有 <em><strong>keywords</strong></em>、 <em><strong>section</strong></em>、<em><strong>image</strong></em> 存在轻微的字段缺失情况。</p>
<br>
<h3 id="32-按年度统计发文量">3.2 按年度，统计发文量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 


<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;published_time&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;published_time&#39;</span><span class="p">])</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;published_time&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">y_df</span> <span class="ow">in</span> <span class="n">df2</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">freq</span><span class="o">=</span><span class="s1">&#39;YE&#39;</span><span class="p">)):</span>
    <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y_df</span><span class="p">))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2015</span><span class="p">,</span> <span class="mi">2026</span><span class="p">),</span> 
                     <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">})</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;荷兰NOS.nl新闻年度发文量(2015-2025.2.28)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;发文量(条)&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2015</span><span class="p">,</span> <span class="mi">2026</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-vis.png" alt=""  />
</p>
<br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></p>
</li>
<li>
<p><a href="**https://textdata.cn/blog/2024-07-12-china-daily-dataset/**">数据集(中英) | ChinaDaily新闻数据集(2008 ~ 2024)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/">数据集 | 企业家Entrepreneur杂志数据集(1996 ~ 2024)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></p>
</li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 4628w条全球手机蜂窝基站数据(2006~2024.5)</title>
      <link>https://textdata.cn/blog/2025-03-03-global-cell-towers-dataset/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-03-global-cell-towers-dataset/</guid>
      <description>&lt;h2 id=&#34;一数据集介绍&#34;&gt;一、数据集介绍&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据名称: 全球蜂窝基站数据集
数据格式: csv
记录数量: 46280562
覆盖年度: 2006 ~ 2024
使用方法: 可探索全球基站位置的分布与特征，分析网络覆盖模式，并调查基站更新的时间趋势。
数据来源: OpenCelliD
本文声明: 科研用途； 如有问题，请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;所含字段&#34;&gt;所含字段&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Radio&lt;/strong&gt;：宽带蜂窝网络技术的代际（例如，LTE，GSM）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MCC&lt;/strong&gt;：移动国家代码，是每个国家在移动网络中的唯一标识符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MNC&lt;/strong&gt;：移动网络代码，在一个国家内识别移动网络。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LAC&lt;/strong&gt;：位置区域代码、跟踪区域代码或网络标识符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CID&lt;/strong&gt;：每个基站收发器（BTS）或扇区的唯一标识符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Longitude&lt;/strong&gt;：指定东西方向位置的地理坐标。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Latitude&lt;/strong&gt;：指定南北方向位置的地理坐标。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Range&lt;/strong&gt;：大约的覆盖范围，表示基站覆盖延伸的区域（以米为单位）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Samples&lt;/strong&gt;：为了导出该数据点而处理的测量数量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Changeable&lt;/strong&gt;：指示基站位置是否通过样本处理确定（1），或是直接从电信公司获取（0）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Created&lt;/strong&gt;：表示基站首次添加到数据库的时间戳（UNIX格式）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Updated&lt;/strong&gt;：表示基站最后被观察或更新到数据库的时间戳（UNIX格式）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AverageSignal&lt;/strong&gt;：表示基站位置的平均信号强度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Country&lt;/strong&gt;：基站所在的国家(或地区)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Network&lt;/strong&gt;：拥有基站的公司。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continent&lt;/strong&gt;：基站所在的大陆。&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;全球蜂窝基站(更新至2024-05).csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#或将gz文件解压得到csv文件，再读取&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df = pd.read_csv(&amp;#39;全球蜂窝基站(更新至2024-05).csv&amp;#39;, compression=&amp;#39;gzip&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;created&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;updated&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;updated&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-字段缺失程度&#34;&gt;2.2 字段缺失程度&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;missingno&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ms&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ms&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;matrix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-nan.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;从图中可以看出，本数据集每个字段对应的条形图都是很饱满的黑色， 基本上不存在明显的缺失情况。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-各大陆蜂窝基站数量&#34;&gt;2.3 各大陆蜂窝基站数量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Continent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value_counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Continent
Europe           17119424
Asia             13375989
North America     9541565
South America     3150035
Africa            2346316
Oceania            747233
Name: count, dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;24-覆盖时间&#34;&gt;2.4 覆盖时间&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;基站设立时间: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;基站更新时间: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;updated&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;~&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;updated&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;基站设立时间范围:  1970-01-01 00:00:00 ~ 2024-05-09 23:57:18
基站更新时间范围:  1970-01-01 18:33:27 ~ 2024-05-09 23:59:02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意:  时间范围虽然很广，但1970~2006之间是极其稀疏的， 绝大多数记录是落在2006-2024。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;25-筛选指定国家地区&#34;&gt;2.5 筛选指定国家(地区)&lt;/h3&gt;
&lt;p&gt;将中国的基站数据筛选&amp;amp;保存到新文件中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#筛选含中国的站点数据&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Country&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;China&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#保存&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;中国手机蜂窝基站数据.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;三可视化&#34;&gt;三、可视化&lt;/h2&gt;
&lt;h3 id=&#34;31-全球年度建站&#34;&gt;3.1 全球年度建站&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plotnine&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.font_manager&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#文泉驿微米黑.ttf位于代码同文件夹&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;文泉驿微米黑.ttf&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 

&lt;span class=&#34;n&#34;&gt;years&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;deep&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Grouper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;freq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;YE&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2006&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;years&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;years&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                     &lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;


&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;labs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;全球蜂窝基站年度建站数(2006-2024)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;基站数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 添加数据标签&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# 垂直对齐方式为底部（即在柱子顶部）&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;# 设置字体大小&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;format_string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;# 格式化字符串&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
           &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; 
           &lt;span class=&#34;n&#34;&gt;plot_title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scale_x_continuous&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;breaks&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2006&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2025&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 

&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-global.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;32-中国年度建站&#34;&gt;3.2 中国年度建站&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plotnine&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.font_manager&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#文泉驿微米黑.ttf位于代码同文件夹&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;文泉驿微米黑.ttf&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 

&lt;span class=&#34;n&#34;&gt;years&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#筛选中国&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Country&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;China&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;updated&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;china_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Grouper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;freq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;YE&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2006&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;years&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;years&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                     &lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;


&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;labs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;中国蜂窝基站年度建站数（2006-2024）&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;基站数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 添加数据标签&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# 垂直对齐方式为底部（即在柱子顶部）&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;# 设置字体大小&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;format_string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;# 格式化字符串&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
           &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; 
           &lt;span class=&#34;n&#34;&gt;plot_title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scale_x_continuous&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;breaks&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2006&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2025&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 

&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-china.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集介绍">一、数据集介绍</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据名称: 全球蜂窝基站数据集
数据格式: csv
记录数量: 46280562
覆盖年度: 2006 ~ 2024
使用方法: 可探索全球基站位置的分布与特征，分析网络覆盖模式，并调查基站更新的时间趋势。
数据来源: OpenCelliD
本文声明: 科研用途； 如有问题，请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><br>
<h3 id="所含字段">所含字段</h3>
<ul>
<li><strong>Radio</strong>：宽带蜂窝网络技术的代际（例如，LTE，GSM）。</li>
<li><strong>MCC</strong>：移动国家代码，是每个国家在移动网络中的唯一标识符。</li>
<li><strong>MNC</strong>：移动网络代码，在一个国家内识别移动网络。</li>
<li><strong>LAC</strong>：位置区域代码、跟踪区域代码或网络标识符。</li>
<li><strong>CID</strong>：每个基站收发器（BTS）或扇区的唯一标识符。</li>
<li><strong>Longitude</strong>：指定东西方向位置的地理坐标。</li>
<li><strong>Latitude</strong>：指定南北方向位置的地理坐标。</li>
<li><strong>Range</strong>：大约的覆盖范围，表示基站覆盖延伸的区域（以米为单位）。</li>
<li><strong>Samples</strong>：为了导出该数据点而处理的测量数量。</li>
<li><strong>Changeable</strong>：指示基站位置是否通过样本处理确定（1），或是直接从电信公司获取（0）。</li>
<li><strong>Created</strong>：表示基站首次添加到数据库的时间戳（UNIX格式）。</li>
<li><strong>Updated</strong>：表示基站最后被观察或更新到数据库的时间戳（UNIX格式）。</li>
<li><strong>AverageSignal</strong>：表示基站位置的平均信号强度。</li>
<li><strong>Country</strong>：基站所在的国家(或地区)。</li>
<li><strong>Network</strong>：拥有基站的公司。</li>
<li><strong>Continent</strong>：基站所在的大陆。</li>
</ul>
<br>
<br>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;全球蜂窝基站(更新至2024-05).csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#或将gz文件解压得到csv文件，再读取</span>
<span class="c1">#df = pd.read_csv(&#39;全球蜂窝基站(更新至2024-05).csv&#39;, compression=&#39;gzip&#39;)</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">created</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;updated&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">updated</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h3 id="22-字段缺失程度">2.2 字段缺失程度</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-nan.png" alt=""  />
</p>
<p>从图中可以看出，本数据集每个字段对应的条形图都是很饱满的黑色， 基本上不存在明显的缺失情况。</p>
<br>
<h3 id="23-各大陆蜂窝基站数量">2.3 各大陆蜂窝基站数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">Continent</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Continent
Europe           17119424
Asia             13375989
North America     9541565
South America     3150035
Africa            2346316
Oceania            747233
Name: count, dtype: int64
</code></pre></div><br>
<h3 id="24-覆盖时间">2.4 覆盖时间</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;基站设立时间: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;基站更新时间: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;updated&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> <span class="s1">&#39;~&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;updated&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">基站设立时间范围:  1970-01-01 00:00:00 ~ 2024-05-09 23:57:18
基站更新时间范围:  1970-01-01 18:33:27 ~ 2024-05-09 23:59:02
</code></pre></div><p>注意:  时间范围虽然很广，但1970~2006之间是极其稀疏的， 绝大多数记录是落在2006-2024。</p>
<br>
<h3 id="25-筛选指定国家地区">2.5 筛选指定国家(地区)</h3>
<p>将中国的基站数据筛选&amp;保存到新文件中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#筛选含中国的站点数据</span>
<span class="n">china_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">Country</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;China&#39;</span><span class="p">)]</span>

<span class="c1">#保存</span>
<span class="n">china_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;中国手机蜂窝基站数据.csv.gz&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">china_df</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<br>
<h2 id="三可视化">三、可视化</h2>
<h3 id="31-全球年度建站">3.1 全球年度建站</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">years</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">copy</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">df2</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;created&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">y_df</span> <span class="ow">in</span> <span class="n">df2</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">freq</span><span class="o">=</span><span class="s1">&#39;YE&#39;</span><span class="p">)):</span>
    <span class="k">if</span> <span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="o">&gt;=</span><span class="mi">2006</span><span class="p">:</span>
        <span class="n">years</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="p">)</span>
        <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y_df</span><span class="p">))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="n">years</span><span class="p">,</span> 
                     <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">})</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;全球蜂窝基站年度建站数(2006-2024)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;基站数量&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2006</span><span class="p">,</span> <span class="mi">2025</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-global.png" alt=""  />
</p>
<br>
<h3 id="32-中国年度建站">3.2 中国年度建站</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">years</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="c1">#筛选中国</span>
<span class="n">china_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">Country</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;China&#39;</span><span class="p">)]</span>
<span class="n">china_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;updated&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">y_df</span> <span class="ow">in</span> <span class="n">china_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">freq</span><span class="o">=</span><span class="s1">&#39;YE&#39;</span><span class="p">)):</span>
    <span class="k">if</span> <span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="o">&gt;=</span><span class="mi">2006</span><span class="p">:</span>
        <span class="n">years</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="p">)</span>
        <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y_df</span><span class="p">))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="n">years</span><span class="p">,</span> 
                     <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">})</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;中国蜂窝基站年度建站数（2006-2024）&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;基站数量&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2006</span><span class="p">,</span> <span class="mi">2025</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-china.png" alt=""  />
</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 536w条「上证e互动、深证互动易」问答记录(2011-2024.12.31)</title>
      <link>https://textdata.cn/blog/2025-03-03-china-share-market-interaction-platform-dataset/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-03-03-china-share-market-interaction-platform-dataset/</guid>
      <description>「上证e互动、深证互动易」问答记录数据集是研究中国资本市场信息披露、投资者关系管理及市场行为的重要非结构化数据源。</description>
      <content:encoded><![CDATA[<h2 id="一数据集介绍">一、数据集介绍</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">「上证e互动、深证互动易」问答记录

覆盖日期: 2009-04-09 ~ 2024-12-31

数据来源: 上证e互动、深证互动易

数据格式: csv

企业数: 5344

记录条数: 5364719

所含字段:
 -  symbol 股票代码
 -  shortName 公司简称
 -  indexId 网址ID(供爬虫使用)
 -  question 提问内容
 -  questionDate 提问时间
 -  authorName 提问者昵称
 -  authorCode 提问者ID
 -  answer 回答内容
 -  answerDate 回答时间
  
本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-irm.cninfo.com.cn.png" alt=""  />
</p>
<p><img loading="lazy" src="img/02-sns.sseinfo.com.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;互动平台问答文本.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/03-df1.png" alt=""  />
</p>
<br>
<h3 id="22-数据量">2.2 数据量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    5364719
</code></pre></div><br>
<h3 id="23-企业数">2.3 企业数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#企业数</span>
<span class="n">df</span><span class="o">.</span><span class="n">symbol</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">5344
</code></pre></div><br>
<br>
<h2 id="三可视化">三、可视化</h2>
<h3 id="31-字段缺失情况">3.1 字段缺失情况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">missingno</span> <span class="k">as</span> <span class="nn">ms</span>

<span class="n">ms</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-nan.png" alt=""  />
</p>
<p>所有字段均是饱满的黑柱， 看不到条纹。 因此该数据集字段不存在明显的数据缺失情况。</p>
<br>
<h3 id="32-按年度显示问答记录量条数">3.2 按年度显示问答记录量(条数)</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 


<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;questionDate&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;questionDate&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;questionDate&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">y_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">freq</span><span class="o">=</span><span class="s1">&#39;YE&#39;</span><span class="p">)):</span>
    <span class="n">years</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="p">)</span>
    <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y_df</span><span class="p">))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2009</span><span class="p">,</span> <span class="mi">2025</span><span class="p">),</span> 
                     <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">})</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;上证e互动、深证互动易年度问答记录量(2009-2024)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;记录量(条)&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2009</span><span class="p">,</span> <span class="mi">2025</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-vis.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="相关文献">相关文献</h2>
<p>丁慧, 吕长江, 陈运佳. 投资者信息能力:意见分歧与股价崩盘风险——来自社交媒体“上证e互动”的证据[J]. 管理世界, 2018, 34 (09): 161-171.</p>
<p>丁慧, 吕长江, 黄海杰. 社交媒体、投资者信息获取和解读能力与盈余预期——来自“上证e互动”平台的证据[J]. 经济研究, 2018, 53 (01): 153-168.</p>
<p>高敬忠, 杨朝, 彭正银. 网络平台互动能够缓解企业融资约束吗——来自交易所互动平台问答的证据[J]. 会计研究, 2021, (06): 59-75.</p>
<p>卞世博, 陈曜, 汪训孝. 高质量的互动可以提高股票市场定价效率吗?——基于“上证e互动”的研究[J]. 经济学(季刊), 2022, 22 (03): 749-772.</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 1998-2023年中国基金年度报告</title>
      <link>https://textdata.cn/blog/2025-02-25-china-fund-annual-report-dataset/</link>
      <pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>/blog/2025-02-25-china-fund-annual-report-dataset/</guid>
      <description>&lt;h2 id=&#34;一数据集介绍&#34;&gt;一、数据集介绍&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集名称: 中国基金年度报告数据集
基金数量: 12113
会计年度: 1998 ~ 2023
数据源: http://eid.csrc.gov.cn/fund/disclose/index.html
数据格式: pdf、csv(46196个pdf汇总到一个csv中)
获取: 1000元；如购买，请加微信 372335839，  备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-choose.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;字段&#34;&gt;字段&lt;/h3&gt;
&lt;p&gt;1998 ~ 2023年基金年报的字段有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;会计年度year&lt;/li&gt;
&lt;li&gt;代码code&lt;/li&gt;
&lt;li&gt;基金简称name&lt;/li&gt;
&lt;li&gt;基金年度报告文本text&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二读取数据&#34;&gt;二、读取数据&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;基金年报.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;三可视化&#34;&gt;三、可视化&lt;/h2&gt;
&lt;p&gt;基金数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;12113
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plotnine&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.font_manager&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#文泉驿微米黑.ttf位于代码同文件夹&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;文泉驿微米黑.ttf&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 

&lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1998&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;record_num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;record_num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;year&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1998&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;volume&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;labs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;中国基金年度报告数量(1998-2024.6)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;报告数&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 添加数据标签&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# 垂直对齐方式为底部（即在柱子顶部）&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;# 设置字体大小&lt;/span&gt;
               &lt;span class=&#34;n&#34;&gt;format_string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;# 格式化字符串&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
           &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; 
           &lt;span class=&#34;n&#34;&gt;plot_title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scale_x_continuous&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;breaks&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1998&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 

&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四获取&#34;&gt;四、获取&lt;/h2&gt;
&lt;p&gt;1000元；如购买，请加微信 372335839，  备注「姓名-学校-专业」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关内容&#34;&gt;相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/&#34;&gt;&lt;strong&gt;数据集 | 港股年报文本数据集(2007 ~ 2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/&#34;&gt;&lt;strong&gt;数据集(付费) | 三板上市公司年报2002-2023.12&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/&#34;&gt;&lt;strong&gt;数据集 | 美股年报10-K、20-F数据(2000-2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/&#34;&gt;&lt;strong&gt;词向量(付费) | 使用MD&amp;amp;A2001-2022语料训练Word2Vec模型&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-01-06-mda_informative_content/&#34;&gt;中国工业经济 | MD&amp;amp;A信息含量指标构建代码实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-01-13-information-content-of-critical-audit/&#34;&gt;金融研究 | 使用Python构建「关键审计事项信息含量」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-09-08-earnings-communication-conference-forward-looking-statements-information/&#34;&gt;中国管理科学 | 使用业绩说明会文本数据测量上市公司前瞻性信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-25-firm-economic-policy-uncertainty/&#34;&gt;代码 | 使用 MD&amp;amp;A文本测量「企业不确定性感知FEPU」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/&#34;&gt;&lt;strong&gt;数据集 | A股上市公司基本信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集介绍">一、数据集介绍</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名称: 中国基金年度报告数据集
基金数量: 12113
会计年度: 1998 ~ 2023
数据源: http://eid.csrc.gov.cn/fund/disclose/index.html
数据格式: pdf、csv(46196个pdf汇总到一个csv中)
获取: 1000元；如购买，请加微信 372335839，  备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-choose.png" alt=""  />
</p>
<p><br><br></p>
<h3 id="字段">字段</h3>
<p>1998 ~ 2023年基金年报的字段有</p>
<ul>
<li>会计年度year</li>
<li>代码code</li>
<li>基金简称name</li>
<li>基金年度报告文本text</li>
</ul>
<br>
<br>
<h2 id="二读取数据">二、读取数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;基金年报.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<br>
<h2 id="三可视化">三、可视化</h2>
<p>基金数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">12113
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">year</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1998</span><span class="p">,</span> <span class="mi">2024</span><span class="p">):</span>
    <span class="n">record_num</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">year</span><span class="o">==</span><span class="n">year</span><span class="p">])</span>
    <span class="n">volumes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">record_num</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;year&#34;</span><span class="p">:</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1998</span><span class="p">,</span> <span class="mi">2024</span><span class="p">),</span>
        <span class="s2">&#34;volume&#34;</span><span class="p">:</span> <span class="n">volumes</span><span class="p">}</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">&#39;identity&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;中国基金年度报告数量(1998-2024.6)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;报告数&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span>  <span class="c1"># 添加数据标签</span>
               <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span>           <span class="c1"># 垂直对齐方式为底部（即在柱子顶部）</span>
               <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>                <span class="c1"># 设置字体大小</span>
               <span class="n">format_string</span><span class="o">=</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">&#39;</span><span class="p">)</span>     <span class="c1"># 格式化字符串</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">1998</span><span class="p">,</span> <span class="mi">2024</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span> 

<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四获取">四、获取</h2>
<p>1000元；如购买，请加微信 372335839，  备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="相关内容">相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/"><strong>数据集 | 港股年报文本数据集(2007 ~ 2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/"><strong>数据集(付费) | 三板上市公司年报2002-2023.12</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/"><strong>数据集 | 美股年报10-K、20-F数据(2000-2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/"><strong>词向量(付费) | 使用MD&amp;A2001-2022语料训练Word2Vec模型</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-01-06-mda_informative_content/">中国工业经济 | MD&amp;A信息含量指标构建代码实现</a></li>
<li><a href="https://textdata.cn/blog/2023-01-13-information-content-of-critical-audit/">金融研究 | 使用Python构建「关键审计事项信息含量」</a></li>
<li><a href="https://textdata.cn/blog/2023-09-08-earnings-communication-conference-forward-looking-statements-information/">中国管理科学 | 使用业绩说明会文本数据测量上市公司前瞻性信息</a></li>
<li><a href="https://textdata.cn/blog/2024-04-25-firm-economic-policy-uncertainty/">代码 | 使用 MD&amp;A文本测量「企业不确定性感知FEPU」</a></li>
<li><a href="https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/"><strong>数据集 | A股上市公司基本信息</strong></a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 聚焦美股企业社会责任CSR Wire网站新闻数据集(1999-2024)</title>
      <link>https://textdata.cn/blog/2024-07-19-csrwise-dataset/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-07-19-csrwise-dataset/</guid>
      <description>CSRWire（CSRwire）是一个成立于1999年的数字媒体平台，专注于提供有关企业社会责任（CSR）和可持续性的最新新闻、观点和报告。CSRWire是3BL网络的一部分，致力于帮助组织创建和分享与关键利益相关者（包括投资者、消费者、评级机构、非政府组织等）的可持续性和影响力内容。</description>
      <content:encoded><![CDATA[<blockquote>
<p>作者:  陈世强, 澳门大学</p>
</blockquote>
<p>CSRWire（CSRwire）是一个成立于1999年的数字媒体平台，专注于提供有关企业社会责任（CSR）和可持续性的最新新闻、观点和报告。CSRWire是3BL网络的一部分，致力于帮助组织创建和分享与关键利益相关者（包括投资者、消费者、评级机构、非政府组织等）的可持续性和影响力内容。</p>
<p><br><br></p>
<h2 id="一csrwire">一、CSRwire</h2>
<h3 id="11-数据集概况">1.1 数据集概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集: CSRwire
数据源:  https://www.csrwire.com/
记录条数:  43391条
所含字段: news_type, year, news_title, subtitle, news_published_date, 
				 news_author, news_content, company_name, company_info, link, image_src
覆盖日期: 1999-12-10 ~ 2024-01-26
覆盖市场: 美股
下载链接: https://pan.baidu.com/s/1Pp4qDMbdPZ-UyXn5cnnYDw?pwd=ayvu
</code></pre></div><p><br><br></p>
<h2 id="二实验">二、实验</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_stata</span><span class="p">(</span><span class="s1">&#39;CSR_newswire.dta&#39;</span><span class="p">)</span>
<span class="c1">#df = pd.read_csv(&#39;CSR_newswire.csv.gz&#39;)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;news_published_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;news_published_date&#39;</span><span class="p">])</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-所含字段">2.2 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - news_type           #分类变量，用于标识新闻的类型或类别
 - year								 #表示新闻发布或报道的年份
 - news_title					 #新闻的标题
 - subtitle            #新闻的子标题或副标题
 - news_published_date #日期变量，记录新闻发布的确切日期
 - news_author         #字符串变量，包含撰写或发布新闻的作者姓名
 - news_content        #文本变量，包含新闻的完整内容或正文
 - company_name        #字符串变量，标识与新闻相关的公司或组织的名称。用于关联新闻与特定公司，便于分析特定公司的新闻报道和公关活动
 - company_info        #提供关于公司的背景信息，包含关于公司的额外信息，如公司简介、业务范围等。
 - link								 #包含指向新闻原始网页或文章的URL链接。
 - image_src           #包含新闻配图的URL链接或文件路径。
</code></pre></div><br>
<h3 id="23-覆盖日期">2.3 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;news_published_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;news_published_date&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;起: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;news_published_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;止: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;news_published_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">起: 1999-12-10
止: 2024-01-26
</code></pre></div><br>
<h3 id="24-新闻类型">2.4 新闻类型</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;news_type&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">news_type
Philanthropy               8998
Environmental Resources    6732
Sustainability             6363
Employee Engagement        5724
Diversity and Inclusion    3487
Research                   2954
Awards and Rankings        2883
Health and Wellness        1971
Finance                    1626
Technology                 1421
Education                  1232
                            157
Name: count, dtype: int64
</code></pre></div><p><br><br></p>
<h2 id="三相关文献">三、相关文献</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Moss, A., Naughton, J. P., &amp; Wang, C. (2024). The irrelevance of environmental, social, and governance disclosure to retail investors. Management Science, 70(4), 2626-2644.
[2]Assaf, C., Benlemlih, M., El Ouadghiri, I., &amp; Peillex, J. (2023). Does policy uncertainty affect non‐financial disclosure? Evidence from climate change‐related information. International Journal of Finance &amp; Economics.
[3]Anantharaman, D., Gao, F., &amp; Manchiraju, H. (2022). Does social responsibility begin at home? The relation between firms’ pension policies and corporate social responsibility (CSR) activities. Review of Accounting Studies, 27(1), 76-121.
[4]Dang, A., &amp; Nguyen, T. (2021). Valuation effect of emotionality in corporate philanthropy. Journal of Business Ethics, 173, 47-67.
[5]Benlemlih, M., Ge, J., &amp; Zhao, S. (2021). Undervaluation and non‐financial information: Evidence from voluntary disclosure of CSR news. Journal of Business Finance &amp; Accounting, 48(5-6), 785-814.
Cho, S. Y., Kang, P. K., Lee, C., &amp; Park, C. (2020). Financial reporting conservatism and voluntary CSR disclosure. Accounting Horizons, 34(2), 63-82.
[6]Griffin, P. A., &amp; Sun, Y. (2013). Going green: Market reaction to CSRwire news releases. Journal of Accounting and Public Policy, 32(2), 93-113.
</code></pre></div><p><br><br></p>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a>
<br>
<br></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集(英文) | CBS News新闻数据集(1998 ~ 2024)</title>
      <link>https://textdata.cn/blog/2024-07-13-cbs-news-dataset/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-07-13-cbs-news-dataset/</guid>
      <description>新闻数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<h2 id="一cbs-news概况">一、CBS News概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名称: CBS News
数据来源: https://www.cbsnews.com/
覆盖日期: 1998-04-16 ~ 2024-06-30
所含字段:  date, title, content, author_link, publisher, link
记录条数: 190483
文件格式: csv
文件大小: 1475 M
</code></pre></div><p><img loading="lazy" src="img/cbs-main.jpg" alt=""  />
</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;CBS-News.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-覆盖日期">2.2 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="s1">&#39;coerce&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;起: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;止: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">起:  1998-04-16
止:  2024-06-30
</code></pre></div><br>
<h3 id="23-所含字段">2.3 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">col</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">date #日期
title #标题
content #新闻内容
author_link  #作者主页链接
publisher #出版社
link  #文章链接
</code></pre></div><br>
<h3 id="24-发文量统计">2.4 发文量统计</h3>
<p>企业家杂志，按照月度发文量进行统计。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">month_volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">month_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">)):</span>
    <span class="n">month_volumes</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">date</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">month_df</span><span class="p">)))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">months</span><span class="p">)</span>
<span class="n">data</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">]</span>
<span class="n">data</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">date_breaks</span> <span class="o">=</span> <span class="p">[</span><span class="n">d</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="n">start</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> 
                                                          <span class="n">end</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">(),</span> 
                                                          <span class="n">freq</span> <span class="o">=</span> <span class="s1">&#39;12M&#39;</span><span class="p">)]</span>

<span class="n">date_labels</span> <span class="o">=</span> <span class="p">[</span><span class="n">d</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">date_breaks</span><span class="p">]</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_point</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_line</span><span class="p">()</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;CBS News月度发文量(1998.4 ~ 2024.6)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;月度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;发文量&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_datetime</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="n">date_breaks</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">date_labels</span><span class="p">)</span>
<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三说明">三、说明</h2>
<p>我们都知道六度分割理论(通过任意六个人，我们能认识世界上任意一个人。)， 类比到爬虫场景， 通过广度递归，当我们设置最大采集深度7， 意味理论上通过点击7次链接， 可以触达到任意一个页面。 <a href="https://textdata.cn/blog/2024-07-12-china-daily-dataset/">ChinaDaily</a>、 <a href="https://textdata.cn/blog/2024-06-22-usa_today_daily-news-dataset/">UsaToday</a>、 <a href="https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/">Enterpreneur</a> 与 CBS News均采用scrapy广度递归，最大深度7。</p>
<p>但从月度统计中可以看出CBS News ，有很多个月份(周期性)接近于0 轴的， 网站一般不会出这么周期性的问题， 大概率说明采集遇到问题。</p>
<p><br><br></p>
<h2 id="四获取数据">四、获取数据</h2>
<p>虽然数据采集出现了问题，但因为该csv数据结构整洁、体量较大， 特别适合给各位拿来练习Python文本分析。</p>
<blockquote>
<p>CBS News链接: <a href="https://pan.baidu.com/s/1DlCo3PRnzcG1iZ_7V7PVlg?pwd=i4rr">https://pan.baidu.com/s/1DlCo3PRnzcG1iZ_7V7PVlg?pwd=i4rr</a> 提取码: i4rr</p>
</blockquote>
<br>
<h3 id="注意">注意</h3>
<p>如Excel打开csv乱码， 请百度搜「在 Excel 中正确打开 CSV UTF-8 文件」</p>
<br>
<br>
<h2 id="五相关内容">五、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-06-22-usa_today_daily-news-dataset/"><strong>数据集(英文）| USA Today新闻数据集(2012~2024)</strong></a></li>
<li><a href="**https://textdata.cn/blog/2024-07-12-china-daily-dataset/**">数据集(中英) | ChinaDaily新闻数据集(2008 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/">数据集 | 企业家Entrepreneur杂志数据集(1996 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></li>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></li>
</ul>
<p><br><br></p>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a>
<br>
<br></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | ChinaDaily 新闻数据集(2008 ~ 2024)</title>
      <link>https://textdata.cn/blog/2024-07-12-china-daily-dataset/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-07-12-china-daily-dataset/</guid>
      <description>新闻数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<h2 id="一china-daily概况">一、「China Daily」概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: chinadaily.com
覆盖日期: 2008-10-24 ~ 2024-06-29
所含字段:  date, title, content, source, link, img, lang
记录条数: 847854
     - 英文  697241
     - 中文  150613  
  
文件格式: csv
文件大小: 2648M

本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/china-daily-main.jpg" alt=""  />
</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;ChinaDaily.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-覆盖日期">2.2 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="s1">&#39;coerce&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;起: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;止: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">起:  2008-10-24
止:  2024-06-29
</code></pre></div><br>
<h3 id="23-所含字段">2.3 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">col</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">date #日期
title #标题
content #新闻内容
source  #来源
link  #新闻链接
img  #新闻首图链接
lang #语言chinese、english
</code></pre></div><br>
<h3 id="24-语言">2.4 语言</h3>
<p>China Daily是双语网站， 数据集中大多为英文新闻，也含少量中文内容。 中英文新闻的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;lang&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">lang
english    697241
chinese    150613
</code></pre></div><br>
<h3 id="25-月度发文量">2.5 月度发文量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">months</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">month_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">)):</span>
    <span class="c1">#print(date)</span>
    <span class="n">months</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">date</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">month_df</span><span class="p">)))</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">months</span><span class="p">)</span>
<span class="n">data</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">]</span>
<span class="n">data</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">date_breaks</span> <span class="o">=</span> <span class="p">[</span><span class="n">d</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">pd</span><span class="o">.</span><span class="n">date_range</span><span class="p">(</span><span class="n">start</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> 
                                                          <span class="n">end</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">(),</span> 
                                                          <span class="n">freq</span> <span class="o">=</span> <span class="s1">&#39;12M&#39;</span><span class="p">)]</span>

<span class="n">date_labels</span> <span class="o">=</span> <span class="p">[</span><span class="n">d</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">date_breaks</span><span class="p">]</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_point</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_line</span><span class="p">()</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;China Daily月度发文量(2008.10 ~ 2024.06)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;月度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;发文量&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_datetime</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="n">date_breaks</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">date_labels</span><span class="p">)</span>
<span class="p">)</span>

</code></pre></div><p><img loading="lazy" src="img/03-plot.png" alt=""  />
</p>
<br>
<h3 id="注意">注意</h3>
<p>如Excel打开csv乱码， 请百度搜【在 Excel 中正确打开 CSV UTF-8 文件】</p>
<!--所采集的数据并非China Daily全部内容，但采用广度递归采集， 最大深度为7，能看做是对ChinaDaily进行的大规模抽样。-->
<p><br><br></p>
<h2 id="三数据用途">三、数据用途</h2>
<p>新闻数据集 可提取丰富的指标，包括但不限于 <strong>经济政策不确定性指数</strong> 、<strong>环境政策不确定性</strong>、 <strong>媒体关注度指数</strong>、<strong>文本相似度</strong>、<strong>情感分析</strong>。此外， 可训练词向量，开发新的概念词典。数据带时间， 参照前面指标， 依主体、日期、指标进行计算， 可构造面板数据，构建新的指标指数。因此在经济学、管理学、新闻传播学、公共管理、社会学等领域均有较高的研究价值。</p>
<p>相关参考文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]洪永淼,刘俸奇,薛涧坡.政府与市场心理因素的经济影响及其测度[J].管理世界,2023,39(03):30-51.
[2]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[3]张一帆,林建浩,樊嘉诚.新闻文本大数据与消费增速实时预测——基于叙事经济学的视角[J].金融研究,2023,(05):152-169.
[4]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[5]欧阳资生,陈世丽,杨希特,刘凤根,周学伟.经济政策不确定性、网络舆情与金融机构系统性风险[J].管理科学学报,2023,26(04):62-86.
[6]逯东,宋昕倍.媒体报道、上市公司年报可读性与融资约束[J].管理科学学报,2021,24(12):45-61.
[7]彭涛,黄福广,孙凌霞.经济政策不确定性与风险承担:基于风险投资的证据[J].管理科学学报,2021,24(03):98-114.
[8]庞锐.采纳与内化：多重制度压力如何影响河长制创新扩散——基于省级政府的定向配对事件史分析[J].公共管理学报,2023,20(02):25-37+165-166.
</code></pre></div><br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-06-22-usa_today_daily-news-dataset/"><strong>数据集(英文）| USA Today新闻数据集(2012~2024)</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/">数据集 | 企业家Entrepreneur杂志数据集(1996 ~ 2024)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></p>
</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 企业家 Entrepreneur 杂志数据集(1996 ~ 2024)</title>
      <link>https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-07-12-entrepreneur-dataset/</guid>
      <description>新闻数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<h2 id="一enterpreneur概况">一、Enterpreneur概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名称: 企业家杂志
数据来源: https://www.entrepreneur.com/
覆盖日期: 1996-01-01 ~ 2024-06-28
所含字段:  date, title, content, link
记录条数: 95813
文件格式: csv
文件大小: 1418 M
本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/entrepreneur-elon-musk.jpeg" alt=""  />
</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;Entrepreneur.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-覆盖日期">2.2 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="s1">&#39;coerce&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;起: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;止: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">起:  1996-01-01
止:  2024-06-28
</code></pre></div><br>
<h3 id="23-所含字段">2.3 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">col</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">date #日期
title #标题
content #新闻内容
link  #新闻链接
</code></pre></div><br>
<h3 id="24-发文量统计">2.4 发文量统计</h3>
<p>企业家杂志，按照月度发文量进行统计。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">month_volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">month_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">)):</span>
    <span class="n">month_volumes</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">date</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">month_df</span><span class="p">)))</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">months</span><span class="p">)</span>
<span class="n">data</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">]</span>
<span class="n">data</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">date_labels</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1996</span><span class="p">,</span> <span class="mi">2025</span><span class="p">,</span> <span class="mi">2</span><span class="p">)]</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_point</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_line</span><span class="p">()</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;企业家Entrepreneur杂志(1996.1-2024.6.28)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;月度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;发文量&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_datetime</span><span class="p">(</span><span class="n">labels</span> <span class="o">=</span> <span class="n">date_labels</span><span class="p">,</span> <span class="n">breaks</span><span class="o">=</span><span class="n">date_labels</span><span class="p">)</span>
   
<span class="p">)</span>

</code></pre></div><p><img loading="lazy" src="img/03-plot.png" alt=""  />
</p>
<br>
<h3 id="注意">注意</h3>
<p>如Excel打开csv乱码， 请百度搜「在 Excel 中正确打开 CSV UTF-8 文件」</p>
<p><br><br></p>
<h2 id="三数据用途">三、数据用途</h2>
<p>企业家杂志数据集， 最相关的领域是与企业家相关的创新创业， 通过文本研究全球的企业家创新创业。</p>
<p>当然也可将该数据集看做新闻数据集， 提取的指标提取丰富的指标，包括但不限于 <strong>经济政策不确定性指数</strong> 、<strong>环境政策不确定性</strong>、 <strong>媒体关注度指数</strong>、<strong>文本相似度</strong>、<strong>情感分析</strong>。此外， 可训练词向量，开发新的概念词典。数据带时间， 参照前面指标， 依主体、日期、指标进行计算， 可构造面板数据，构建新的指标指数。因此在经济学、管理学、新闻传播学、公共管理、社会学等领域均有较高的研究价值。</p>
<p>相关参考文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]洪永淼,刘俸奇,薛涧坡.政府与市场心理因素的经济影响及其测度[J].管理世界,2023,39(03):30-51.
[2]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[3]张一帆,林建浩,樊嘉诚.新闻文本大数据与消费增速实时预测——基于叙事经济学的视角[J].金融研究,2023,(05):152-169.
[4]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[5]欧阳资生,陈世丽,杨希特,刘凤根,周学伟.经济政策不确定性、网络舆情与金融机构系统性风险[J].管理科学学报,2023,26(04):62-86.
[6]逯东,宋昕倍.媒体报道、上市公司年报可读性与融资约束[J].管理科学学报,2021,24(12):45-61.
[7]彭涛,黄福广,孙凌霞.经济政策不确定性与风险承担:基于风险投资的证据[J].管理科学学报,2021,24(03):98-114.
[8]庞锐.采纳与内化：多重制度压力如何影响河长制创新扩散——基于省级政府的定向配对事件史分析[J].公共管理学报,2023,20(02):25-37+165-166.
</code></pre></div><br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
<li><a href="https://textdata.cn/blog/2024-06-22-usa_today_daily-news-dataset/"><strong>数据集(英文）| USA Today新闻数据集(2012~2024)</strong></a></li>
<li><a href="**https://textdata.cn/blog/2024-07-12-china-daily-dataset/**">数据集(中英) | ChinaDaily新闻数据集(2008 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></li>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a>
<br>
<br></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Open Sanctions | 使用该网站可查询被制裁的个人、企业组织等制裁清单</title>
      <link>https://textdata.cn/blog/2024-07-08-open-sanctions-dataset/</link>
      <pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-07-08-open-sanctions-dataset/</guid>
      <description>&lt;p&gt;收集被制裁数据是一项劳动密集型过程，包括数据清理和质量保证。这给所有用户带来了不必要的重复工作，无论他们是金融科技/监管科技技术专家、调查记者、学者还是其他人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;声明: 大邓本人十分热爱「种花家」， 并不认可其他国家对「种花家」相关实体的制裁。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一关于&#34;&gt;一、关于&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.opensanctions.org/&#34;&gt;OpenSanctions&lt;/a&gt; 是一个包含具有政治、犯罪或经济利益的个人和公司的国际数据库。该数据哭将制裁名单、政治公众人物数据库和其他与公众利益相关的人员信息整合成一个易于使用的数据集。这样可以轻松实现以下操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;交叉检查数据库&lt;/strong&gt;是否存在利益冲突和非法活动的迹象。&lt;/li&gt;
&lt;li&gt;在国际交易中&lt;strong&gt;筛选潜在客户和合作伙伴。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;追踪政治冲突&lt;/strong&gt;并比较国家制裁政策。&lt;/li&gt;
&lt;li&gt;将制裁和关注人员图表整合到现有数据产品中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-research.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-dataset.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二有何不同&#34;&gt;二、有何不同？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;全面覆盖&lt;/strong&gt;：OpenSanctions将来自&lt;a href=&#34;https://www.opensanctions.org/datasets/&#34;&gt;数百个数据源&lt;/a&gt;和世界各地的数据整合成一个包含制裁、&lt;a href=&#34;https://www.opensanctions.org/pep/&#34;&gt;政治公众人物&lt;/a&gt;和犯罪相关实体的单一数据集。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;关注数据质量：OpenSanctions的数据集经过仔细清理，包括&lt;/strong&gt;&lt;a href=&#34;https://www.opensanctions.org/articles/2021-11-11-deduplication/&#34;&gt;跨列表实体重复数据删除的&lt;/a&gt;人机交互过程，以及数千个手工制作的&lt;em&gt;数据补丁&lt;/em&gt;，以一致的方式构造识别信息，如出生日期、国家、地址或税务标识符。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为每个人提供批量数据&lt;/strong&gt;：OpenSanctions使原始数据易于访问，支持需要访问完整档案（而不是逐个实体的 API）的用例，甚至使OpenSanctions的客户能够在自己的基础设施内&lt;a href=&#34;https://www.opensanctions.org/docs/self-hosted/&#34;&gt;自行托管我们的 API 服务器。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可审计和开源：任何人都可以通过浏览&lt;/strong&gt;&lt;a href=&#34;https://github.com/opensanctions&#34;&gt;源代码&lt;/a&gt;来验证 OpenSanctions 的工作原理、突出显示问题、建议更改并提出改进建议。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三团队资金来源&#34;&gt;三、团队&amp;amp;资金来源&lt;/h2&gt;
&lt;p&gt;OpenSanctions 的开发和维护由一家营利性实体（OpenSanctions Datenbanken GmbH）协调，该实体提供&lt;a href=&#34;https://www.opensanctions.org/licensing/&#34;&gt;批量数据订阅&lt;/a&gt;和数据&lt;a href=&#34;https://www.opensanctions.org/api/&#34;&gt;API 访问&lt;/a&gt;。其目标是实现财务可持续性，使我们能够持续保持数据的可用性和可靠性。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://occrp.org/&#34;&gt;2017 年至 2019 年，爬虫的维护由有组织犯罪和腐败报道项目&lt;/a&gt;的&lt;a href=&#34;https://sunu.in/&#34;&gt;Tarashish Mishra&lt;/a&gt;负责。您可以&lt;a href=&#34;https://github.com/opensanctions/opensanctions/graphs/contributors&#34;&gt;在 Github 上&lt;/a&gt;看到贡献爬虫的人员列表。我们还要感谢&lt;a href=&#34;https://marcdacosta.com/&#34;&gt;Marc da Costa&lt;/a&gt;、&lt;a href=&#34;https://twitter.com/mrpaulmay&#34;&gt;Paul May&lt;/a&gt;和&lt;a href=&#34;https://twitter.com/tmtm&#34;&gt;Tony Bowden&lt;/a&gt;为该项目提供的不懈建议。&lt;/p&gt;
&lt;p&gt;从 2021 年 9 月到 2022 年 2 月，该项目获得了德国联邦教育和研究部 (Bundesministerium für Bildung und Forschung, BMBF) 的资助，资助编号为&lt;code&gt;01IS21S48&lt;/code&gt;。本出版物内容的全部责任仍由其作者承担。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四演示&#34;&gt;四、演示&lt;/h2&gt;
&lt;p&gt;咱们种花家的华为公司，在国际上，其实主要是被老美制裁的。在 &lt;code&gt;https://www.opensanctions.org/search/&lt;/code&gt; 搜一下&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-huawei.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;精选内容&#34;&gt;精选内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/datasets_available_for_management_science/&#34;&gt;LIST | 可供社科(经管)领域使用的数据集汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/the_text_analysis_list_about_ms/&#34;&gt;LIST | 社科(经管)数据挖掘文献资料汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/&#34;&gt;推荐 | 文本分析库cntext2.x使用手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<p>收集被制裁数据是一项劳动密集型过程，包括数据清理和质量保证。这给所有用户带来了不必要的重复工作，无论他们是金融科技/监管科技技术专家、调查记者、学者还是其他人。</p>
<blockquote>
<p>声明: 大邓本人十分热爱「种花家」， 并不认可其他国家对「种花家」相关实体的制裁。</p>
</blockquote>
<p><br><br></p>
<h2 id="一关于">一、关于</h2>
<p><a href="https://www.opensanctions.org/">OpenSanctions</a> 是一个包含具有政治、犯罪或经济利益的个人和公司的国际数据库。该数据哭将制裁名单、政治公众人物数据库和其他与公众利益相关的人员信息整合成一个易于使用的数据集。这样可以轻松实现以下操作：</p>
<ul>
<li><strong>交叉检查数据库</strong>是否存在利益冲突和非法活动的迹象。</li>
<li>在国际交易中<strong>筛选潜在客户和合作伙伴。</strong></li>
<li><strong>追踪政治冲突</strong>并比较国家制裁政策。</li>
<li>将制裁和关注人员图表整合到现有数据产品中。</li>
</ul>
<p><img loading="lazy" src="img/01-research.png" alt=""  />
</p>
<p><img loading="lazy" src="img/02-dataset.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二有何不同">二、有何不同？</h2>
<ul>
<li><strong>全面覆盖</strong>：OpenSanctions将来自<a href="https://www.opensanctions.org/datasets/">数百个数据源</a>和世界各地的数据整合成一个包含制裁、<a href="https://www.opensanctions.org/pep/">政治公众人物</a>和犯罪相关实体的单一数据集。</li>
<li><strong>关注数据质量：OpenSanctions的数据集经过仔细清理，包括</strong><a href="https://www.opensanctions.org/articles/2021-11-11-deduplication/">跨列表实体重复数据删除的</a>人机交互过程，以及数千个手工制作的<em>数据补丁</em>，以一致的方式构造识别信息，如出生日期、国家、地址或税务标识符。</li>
<li><strong>为每个人提供批量数据</strong>：OpenSanctions使原始数据易于访问，支持需要访问完整档案（而不是逐个实体的 API）的用例，甚至使OpenSanctions的客户能够在自己的基础设施内<a href="https://www.opensanctions.org/docs/self-hosted/">自行托管我们的 API 服务器。</a></li>
<li><strong>可审计和开源：任何人都可以通过浏览</strong><a href="https://github.com/opensanctions">源代码</a>来验证 OpenSanctions 的工作原理、突出显示问题、建议更改并提出改进建议。</li>
</ul>
<p><br><br></p>
<h2 id="三团队资金来源">三、团队&amp;资金来源</h2>
<p>OpenSanctions 的开发和维护由一家营利性实体（OpenSanctions Datenbanken GmbH）协调，该实体提供<a href="https://www.opensanctions.org/licensing/">批量数据订阅</a>和数据<a href="https://www.opensanctions.org/api/">API 访问</a>。其目标是实现财务可持续性，使我们能够持续保持数据的可用性和可靠性。</p>
<p><a href="https://occrp.org/">2017 年至 2019 年，爬虫的维护由有组织犯罪和腐败报道项目</a>的<a href="https://sunu.in/">Tarashish Mishra</a>负责。您可以<a href="https://github.com/opensanctions/opensanctions/graphs/contributors">在 Github 上</a>看到贡献爬虫的人员列表。我们还要感谢<a href="https://marcdacosta.com/">Marc da Costa</a>、<a href="https://twitter.com/mrpaulmay">Paul May</a>和<a href="https://twitter.com/tmtm">Tony Bowden</a>为该项目提供的不懈建议。</p>
<p>从 2021 年 9 月到 2022 年 2 月，该项目获得了德国联邦教育和研究部 (Bundesministerium für Bildung und Forschung, BMBF) 的资助，资助编号为<code>01IS21S48</code>。本出版物内容的全部责任仍由其作者承担。</p>
<p><br><br></p>
<h2 id="四演示">四、演示</h2>
<p>咱们种花家的华为公司，在国际上，其实主要是被老美制裁的。在 <code>https://www.opensanctions.org/search/</code> 搜一下</p>
<p><img loading="lazy" src="img/03-huawei.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a>
<br>
<br></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2012年-2023年港股ESG报告数据集</title>
      <link>https://textdata.cn/blog/2024-06-26-hongkong-environmental-social-governance-dataset/</link>
      <pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-06-26-hongkong-environmental-social-governance-dataset/</guid>
      <description>&lt;p&gt;ESG的全称是环境（Environmental）、社会（Social）、和公司治理（Governance）。这是一个框架，用于评估企业运营对环境的影响、企业与社会的关系，以及企业的内部治理结构和流程。ESG概念广泛应用于可持续投资领域，帮助投资者理解企业在非财务指标上的表现，从而做出更加全面的投资决策。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;一esg概况&#34;&gt;一、ESG概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集名称: 港股ESG报告数据集
语言类型: 中文、英文
记录数量
  - 中文8825
  - 英文8816
数据格式: TXT/PDF/CSV
数据体积: 97 G
会计年度: 2012 ~ 2023

声明:   科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-screen.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;p&gt;TXT、PDF都是单个的文件，每个文件对应一家公司某年度的ESG报告。而 CSV 则是汇总数据文件， 一个文件内含有所有TXT的信息。&lt;/p&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;香港ESG(中文).csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;edf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;香港ESG(英文).csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;edf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;edf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-统计年度报告量&#34;&gt;2.2 统计年度报告量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plotnine&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.font_manager&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#文泉驿微米黑.ttf位于代码同文件夹&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;文泉驿微米黑.ttf&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;grey&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
           &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()),&lt;/span&gt; 
           &lt;span class=&#34;n&#34;&gt;plot_title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;labs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;港股中文ESG报告发布数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;报告数&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plotnine&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.font_manager&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#文泉驿微米黑.ttf位于代码同文件夹&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FontProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;文泉驿微米黑.ttf&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;edata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ggplot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;geom_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;label&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bottom&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;grey&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
           &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()),&lt;/span&gt; 
           &lt;span class=&#34;n&#34;&gt;plot_title&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;font_prop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;labs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;港股英文ESG报告发布数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;报告数&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三声明&#34;&gt;三、声明&lt;/h2&gt;
&lt;p&gt;科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p>ESG的全称是环境（Environmental）、社会（Social）、和公司治理（Governance）。这是一个框架，用于评估企业运营对环境的影响、企业与社会的关系，以及企业的内部治理结构和流程。ESG概念广泛应用于可持续投资领域，帮助投资者理解企业在非财务指标上的表现，从而做出更加全面的投资决策。</p>
<br>
<h2 id="一esg概况">一、ESG概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名称: 港股ESG报告数据集
语言类型: 中文、英文
记录数量
  - 中文8825
  - 英文8816
数据格式: TXT/PDF/CSV
数据体积: 97 G
会计年度: 2012 ~ 2023

声明:   科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-screen.png" alt=""  />
</p>
<br>
<br>
<h2 id="二查看数据">二、查看数据</h2>
<p>TXT、PDF都是单个的文件，每个文件对应一家公司某年度的ESG报告。而 CSV 则是汇总数据文件， 一个文件内含有所有TXT的信息。</p>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">cdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;香港ESG(中文).csv.gz&#39;</span><span class="p">)</span>
<span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">])</span>
<span class="n">cdf</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">edf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;香港ESG(英文).csv.gz&#39;</span><span class="p">)</span>
<span class="n">edf</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">edf</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">])</span>
<span class="n">edf</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="22-统计年度报告量">2.2 统计年度报告量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 
<span class="n">data</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">&#39;category&#39;</span><span class="p">)</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_col</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;grey&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;港股中文ESG报告发布数量&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;报告数&#39;</span><span class="p">)</span>
<span class="p">)</span>
  
</code></pre></div><p><img loading="lazy" src="img/04-plot.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 
<span class="n">edata</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">edata</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">&#39;category&#39;</span><span class="p">)</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">edata</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_col</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span> <span class="n">data</span><span class="o">=</span><span class="n">edata</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;grey&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;港股英文ESG报告发布数量&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;报告数&#39;</span><span class="p">)</span>
<span class="p">)</span>
  
</code></pre></div><p><img loading="lazy" src="img/05-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三声明">三、声明</h2>
<p>科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集(英文）| USA Today新闻数据集(2012~2024)</title>
      <link>https://textdata.cn/blog/2024-06-22-usa_today_daily-news-dataset/</link>
      <pubDate>Sat, 22 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-06-22-usa_today_daily-news-dataset/</guid>
      <description>媒体数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<p>今日分享一个数据集「<a href="https://www.usatoday.com/">今日美国USA Today</a>」，该网站是国内可合法访问(<a href="2024-06-30-law-about-vpn">科学上网违法吗</a>)，只是访问速度比较慢。</p>
<p><br><br></p>
<h2 id="一usa-today数据集">一、USA Today数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集:  USA Today
数据源:  https://www.usatoday.com/
记录数:  532628
覆盖日期: 2001-02-21 ~2024-06-30 
数据格式: CSV
数据体积: 3422 M
所含字段: date、title、content、author_link、publisher、link
本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-usa-today.jpg" alt=""  />
</p>
<br>
<h3 id="12-数据用途">1.2 数据用途</h3>
<p>可提取丰富的指标，包括但不限于 **经济政策不确定性指数 **、<strong>环境政策不确定性</strong>、 <strong>媒体关注度指数</strong>、<strong>文本相似度</strong>、<strong>情感分析</strong>。此外， 可训练词向量，开发新的概念词典。数据带时间， 参照前面指标， 依主体、日期、指标进行计算， 可构造面板数据，构建新的指标指数。因此在经济学、管理学、新闻传播学、公共管理、社会学等领域均有较高的研究价值。</p>
<p>相关参考文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]洪永淼,刘俸奇,薛涧坡.政府与市场心理因素的经济影响及其测度[J].管理世界,2023,39(03):30-51.
[2]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[3]张一帆,林建浩,樊嘉诚.新闻文本大数据与消费增速实时预测——基于叙事经济学的视角[J].金融研究,2023,(05):152-169.
[4]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[5]欧阳资生,陈世丽,杨希特,刘凤根,周学伟.经济政策不确定性、网络舆情与金融机构系统性风险[J].管理科学学报,2023,26(04):62-86.
[6]逯东,宋昕倍.媒体报道、上市公司年报可读性与融资约束[J].管理科学学报,2021,24(12):45-61.
[7]彭涛,黄福广,孙凌霞.经济政策不确定性与风险承担:基于风险投资的证据[J].管理科学学报,2021,24(03):98-114.
[8]庞锐.采纳与内化：多重制度压力如何影响河长制创新扩散——基于省级政府的定向配对事件史分析[J].公共管理学报,2023,20(02):25-37+165-166.
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;USA_Today.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h3 id="22-所含字段">2.2 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;date&#39;, &#39;title&#39;, &#39;content&#39;, &#39;author_link&#39;, &#39;publisher&#39;, &#39;link&#39;], dtype=&#39;object&#39;)
</code></pre></div><br>
<h3 id="23-查看记录数">2.3 查看记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">print(&#39;记录数：&#39;, len(df))
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">记录数： 532628
</code></pre></div><br>
<h3 id="24-覆盖日期">2.4 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;起:  &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;止:  &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">起:   2001-02-21 21:01:00
止:   2024-06-30 10:55:00
</code></pre></div><br>
<h3 id="25-数据体积">2.5 数据体积</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">size</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">memory_usage</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">/</span><span class="mi">1024</span><span class="o">/</span><span class="mi">1024</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;数据体积 </span><span class="si">{</span><span class="n">size</span><span class="si">:</span><span class="s1">.2f</span><span class="si">}</span><span class="s1"> M&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据体积 3422 M
</code></pre></div><br>
<h3 id="26-发文量统计">2.6 发文量统计</h3>
<p>按月度，统计发文量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">months</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">month_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">)):</span>
    <span class="c1">#print(date)</span>
    <span class="n">months</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">date</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">month_df</span><span class="p">)))</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">months</span><span class="p">)</span>
<span class="n">data</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">]</span>
<span class="n">data</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">date_labels</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2001</span><span class="p">,</span> <span class="mi">2025</span><span class="p">)]</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_point</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_line</span><span class="p">()</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;USA Today月度发文量(2001.02 ~2024.06)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;月度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;发文量&#39;</span><span class="p">)</span>
    <span class="o">+</span><span class="n">scale_x_datetime</span><span class="p">(</span><span class="n">labels</span> <span class="o">=</span> <span class="n">date_labels</span><span class="p">,</span> <span class="n">breaks</span><span class="o">=</span><span class="n">date_labels</span><span class="p">)</span>
<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-plot.png" alt=""  />
</p>
<br>
<br>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
<li><a href="**https://textdata.cn/blog/2024-07-12-china-daily-dataset/**">数据集(中英) | ChinaDaily新闻数据集(2008 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2024-07-12-entrepreneur-dataset/">数据集 | 企业家Entrepreneur杂志数据集(1996 ~ 2024)</a></li>
<li><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></li>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 30w条「问政湖南」留言&amp;回复数据(2010-2024)</title>
      <link>https://textdata.cn/blog/2024-06-05-wenzheng-hunan-dataset/</link>
      <pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-06-05-wenzheng-hunan-dataset/</guid>
      <description>[问政湖南](https://wz.rednet.cn/#/leaveMsgList?reply=1)，类似于 [人民网地方领导留言板](https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/)， 数据信息量也很大， 网民留言日期2010~2024， 记录数约30w(截止2024-06-05)。 适合社会学、新闻学、公共管理、管理学等领域学者使用。</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="img/01-website.png" alt=""  />
</p>
<h2 id="一数据集">一、数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名称: 问政湖南
网站网址: https://wz.rednet.cn/#/leaveMsgList?reply=1
信息类型:  网民留言、地方机构(领导)回复
所含字段: 用户昵称、留言类型、标题、详细内容、投诉领域(子领域)、地方(省市)、地方领导、是否回复、回复机构、回复内容、回复时间等。
覆盖日期: 2010-10-28 ~ 2024-06-05
采集日期: 2024-06-05
记录条数: 302190
文件格式: csv/xlsx
文件大小: 990M
声明: 科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><a href="https://wz.rednet.cn/#/leaveMsgList?reply=1">问政湖南</a>，类似于 <a href="https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/">人民网地方领导留言板</a>， 数据信息量也很大， 网民留言日期2010~2024， 记录数约30w(截止2024-06-05)。 适合社会学、新闻学、公共管理、管理学等领域学者使用。</p>
<p><img loading="lazy" src="img/02-wz-data.png" alt=""  />
</p>
<br>
<h3 id="12-声明">1.2 声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;问政湖南.csv.gz&#39;</span><span class="p">,</span> 
                 <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> 
                 <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>

<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="22-字段">2.2 字段</h3>
<p>人民网地方领导留言板， 只能看2年的数据， 除非爬虫早于2年前运行，否则无法阅读到2年前的数据。而且人民网存在改版， 字段无法对齐。</p>
<p>而问政湖南网， 不同于人民网html格式， 采用的json数据存储， 字段更干净整洁。所以我们采集到的数据从2011到2023， 无需做字段对齐操作，拿来直接入库。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - nickname   留言者昵称
 - type_name  类型,如投诉、举报等
 - title      留言标题
 - content    留言内容
 - desc       留言内容(与content内容略微不同)
 - cate_child_name  问政主题子领域， 违规补课
 - cate_name    问政主题， 如教育、交通等
 - created_at   留言时间
 - mobile       留言设备
 - star         留言获得的点赞数
 - company      地方机构，如市政府、市委等
 - job          领导岗位， 如市委书记、市长等
 - is_reply     是否回复,  1已办理， 2办理中
 - reply_name   回复机构名，如市委办公室、
 - is_self      是否为job自己回复
 - reply_content 回复内容
 - reply_is_edit 回复内容是否编辑
 - reply_time    回复时间
 - reply_published_at 回复内容发布时间
 - done_time      完成时间
 - reply_star     回复得到的点赞数
 - reply_video    回复视频链接
 - updated        留言更新时间
 - crawl_date     数据采集日期
</code></pre></div><br>
<h3 id="23-起止日期">2.3 起止日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;created_at&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;created_at&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;留言日期(起): &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;created_at&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;留言日期(止): &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;created_at&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y-%m-</span><span class="si">%d</span><span class="s1">&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">留言日期(起):  2010-10-28
留言日期(止):  2024-06-05
</code></pre></div><br>
<h3 id="24-年度分布">2.4 年度分布</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">y</span><span class="p">:</span> <span class="n">y</span><span class="p">[:</span><span class="mi">4</span><span class="p">])</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">())</span>
<span class="n">data</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">]</span>
<span class="n">data</span>
</code></pre></div><p><img loading="lazy" src="img/04-data.png" alt=""  />
</p>
<br>
<p><a href="https://textdata.cn/blog/2024-06-05-how-to-show-chinese-in-matplotlib-plotnine/">可视化 | 如何在matplotlib中显示中文</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">y</span><span class="p">:</span> <span class="n">y</span><span class="p">[:</span><span class="mi">4</span><span class="p">])</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">())</span>
<span class="n">data</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;count&#39;</span><span class="p">]</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_col</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;count&#39;</span><span class="p">),</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;grey&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;问政湖南留言回复量(2010-2024.6)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;回复量&#39;</span><span class="p">)</span>
<span class="p">)</span>

</code></pre></div><p><img loading="lazy" src="img/05-plot.png" alt=""  />
</p>
<br>
<h3 id="25-问政主题">2.5 问政主题</h3>
<p>查看2010-2024.6年， 不同留 <em><strong>主题类别</strong></em> 的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;cate_name&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cate_name
住建         59316
交通运输       16812
公安         15855
教育         15781
农业农村       12883
生态环境       10996
人社          9775
城管          9596
市场监管        7464
干部          6075
其他          4685
司法          4646
自然资源        4273
卫生健康        3647
民政          3435
医疗保障        2589
水利          2352
金融          1610
通信          1594
电力          1579
财政税收        1267
物价          1099
商务           489
应急管理         247
特种设备、作业       31
烟花爆竹经营        19
安全生产和管理       10
消防救援           3
电动车违规行为        1
Name: count, dtype: int64
</code></pre></div><br>
<h3 id="26-查看某类词">2.6 查看某类词</h3>
<p>查看字段 <em><strong>content留言内容</strong></em>, 是否出现 <em><strong>扰民|噪音</strong></em> 等词语</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;content&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;扰民|噪音&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0         False
1         False
2         False
3         False
4         False
          ...  
302185    False
302186    False
302187    False
302188    False
302189     True
Name: content, Length: 302190, dtype: bool
</code></pre></div><br>
<p><em><strong>扰民|噪音</strong></em> 相关记录总的记录(回复)数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;content&#39;].fillna(&#39;&#39;).str.contains(&#39;扰民|噪音&#39;).sum()
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">13292
</code></pre></div><p>噪音的留言回复记录占总记录数的比例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;content&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;扰民|噪音&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.04398557199113141
</code></pre></div><p>跟人民网地方领导留言板的结果十分相似，也是4%。</p>
<br>
<br>
<br>
<h2 id="三相关内容">三、相关内容</h2>
<h3 id="31-相关研究">3.1 相关研究</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]郑石明, 兰雨潇, 黎枫. 网络公共舆论与政府回应的互动逻辑——基于新冠肺炎疫情期间“领导留言板”的数据分析[J]. 公共管理学报, 2021, 18 (03): 24-37+169.
王磊,易扬.公共卫生危机中的数字政府回应如何纾解网络负面舆情——基于人民网“领导留言板”回复情况的调查[J].公共管理学报,2022,19(04):65-78+169.

[2]Lu, Liangdong, Jia Xu, and Jiuchang Wei. &#34;Understanding the effects of the textual complexity on government communication: Insights from China’s online public service platform.&#34; Telematics and Informatics 83 (2023): 102028.
...
</code></pre></div><br>
<h3 id="32-相关推文">3.2 相关推文</h3>
<p><a href="https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/">数据集(付费) | 人民网地方领导留言板原始文本(2011-2023.12)</a></p>
<p><a href="https://textdata.cn/blog/2023-12-28-train-word2vec-using-renmin-gov-leader-board-dataset/">词向量 | 使用人民网领导留言板语料训练Word2Vec模型</a></p>
<br>
<h3 id="33-相关链接">3.3 相关链接</h3>
<p>与 <a href="https://wz.rednet.cn/#/leaveMsgList?reply=1">问政湖南网</a> 最相关的网站还有</p>
<ul>
<li><a href="https://www.rednet.cn/">红网</a></li>
<li><a href="https://people.rednet.cn/front/messages/list?type_id=8">百姓呼声</a></li>
<li><a href="https://315.rednet.cn/#/leaveMsgList">消费维权</a></li>
<li><a href="https://law.rednet.cn/consult.html">问法湖南</a></li>
</ul>
<p><br><br></p>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a><br>
<br></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>播客数据集 | 30w播客(Podcast)的560w条评论数据(2005-2023)</title>
      <link>https://textdata.cn/blog/2024-06-03-podcasts-dataset/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-06-03-podcasts-dataset/</guid>
      <description>&lt;h2 id=&#34;一数据集概况&#34;&gt;一、数据集概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;媒体名称: Podcast
数据来源: https://podcasts.apple.com/
覆盖年度: 2005-12-10 ~ 2023-03-07
博客id数量: 303911
评论条数: 5607021
所含字段: podcast_id、title、content、rating、author_id、created_at、category等
获取数据: 200元，加微信 372335839， 备注「姓名-学校-专业-播客」。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-screen.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;规模庞大，字段内容丰富，适合社会学、新闻与传播学、语言学、经济学、管理学等领域学者开展研究。&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二读取数据&#34;&gt;二、读取数据&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;pandas.read_json()&lt;/code&gt; 读取&lt;/p&gt;
&lt;h3 id=&#34;21-podcastsjson&#34;&gt;2.1 podcasts.json&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;podcasts.json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lines&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#查看podcasts.json字段&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Index([&amp;#39;podcast_id&amp;#39;, &amp;#39;itunes_id&amp;#39;, &amp;#39;slug&amp;#39;, &amp;#39;itunes_url&amp;#39;, &amp;#39;title&amp;#39;, &amp;#39;author&amp;#39;,
       &amp;#39;description&amp;#39;, &amp;#39;average_rating&amp;#39;, &amp;#39;ratings_count&amp;#39;, &amp;#39;scraped_at&amp;#39;],
      dtype=&amp;#39;object&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-pdf.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-categoriesjson&#34;&gt;2.2 categories.json&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;categories.json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lines&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#categories.json字段&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Index([&amp;#39;podcast_id&amp;#39;, &amp;#39;itunes_id&amp;#39;, &amp;#39;category&amp;#39;], dtype=&amp;#39;object&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-cdf.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-reviewsjson&#34;&gt;2.3 reviews.json&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;rdf = pd.read_json(&amp;#39;reviews.json&amp;#39;, lines=True)

#reviews.json字段
print(rdf.columns)
rdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Index([&amp;#39;podcast_id&amp;#39;, &amp;#39;title&amp;#39;, &amp;#39;content&amp;#39;, &amp;#39;rating&amp;#39;, &amp;#39;author_id&amp;#39;, &amp;#39;created_at&amp;#39;],
      dtype=&amp;#39;object&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-rdf.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三实验&#34;&gt;三、实验&lt;/h2&gt;
&lt;h3 id=&#34;31-筛选出含某关键词的播客名&#34;&gt;3.1 筛选出含某关键词的播客名&lt;/h3&gt;
&lt;p&gt;从 &lt;em&gt;&lt;strong&gt;podcasts.json&lt;/strong&gt;&lt;/em&gt; 中筛选出含 &lt;em&gt;&lt;strong&gt;China&lt;/strong&gt;&lt;/em&gt; 或 &lt;em&gt;&lt;strong&gt;中国&lt;/strong&gt;&lt;/em&gt; 的播客记录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;china_podcast_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;China&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_podcast_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-pdf-title.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#查看这86个播客名&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;china_podcast_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;China Arts Podcast&amp;#39;
 &amp;#39;Made in China Podcast: International Business | Crowdfunding | Entrepreneurship&amp;#39;
 &amp;#39;Chinasource Recently Added Resources&amp;#39; &amp;#39;TIC China Network&amp;#39; &amp;#39;UNDP China&amp;#39;
 &amp;#39;Wellness in China&amp;#39; &amp;#39;Party In China&amp;#39; &amp;#39;Tails From China&amp;#39; &amp;#39;Focus on China&amp;#39;
 &amp;#39;CEIBS China Knowledge&amp;#39; &amp;#39;Bottled in China&amp;#39; &amp;#39;Environment China&amp;#39;
 &amp;#39;China Money Podcast - Audio Episodes&amp;#39;
 &amp;#39;China Money Podcast - Video Episodes&amp;#39;
 &amp;#39;China Jedi Podcast: Expat Life | Chinese Culture | Business | Travel | China&amp;#39;
 &amp;#39;China Digital Marketing Podcast&amp;#39; &amp;#39;Goodbye China Podcast&amp;#39;
 &amp;#39;History and Story of China&amp;#39; &amp;#39;Made in China&amp;#39;
 &amp;#39;China Voices: The AmCham Shanghai Podcast&amp;#39;
......
 &amp;#34;China Now&amp;#39;s Podcast&amp;#34; &amp;#39;China: As History Is My Witness&amp;#39;
 &amp;#39;Safeguarding Dunhuang for China and the World&amp;#39; &amp;#39;Biz China&amp;#39;
 &amp;#39;Chinaman Talks Sports&amp;#39; &amp;#39;China in the World&amp;#39; &amp;#39;The History of China&amp;#39;
 &amp;#34;Forbidden City: Inside the Court of China&amp;#39;s Emperors&amp;#34;
 &amp;#39;NAFTA at Twenty: Trade, Transformation and the China Factor&amp;#39;
 &amp;#39;NAFTA at Twenty: Trade, Transformation and the China Factor (Audio Only)&amp;#39;
 &amp;#39;China and the Chinese by Herbert Allen Giles&amp;#39; &amp;#39;China Doing Sweden&amp;#39;
 &amp;#39;China MSG&amp;#39; &amp;#39;Yellow Star: China News&amp;#39; &amp;#39;Made in China&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;32-筛选出含某关键词的内容名&#34;&gt;3.2 筛选出含某关键词的内容名&lt;/h3&gt;
&lt;p&gt;筛选出含 &lt;em&gt;&lt;strong&gt;China&lt;/strong&gt;&lt;/em&gt; 的节目标题，注意podcast的title不变，但是每期的内容名(title)是变化的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;#从 reviews.json 中筛选出含 China 或 中国 的评论记录
china_title_df = rdf[rdf[&amp;#39;title&amp;#39;].fillna(&amp;#39;&amp;#39;).str.contains(&amp;#39;China|中国&amp;#39;)]
china_title_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/06-rdf-title.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;china_title_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#34;What&amp;#39;s a China?&amp;#34; &amp;#39;Thanks Justin - from China&amp;#39;
 &amp;#39;American Working in China Coffee Industry&amp;#39; &amp;#39;Babybee in China&amp;#39;
 &amp;#39;Listening From China!!&amp;#39; &amp;#39;Right on China.&amp;#39; &amp;#39;Excellent China Series!&amp;#39;
 &amp;#39;China Trade War episode was fantastic&amp;#39;
 &amp;#39;Really enjoyed the China / Tariff discussion&amp;#39; &amp;#39;China Review&amp;#39;
 &amp;#39;Beautiful videos of China!&amp;#39; &amp;#39;Learn about The Real China business&amp;#39;
 &amp;#39;Doing business in China? Listen to this!&amp;#39; &amp;#39;China&amp;#39;
 &amp;#34;Insightful look into China&amp;#39;s growing influence&amp;#34;
 &amp;#39;Great smart brevity on China&amp;#39; &amp;#39;Great insights about China&amp;#39;
 &amp;#39;Best tech podcast for China&amp;#39;
 &amp;#39;Great introduction to China’s history&amp;#39;
......
 &amp;#39;Jump into the rabbit hole of China Tech 🕳&amp;#39; &amp;#39;你好 from China!&amp;#39;
 &amp;#39;Blong in China&amp;#39;
 &amp;#39;Informational but the misconception of Gaokao in China is awkward (gatteca&amp;#39;
 &amp;#39;Listening from China&amp;#39; &amp;#39;Not available in China&amp;#39; &amp;#39;With Love from China&amp;#39;
 &amp;#39;Great talent from China.&amp;#39; &amp;#39;First time to listen to dj music from China&amp;#39;
 &amp;#39;Emergency China podcast was unreal&amp;#39; &amp;#39;China Episode&amp;#39; &amp;#39;China&amp;#39;
 &amp;#39;矮大紧老师的确是现代中国文化圈里面的高山晓辉里的奇松&amp;#39; &amp;#39;Love the China rant&amp;#39; &amp;#39;中国好&amp;#39;
 &amp;#39;Powerful rant on China much needed&amp;#39; &amp;#39;NBA and China&amp;#39;
 &amp;#39;Life in China is Awesome!&amp;#39; &amp;#39;Worthy China Podcast&amp;#39;
 &amp;#39;Learn More About China Now&amp;#39; &amp;#39;Michael from China&amp;#39;
 &amp;#39;Best Survey of China Lecture in iTunes U&amp;#39; &amp;#39;China&amp;#39; &amp;#39;Band in China&amp;#39;
 &amp;#39;Band in China&amp;#39; &amp;#39;关于中国生活有趣的观点&amp;#39; &amp;#39;Deep and personal angle to look at China&amp;#39;
 &amp;#39;A must-listen podcast for understanding the current and future China&amp;#39;
 &amp;#39;Stop crying about China&amp;#39; &amp;#39;New podcast from a great China program&amp;#39;
 &amp;#39;Saying hi from China&amp;#39; &amp;#39;终于有一档中国记者做的播客&amp;#39; &amp;#39;China’s’  Detention Camps&amp;#39;
......
 &amp;#39;Required listening to keep up with contemporary China&amp;#39;
 &amp;#39;Most antiChina guests and content&amp;#39; &amp;#39;Fantastic China-centric podcast&amp;#39;
 &amp;#39;Great, well rounded look at China&amp;#39; &amp;#39;Great info and insights on China&amp;#39;
 &amp;#39;The best Podcast on China-related topics&amp;#39; &amp;#39;Big trouble in little China&amp;#39;
 &amp;#39;中国最好的游戏广播。&amp;#39; &amp;#39;中国第一家做游戏广播的！！&amp;#39; &amp;#39;The best game radio in China!&amp;#39;
 &amp;#39;Best Podcast on China’s History&amp;#39;
 &amp;#39;Great China Insights and interview topics&amp;#39;
 &amp;#39;Howard Whiteson’s China based interviews are Short Concise well- easy&amp;#39;
 &amp;#39;Excellent source for politics in China&amp;#39; &amp;#39;Good honest reporting on China&amp;#39;
 &amp;#34;GOD&amp;#39;S Warning About China&amp;#34; &amp;#39;Hilarious English Pod in China!&amp;#39;
 &amp;#39;Bursting with China Healthcare Insights&amp;#39; &amp;#39;China oh China&amp;#39;
 &amp;#39;The Real China Story&amp;#39;
 &amp;#39;China’s ambitions and their impact: Insightfully and compellingkt, weaves the micro and the macro&amp;#39;
 &amp;#39;Sets the bar for China and international reporting&amp;#39;
 &amp;#34;Amazingly balanced and detailed account of China&amp;#39;s growing influence around the world&amp;#34;
 &amp;#39;On China’s New Silk Road&amp;#39; &amp;#39;China’s plan for the future&amp;#39;
 &amp;#39;Great new Content on China and Sede Vacante&amp;#39; &amp;#39;没有中国特色&amp;#39;
 &amp;#39;“China Joe need we say more”&amp;#39;
 &amp;#39;Interesting and informative podcast on China&amp;#39;
 &amp;#39;SCTV from the South China Sea&amp;#39; &amp;#39;China and Omicron&amp;#39; &amp;#39;Strangers in China&amp;#39;
 &amp;#39;China seems very scary&amp;#39; &amp;#39;China Lockdown&amp;#39;
 &amp;#39;I travel to China regularly just to listen&amp;#39;
 &amp;#39;Best American News I Can Find in China!!!!&amp;#39;]
Selection deleted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;33-筛选出含某关键词的评论&#34;&gt;3.3 筛选出含某关键词的评论&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#从 reviews.json 中筛选出含 China 或 中国 的评论记录&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_reviews_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;China|中国&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;china_reviews_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/07-rdf-content.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;四获取方式&#34;&gt;四、获取方式&lt;/h2&gt;
&lt;p&gt;200元，加微信 372335839， 备注「姓名-学校-专业-播客」。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关内容&#34;&gt;相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/datasets_available_for_management_science/&#34;&gt;LIST | 可供社科(经管)领域使用的数据集汇总&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/the_text_analysis_list_about_ms/&#34;&gt;LIST | 社科(经管)数据挖掘文献资料汇总&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/&#34;&gt;推荐 | 文本分析库cntext2.x使用手册&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;付费视频课 | Python实证指标构建与文本分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/&#34;&gt;代码 | 如何处理远超电脑内存的csv文件&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-14-daily-news-dataset/&#34;&gt;50G新闻数据集 | 含 人民日报/光明日报/参考消息/经济日报 等 60+ 家媒体(更新至2024.05)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/&#34;&gt;&lt;strong&gt;代码 | 使用「新闻数据」构造概念词提及量「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/&#34;&gt;代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">媒体名称: Podcast
数据来源: https://podcasts.apple.com/
覆盖年度: 2005-12-10 ~ 2023-03-07
博客id数量: 303911
评论条数: 5607021
所含字段: podcast_id、title、content、rating、author_id、created_at、category等
获取数据: 200元，加微信 372335839， 备注「姓名-学校-专业-播客」。
</code></pre></div><p><img loading="lazy" src="img/01-screen.png" alt=""  />
</p>
<p>规模庞大，字段内容丰富，适合社会学、新闻与传播学、语言学、经济学、管理学等领域学者开展研究。</p>
<br>
<br>
<h2 id="二读取数据">二、读取数据</h2>
<p>使用 <code>pandas.read_json()</code> 读取</p>
<h3 id="21-podcastsjson">2.1 podcasts.json</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">pdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_json</span><span class="p">(</span><span class="s1">&#39;podcasts.json&#39;</span><span class="p">,</span> <span class="n">lines</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="c1">#查看podcasts.json字段</span>
<span class="nb">print</span><span class="p">(</span><span class="n">pdf</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>
<span class="n">pdf</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;podcast_id&#39;, &#39;itunes_id&#39;, &#39;slug&#39;, &#39;itunes_url&#39;, &#39;title&#39;, &#39;author&#39;,
       &#39;description&#39;, &#39;average_rating&#39;, &#39;ratings_count&#39;, &#39;scraped_at&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><p><img loading="lazy" src="img/02-pdf.png" alt=""  />
</p>
<br>
<h3 id="22-categoriesjson">2.2 categories.json</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_json</span><span class="p">(</span><span class="s1">&#39;categories.json&#39;</span><span class="p">,</span> <span class="n">lines</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="c1">#categories.json字段</span>
<span class="nb">print</span><span class="p">(</span><span class="n">cdf</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>
<span class="n">cdf</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;podcast_id&#39;, &#39;itunes_id&#39;, &#39;category&#39;], dtype=&#39;object&#39;)
</code></pre></div><p><img loading="lazy" src="img/03-cdf.png" alt=""  />
</p>
<br>
<h3 id="23-reviewsjson">2.3 reviews.json</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">rdf = pd.read_json(&#39;reviews.json&#39;, lines=True)

#reviews.json字段
print(rdf.columns)
rdf
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;podcast_id&#39;, &#39;title&#39;, &#39;content&#39;, &#39;rating&#39;, &#39;author_id&#39;, &#39;created_at&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><p><img loading="lazy" src="img/04-rdf.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三实验">三、实验</h2>
<h3 id="31-筛选出含某关键词的播客名">3.1 筛选出含某关键词的播客名</h3>
<p>从 <em><strong>podcasts.json</strong></em> 中筛选出含 <em><strong>China</strong></em> 或 <em><strong>中国</strong></em> 的播客记录</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">china_podcast_df</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;title&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;China&#39;</span><span class="p">)]</span>
<span class="n">china_podcast_df</span>
</code></pre></div><p><img loading="lazy" src="img/05-pdf-title.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#查看这86个播客名</span>
<span class="nb">print</span><span class="p">(</span><span class="n">china_podcast_df</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;China Arts Podcast&#39;
 &#39;Made in China Podcast: International Business | Crowdfunding | Entrepreneurship&#39;
 &#39;Chinasource Recently Added Resources&#39; &#39;TIC China Network&#39; &#39;UNDP China&#39;
 &#39;Wellness in China&#39; &#39;Party In China&#39; &#39;Tails From China&#39; &#39;Focus on China&#39;
 &#39;CEIBS China Knowledge&#39; &#39;Bottled in China&#39; &#39;Environment China&#39;
 &#39;China Money Podcast - Audio Episodes&#39;
 &#39;China Money Podcast - Video Episodes&#39;
 &#39;China Jedi Podcast: Expat Life | Chinese Culture | Business | Travel | China&#39;
 &#39;China Digital Marketing Podcast&#39; &#39;Goodbye China Podcast&#39;
 &#39;History and Story of China&#39; &#39;Made in China&#39;
 &#39;China Voices: The AmCham Shanghai Podcast&#39;
......
 &#34;China Now&#39;s Podcast&#34; &#39;China: As History Is My Witness&#39;
 &#39;Safeguarding Dunhuang for China and the World&#39; &#39;Biz China&#39;
 &#39;Chinaman Talks Sports&#39; &#39;China in the World&#39; &#39;The History of China&#39;
 &#34;Forbidden City: Inside the Court of China&#39;s Emperors&#34;
 &#39;NAFTA at Twenty: Trade, Transformation and the China Factor&#39;
 &#39;NAFTA at Twenty: Trade, Transformation and the China Factor (Audio Only)&#39;
 &#39;China and the Chinese by Herbert Allen Giles&#39; &#39;China Doing Sweden&#39;
 &#39;China MSG&#39; &#39;Yellow Star: China News&#39; &#39;Made in China&#39;]
</code></pre></div><br>
<h3 id="32-筛选出含某关键词的内容名">3.2 筛选出含某关键词的内容名</h3>
<p>筛选出含 <em><strong>China</strong></em> 的节目标题，注意podcast的title不变，但是每期的内容名(title)是变化的。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#从 reviews.json 中筛选出含 China 或 中国 的评论记录
china_title_df = rdf[rdf[&#39;title&#39;].fillna(&#39;&#39;).str.contains(&#39;China|中国&#39;)]
china_title_df
</code></pre></div><p><img loading="lazy" src="img/06-rdf-title.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">china_title_df</span><span class="o">.</span><span class="n">content</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#34;What&#39;s a China?&#34; &#39;Thanks Justin - from China&#39;
 &#39;American Working in China Coffee Industry&#39; &#39;Babybee in China&#39;
 &#39;Listening From China!!&#39; &#39;Right on China.&#39; &#39;Excellent China Series!&#39;
 &#39;China Trade War episode was fantastic&#39;
 &#39;Really enjoyed the China / Tariff discussion&#39; &#39;China Review&#39;
 &#39;Beautiful videos of China!&#39; &#39;Learn about The Real China business&#39;
 &#39;Doing business in China? Listen to this!&#39; &#39;China&#39;
 &#34;Insightful look into China&#39;s growing influence&#34;
 &#39;Great smart brevity on China&#39; &#39;Great insights about China&#39;
 &#39;Best tech podcast for China&#39;
 &#39;Great introduction to China’s history&#39;
......
 &#39;Jump into the rabbit hole of China Tech 🕳&#39; &#39;你好 from China!&#39;
 &#39;Blong in China&#39;
 &#39;Informational but the misconception of Gaokao in China is awkward (gatteca&#39;
 &#39;Listening from China&#39; &#39;Not available in China&#39; &#39;With Love from China&#39;
 &#39;Great talent from China.&#39; &#39;First time to listen to dj music from China&#39;
 &#39;Emergency China podcast was unreal&#39; &#39;China Episode&#39; &#39;China&#39;
 &#39;矮大紧老师的确是现代中国文化圈里面的高山晓辉里的奇松&#39; &#39;Love the China rant&#39; &#39;中国好&#39;
 &#39;Powerful rant on China much needed&#39; &#39;NBA and China&#39;
 &#39;Life in China is Awesome!&#39; &#39;Worthy China Podcast&#39;
 &#39;Learn More About China Now&#39; &#39;Michael from China&#39;
 &#39;Best Survey of China Lecture in iTunes U&#39; &#39;China&#39; &#39;Band in China&#39;
 &#39;Band in China&#39; &#39;关于中国生活有趣的观点&#39; &#39;Deep and personal angle to look at China&#39;
 &#39;A must-listen podcast for understanding the current and future China&#39;
 &#39;Stop crying about China&#39; &#39;New podcast from a great China program&#39;
 &#39;Saying hi from China&#39; &#39;终于有一档中国记者做的播客&#39; &#39;China’s’  Detention Camps&#39;
......
 &#39;Required listening to keep up with contemporary China&#39;
 &#39;Most antiChina guests and content&#39; &#39;Fantastic China-centric podcast&#39;
 &#39;Great, well rounded look at China&#39; &#39;Great info and insights on China&#39;
 &#39;The best Podcast on China-related topics&#39; &#39;Big trouble in little China&#39;
 &#39;中国最好的游戏广播。&#39; &#39;中国第一家做游戏广播的！！&#39; &#39;The best game radio in China!&#39;
 &#39;Best Podcast on China’s History&#39;
 &#39;Great China Insights and interview topics&#39;
 &#39;Howard Whiteson’s China based interviews are Short Concise well- easy&#39;
 &#39;Excellent source for politics in China&#39; &#39;Good honest reporting on China&#39;
 &#34;GOD&#39;S Warning About China&#34; &#39;Hilarious English Pod in China!&#39;
 &#39;Bursting with China Healthcare Insights&#39; &#39;China oh China&#39;
 &#39;The Real China Story&#39;
 &#39;China’s ambitions and their impact: Insightfully and compellingkt, weaves the micro and the macro&#39;
 &#39;Sets the bar for China and international reporting&#39;
 &#34;Amazingly balanced and detailed account of China&#39;s growing influence around the world&#34;
 &#39;On China’s New Silk Road&#39; &#39;China’s plan for the future&#39;
 &#39;Great new Content on China and Sede Vacante&#39; &#39;没有中国特色&#39;
 &#39;“China Joe need we say more”&#39;
 &#39;Interesting and informative podcast on China&#39;
 &#39;SCTV from the South China Sea&#39; &#39;China and Omicron&#39; &#39;Strangers in China&#39;
 &#39;China seems very scary&#39; &#39;China Lockdown&#39;
 &#39;I travel to China regularly just to listen&#39;
 &#39;Best American News I Can Find in China!!!!&#39;]
Selection deleted
</code></pre></div><br>
<h3 id="33-筛选出含某关键词的评论">3.3 筛选出含某关键词的评论</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#从 reviews.json 中筛选出含 China 或 中国 的评论记录</span>
<span class="n">china_reviews_df</span> <span class="o">=</span> <span class="n">rdf</span><span class="p">[</span><span class="n">rdf</span><span class="p">[</span><span class="s1">&#39;content&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;China|中国&#39;</span><span class="p">)]</span>
<span class="n">china_reviews_df</span>
</code></pre></div><p><img loading="lazy" src="img/07-rdf-content.png" alt=""  />
</p>
<br>
<h2 id="四获取方式">四、获取方式</h2>
<p>200元，加微信 372335839， 备注「姓名-学校-专业-播客」。</p>
<p><br><br></p>
<h2 id="相关内容">相关内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">50G新闻数据集 | 含 人民日报/光明日报/参考消息/经济日报 等 60+ 家媒体(更新至2024.05)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></p>
</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>新闻数据集 | 1102w条纽约时报(1920-2020)</title>
      <link>https://textdata.cn/blog/2024-06-01-new-york-times-article-from-1920-2020/</link>
      <pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-06-01-new-york-times-article-from-1920-2020/</guid>
      <description>新闻数据集研究价值大， 您可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度指数、文本相似度、情感分析。而且可训练词向量，构建新的词典，开发新的指标指数。计算机自然语言处理、经济学、管理学、新闻传播学、公共管理等领域均可使用。</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">媒体名称: New York Times
覆盖年度: 1920 ~ 2020
记录条数: 11027535
所含字段: year, title, excerpt
数据集地址: https://www.kaggle.com/datasets/tumanovalexander/nyt-articles-data/data
</code></pre></div><p><img loading="lazy" src="img/screen.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_parquet</span><span class="p">(</span><span class="s1">&#39;nyt_data.parquet&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">drop_dupliacates</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-文本长度">2.2 文本长度</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">title_mean_len</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">excerpt_mean_len</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">excerpt</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;标题平均长度: </span><span class="si">{</span><span class="n">title_mean_len</span><span class="si">:</span><span class="s1">.2f</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;摘录平均长度: </span><span class="si">{</span><span class="n">excerpt_mean_len</span><span class="si">:</span><span class="s1">.2f</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">标题平均长度: 173.30
摘录平均长度: 68.43
</code></pre></div><br>
<h3 id="23-缺失率">2.3 缺失率</h3>
<p>这里我们定义文本长度为0，则该字段为缺失。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">title_na_ratio</span> <span class="o">=</span> <span class="mi">100</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span><span class="o">==</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">size</span> <span class="o">/</span> <span class="n">df</span><span class="o">.</span><span class="n">size</span>
<span class="n">excerpt_na_ratio</span> <span class="o">=</span> <span class="mi">100</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">excerpt</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span><span class="o">==</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">size</span> <span class="o">/</span> <span class="n">df</span><span class="o">.</span><span class="n">size</span>

<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;标题缺失率: </span><span class="si">{</span><span class="n">title_na_ratio</span><span class="si">:</span><span class="s1">.2f</span><span class="si">}</span><span class="s1">%&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;摘录缺失率: </span><span class="si">{</span><span class="n">excerpt_na_ratio</span><span class="si">:</span><span class="s1">.2f</span><span class="si">}</span><span class="s1">%&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">标题缺失率: 0.00%
摘录缺失率: 52.25%
</code></pre></div><p><br><br></p>
<h2 id="类似的数据集">类似的数据集</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">媒体名称: Times of India
覆盖年度: 2001 ~ 2023.q2
记录条数: 3876557
所含字段: publish_date, headline_category, headline_text
数据集地址: https://www.kaggle.com/datasets/therohk/india-headlines-news-dataset
</code></pre></div><p><br><br></p>
<h2 id="三相关内容">三、相关内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">50G新闻数据集 | 含 人民日报/光明日报/参考消息/经济日报 等 60+ 家媒体(更新至2024.05)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">代码 | 如何处理远超电脑内存的csv文件</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/"><strong>可视化 | 人民日报语料反映七十年文化演变</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/">代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</a></p>
</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>代码 | 使用地方gov工作报告生成某类概念词词频「面板数据」</title>
      <link>https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/</guid>
      <description>使用31省市的2002-2024年的省级政府工作报告，绘制出的不同类别关键词的趋势图。直接上最终效果效果图</description>
      <content:encoded><![CDATA[<p>使用31省市的2002-2024年的省级政府工作报告，绘制出的不同类别关键词的趋势图。 直接上效果效果图</p>
<p><img loading="lazy" src="img/12-tri-agri.png" alt=""  />
</p>
<p><img loading="lazy" src="img/13-inovation-plot.png" alt=""  />
</p>
<p><img loading="lazy" src="img/14-enviroment-plot.png" alt=""  />
</p>
<br>
<p>其实绘制三种图的数据是面板型数据，今天主要分享如何利用省级政府工作报告构建某类概念词频(创新、环保、三农)的面板数据，并绘制8省市概念词频折线图。 大家可以根据自己的研究需要更改代码， 生成自己概念的词频面板数据。</p>
<br>
<br>
<h2 id="获取数据">获取数据</h2>
<p><a href="https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/">数据集(付费) | 国、省、市三级政府工作报告文本</a></p>
<p>数据集100元，  <strong>加微信 372335839， 备注「姓名-学校-专业」</strong>。</p>
<p><br><br></p>
<h2 id="一直接上代码">一、直接上代码</h2>
<h3 id="11-代码文件结构">1.1 代码文件结构</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">项目文件夹
   |---代码.ipynb
   |---GovReportData        #数据集 | 国、省、市三级政府工作报告文本
           |---city.csv     #市政府工作报告（2002-2024）
           |---province.csv #省政府工作报告（2002-2024）
           |---nation.csv   #国务院政府工作报告（2002-2024）
</code></pre></div><br>
<h3 id="12-读取数据">1.2 读取数据</h3>
<p>读取省报告数据文件 <strong>GovReportData/province.csv</strong> ，<a href="https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/">点击链接，获取政府工作报告数据集</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">pdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">)</span>
<span class="n">pdf</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="12-生成面板数据函数">1.2 生成面板数据函数</h3>
<p>假设你使用的政府(省、市)工作报告数据是大邓提供的，可以直接使用下面封装的函数，快速生成概念词典，指定省份指定年度区间的面板数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">generate_prov_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">concept_words</span><span class="p">,</span> <span class="n">selected_provs</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">selected_years</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    csvf: csv的文件路径
</span><span class="s2">    concept_words: 概念词词语列表
</span><span class="s2">    selected_provs: 筛选指定省份的数据进行计算，列表
</span><span class="s2">    selected_years: 筛选指定年度的数据进行计算，数字列表
</span><span class="s2">    
</span><span class="s2">    结果返回dataframe， 每一行代表一个省，每一列代表一年。
</span><span class="s2">    &#34;&#34;&#34;</span>
    
    <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
    <span class="kn">import</span> <span class="nn">jieba</span>
    
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">csvf</span><span class="p">)</span>
    <span class="n">df</span><span class="p">[</span><span class="s1">&#39;doc&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;doc&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
    <span class="n">df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>


    <span class="n">table_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">pivot_table</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> 
                       <span class="n">columns</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span>  <span class="c1">#列-年份</span>
                       <span class="n">index</span><span class="o">=</span><span class="s1">&#39;province&#39;</span><span class="p">,</span>    <span class="c1">#行-省份</span>
                       <span class="n">values</span><span class="o">=</span><span class="s1">&#39;doc&#39;</span><span class="p">,</span>   <span class="c1">#单元格-文本</span>
                       <span class="n">aggfunc</span><span class="o">=</span><span class="k">lambda</span> <span class="n">cs</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">cs</span><span class="p">))</span> <span class="c1">#让单元格填充文本</span>

    <span class="k">if</span> <span class="n">selected_provs</span><span class="p">:</span>
        <span class="n">table_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="p">[</span><span class="n">table_df</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">isin</span><span class="p">(</span><span class="n">selected_provs</span><span class="p">)]</span>
    
    <span class="k">if</span> <span class="n">selected_years</span><span class="p">:</span>
        <span class="n">selected_years</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">selected_years</span><span class="p">]</span>
        <span class="n">table_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="p">[</span><span class="n">selected_years</span><span class="p">]</span>


    <span class="n">word_count_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">t</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">t</span><span class="p">)))))</span>
    <span class="n">concept_word_count_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">concept_words</span><span class="p">)))</span>
    <span class="n">concept_word_ratio_df</span> <span class="o">=</span> <span class="n">concept_word_count_df</span><span class="o">/</span><span class="n">word_count_df</span>
    <span class="k">return</span> <span class="n">concept_word_ratio_df</span>


<span class="n">concept_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;农村&#39;</span><span class="p">,</span> <span class="s1">&#39;农业&#39;</span><span class="p">,</span> <span class="s1">&#39;农民&#39;</span><span class="p">]</span>
<span class="c1">#所有省份，所有年度(2002-2024)</span>
<span class="n">panel_data_df</span> <span class="o">=</span> <span class="n">generate_prov_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">,</span> 
                                         <span class="n">concept_words</span> <span class="o">=</span> <span class="n">concept_words</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">panel_data_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>

<span class="c1">#如果需要保存</span>
<span class="c1">#panel_data_df.to_csv(&#39;省-三农-面板2001-2024.csv&#39;)</span>
<span class="c1">#panel_data_df.to_excel(&#39;省-三农-面板2001-2024.xlsx&#39;)</span>
<span class="n">panel_data_df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">(31, 24)
</code></pre></div><p><img loading="lazy" src="img/02-panel-data.png" alt=""  />
</p>
<br>
<p>生成 山东省河北省2010-2024期间政府工作报告提及三农词词频占比的面板数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">concept_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;农村&#39;</span><span class="p">,</span> <span class="s1">&#39;农业&#39;</span><span class="p">,</span> <span class="s1">&#39;农民&#39;</span><span class="p">]</span>
<span class="n">selected_provs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;山东省&#39;</span><span class="p">,</span> <span class="s1">&#39;河北省&#39;</span><span class="p">]</span>
<span class="n">selected_years</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">2010</span><span class="p">,</span> <span class="mi">2025</span><span class="p">))</span>
<span class="n">panel_data_df</span> <span class="o">=</span> <span class="n">generate_prov_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">,</span> 
                                         <span class="n">concept_words</span> <span class="o">=</span> <span class="n">concept_words</span><span class="p">,</span> 
                                         <span class="n">selected_provs</span> <span class="o">=</span> <span class="n">selected_provs</span><span class="p">,</span>
                                         <span class="n">selected_years</span> <span class="o">=</span> <span class="n">selected_years</span><span class="p">)</span>


<span class="c1">#如果需要保存</span>
<span class="c1">#panel_data_df.to_csv(&#39;山东河北-三农-面板2010-2024.csv&#39;)</span>
<span class="c1">#panel_data_df.to_excel(&#39;山东河北-三农-面板2010-2024.xlsx&#39;)</span>

<span class="n">panel_data_df</span>
</code></pre></div><p><img loading="lazy" src="img/03-hebei-shandong-panel-data.png" alt=""  />
</p>
<br>
<h3 id="13-绘制折线图">1.3 绘制折线图</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">plot_line</span><span class="p">(</span><span class="n">panel_df</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
    <span class="kn">import</span> <span class="nn">matplotlib</span>
    <span class="kn">import</span> <span class="nn">scienceplots</span>
    <span class="kn">import</span> <span class="nn">platform</span>
    <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
    <span class="kn">import</span> <span class="nn">matplotlib_inline</span>
    <span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
    <span class="kn">import</span> <span class="nn">jieba</span>
    <span class="kn">import</span> <span class="nn">warnings</span>
    <span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>

    <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
    <span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

    <span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
    <span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
    <span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
    
    
    <span class="n">panel_df_T</span> <span class="o">=</span> <span class="n">panel_df</span><span class="o">.</span><span class="n">T</span>

    <span class="n">ax</span> <span class="o">=</span> <span class="n">panel_df_T</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
    <span class="c1"># 添加图例，并指定位置和偏移</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper right&#39;</span><span class="p">,</span> <span class="n">bbox_to_anchor</span><span class="o">=</span><span class="p">(</span><span class="mf">1.15</span><span class="p">,</span> <span class="mf">1.05</span><span class="p">))</span>


    <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;词频&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>

    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><br>
<p>现在我们试试</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">concept_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;农村&#39;</span><span class="p">,</span> <span class="s1">&#39;农业&#39;</span><span class="p">,</span> <span class="s1">&#39;农民&#39;</span><span class="p">]</span>
<span class="n">selected_provs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;山东省&#39;</span><span class="p">,</span> <span class="s1">&#39;河北省&#39;</span><span class="p">]</span>
<span class="n">selected_years</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">2010</span><span class="p">,</span> <span class="mi">2025</span><span class="p">))</span> <span class="c1">#2010年-2024年</span>

<span class="c1">#生成面板数据</span>
<span class="n">panel_data_df</span> <span class="o">=</span> <span class="n">generate_prov_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">,</span>
                                         <span class="n">concept_words</span> <span class="o">=</span> <span class="n">concept_words</span><span class="p">,</span> 
                                         <span class="n">selected_provs</span> <span class="o">=</span> <span class="n">selected_provs</span><span class="p">,</span>
                                         <span class="n">selected_years</span> <span class="o">=</span> <span class="n">selected_years</span><span class="p">)</span>

<span class="c1">#绘图</span>
<span class="n">plot_line</span><span class="p">(</span><span class="n">panel_df</span><span class="o">=</span><span class="n">panel_data_df</span><span class="p">,</span> 
          <span class="n">title</span><span class="o">=</span><span class="s1">&#39;山东、河北三农词折线图(2010-2024)&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-hebei-shandong-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二函数代码拆解">二、函数代码拆解</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>36.6M的数据，含file和text两个字段， <a href="2023-12-17-gov-anual-report-dataset/"><strong>点击获取政府公告文件</strong></a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-Python" data-lang="Python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">pdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">)</span>
<span class="n">pdf</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-构建透视表">2.2 构建透视表</h3>
<p>构建透视表，行索引名为省 prov，列名为时间year， 单元格内填充工作报告文本。</p>
<p>代码不用太深究，只要知道代码操作前后数据形态的变化即可。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">table_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">pivot_table</span><span class="p">(</span><span class="n">pdf</span><span class="p">,</span> 
                       <span class="n">columns</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span>  <span class="c1">#列-年份</span>
                       <span class="n">index</span><span class="o">=</span><span class="s1">&#39;province&#39;</span><span class="p">,</span>    <span class="c1">#行-省份</span>
                       <span class="n">values</span><span class="o">=</span><span class="s1">&#39;doc&#39;</span><span class="p">,</span>   <span class="c1">#单元格-文本</span>
                       <span class="n">aggfunc</span><span class="o">=</span><span class="k">lambda</span> <span class="n">cs</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">cs</span><span class="p">))</span> <span class="c1">#让单元格填充文本</span>

<span class="nb">print</span><span class="p">(</span><span class="n">table_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">table_df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">(31, 24)
</code></pre></div><p><img loading="lazy" src="img/06-df.png" alt=""  />
</p>
<p>table_df是一个31行， 24列的矩阵。 每行代表一个省，每一列代表一个年份。</p>
<br>
<h3 id="23-统计总词数">2.3 统计总词数</h3>
<p>统计所有报告的词语数。代码高度抽象， 咱们只看结果。 从 table_df 变为 word_count_df</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jieba</span>
<span class="n">word_count_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">t</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">t</span><span class="p">)))))</span>
<span class="n">word_count_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">(31, 24)
</code></pre></div><p><img loading="lazy" src="img/07-word_count_df.png" alt=""  />
</p>
<br>
<h3 id="24-统计概念词频占比">2.4 统计概念词频(占比)</h3>
<p>统计所有报告中，某概念词词频，以三农为例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">concept_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;农村&#39;</span><span class="p">,</span> <span class="s1">&#39;农业&#39;</span><span class="p">,</span> <span class="s1">&#39;农民&#39;</span><span class="p">]</span>

<span class="n">concept_word_count_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">concept_words</span><span class="p">)))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">concept_word_count_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>

<span class="c1">#为方便，只展示前5行</span>
<span class="n">concept_word_count_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">(31, 24)
</code></pre></div><p><img loading="lazy" src="img/08-tri-df.png" alt=""  />
</p>
<br>
<p>将数据转化为词频占比，即 <strong>报告「三农词」出现次数/报告总词数</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">concept_word_ratio_df</span> <span class="o">=</span> <span class="n">concept_word_count_df</span><span class="o">/</span><span class="n">word_count_df</span>
<span class="nb">print</span><span class="p">(</span><span class="n">concept_word_ratio_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">concept_word_ratio_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">(31, 24)
</code></pre></div><p><img loading="lazy" src="img/09-concept_word_ratio_df.png" alt=""  />
</p>
<br>
<p>到目前为止， 已经将一坨文本，转化为结构化的面板数据， 其实现在就可以保存起来啦。</p>
<br>
<h3 id="25-保存结果">2.5 保存结果</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">concept_word_ratio_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;concept_word_ratio.csv&#39;</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h2 id="三可视化">三、可视化</h2>
<h3 id="31-稍作解释">3.1 稍作解释</h3>
<p>可视化 plot_line 函数内部没有进行过多的数据变换， 仅仅只是进行了转置 和 日期格式变化。本小节只稍作解释，马上进入后续的三个可视化案例。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">concept_word_ratio_df_T = concept_word_ratio_df.T
concept_word_ratio_df_T
</code></pre></div><p><img loading="lazy" src="img/10-T.png" alt=""  />
</p>
<br>
<h3 id="32-三农折线图">3.2 「三农」折线图</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">selected_provs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;河北省&#39;</span><span class="p">,</span> <span class="s1">&#39;山东省&#39;</span><span class="p">,</span> <span class="s1">&#39;北京市&#39;</span><span class="p">,</span> <span class="s1">&#39;上海市&#39;</span><span class="p">,</span> <span class="s1">&#39;广东省&#39;</span><span class="p">,</span> <span class="s1">&#39;浙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;黑龙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;湖南省&#39;</span><span class="p">]</span>
<span class="n">concept_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;农村&#39;</span><span class="p">,</span> <span class="s1">&#39;农业&#39;</span><span class="p">,</span> <span class="s1">&#39;农民&#39;</span><span class="p">]</span>
<span class="n">tri_agri_panel_df</span> <span class="o">=</span> <span class="n">generate_prov_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">,</span> 
                                             <span class="n">concept_words</span> <span class="o">=</span><span class="n">concept_words</span><span class="p">,</span> 
                                             <span class="n">selected_provs</span> <span class="o">=</span> <span class="n">selected_provs</span><span class="p">)</span>


<span class="n">plot_line</span><span class="p">(</span><span class="n">panel_df</span><span class="o">=</span><span class="n">tri_agri_panel_df</span><span class="p">,</span> 
          <span class="n">title</span><span class="o">=</span><span class="s1">&#39;8省市2002-2024年「三农」词频趋势&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/12-tri-agri.png" alt=""  />
</p>
<p>从上图中，可以看出</p>
<ul>
<li>05年提及三农词占比最多的是湖南，是20年以来8省市中占比值最高记录</li>
<li>大多数省份在07年达到峰值</li>
<li>07年前，工作报告中提及三农词提及三农词的占比趋势是<strong>上升的</strong></li>
<li>07年后，工作报告中提及三农词提及三农词的占比趋势是<strong>下升的</strong>。</li>
</ul>
<br>
<h3 id="33-创新折线图">3.3 「创新」折线图</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">selected_provs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;河北省&#39;</span><span class="p">,</span> <span class="s1">&#39;山东省&#39;</span><span class="p">,</span> <span class="s1">&#39;北京市&#39;</span><span class="p">,</span> <span class="s1">&#39;上海市&#39;</span><span class="p">,</span> <span class="s1">&#39;广东省&#39;</span><span class="p">,</span> <span class="s1">&#39;浙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;黑龙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;湖南省&#39;</span><span class="p">]</span>
<span class="n">concept_words</span> <span class="o">=</span>  <span class="p">[</span><span class="s1">&#39;科学&#39;</span><span class="p">,</span> <span class="s1">&#39;技术&#39;</span><span class="p">,</span> <span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;研发&#39;</span><span class="p">,</span> <span class="s1">&#39;科技&#39;</span><span class="p">]</span>

<span class="n">inovation_panel_df</span> <span class="o">=</span> <span class="n">generate_prov_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">,</span> 
                                              <span class="n">concept_words</span> <span class="o">=</span><span class="n">concept_words</span><span class="p">,</span> 
                                              <span class="n">selected_provs</span> <span class="o">=</span> <span class="n">selected_provs</span><span class="p">)</span>


<span class="n">plot_line</span><span class="p">(</span><span class="n">panel_df</span><span class="o">=</span><span class="n">inovation_panel_df</span><span class="p">,</span> 
          <span class="n">title</span><span class="o">=</span><span class="s1">&#39;8省市2002-2024年「创新」词频趋势&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/13-inovation-plot.png" alt=""  />
</p>
<p>从上图中，可以看出</p>
<ul>
<li>
<p>整体看，2000年以来八省市工作报告中提及科创相关词的比例是稳定的。</p>
</li>
<li>
<p>2010年之后， <strong>黑龙江</strong>是八省市中提起科创概念词最少的省份。</p>
</li>
<li>
<p>河北省2020年支棱起来了，是提及科创概念词最高的，而且是八省市所有年份最高！</p>
</li>
</ul>
<br>
<h3 id="34-环保折线图">3.4 「环保」折线图</h3>
<p>参考 <code>陈诗一,陈登科.雾霾污染、政府治理与经济高质量发展[J].经济研究,2018,53(02):20-34.</code></p>
<p>本文选取省级政府工作报告中与环境相关词汇出现频数及其比重来度量 <strong>政府环境治理政策</strong> （Chen et al．，2016）。 该指标不仅全面地度量了地方政府环境治理的力度 ， 而且由于地方政府工作报告一般发生在年初 ， 该年度的经济发展无法反向影响事先已经确定的政府工作报告 ， 从而可以减缓采用已有度量指标所产生的的内生性问题 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">selected_provs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;河北省&#39;</span><span class="p">,</span> <span class="s1">&#39;山东省&#39;</span><span class="p">,</span> <span class="s1">&#39;北京市&#39;</span><span class="p">,</span> <span class="s1">&#39;上海市&#39;</span><span class="p">,</span> <span class="s1">&#39;广东省&#39;</span><span class="p">,</span> <span class="s1">&#39;浙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;黑龙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;湖南省&#39;</span><span class="p">]</span>

<span class="c1">#词语来自 {陈诗一,陈登科.雾霾污染、政府治理与经济高质量发展[J].经济研究,2018,53(02):20-34.}</span>
<span class="n">concept_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;环境保护&#39;</span><span class="p">,</span> <span class="s1">&#39;环保&#39;</span><span class="p">,</span> <span class="s1">&#39;污染&#39;</span><span class="p">,</span> <span class="s1">&#39;能耗&#39;</span><span class="p">,</span> <span class="s1">&#39;减排&#39;</span><span class="p">,</span> <span class="s1">&#39;排污&#39;</span><span class="p">,</span> 
                 <span class="s1">&#39;生态&#39;</span><span class="p">,</span> <span class="s1">&#39;绿色&#39;</span><span class="p">,</span> <span class="s1">&#39;低碳&#39;</span><span class="p">,</span> <span class="s1">&#39;空气&#39;</span><span class="p">,</span> <span class="s1">&#39;化学需氧量&#39;</span><span class="p">,</span> 
                 <span class="s1">&#39;二氧化硫&#39;</span><span class="p">,</span> <span class="s1">&#39;二氧化碳&#39;</span><span class="p">,</span> <span class="s1">&#39;pm10&#39;</span><span class="p">,</span> <span class="s1">&#39;pm2.5&#39;</span><span class="p">]</span>


<span class="n">environment_panel_df</span> <span class="o">=</span> <span class="n">generate_prov_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">,</span> 
                                                <span class="n">concept_words</span> <span class="o">=</span><span class="n">concept_words</span><span class="p">,</span> 
                                                <span class="n">selected_provs</span> <span class="o">=</span> <span class="n">selected_provs</span><span class="p">)</span>


<span class="n">plot_line</span><span class="p">(</span><span class="n">panel_df</span> <span class="o">=</span> <span class="n">environment_panel_df</span><span class="p">,</span> 
          <span class="n">title</span><span class="o">=</span><span class="s1">&#39;8省市2002-2024年「环保」词频趋势&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/14-enviroment-plot.png" alt=""  />
</p>
<br>
<br>
<h2 id="四相关内容">四、相关内容</h2>
<h3 id="41-相关代码">4.1 相关代码</h3>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-27-measure-gov-digitalization/">代码 | 使用gov工作报告生成数字化词频「面板数据」</a></li>
</ul>
<blockquote>
<p>之前看到一篇论文研究人民网留言板问答中的政府回复行为， 控制变量使用的是政府数字化程度。</p>
<p>论文使用政府工作报告数字化词语提及次数， 用来测量政府的数字化程度。</p>
<p><strong>但从今天的实验看，用数字化词频测量政府数字化程度，不怎么准，  要慎重使用</strong>。</p>
</blockquote>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/">代码 | 使用「新闻数据」构造概念词提及量「面板数据」</a></li>
<li><a href="https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/">数据(付费) | 使用cctv新闻联播文稿构造面板数据</a></li>
</ul>
<br>
<h3 id="43-相关文献">4.3 相关文献</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]陈诗一,陈登科.雾霾污染、政府治理与经济高质量发展[J].经济研究,2018,53(02):20-34.
</code></pre></div><br>
<br>
<h2 id="五获取数据集">五、获取数据集</h2>
<p><a href="https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/">数据集| 国、省、市三级政府工作报告文本</a></p>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 国、省、市三级政府工作报告文本(1954-2024)</title>
      <link>https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-17-gov-anual-report-dataset/</guid>
      <description>&lt;h2 id=&#34;相关代码&#34;&gt;相关代码&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/&#34;&gt;代码 | 使用地方gov工作报告生成某类概念词词频面板数据&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一数据集&#34;&gt;一、数据集&lt;/h2&gt;
&lt;h3 id=&#34;11-数据简介&#34;&gt;1.1 数据简介&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;国级(guo wu yuan)工作报告1954-2024, 记录数71

省级zf工作报告2002-2024, 记录数744

市级zf工作报告2003-2024, 记录数6204
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;12-说明&#34;&gt;1.2 说明&lt;/h3&gt;
&lt;p&gt;本文内容仅为科研分享， 不代表本人的政治立场。如有问题， 加微信 372335839，  备注「姓名-学校-专业-政府工作报告」。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;13-文件树目录&#34;&gt;1.3 文件树目录&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;|- 代码.ipynb

|- GovReportData
    |-nation
        |-1954.txt
        |-1955.txt
        |-...
        |-2023.txt
        |-2024.txt
        
    |-prov
        |-安徽省2001.txt
        |-...
        |-安徽省2024.txt
        |-...
        |-浙江省2024.txt
        
    |-city
        |-安康市2003.txt
        |-...
        |-安庆市2003.txt
        |-...
        |-安庆市2024.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-国级报告&#34;&gt;2.1 国级报告&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GovReportData/nation.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-nation-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-省级报告&#34;&gt;2.2 省级报告&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GovReportData/province.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-prov-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-市级报告&#34;&gt;2.3 市级报告&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GovReportData/city.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-city-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三-实验-文本分析&#34;&gt;三、 实验-文本分析&lt;/h2&gt;
&lt;h3 id=&#34;31-国-词频&#34;&gt;3.1 国-词频&lt;/h3&gt;
&lt;p&gt;计算总词语数、某类词出现的次数，计算各政府提及【环保】的频率&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;word_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;doc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jieba&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lcut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;doc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;环保|环境|污染|青山|绿水&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;word_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-nation-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;32-可视化&#34;&gt;3.2 可视化&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;



&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort_values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;国级报告中“环保概念词”提及频率折线图(1954-2024)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/gov-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;大家应该都学过正泰分布中， 数据中大多数的记录会落在 均值+-标准差 范围内，&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/mean&amp;#43;std.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;这里设置 &lt;strong&gt;top_nation_mask&lt;/strong&gt;、&lt;strong&gt;bottom_nation_mask&lt;/strong&gt; ，分别识别到最重视环保的年份、最不重视环保的年份&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;top_nation_mask&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bottom_nation_mask&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;最重视环保的年份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top_nation_mask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;最忽视环保的年份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ndf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bottom_nation_mask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;最重视环保的年份
[2001 2003 2005 2006 2007 2015 2016 2017 2019 2021 2023]

最忽视环保的年份
[1954 1955 1956 1957 1958 1959 1960 1964 1975 1978 1979 1980 1981 1983
 1985 1987]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;可以看到进入21世纪，国家对环保重视从报告中就能看出。而在前期，因为生存是首要解决的，对环境保护的认识事不足的。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;32-省-词频&#34;&gt;3.2 省-词频&lt;/h3&gt;
&lt;p&gt;计算总词语数、某类词出现的次数，计算各省提及【环保】的频率。因为省份的记录有770条，现在咱们把条件变严格，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; top = mean+3*std, 
 bottom = mean-2std
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;大家可以自己设置条件的严格程度&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;word_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;doc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jieba&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lcut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;doc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;环保|环境|污染|青山|绿水&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;word_num&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;top_prov_mask&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bottom_prov_mask&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;最重视环保的省(年份)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;env_ratio&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top_prov_mask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/07-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;重视环保结果挺合理的， 某人曾在浙江任职过，对环保比较重视，近年来浙江也比较重视环保，是真的很早就执行，环保搞得很好。而河北，笔者家乡，主要是跟钢铁产业关停并转，守卫di都蓝天有很大关系。&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;更多内容可在大邓博客 textdata.cn 中寻找相关代码。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="相关代码">相关代码</h2>
<p><a href="https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/">代码 | 使用地方gov工作报告生成某类概念词词频面板数据</a></p>
<p><br><br></p>
<h2 id="一数据集">一、数据集</h2>
<h3 id="11-数据简介">1.1 数据简介</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">国级(guo wu yuan)工作报告1954-2024, 记录数71

省级zf工作报告2002-2024, 记录数744

市级zf工作报告2003-2024, 记录数6204
</code></pre></div><br>
<h3 id="12-说明">1.2 说明</h3>
<p>本文内容仅为科研分享， 不代表本人的政治立场。如有问题， 加微信 372335839，  备注「姓名-学校-专业-政府工作报告」。</p>
<br>
<h3 id="13-文件树目录">1.3 文件树目录</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">|- 代码.ipynb

|- GovReportData
    |-nation
        |-1954.txt
        |-1955.txt
        |-...
        |-2023.txt
        |-2024.txt
        
    |-prov
        |-安徽省2001.txt
        |-...
        |-安徽省2024.txt
        |-...
        |-浙江省2024.txt
        
    |-city
        |-安康市2003.txt
        |-...
        |-安庆市2003.txt
        |-...
        |-安庆市2024.txt
</code></pre></div><br>
<br>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-国级报告">2.1 国级报告</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">ndf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;GovReportData/nation.csv&#39;</span><span class="p">)</span>
<span class="n">ndf</span>
</code></pre></div><p><img loading="lazy" src="img/01-nation-df.png" alt=""  />
</p>
<br>
<h3 id="22-省级报告">2.2 省级报告</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;GovReportData/province.csv&#39;</span><span class="p">)</span>
<span class="n">pdf</span>
</code></pre></div><p><img loading="lazy" src="img/02-prov-df.png" alt=""  />
</p>
<br>
<h3 id="23-市级报告">2.3 市级报告</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;GovReportData/city.csv&#39;</span><span class="p">)</span>
<span class="n">cdf</span>
</code></pre></div><p><img loading="lazy" src="img/03-city-df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三-实验-文本分析">三、 实验-文本分析</h2>
<h3 id="31-国-词频">3.1 国-词频</h3>
<p>计算总词语数、某类词出现的次数，计算各政府提及【环保】的频率</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jieba</span>

<span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;word_num&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;doc&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">text</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)))</span>
<span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_num&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;doc&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;环保|环境|污染|青山|绿水&#39;</span><span class="p">)</span>
<span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_num&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;word_num&#39;</span><span class="p">]</span>
<span class="n">ndf</span>
</code></pre></div><p><img loading="lazy" src="img/04-nation-df.png" alt=""  />
</p>
<br>
<h3 id="32-可视化">3.2 可视化</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">jieba</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>



<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">ndf</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">],</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">],</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;国级报告中“环保概念词”提及频率折线图(1954-2024)&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/gov-plot.png" alt=""  />
</p>
<br>
<p>大家应该都学过正泰分布中， 数据中大多数的记录会落在 均值+-标准差 范围内，</p>
<p><img loading="lazy" src="img/mean&#43;std.png" alt=""  />
</p>
<p>这里设置 <strong>top_nation_mask</strong>、<strong>bottom_nation_mask</strong> ，分别识别到最重视环保的年份、最不重视环保的年份</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">top_nation_mask</span> <span class="o">=</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span> <span class="o">+</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">std</span><span class="p">()</span>
<span class="n">bottom_nation_mask</span> <span class="o">=</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span> <span class="o">-</span> <span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">std</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;最重视环保的年份&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ndf</span><span class="p">[</span><span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">&gt;</span><span class="n">top_nation_mask</span><span class="p">]</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>

<span class="nb">print</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;最忽视环保的年份&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ndf</span><span class="p">[</span><span class="n">ndf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">&lt;</span><span class="n">bottom_nation_mask</span><span class="p">][</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">最重视环保的年份
[2001 2003 2005 2006 2007 2015 2016 2017 2019 2021 2023]

最忽视环保的年份
[1954 1955 1956 1957 1958 1959 1960 1964 1975 1978 1979 1980 1981 1983
 1985 1987]
</code></pre></div><br>
<p>可以看到进入21世纪，国家对环保重视从报告中就能看出。而在前期，因为生存是首要解决的，对环境保护的认识事不足的。</p>
<br>
<h3 id="32-省-词频">3.2 省-词频</h3>
<p>计算总词语数、某类词出现的次数，计算各省提及【环保】的频率。因为省份的记录有770条，现在咱们把条件变严格，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> top = mean+3*std, 
 bottom = mean-2std
</code></pre></div><p>大家可以自己设置条件的严格程度</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;word_num&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;doc&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">text</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)))</span>
<span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_num&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;doc&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;环保|环境|污染|青山|绿水&#39;</span><span class="p">)</span>
<span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_num&#39;</span><span class="p">]</span><span class="o">/</span><span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;word_num&#39;</span><span class="p">]</span>

<span class="n">top_prov_mask</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span> <span class="o">+</span> <span class="mi">3</span><span class="o">*</span><span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">std</span><span class="p">()</span>
<span class="n">bottom_prov_mask</span> <span class="o">=</span> <span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span> <span class="o">-</span> <span class="mi">2</span><span class="o">*</span><span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">std</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;最重视环保的省(年份)&#39;</span><span class="p">)</span>
<span class="n">pdf</span><span class="p">[</span><span class="n">pdf</span><span class="p">[</span><span class="s1">&#39;env_ratio&#39;</span><span class="p">]</span><span class="o">&gt;</span><span class="n">top_prov_mask</span><span class="p">][[</span><span class="s1">&#39;province&#39;</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="p">]]</span>
</code></pre></div><p><img loading="lazy" src="img/07-df.png" alt=""  />
</p>
<br>
<p>重视环保结果挺合理的， 某人曾在浙江任职过，对环保比较重视，近年来浙江也比较重视环保，是真的很早就执行，环保搞得很好。而河北，笔者家乡，主要是跟钢铁产业关停并转，守卫di都蓝天有很大关系。</p>
<br>
<br>
<p>更多内容可在大邓博客 textdata.cn 中寻找相关代码。</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2001-2023年A股上市公司年报&amp;管理层讨论与分析</title>
      <link>https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/</link>
      <pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/</guid>
      <description>&lt;h2 id=&#34;一数据集介绍&#34;&gt;一、数据集介绍&lt;/h2&gt;
&lt;p&gt;2001-2023年A股年报数据集，含 4 个文件，约 15G。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 管理层讨论与分析txt.zip
- 年报txt.zip
- A01-23.csv.gz
- mda01-23.csv.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/a-mda.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;zip文件夹是原始数据， 解压后内部为 txt 文件。&lt;/li&gt;
&lt;li&gt;gz文件为汇总数据， 解压后是csv文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;声明&#34;&gt;声明&lt;/h3&gt;
&lt;p&gt;科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二年报数据&#34;&gt;二、年报数据&lt;/h2&gt;
&lt;p&gt;2001-2023年年报数据。数据中只有year、code、text三个字段， 如果想增加诸如公司简称、行业等信息， 可以使用 &lt;a href=&#34;https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/&#34;&gt;&lt;strong&gt;数据集 | A股上市公司基本信息&lt;/strong&gt;&lt;/a&gt;   进行并表。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A01-23.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;年报记录数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;61980
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;上市公司总数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;5629
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;三mda数据&#34;&gt;三、MD&amp;amp;A数据&lt;/h2&gt;
&lt;p&gt;2001-2023年MD&amp;amp;A数据， 数据中只有year、code、text三个字段， 如果想增加诸如公司简称、行业等信息， 可以使用 &lt;a href=&#34;https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/&#34;&gt;&lt;strong&gt;数据集 | A股上市公司基本信息&lt;/strong&gt;&lt;/a&gt;   进行并表。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-23.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;60079
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;上市公司总数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;5606
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四说明&#34;&gt;四、说明&lt;/h2&gt;
&lt;p&gt;从代码运行发现， md&amp;amp;a记录量少于年报记录量。这是由于 mda01-23.csv.gz 是从 A01-23.csv.gz 中生成的， 由于上市公司的年报不是一套模板生成的， 每个公司模板不同，甚至每个公司前后年度报告的排版也会发生变化。在编程提取md&amp;amp;a的过程中， 会因排版规则不能穷举， 导致md&amp;amp;a样本量略微小于年报的样本量。 提取md&amp;amp;a的工具是 &lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-tutorial/&#34;&gt;大邓开发的cntext2.1.1库&lt;/a&gt; ，使用的内置函数 &lt;code&gt;mda=ct.extract_mda(text) &lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们这里不展示提取过程，仅展示说明md&amp;amp;a记录量与年报记录量之比。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;查看每年mda记录量与年报记录量之比&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2024&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;mda_record_num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;anual_report_record_num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;anual_report_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; :&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mda_record_num&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;anual_report_record_num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;查看每年mda记录量与年报记录量之比
2001 : 0.6546700942587832
2002 : 0.8569105691056911
2003 : 0.9287925696594427
2004 : 0.9550398839738942
2005 : 0.9707602339181286
2006 : 0.9745879120879121
2007 : 0.9821882951653944
2008 : 0.9846153846153847
2009 : 0.9859075535512966
2010 : 0.9868544600938968
2011 : 0.9894291754756871
2012 : 0.9891696750902527
2013 : 0.9901458415451321
2014 : 0.9905767056162834
2015 : 0.9922616953921913
2016 : 0.9926681542875359
2017 : 0.9934528892684316
2018 : 0.9892384105960265
2019 : 0.9639227642276422
2020 : 0.9642857142857143
2021 : 0.9310064935064936
2022 : 0.9838492597577388
2023 : 0.9901137847416527
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;五相关内容&#34;&gt;五、相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/&#34;&gt;&lt;strong&gt;数据集 | 港股年报文本数据集(2007 ~ 2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/&#34;&gt;&lt;strong&gt;数据集(付费) | 三板上市公司年报2002-2023.12&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/&#34;&gt;&lt;strong&gt;数据集 | 美股年报10-K、20-F数据(2000-2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/&#34;&gt;&lt;strong&gt;词向量(付费) | 使用MD&amp;amp;A2001-2022语料训练Word2Vec模型&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-01-06-mda_informative_content/&#34;&gt;中国工业经济 | MD&amp;amp;A信息含量指标构建代码实现&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-01-13-information-content-of-critical-audit/&#34;&gt;金融研究 | 使用Python构建「关键审计事项信息含量」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-09-08-earnings-communication-conference-forward-looking-statements-information/&#34;&gt;中国管理科学 | 使用业绩说明会文本数据测量上市公司前瞻性信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-25-firm-economic-policy-uncertainty/&#34;&gt;代码 | 使用 MD&amp;amp;A文本测量「企业不确定性感知FEPU」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/&#34;&gt;&lt;strong&gt;数据集 | A股上市公司基本信息&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集介绍">一、数据集介绍</h2>
<p>2001-2023年A股年报数据集，含 4 个文件，约 15G。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 管理层讨论与分析txt.zip
- 年报txt.zip
- A01-23.csv.gz
- mda01-23.csv.gz
</code></pre></div><p><img loading="lazy" src="img/a-mda.png" alt=""  />
</p>
<br>
<p>注意</p>
<ul>
<li>zip文件夹是原始数据， 解压后内部为 txt 文件。</li>
<li>gz文件为汇总数据， 解压后是csv文件。</li>
</ul>
<h3 id="声明">声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="二年报数据">二、年报数据</h2>
<p>2001-2023年年报数据。数据中只有year、code、text三个字段， 如果想增加诸如公司简称、行业等信息， 可以使用 <a href="https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/"><strong>数据集 | A股上市公司基本信息</strong></a>   进行并表。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">anual_report_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;A01-23.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">anual_report_df</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<p>年报记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">anual_report_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">61980
</code></pre></div><br>
<p>上市公司总数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">anual_report_df</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">5629
</code></pre></div><br>
<br>
<h2 id="三mda数据">三、MD&amp;A数据</h2>
<p>2001-2023年MD&amp;A数据， 数据中只有year、code、text三个字段， 如果想增加诸如公司简称、行业等信息， 可以使用 <a href="https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/"><strong>数据集 | A股上市公司基本信息</strong></a>   进行并表。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mda_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;mda01-23.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">mda_df</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">mda_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">60079
</code></pre></div><br>
<p>上市公司总数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mda_df</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">5606
</code></pre></div><p><br><br></p>
<h2 id="四说明">四、说明</h2>
<p>从代码运行发现， md&amp;a记录量少于年报记录量。这是由于 mda01-23.csv.gz 是从 A01-23.csv.gz 中生成的， 由于上市公司的年报不是一套模板生成的， 每个公司模板不同，甚至每个公司前后年度报告的排版也会发生变化。在编程提取md&amp;a的过程中， 会因排版规则不能穷举， 导致md&amp;a样本量略微小于年报的样本量。 提取md&amp;a的工具是 <a href="https://textdata.cn/blog/2024-04-27-cntext2x-tutorial/">大邓开发的cntext2.1.1库</a> ，使用的内置函数 <code>mda=ct.extract_mda(text) </code>。</p>
<p>我们这里不展示提取过程，仅展示说明md&amp;a记录量与年报记录量之比。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">anual_report_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">anual_report_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="n">mda_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">mda_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;查看每年mda记录量与年报记录量之比&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">year</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2001</span><span class="p">,</span> <span class="mi">2024</span><span class="p">):</span>
    <span class="n">mda_record_num</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">mda_df</span><span class="p">[</span><span class="n">mda_df</span><span class="o">.</span><span class="n">year</span><span class="o">==</span><span class="n">year</span><span class="p">])</span>
    <span class="n">anual_report_record_num</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">anual_report_df</span><span class="p">[</span><span class="n">anual_report_df</span><span class="o">.</span><span class="n">year</span><span class="o">==</span><span class="n">year</span><span class="p">])</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;</span><span class="si">{</span><span class="n">year</span><span class="si">}</span><span class="s1"> :&#39;</span><span class="p">,</span> <span class="n">mda_record_num</span><span class="o">/</span><span class="n">anual_report_record_num</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">查看每年mda记录量与年报记录量之比
2001 : 0.6546700942587832
2002 : 0.8569105691056911
2003 : 0.9287925696594427
2004 : 0.9550398839738942
2005 : 0.9707602339181286
2006 : 0.9745879120879121
2007 : 0.9821882951653944
2008 : 0.9846153846153847
2009 : 0.9859075535512966
2010 : 0.9868544600938968
2011 : 0.9894291754756871
2012 : 0.9891696750902527
2013 : 0.9901458415451321
2014 : 0.9905767056162834
2015 : 0.9922616953921913
2016 : 0.9926681542875359
2017 : 0.9934528892684316
2018 : 0.9892384105960265
2019 : 0.9639227642276422
2020 : 0.9642857142857143
2021 : 0.9310064935064936
2022 : 0.9838492597577388
2023 : 0.9901137847416527
</code></pre></div><p><br><br></p>
<h2 id="五相关内容">五、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/"><strong>数据集 | 港股年报文本数据集(2007 ~ 2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/"><strong>数据集(付费) | 三板上市公司年报2002-2023.12</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/"><strong>数据集 | 美股年报10-K、20-F数据(2000-2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/"><strong>词向量(付费) | 使用MD&amp;A2001-2022语料训练Word2Vec模型</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-01-06-mda_informative_content/">中国工业经济 | MD&amp;A信息含量指标构建代码实现</a></li>
<li><a href="https://textdata.cn/blog/2023-01-13-information-content-of-critical-audit/">金融研究 | 使用Python构建「关键审计事项信息含量」</a></li>
<li><a href="https://textdata.cn/blog/2023-09-08-earnings-communication-conference-forward-looking-statements-information/">中国管理科学 | 使用业绩说明会文本数据测量上市公司前瞻性信息</a></li>
<li><a href="https://textdata.cn/blog/2024-04-25-firm-economic-policy-uncertainty/">代码 | 使用 MD&amp;A文本测量「企业不确定性感知FEPU」</a></li>
<li><a href="https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/"><strong>数据集 | A股上市公司基本信息</strong></a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2006年-2023年A股企业社会责任报告/环境报告书/可持续发展报告</title>
      <link>https://textdata.cn/blog/2023-08-11-china-a-market-corporate-social-responsibility-dataste/</link>
      <pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-08-11-china-a-market-corporate-social-responsibility-dataste/</guid>
      <description>企业社会责任（csr)已成为全球学术界研究的热点，</description>
      <content:encoded><![CDATA[<p>CSR数据多为非结构文本数据，可以做词频统计、情感分析、话题模型等文本分析任务。今天给大家奉上A股CSR数据集， <strong>对文本分析感兴趣的同学， 欢迎报名视频课「Python实证指标构建与文本分析」</strong>。 本文仅展示A股企业社会责任数据集，并作简单分析。</p>
<br>
<h2 id="一csr数据集">一、CSR数据集</h2>
<p>目前这是市面上最全最完整的原始数据，数据已整理到csv压缩文件（大小308M）。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">「A股企业社会责任报告数据集」基本信息
- 记录数14845
- 沪深2383家公司
- 年度2006-2023
- 公布日期2007-03-14 ~ 2024-06-22
- txt、pdf、csv
</code></pre></div><p><img loading="lazy" src="img/cover.png" alt=""  />
</p>
<br>
<h3 id="声明">声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="二相关文献">二、相关文献</h2>
<p>近年来，企业社会责任（csr)已成为全球学术界研究的热点，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]解学梅,朱琪玮.企业绿色创新实践如何破解“和谐共生”难题？[J].管理世界,2021,37(01):128-149+9.
[2]谢红军,吕雪.负责任的国际投资：ESG与中国OFDI[J].经济研究,2022,57(03):83-99.
[3]Schaefer, Sarah Desirée, Ralf Terlutter, and Sandra Diehl. &#34;Is my company really doing good? Factors influencing employees&#39; evaluation of the authenticity of their company&#39;s corporate social responsibility engagement.&#34; Journal of business research 101 (2019): 128-143.
</code></pre></div><br>
<br>
<h2 id="三实验">三、实验</h2>
<h3 id="31-读取数据">3.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;CSR2006-2023.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<h3 id="32-字段">3.2 字段</h3>
<p><em><strong>CSR2006-2023.csv.gz</strong></em> 含字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- code 股票代码
- name 公司简称
- year 会计年度
- pub_date 发布日期
- type 报告类型， 
    - 企业社会责任CSR
    - 环境、社会及治理ESG、
    - 可持续发展SD
    - 环境报告书ENV； 
    报告可为某种类型，也可是多种类型的组合。
</code></pre></div><p>查看不同报告类型的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">type</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">type
#CSR           11900
#ESG            1982
#SD              447
#CSR#ESG         232
#ENV             211
#ESG#SD           42
#CSR#SD           28
#SD#ESG            2
#CSR#ESG#SD        1
Name: count, dtype: int64
</code></pre></div><br>
<h3 id="33-记录数">3.3 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#ESG报告数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>14845
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#发布ESG报告的公司数</span>
<span class="n">df</span><span class="o">.</span><span class="n">code</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<pre><code>2383
</code></pre>
<br>
<h3 id="34-会计年度">3.4 会计年度</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#有ESG报告的年份</span>

<span class="c1">#sorted(df[&#39;year&#39;].unique())</span>
<span class="nb">sorted</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<pre><code>[2006,
 2007,
 2008,
 2009,
 2010,
 2011,
 2012,
 2013,
 2014,
 2015,
 2016,
 2017,
 2018,
 2019,
 2020,
 2021,
 2022,
 2023]
</code></pre>
<br>
<h3 id="35-发布日期">3.5 发布日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="s1">&#39;coerce&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2007-03-14 00:00:00
2024-06-22 00:00:00
</code></pre></div><p><br><br></p>
<h2 id="四esg年度发布量">四、ESG年度发布量</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="nb">len</span><span class="p">)</span><span class="o">.</span><span class="n">reset_index</span><span class="p">())</span>
<span class="n">data</span><span class="o">.</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;volume&#39;</span><span class="p">]</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_col</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_text</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">),</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s1">&#39;bottom&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;grey&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;A股企业社会责任报告数(2006~2023)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;报告数&#39;</span><span class="p">)</span>
<span class="p">)</span>

</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<p>​</p>
<p><br><br></p>
<h2 id="五沪深发布量">五、沪深发布量</h2>
<p>大邓记得深圳交易所大多数股票以0开头，上海交易所股票则大多以6开头。 可以简单通过第一位数字来判断两个交易所发布量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#切片，选取股票代码字符串第二个位置的数字</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">stop</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<pre><code>code
6    8339
0    5193
3    1265
8      19
9      17
2      10
4       2
Name: count, dtype: int64
</code></pre>
<br>
<p>运行结果，除了0和6还出现了2、3、9。综上，股票代码</p>
<ul>
<li>
<p>0 深交所</p>
</li>
<li>
<p>3 创业板</p>
</li>
<li>
<p>6 上交所</p>
</li>
<li>
<p>其他</p>
</li>
</ul>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A6&#39;</span><span class="p">)]</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A0&#39;</span><span class="p">)]</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#股票代码第一位出现2或者9的股票</span>
<span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s1">&#39;A2|A9&#39;</span><span class="p">)]</span>
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<p>​</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>管理世界2024 | 使用管理层讨论与分析测量「企业人工智能指标」</title>
      <link>https://textdata.cn/blog/2024-04-19-ai-improve-firm-productivity/</link>
      <pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-04-19-ai-improve-firm-productivity/</guid>
      <description>&lt;h2 id=&#34;一案例&#34;&gt;一、案例&lt;/h2&gt;
&lt;h3 id=&#34;11-文献&#34;&gt;1.1 文献&lt;/h3&gt;
&lt;p&gt;姚加权, 张锟澎, 郭李鹏, 冯绪. 人工智能如何提升企业生产效率？——基于劳动力技能结构调整的视角[J]. 管理世界, 2024, 40 (02): 101-116+133+117-122.&lt;/p&gt;
&lt;p&gt;摘要:人工智能技术对实现经济的高质量发展具有重要意义。现有研究多聚焦于人工智能对宏观经济的影响，本文从企业层面考察了人工智能技术如何影响生产效率和劳动力技能结构。&lt;strong&gt;本文运用机器学习方法生成了「人工智能词典」，并对上市公司的年报和专利进行「文本分析」，进而构建了企业层面的「人工智能指标」&lt;/strong&gt;。研究发现，人工智能显著提升了中国上市公司的生产率，并且该结论在一系列稳健性检验后依旧成立。在影响机制方面，人工智能通过促使企业减少常规低技能劳动力需求、增加非常规高技能劳动力需求的方式提升企业的生产率，这体现了企业劳动力技能结构的调整。异质性分析表明，产权性质、人才获得方式、劳动力保障、治理结构等企业层面因素对人工智能的生产率效应有较大影响。此外，企业所处的行业和地区层面因素也影响了人工智能的生产率效应。最后，本文发现人工智能提高了企业价值。本文加深了对微观企业层面人工智能在生产过程中所扮演角色的认知和理解，并为在微观企业层面推动人工智能技术发展提供了建议。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-指标构建步骤&#34;&gt;1.2 指标构建步骤&lt;/h3&gt;
&lt;p&gt;下图是论文中「人工智能指标」构建的流程图&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-steps.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;我们将步骤分成三步&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step1. 训练Word2Vec模型构建「人工智能AI词典」, 共54个词&lt;/li&gt;
&lt;li&gt;Step2. 统计上市公司 「年报」中AI词词频m，采用自然对数处理得到指标Ln(m+1)&lt;/li&gt;
&lt;li&gt;Step3. 统计上市公司「MD&amp;amp;A」数据中AI词词频n，采用自然对数处理得到指标Ln(n+1)&lt;/li&gt;
&lt;li&gt;Step4. 根据上市公司申请专利的名称和摘要是否含AI词，统计上市公司AI专利申请数量p，采用自然对数处理得到指标Ln(p+1)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;企业申请的人工智能专利代表企业已经拥有的人工智能技术，反映了企业人工智能技术的产出情况，能够与年报相互印证企业的人工智能技术水平&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了减轻阅读压力，也为了减轻制作本文的工作量， &lt;strong&gt;本文使用MD&amp;amp;A数据， 实现 Step1 、Step3(Step2、Step3算法相同)， 覆盖截图中的红色框范围内的计算方法&lt;/strong&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;13-项目结构&#34;&gt;1.3 项目结构&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 管理世界2024企业人工智能文件夹
    - 代码.ipynb                                    #代码文件
    
    - data                                         #数据文件夹
       - A01-23.csv.gz                             #年报
       - mda01-23.csv.gz                           #md&amp;amp;a
       - 上市公司基本信息2000-2023.csv                #基本信息
       
    - A股人工智能指标2001-2023(mda).xlsx              #计算结果
    
    - Word2Vec                                     #模型文件夹
       - mda01-23.200.6.bin
       - mda01-23.200.6.bin.syn1neg.npy
       - mda01-23.200.6.bin.wv.vectors.npy
       - 1000w专利摘要文本.100.6.bin
       - 1000w专利摘要文本.100.6.bin.syn1neg.npy
       - 1000w专利摘要文本.100.6.bin.wv.vectors.npy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二准备ai词典&#34;&gt;二、准备AI词典&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;构造专利摘要语料、管理层讨论与分析语料，分别训练Word2Vec模型&lt;/li&gt;
&lt;li&gt;构建人工智能种子词， 使用Word2Vec模型扩展并构建「人工智能词典」&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h3 id=&#34;21-训练word2vec模型&#34;&gt;2.1 训练Word2Vec模型&lt;/h3&gt;
&lt;p&gt;刚好之前分享过使用cntext库(2.0以上版本)训练Word2Vec， 相关推文&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/&#34;&gt;词向量(付费) | 使用MD&amp;amp;A2001-2023语料训练Word2Vec模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/&#34;&gt;词向量(付费) | 使用1985年-2025年专利申请摘要训练word2vec模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分别对应 &lt;em&gt;&lt;strong&gt;cntext-2.1.4-py3-none-any.whl&lt;/strong&gt;&lt;/em&gt;、 &lt;em&gt;&lt;strong&gt;mda01-23.200.6.bin&lt;/strong&gt;&lt;/em&gt; 、 &lt;em&gt;&lt;strong&gt;1000w专利摘要文本.100.6.bin&lt;/strong&gt;&lt;/em&gt; 两个模型文件。&lt;strong&gt;文末有模型获取方式&lt;/strong&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-导入word2vec&#34;&gt;2.2 导入Word2Vec&lt;/h3&gt;
&lt;p&gt;以 mda01-22.200.6.bin 为例， 使用cntext2读取模型， cntext安装和使用请参考 &lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-tutorial/&#34;&gt;文本分析库cntext2.x使用说明文档&lt;/a&gt;。 &lt;strong&gt;文末有cntext获取方式&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#查看cntext版本&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__version__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#导入管理层讨论与分析的Word2Vec模型&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_w2v_m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_w2v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Word2Vec/mda01-23.200.6.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#导入专利摘要Word2Vec模型&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#pat_w2v_m = ct.load_w2v(&amp;#39;Word2Vec/1000w专利摘要文本.100.6.bin&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;mda_w2v_m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2.1.4

Loading word2vec model...
&amp;lt;gensim.models.word2vec.Word2Vec at 0x7dbf9afd0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;查看某个词的词向量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mda_w2v_m.wv.get_vector(&amp;#39;人工智能&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;array([-3.8744571 , -0.5923845 , -1.8126943 ,  1.660894  ,  1.4194168 ,
        1.0365077 , -0.21333796, -0.60481924,  1.5012817 , -0.24060927,
       -1.7463511 , -2.1997519 , -0.66537315, -1.2665682 ,  0.14333063,
       -0.1268099 ,  2.005481  , -1.4638793 ,  3.7950375 ,  0.20866613,
        1.0281029 , -1.5495429 , -0.2518896 ,  1.4159175 ,  3.178865  ,
        .............................#省略展示..........................
       -1.2206184 ,  1.6766415 , -0.1082068 ,  0.62580353,  1.4639648 ,
        2.2743094 , -0.48386717,  1.3510187 ,  1.1698194 ,  0.72390413,
       -0.4855997 ,  1.0688399 ,  0.77217335, -1.4559731 ,  1.4391305 ,
        0.8412411 ,  2.359447  , -1.1504242 ,  1.3677332 , -0.92123735,
        1.281644  ,  0.67157453,  2.159804  ,  1.7593136 , -0.53061306,
       -0.77395666,  0.5912517 ,  1.9448034 ,  0.13023153,  0.6798518 ],
      dtype=float32)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23-扩展词典&#34;&gt;2.3 扩展词典&lt;/h3&gt;
&lt;p&gt;我们每个人对人工智能都有所了解，脑海里首先能想到的词可以当做 「初始种子词」， 例如词语 &lt;code&gt;人工智能|人机对话|&lt;/code&gt; 等。 本部分主要展示Word2Vec模型的近义词联想能力，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;mda_w2v_m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;most_similar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;人工智能&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;人机对话&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[(&amp;#39;自然语言处理&amp;#39;, 0.8055953979492188),
 (&amp;#39;AI&amp;#39;, 0.8050345778465271),
 (&amp;#39;语音识别&amp;#39;, 0.804234504699707),
 (&amp;#39;NLP&amp;#39;, 0.7967724800109863),
 (&amp;#39;交互技术&amp;#39;, 0.7902386784553528),
 (&amp;#39;智能语音&amp;#39;, 0.7870553731918335),
 ..........#省略展示..........
 (&amp;#39;智能识别&amp;#39;, 0.6703209280967712),
 (&amp;#39;结合人工智能&amp;#39;, 0.6701650619506836),
 (&amp;#39;VR技术&amp;#39;, 0.6699633002281189),
 (&amp;#39;人工智能芯片&amp;#39;, 0.6690542101860046),
 (&amp;#39;人工智能数据分析&amp;#39;, 0.6689168214797974),
 (&amp;#39;AR技术&amp;#39;, 0.6688560843467712)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;之后Word2Vec可以根据初始种子词进行扩充，再经过人工检查，最终构建「&lt;strong&gt;人工智能词典&lt;/strong&gt;」(论文附表3截图), 我将其整理为 &lt;em&gt;&lt;strong&gt;AI-Words&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-ai-words.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;AI_Words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;机器翻译|机器学习|计算机视觉|人机交互|深度学习|神经网络|生物识别|数据挖掘|特征识别|语音合成|语音识别|知识图谱|智慧银行|智能保险|人机协同|智能监管|智能教育|智能客服|智能零售|智能农业|智能投顾|增强现实|虚拟现实|智能医疗|智能语音|智能政务|自动驾驶|智能运输|卷积神经网络|声纹识别|特征提取|无人驾驶|人脸识别|商业智能|循环神经网络|大数据营销|大数据分析|大数据处理|支持向量机|长短期记忆|机器人流程|自然语言|分布式计算|可穿戴产品|大数据管理|智能传感器|模式识别|边缘计算|大数据平台|语音交互|智能环保|人机对话|深度神经网络|大数据运营&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;AI_Words&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三准备数据&#34;&gt;三、准备数据&lt;/h2&gt;
&lt;p&gt;为了保证数据质量， 论文对样本进行的操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1. 剔除金融行业公司；
2. 剔除信息传输、软件和信息技术 服务业以及科学研究和技术服务行业，原因在于这些行业天生使用云计算、大数据以及人工智能技术并披露 相关信息，可能无法清楚判断这些企业应用人工智能技术对其生产效率的影响；
3. 剔除当年处于 ST 和*ST 状 态的样本；
4. 剔除数据缺失的样本
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;大邓这里有几个数据文件，经过一些操作(字段名统一、 整理会计年度、合并多源数据)，就能实现论文中的样本操作。&lt;strong&gt;文末有数据获取方式&lt;/strong&gt; 。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据&lt;/th&gt;
&lt;th&gt;文件名&lt;/th&gt;
&lt;th&gt;所含字段&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;2001-2023年A股上市公司年报&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;A01-23.csv.gz&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;仅含&lt;em&gt;&lt;strong&gt;code&lt;/strong&gt;&lt;/em&gt; 、 &lt;em&gt;&lt;strong&gt;year&lt;/strong&gt;&lt;/em&gt; 、 &lt;em&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/em&gt; 三个字段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;2001-2023年A股上市公司管理层讨论与分析&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;mda01-23.csv.gz&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;仅含&lt;em&gt;&lt;strong&gt;code&lt;/strong&gt;&lt;/em&gt; 、 &lt;em&gt;&lt;strong&gt;year&lt;/strong&gt;&lt;/em&gt; 、 &lt;em&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/em&gt; 三个字段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/&#34;&gt;2000-2023年A股上市公司基本信息&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;上市公司基本信息2000-2023.csv&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;含&lt;em&gt;&lt;strong&gt;Symbol&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;FullName&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;ShortName&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;IndustryName&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;EndDate&lt;/strong&gt;&lt;/em&gt;等 39 个字段。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;字段含义&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[年报、管理层讨论与分析数据]
- year 会计年度
- text 年报文本 或 管理层讨论与分析文本
- code 股票代码

[A股基本信息]
- Symbol 股票代码
- ShortName 股票简称， 一般ST字符会出现在这里
- FullName 中文全称
- EndDate 统计截止日期
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;31-读取数据&#34;&gt;3.1 读取数据&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;2001-2023年A股上市公司管理层讨论与分析&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#读取数据&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data/mda01-23.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#将year更改为字符串格式&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-mda-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/&#34;&gt;2000-2023年A股上市公司基本信息&lt;/a&gt; 含 行业信息、公司简称里ST等信息， 可以按条件筛选记录。同时，也要构造出 year、code字段，方便后续与mda_df 交集并表。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;data/上市公司基本信息2000-2023.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Symbol&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-ind_df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;32-筛选样本&#34;&gt;3.2 筛选样本&lt;/h3&gt;
&lt;p&gt;为了保证数据质量， 论文对样本进行的操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1. 剔除金融行业公司；
2. 剔除信息传输、软件和信息技术 服务业以及科学研究和技术服务行业，原因在于这些行业天生使用云计算、大数据以及人工智能技术并披露 相关信息，可能无法清楚判断这些企业应用人工智能技术对其生产效率的影响；
3. 剔除当年处于 ST 和 ``*ST`` 状态的样本；
4. 剔除数据缺失的样本
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;筛选记录的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#行业筛选条件&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mask1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IndustryNameC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;金融|信息|科学研究|技术服务&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#公司名筛选条件&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mask2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ShortName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#剔除行业为金融、信息、科学研究、技术服务等上市公司&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#或&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#公司名含ST、*ST&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mask1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mask2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#将ind_df中年份、股票代码相关字段改名为【year】【code】，方便与 mda_df并表&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Symbol&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EndDate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;FullName&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ind_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-ind_df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;以 &lt;em&gt;&lt;strong&gt;交集(inner)&lt;/strong&gt;&lt;/em&gt; 方式合并 &lt;em&gt;&lt;strong&gt;mda_df&lt;/strong&gt;&lt;/em&gt;  和  &lt;em&gt;&lt;strong&gt;ind_df&lt;/strong&gt;&lt;/em&gt;，  相当于剔除了mda数据中金融、信息、科学研究、技术服务、ST、&lt;code&gt;*ST&lt;/code&gt; 公司&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;mda_df2 = pd.merge(mda_df, ind_df, on=[&amp;#39;code&amp;#39;, &amp;#39;year&amp;#39;], how=&amp;#39;inner&amp;#39;)
mda_df2 = mda_df2[[&amp;#39;FullName&amp;#39;, &amp;#39;year&amp;#39;, &amp;#39;code&amp;#39;, &amp;#39;text&amp;#39;]]
mda_df2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/06-mda-df2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;四测量ai指标&#34;&gt;四、测量AI指标&lt;/h2&gt;
&lt;p&gt;测量人工智能指标代码比较简单，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选中 &lt;em&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/em&gt;字段, 利用字符串属性 &lt;em&gt;&lt;strong&gt;.str.count()&lt;/strong&gt;&lt;/em&gt; 测量 &lt;em&gt;&lt;strong&gt;AI-Words&lt;/strong&gt;&lt;/em&gt; 出现次数，&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;np.log&lt;/strong&gt;&lt;/em&gt; 自然对数处理&lt;/li&gt;
&lt;li&gt;选择必要的字段&lt;em&gt;&lt;strong&gt;year&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;code&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;/em&gt; 进行保存和展示&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#测量企业人工智能指数&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#计算结果保存为字段AI&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AI&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mda_df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AI_Words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mda_df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;AI&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#保存为csv/xlsx&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A股人工智能指标2001-2023(mda).csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A股人工智能指标2001-2023(mda).xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#展示结果&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/07-ai-index.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;五获取资料&#34;&gt;五、获取资料&lt;/h2&gt;
&lt;h3 id=&#34;51-免费说明&#34;&gt;5.1 免费说明&lt;/h3&gt;
&lt;p&gt;阅读是免费的， 推文内的相关模型、安装包、数据是付费获取。&lt;/p&gt;
&lt;p&gt;今日推文最核心的python代码只有2行， 看到就赚到！今日推文要计算「&lt;em&gt;&lt;strong&gt;企业人工智能指数&lt;/strong&gt;&lt;/em&gt;」，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#AI相关词&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;AI_Words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;机器翻译|机器学习|计算机视觉|人机交互|深度学习|神经网络|生物识别|数据挖掘|特征识别|语音合成|语音识别|知识图谱|智慧银行|智能保险|人机协同|智能监管|智能教育|智能客服|智能零售|智能农业|智能投顾|增强现实|虚拟现实|智能医疗|智能语音|智能政务|自动驾驶|智能运输|卷积神经网络|声纹识别|特征提取|无人驾驶|人脸识别|商业智能|循环神经网络|大数据营销|大数据分析|大数据处理|支持向量机|长短期记忆|机器人流程|自然语言|分布式计算|可穿戴产品|大数据管理|智能传感器|模式识别|边缘计算|大数据平台|语音交互|智能环保|人机对话|深度神经网络|大数据运营&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#企业人工智能指数，保存为字段AI&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;mda_df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AI&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mda_df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AI_Words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;52-付费说明&#34;&gt;5.2 付费说明&lt;/h3&gt;
&lt;p&gt;内容整理不易， 想尽快复现本文的同学可以购买对应的数据、安装包、Word2Vec模型。加 &lt;em&gt;&lt;strong&gt;WeChat: 372335839&lt;/strong&gt;&lt;/em&gt; ， 备注 「&lt;strong&gt;姓名-学校-专业&lt;/strong&gt;」。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 打包价300元, 资料含
   1. 专利摘要Word2Vec模型文件(1000w专利摘要文本.100.6.bin)
   2. 管理层讨论与分析Word2Vec模型文件(mda01-22.200.6.bin)
   3. cntext2安装文件(cntext-2.1.3-py3-none-any.whl)
   4. 管理层讨论与分析(mda01-22.csv.gz)、年报(A01-22.csv.gz)
   5. 上市公司基本信息2000-2023.csv   


- 零卖价格明细
- 100元  cntext2安装文件(cntext-2.1.4-py3-none-any.whl)
- 100元  管理层讨论与分析(mda01-23.csv.gz)、年报(A01-23.csv.gz)
- 100元  管理层讨论与分析Word2Vec模型文件(mda01-23.200.6.bin)
- 100元  专利摘要Word2Vec模型文件(1000w专利摘要文本.100.6.bin)
- 50元   上市公司基本信息2000-2023.csv
- 50元   A股人工智能指标2001-2023(mda).xlsx     #使用MD&amp;amp;A的计算结果
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;项目结构&#34;&gt;项目结构&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 管理世界2024企业人工智能文件夹
    - 代码.ipynb                                    #代码文件
    
    - data                                         #数据文件夹
       - A01-23.csv.gz                             #年报
       - mda01-23.csv.gz                           #md&amp;amp;a
       - 上市公司基本信息2000-2023.csv                #基本信息
       
    - A股人工智能指标2001-2023(mda).xlsx              #使用MD&amp;amp;A的计算结果
    
    - Word2Vec                                     #模型文件夹
       - mda01-23.200.6.bin
       - mda01-23.200.6.bin.syn1neg.npy
       - mda01-23.200.6.bin.wv.vectors.npy
       - 1000w专利摘要文本.100.6.bin
       - 1000w专利摘要文本.100.6.bin.syn1neg.npy
       - 1000w专利摘要文本.100.6.bin.wv.vectors.npy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;相关内容请阅读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-27-cntext2x-tutorial/&#34;&gt;文本分析库cntext2.x使用说明文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;数据集 | 2001-2023年A股上市公司年报&amp;amp;管理层讨论与分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/&#34;&gt;数据集 | 2000-2023年A股上市公司基本信息&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/&#34;&gt;词向量 | 使用MD&amp;amp;A2001-2022语料训练Word2Vec模型&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/&#34;&gt;词向量 | 使用1985年-2022年专利申请摘要训练word2vec模型&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一案例">一、案例</h2>
<h3 id="11-文献">1.1 文献</h3>
<p>姚加权, 张锟澎, 郭李鹏, 冯绪. 人工智能如何提升企业生产效率？——基于劳动力技能结构调整的视角[J]. 管理世界, 2024, 40 (02): 101-116+133+117-122.</p>
<p>摘要:人工智能技术对实现经济的高质量发展具有重要意义。现有研究多聚焦于人工智能对宏观经济的影响，本文从企业层面考察了人工智能技术如何影响生产效率和劳动力技能结构。<strong>本文运用机器学习方法生成了「人工智能词典」，并对上市公司的年报和专利进行「文本分析」，进而构建了企业层面的「人工智能指标」</strong>。研究发现，人工智能显著提升了中国上市公司的生产率，并且该结论在一系列稳健性检验后依旧成立。在影响机制方面，人工智能通过促使企业减少常规低技能劳动力需求、增加非常规高技能劳动力需求的方式提升企业的生产率，这体现了企业劳动力技能结构的调整。异质性分析表明，产权性质、人才获得方式、劳动力保障、治理结构等企业层面因素对人工智能的生产率效应有较大影响。此外，企业所处的行业和地区层面因素也影响了人工智能的生产率效应。最后，本文发现人工智能提高了企业价值。本文加深了对微观企业层面人工智能在生产过程中所扮演角色的认知和理解，并为在微观企业层面推动人工智能技术发展提供了建议。</p>
<br>
<h3 id="12-指标构建步骤">1.2 指标构建步骤</h3>
<p>下图是论文中「人工智能指标」构建的流程图</p>
<p><img loading="lazy" src="img/01-steps.png" alt=""  />
</p>
<p>我们将步骤分成三步</p>
<ul>
<li>Step1. 训练Word2Vec模型构建「人工智能AI词典」, 共54个词</li>
<li>Step2. 统计上市公司 「年报」中AI词词频m，采用自然对数处理得到指标Ln(m+1)</li>
<li>Step3. 统计上市公司「MD&amp;A」数据中AI词词频n，采用自然对数处理得到指标Ln(n+1)</li>
<li>Step4. 根据上市公司申请专利的名称和摘要是否含AI词，统计上市公司AI专利申请数量p，采用自然对数处理得到指标Ln(p+1)</li>
</ul>
<blockquote>
<p>企业申请的人工智能专利代表企业已经拥有的人工智能技术，反映了企业人工智能技术的产出情况，能够与年报相互印证企业的人工智能技术水平</p>
</blockquote>
<p>为了减轻阅读压力，也为了减轻制作本文的工作量， <strong>本文使用MD&amp;A数据， 实现 Step1 、Step3(Step2、Step3算法相同)， 覆盖截图中的红色框范围内的计算方法</strong>。</p>
<br>
<h3 id="13-项目结构">1.3 项目结构</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 管理世界2024企业人工智能文件夹
    - 代码.ipynb                                    #代码文件
    
    - data                                         #数据文件夹
       - A01-23.csv.gz                             #年报
       - mda01-23.csv.gz                           #md&amp;a
       - 上市公司基本信息2000-2023.csv                #基本信息
       
    - A股人工智能指标2001-2023(mda).xlsx              #计算结果
    
    - Word2Vec                                     #模型文件夹
       - mda01-23.200.6.bin
       - mda01-23.200.6.bin.syn1neg.npy
       - mda01-23.200.6.bin.wv.vectors.npy
       - 1000w专利摘要文本.100.6.bin
       - 1000w专利摘要文本.100.6.bin.syn1neg.npy
       - 1000w专利摘要文本.100.6.bin.wv.vectors.npy
</code></pre></div><p><br><br></p>
<h2 id="二准备ai词典">二、准备AI词典</h2>
<ol>
<li>构造专利摘要语料、管理层讨论与分析语料，分别训练Word2Vec模型</li>
<li>构建人工智能种子词， 使用Word2Vec模型扩展并构建「人工智能词典」</li>
</ol>
<br>
<h3 id="21-训练word2vec模型">2.1 训练Word2Vec模型</h3>
<p>刚好之前分享过使用cntext库(2.0以上版本)训练Word2Vec， 相关推文</p>
<ul>
<li><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">词向量(付费) | 使用MD&amp;A2001-2023语料训练Word2Vec模型</a></li>
<li><a href="https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/">词向量(付费) | 使用1985年-2025年专利申请摘要训练word2vec模型</a></li>
</ul>
<p>分别对应 <em><strong>cntext-2.1.4-py3-none-any.whl</strong></em>、 <em><strong>mda01-23.200.6.bin</strong></em> 、 <em><strong>1000w专利摘要文本.100.6.bin</strong></em> 两个模型文件。<strong>文末有模型获取方式</strong>。</p>
<br>
<h3 id="22-导入word2vec">2.2 导入Word2Vec</h3>
<p>以 mda01-22.200.6.bin 为例， 使用cntext2读取模型， cntext安装和使用请参考 <a href="https://textdata.cn/blog/2024-04-27-cntext2x-tutorial/">文本分析库cntext2.x使用说明文档</a>。 <strong>文末有cntext获取方式</strong>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#查看cntext版本</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">__version__</span><span class="p">)</span>

<span class="c1">#导入管理层讨论与分析的Word2Vec模型</span>
<span class="n">mda_w2v_m</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="s1">&#39;Word2Vec/mda01-23.200.6.bin&#39;</span><span class="p">)</span>
<span class="c1">#导入专利摘要Word2Vec模型</span>
<span class="c1">#pat_w2v_m = ct.load_w2v(&#39;Word2Vec/1000w专利摘要文本.100.6.bin&#39;)</span>

<span class="n">mda_w2v_m</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2.1.4

Loading word2vec model...
&lt;gensim.models.word2vec.Word2Vec at 0x7dbf9afd0&gt;
</code></pre></div><br>
<p>查看某个词的词向量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">mda_w2v_m.wv.get_vector(&#39;人工智能&#39;)
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([-3.8744571 , -0.5923845 , -1.8126943 ,  1.660894  ,  1.4194168 ,
        1.0365077 , -0.21333796, -0.60481924,  1.5012817 , -0.24060927,
       -1.7463511 , -2.1997519 , -0.66537315, -1.2665682 ,  0.14333063,
       -0.1268099 ,  2.005481  , -1.4638793 ,  3.7950375 ,  0.20866613,
        1.0281029 , -1.5495429 , -0.2518896 ,  1.4159175 ,  3.178865  ,
        .............................#省略展示..........................
       -1.2206184 ,  1.6766415 , -0.1082068 ,  0.62580353,  1.4639648 ,
        2.2743094 , -0.48386717,  1.3510187 ,  1.1698194 ,  0.72390413,
       -0.4855997 ,  1.0688399 ,  0.77217335, -1.4559731 ,  1.4391305 ,
        0.8412411 ,  2.359447  , -1.1504242 ,  1.3677332 , -0.92123735,
        1.281644  ,  0.67157453,  2.159804  ,  1.7593136 , -0.53061306,
       -0.77395666,  0.5912517 ,  1.9448034 ,  0.13023153,  0.6798518 ],
      dtype=float32)
</code></pre></div><br>
<h3 id="23-扩展词典">2.3 扩展词典</h3>
<p>我们每个人对人工智能都有所了解，脑海里首先能想到的词可以当做 「初始种子词」， 例如词语 <code>人工智能|人机对话|</code> 等。 本部分主要展示Word2Vec模型的近义词联想能力，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mda_w2v_m</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar</span><span class="p">([</span><span class="s1">&#39;人工智能&#39;</span><span class="p">,</span> <span class="s1">&#39;人机对话&#39;</span><span class="p">],</span> <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;自然语言处理&#39;, 0.8055953979492188),
 (&#39;AI&#39;, 0.8050345778465271),
 (&#39;语音识别&#39;, 0.804234504699707),
 (&#39;NLP&#39;, 0.7967724800109863),
 (&#39;交互技术&#39;, 0.7902386784553528),
 (&#39;智能语音&#39;, 0.7870553731918335),
 ..........#省略展示..........
 (&#39;智能识别&#39;, 0.6703209280967712),
 (&#39;结合人工智能&#39;, 0.6701650619506836),
 (&#39;VR技术&#39;, 0.6699633002281189),
 (&#39;人工智能芯片&#39;, 0.6690542101860046),
 (&#39;人工智能数据分析&#39;, 0.6689168214797974),
 (&#39;AR技术&#39;, 0.6688560843467712)]
</code></pre></div><p><br>之后Word2Vec可以根据初始种子词进行扩充，再经过人工检查，最终构建「<strong>人工智能词典</strong>」(论文附表3截图), 我将其整理为 <em><strong>AI-Words</strong></em></p>
<p><img loading="lazy" src="img/02-ai-words.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">AI_Words</span> <span class="o">=</span> <span class="s1">&#39;机器翻译|机器学习|计算机视觉|人机交互|深度学习|神经网络|生物识别|数据挖掘|特征识别|语音合成|语音识别|知识图谱|智慧银行|智能保险|人机协同|智能监管|智能教育|智能客服|智能零售|智能农业|智能投顾|增强现实|虚拟现实|智能医疗|智能语音|智能政务|自动驾驶|智能运输|卷积神经网络|声纹识别|特征提取|无人驾驶|人脸识别|商业智能|循环神经网络|大数据营销|大数据分析|大数据处理|支持向量机|长短期记忆|机器人流程|自然语言|分布式计算|可穿戴产品|大数据管理|智能传感器|模式识别|边缘计算|大数据平台|语音交互|智能环保|人机对话|深度神经网络|大数据运营&#39;</span>
<span class="n">AI_Words</span>
</code></pre></div><p><br><br></p>
<h2 id="三准备数据">三、准备数据</h2>
<p>为了保证数据质量， 论文对样本进行的操作</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1. 剔除金融行业公司；
2. 剔除信息传输、软件和信息技术 服务业以及科学研究和技术服务行业，原因在于这些行业天生使用云计算、大数据以及人工智能技术并披露 相关信息，可能无法清楚判断这些企业应用人工智能技术对其生产效率的影响；
3. 剔除当年处于 ST 和*ST 状 态的样本；
4. 剔除数据缺失的样本
</code></pre></div><br>
<p>大邓这里有几个数据文件，经过一些操作(字段名统一、 整理会计年度、合并多源数据)，就能实现论文中的样本操作。<strong>文末有数据获取方式</strong> 。</p>
<table>
<thead>
<tr>
<th>数据</th>
<th>文件名</th>
<th>所含字段</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">2001-2023年A股上市公司年报</a></td>
<td><em><strong>A01-23.csv.gz</strong></em></td>
<td>仅含<em><strong>code</strong></em> 、 <em><strong>year</strong></em> 、 <em><strong>text</strong></em> 三个字段</td>
</tr>
<tr>
<td><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">2001-2023年A股上市公司管理层讨论与分析</a></td>
<td><em><strong>mda01-23.csv.gz</strong></em></td>
<td>仅含<em><strong>code</strong></em> 、 <em><strong>year</strong></em> 、 <em><strong>text</strong></em> 三个字段</td>
</tr>
<tr>
<td><a href="https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/">2000-2023年A股上市公司基本信息</a></td>
<td><em><strong>上市公司基本信息2000-2023.csv</strong></em></td>
<td>含<em><strong>Symbol</strong></em>、<em><strong>FullName</strong></em>、<em><strong>ShortName</strong></em>、<em><strong>IndustryName</strong></em>、<em><strong>EndDate</strong></em>等 39 个字段。</td>
</tr>
</tbody>
</table>
<p>字段含义</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[年报、管理层讨论与分析数据]
- year 会计年度
- text 年报文本 或 管理层讨论与分析文本
- code 股票代码

[A股基本信息]
- Symbol 股票代码
- ShortName 股票简称， 一般ST字符会出现在这里
- FullName 中文全称
- EndDate 统计截止日期
</code></pre></div><br>
<br>
<h3 id="31-读取数据">3.1 读取数据</h3>
<p><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">2001-2023年A股上市公司管理层讨论与分析</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#读取数据</span>
<span class="n">mda_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data/mda01-23.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#将year更改为字符串格式</span>
<span class="n">mda_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">mda_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
<span class="n">mda_df</span>
</code></pre></div><p><img loading="lazy" src="img/03-mda-df.png" alt=""  />
</p>
<br>
<p><a href="https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/">2000-2023年A股上市公司基本信息</a> 含 行业信息、公司简称里ST等信息， 可以按条件筛选记录。同时，也要构造出 year、code字段，方便后续与mda_df 交集并表。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">ind_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data/上市公司基本信息2000-2023.csv&#39;</span><span class="p">)</span>
<span class="n">ind_df</span> <span class="o">=</span> <span class="n">ind_df</span><span class="p">[</span><span class="n">ind_df</span><span class="p">[</span><span class="s1">&#39;Symbol&#39;</span><span class="p">]</span><span class="o">!=</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span>
<span class="n">ind_df</span>
</code></pre></div><p><img loading="lazy" src="img/04-ind_df.png" alt=""  />
</p>
<br>
<h3 id="32-筛选样本">3.2 筛选样本</h3>
<p>为了保证数据质量， 论文对样本进行的操作</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1. 剔除金融行业公司；
2. 剔除信息传输、软件和信息技术 服务业以及科学研究和技术服务行业，原因在于这些行业天生使用云计算、大数据以及人工智能技术并披露 相关信息，可能无法清楚判断这些企业应用人工智能技术对其生产效率的影响；
3. 剔除当年处于 ST 和 ``*ST`` 状态的样本；
4. 剔除数据缺失的样本
</code></pre></div><br>
<p>筛选记录的代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#行业筛选条件</span>
<span class="n">mask1</span> <span class="o">=</span> <span class="n">ind_df</span><span class="o">.</span><span class="n">IndustryNameC</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;金融|信息|科学研究|技术服务&#39;</span><span class="p">)</span>
<span class="c1">#公司名筛选条件</span>
<span class="n">mask2</span> <span class="o">=</span> <span class="n">ind_df</span><span class="o">.</span><span class="n">ShortName</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;ST&#39;</span><span class="p">)</span>

<span class="c1">#剔除行业为金融、信息、科学研究、技术服务等上市公司</span>
<span class="c1">#或</span>
<span class="c1">#公司名含ST、*ST</span>
<span class="n">ind_df</span> <span class="o">=</span> <span class="n">ind_df</span><span class="p">[</span><span class="o">-</span><span class="p">(</span><span class="n">mask1</span> <span class="o">|</span> <span class="n">mask2</span><span class="p">)]</span>

<span class="c1">#将ind_df中年份、股票代码相关字段改名为【year】【code】，方便与 mda_df并表</span>
<span class="n">ind_df</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;Symbol&#39;</span><span class="p">:</span> <span class="s1">&#39;code&#39;</span><span class="p">},</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">ind_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ind_df</span><span class="o">.</span><span class="n">EndDate</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">date</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">date</span><span class="p">)[:</span><span class="mi">4</span><span class="p">])</span>
<span class="n">ind_df</span> <span class="o">=</span> <span class="n">ind_df</span><span class="p">[[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">,</span> <span class="s1">&#39;FullName&#39;</span><span class="p">]]</span>
<span class="n">ind_df</span>
</code></pre></div><p><img loading="lazy" src="img/05-ind_df.png" alt=""  />
</p>
<br>
<p>以 <em><strong>交集(inner)</strong></em> 方式合并 <em><strong>mda_df</strong></em>  和  <em><strong>ind_df</strong></em>，  相当于剔除了mda数据中金融、信息、科学研究、技术服务、ST、<code>*ST</code> 公司</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">mda_df2 = pd.merge(mda_df, ind_df, on=[&#39;code&#39;, &#39;year&#39;], how=&#39;inner&#39;)
mda_df2 = mda_df2[[&#39;FullName&#39;, &#39;year&#39;, &#39;code&#39;, &#39;text&#39;]]
mda_df2
</code></pre></div><p><img loading="lazy" src="img/06-mda-df2.png" alt=""  />
</p>
<br>
<h2 id="四测量ai指标">四、测量AI指标</h2>
<p>测量人工智能指标代码比较简单，</p>
<ol>
<li>选中 <em><strong>text</strong></em>字段, 利用字符串属性 <em><strong>.str.count()</strong></em> 测量 <em><strong>AI-Words</strong></em> 出现次数，</li>
<li><em><strong>np.log</strong></em> 自然对数处理</li>
<li>选择必要的字段<em><strong>year</strong></em>、<em><strong>code</strong></em>、<em><strong>AI</strong></em> 进行保存和展示</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="c1">#测量企业人工智能指数</span>
<span class="c1">#计算结果保存为字段AI</span>
<span class="n">mda_df2</span><span class="p">[</span><span class="s1">&#39;AI&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">mda_df2</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">AI_Words</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">mda_df3</span> <span class="o">=</span> <span class="n">mda_df2</span><span class="p">[[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">,</span> <span class="s1">&#39;AI&#39;</span><span class="p">]]</span>

<span class="c1">#保存为csv/xlsx</span>
<span class="n">mda_df3</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;A股人工智能指标2001-2023(mda).csv&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">mda_df3</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;A股人工智能指标2001-2023(mda).xlsx&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>

<span class="c1">#展示结果</span>
<span class="n">mda_df3</span>
</code></pre></div><p><img loading="lazy" src="img/07-ai-index.png" alt=""  />
</p>
<br>
<br>
<h2 id="五获取资料">五、获取资料</h2>
<h3 id="51-免费说明">5.1 免费说明</h3>
<p>阅读是免费的， 推文内的相关模型、安装包、数据是付费获取。</p>
<p>今日推文最核心的python代码只有2行， 看到就赚到！今日推文要计算「<em><strong>企业人工智能指数</strong></em>」，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#AI相关词</span>
<span class="n">AI_Words</span> <span class="o">=</span> <span class="s1">&#39;机器翻译|机器学习|计算机视觉|人机交互|深度学习|神经网络|生物识别|数据挖掘|特征识别|语音合成|语音识别|知识图谱|智慧银行|智能保险|人机协同|智能监管|智能教育|智能客服|智能零售|智能农业|智能投顾|增强现实|虚拟现实|智能医疗|智能语音|智能政务|自动驾驶|智能运输|卷积神经网络|声纹识别|特征提取|无人驾驶|人脸识别|商业智能|循环神经网络|大数据营销|大数据分析|大数据处理|支持向量机|长短期记忆|机器人流程|自然语言|分布式计算|可穿戴产品|大数据管理|智能传感器|模式识别|边缘计算|大数据平台|语音交互|智能环保|人机对话|深度神经网络|大数据运营&#39;</span>

<span class="c1">#企业人工智能指数，保存为字段AI</span>
<span class="n">mda_df2</span><span class="p">[</span><span class="s1">&#39;AI&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">mda_df2</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">AI_Words</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="52-付费说明">5.2 付费说明</h3>
<p>内容整理不易， 想尽快复现本文的同学可以购买对应的数据、安装包、Word2Vec模型。加 <em><strong>WeChat: 372335839</strong></em> ， 备注 「<strong>姓名-学校-专业</strong>」。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 打包价300元, 资料含
   1. 专利摘要Word2Vec模型文件(1000w专利摘要文本.100.6.bin)
   2. 管理层讨论与分析Word2Vec模型文件(mda01-22.200.6.bin)
   3. cntext2安装文件(cntext-2.1.3-py3-none-any.whl)
   4. 管理层讨论与分析(mda01-22.csv.gz)、年报(A01-22.csv.gz)
   5. 上市公司基本信息2000-2023.csv   


- 零卖价格明细
- 100元  cntext2安装文件(cntext-2.1.4-py3-none-any.whl)
- 100元  管理层讨论与分析(mda01-23.csv.gz)、年报(A01-23.csv.gz)
- 100元  管理层讨论与分析Word2Vec模型文件(mda01-23.200.6.bin)
- 100元  专利摘要Word2Vec模型文件(1000w专利摘要文本.100.6.bin)
- 50元   上市公司基本信息2000-2023.csv
- 50元   A股人工智能指标2001-2023(mda).xlsx     #使用MD&amp;A的计算结果
</code></pre></div><br>
<h3 id="项目结构">项目结构</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 管理世界2024企业人工智能文件夹
    - 代码.ipynb                                    #代码文件
    
    - data                                         #数据文件夹
       - A01-23.csv.gz                             #年报
       - mda01-23.csv.gz                           #md&amp;a
       - 上市公司基本信息2000-2023.csv                #基本信息
       
    - A股人工智能指标2001-2023(mda).xlsx              #使用MD&amp;A的计算结果
    
    - Word2Vec                                     #模型文件夹
       - mda01-23.200.6.bin
       - mda01-23.200.6.bin.syn1neg.npy
       - mda01-23.200.6.bin.wv.vectors.npy
       - 1000w专利摘要文本.100.6.bin
       - 1000w专利摘要文本.100.6.bin.syn1neg.npy
       - 1000w专利摘要文本.100.6.bin.wv.vectors.npy
</code></pre></div><br>
<p>相关内容请阅读</p>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2024-04-27-cntext2x-tutorial/">文本分析库cntext2.x使用说明文档</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">数据集 | 2001-2023年A股上市公司年报&amp;管理层讨论与分析</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/">数据集 | 2000-2023年A股上市公司基本信息</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">词向量 | 使用MD&amp;A2001-2022语料训练Word2Vec模型</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/">词向量 | 使用1985年-2022年专利申请摘要训练word2vec模型</a></p>
</li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  上市公司董监高人员的个人特征/教育背景/任职情况</title>
      <link>https://textdata.cn/blog/2024-04-18-china-a-listed-company-figure-characteristic-dataset/</link>
      <pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-04-18-china-a-listed-company-figure-characteristic-dataset/</guid>
      <description>&lt;h2 id=&#34;一上市公司董监高&#34;&gt;一、上市公司董监高&lt;/h2&gt;
&lt;h3 id=&#34;11-数据集概况&#34;&gt;1.1 数据集概况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集: 中国上市公司人物特征研究数据库
   
董监高人数: 375105

数据源: 新浪财经高管(公开信息)

记录数:
   - 董监高个人特征  1548448
   - 董监高教育背景明细表 639615
   - 董监高任职情况表 1448841 

截止日期: 1990-2024.4.8

本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以「新希望」为例， 董监高截图。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vip.stock.finance.sina.com.cn/corp/go.php/vCI_CorpManager/stockid/000876.phtml&#34;&gt;https://vip.stock.finance.sina.com.cn/corp/go.php/vCI_CorpManager/stockid/000876.phtml&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-cover.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-cover.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-cover.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-声明&#34;&gt;1.2 声明&lt;/h3&gt;
&lt;p&gt;科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-董监高教育背景明细表&#34;&gt;2.1 董监高教育背景明细表&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;import pandas as pd

df1 = pd.read_csv(&amp;#39;董监高教育背景明细表.csv&amp;#39;)
df1.head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;查看字段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;field_max_len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;desc_max_len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;- &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field_max_len&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desc_max_len&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- Symbol         股票代码  
- EndDate        截止日期  
- PersonID       人员ID  
- FullName       人员姓名  
- Degree         学历    
- UniversityID   毕业院校ID
- University     毕业院校  
- Major          专业    
- AdmissionTime  入校时间  
- GraduationTime 毕业时间  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;22-董监高个人特征&#34;&gt;2.2 董监高个人特征&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;董监高个人特征.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;查看字段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;field_max_len = max([len(x) for x in df2.iloc[0, :].index])
desc_max_len = max([len(x) for x in df2.iloc[0, :].values])

for field, desc in zip(df2.iloc[0, :].index, df2.iloc[0, :].values):
    print(f&amp;#39;- {field:&amp;lt;{field_max_len}} {desc:&amp;lt;{desc_max_len}}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Stkcd&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;证券代码&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reptdt&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;统计截止日期&lt;/span&gt;        
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PersonID&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;人员ID&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;姓名&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Nationality&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;国籍&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NativePlace&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;籍贯&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NatAreaCode&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;籍贯所在地区代码&lt;/span&gt;      
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BirthPlace&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;出生地&lt;/span&gt;           
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BirAreaCode&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;出生地所在地区代码&lt;/span&gt;     
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Gender&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;性别&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Age&lt;/span&gt;               &lt;span class=&#34;n&#34;&gt;年龄&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;University&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;毕业院校&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Degree&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;学历&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Major&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;专业&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Profession&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;职称&lt;/span&gt;            
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Resume&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;个人简历&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PaidSign&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;是否领取薪酬&lt;/span&gt;        
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TotalSalary&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;报告期报酬总额&lt;/span&gt;       
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Allowance&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;其中&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;津贴&lt;/span&gt;         
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SharEnd&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;年末持股数&lt;/span&gt;         
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IsMTMT&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;是否高管团队成员&lt;/span&gt;      
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TMTP&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;高管职务类别&lt;/span&gt;        
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IsMTB&lt;/span&gt;             &lt;span class=&#34;n&#34;&gt;是否董事会成员&lt;/span&gt;       
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CTB&lt;/span&gt;               &lt;span class=&#34;n&#34;&gt;董事会职务类别&lt;/span&gt;       
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IsIdirecotr&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;是否独立董事&lt;/span&gt;        
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IsDuality&lt;/span&gt;         &lt;span class=&#34;n&#34;&gt;是否兼任董事长和CEO&lt;/span&gt;   
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IsSupervisor&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;是否监事&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Position&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;具体职务&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PositionID&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;具体职务ID&lt;/span&gt;        
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ServicePosition&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;在职职务&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ServicePositionID&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;在职职务ID&lt;/span&gt;        
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Funback&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;职业背景&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OveseaBack&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;海外背景&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Academic&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;学术背景&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FinBack&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;金融背景&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IsCocurP&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;是否在股东单位兼任&lt;/span&gt;     
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OtherCo&lt;/span&gt;           &lt;span class=&#34;n&#34;&gt;兼任职务&lt;/span&gt;          
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OtherCoType&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;兼任职务类别&lt;/span&gt;        
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Director_TotCO&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;兼任职务为董事的公司总数&lt;/span&gt;  
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Director_ListCO&lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;兼任职务为董事的上市公司总数&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Stkcd_director&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;兼任职务为董事的上市公司代码&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-董监高任职情况表&#34;&gt;2.3 董监高任职情况表&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;董监高任职情况表.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;field_max_len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;desc_max_len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;- &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field_max_len&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;desc_max_len&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- Stkcd         证券代码    
- Reptdt        统计截止日期  
- PersonID      人员ID    
- Name          姓名      
- Position      具体职务    
- PositionID    具体职务ID  
- StartDate     任职开始日期  
- EndDate       任职结束日期  
- ServiceStatus 是否在职    
- Tenure        任期      
- ToLeavPost    距离离任剩余日期
- ResignReason  离职原因    
- GTAPosition   职务名称    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三相关数据&#34;&gt;三、相关数据&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2022-11-25-senior-manager-resume-dataset/&#34;&gt;数据集(付费) | 90w条中国上市公司高管数据&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-05-17-top-manager-violation/&#34;&gt;数据集 | 上市公司高管违规数据(2008-2022)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;数据集 | 2001-2022年A股上市公司年报&amp;amp;管理层讨论与分析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/&#34;&gt;数据集(付费) | 三板上市公司年报2002-2023.12&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-03-listed-company-arbitration-dataset/&#34;&gt;数据集 | 36330条上市公司仲裁数据(2000-2021)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/&#34;&gt;数据集 | 上市公司 208 万条专利数据集 (1991-2022)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-09-08-china-a-share-market-listed-company-earnings-communication-conference/&#34;&gt;数据集 | 84w条业绩说明会问答数据(2005-2023)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-08-11-china-a-market-corporate-social-responsibility-dataste/&#34;&gt;数据集 | 2006年-2022年企业社会责任报告&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-04-17-china-a-market-inquiry-letter-datasets/&#34;&gt;数据集(付费) | 2014年-2022年监管问询函&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-04-26-entrusted-loan-dataset/&#34;&gt;数据集| 07-21年上市公司「委托贷款公告」&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/coporate_social_responsibility_datasets/&#34;&gt;数据集 | 企业社会责任报告数据集&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一上市公司董监高">一、上市公司董监高</h2>
<h3 id="11-数据集概况">1.1 数据集概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集: 中国上市公司人物特征研究数据库
   
董监高人数: 375105

数据源: 新浪财经高管(公开信息)

记录数:
   - 董监高个人特征  1548448
   - 董监高教育背景明细表 639615
   - 董监高任职情况表 1448841 

截止日期: 1990-2024.4.8

本文声明: 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p>以「新希望」为例， 董监高截图。</p>
<blockquote>
<p><a href="https://vip.stock.finance.sina.com.cn/corp/go.php/vCI_CorpManager/stockid/000876.phtml">https://vip.stock.finance.sina.com.cn/corp/go.php/vCI_CorpManager/stockid/000876.phtml</a></p>
</blockquote>
<p><img loading="lazy" src="img/01-cover.png" alt=""  />
</p>
<p><img loading="lazy" src="img/03-cover.png" alt=""  />
</p>
<p><img loading="lazy" src="img/02-cover.png" alt=""  />
</p>
<br>
<h3 id="12-声明">1.2 声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-董监高教育背景明细表">2.1 董监高教育背景明细表</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">import pandas as pd

df1 = pd.read_csv(&#39;董监高教育背景明细表.csv&#39;)
df1.head()
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<p>查看字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">field_max_len</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df1</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">index</span><span class="p">])</span>
<span class="n">desc_max_len</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df1</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">values</span><span class="p">])</span>

<span class="k">for</span> <span class="n">field</span><span class="p">,</span> <span class="n">desc</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">df1</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df1</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">values</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;- </span><span class="si">{</span><span class="n">field</span><span class="si">:</span><span class="s1">&lt;</span><span class="si">{</span><span class="n">field_max_len</span><span class="si">}}</span><span class="s1"> </span><span class="si">{</span><span class="n">desc</span><span class="si">:</span><span class="s1">&lt;</span><span class="si">{</span><span class="n">desc_max_len</span><span class="si">}}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- Symbol         股票代码  
- EndDate        截止日期  
- PersonID       人员ID  
- FullName       人员姓名  
- Degree         学历    
- UniversityID   毕业院校ID
- University     毕业院校  
- Major          专业    
- AdmissionTime  入校时间  
- GraduationTime 毕业时间  
</code></pre></div><p><br><br></p>
<h3 id="22-董监高个人特征">2.2 董监高个人特征</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;董监高个人特征.csv&#39;</span><span class="p">)</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<p>查看字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">field_max_len = max([len(x) for x in df2.iloc[0, :].index])
desc_max_len = max([len(x) for x in df2.iloc[0, :].values])

for field, desc in zip(df2.iloc[0, :].index, df2.iloc[0, :].values):
    print(f&#39;- {field:&lt;{field_max_len}} {desc:&lt;{desc_max_len}}&#39;)
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">-</span> <span class="n">Stkcd</span>             <span class="n">证券代码</span>          
<span class="o">-</span> <span class="n">Reptdt</span>            <span class="n">统计截止日期</span>        
<span class="o">-</span> <span class="n">PersonID</span>          <span class="n">人员ID</span>          
<span class="o">-</span> <span class="n">Name</span>              <span class="n">姓名</span>            
<span class="o">-</span> <span class="n">Nationality</span>       <span class="n">国籍</span>            
<span class="o">-</span> <span class="n">NativePlace</span>       <span class="n">籍贯</span>            
<span class="o">-</span> <span class="n">NatAreaCode</span>       <span class="n">籍贯所在地区代码</span>      
<span class="o">-</span> <span class="n">BirthPlace</span>        <span class="n">出生地</span>           
<span class="o">-</span> <span class="n">BirAreaCode</span>       <span class="n">出生地所在地区代码</span>     
<span class="o">-</span> <span class="n">Gender</span>            <span class="n">性别</span>            
<span class="o">-</span> <span class="n">Age</span>               <span class="n">年龄</span>            
<span class="o">-</span> <span class="n">University</span>        <span class="n">毕业院校</span>          
<span class="o">-</span> <span class="n">Degree</span>            <span class="n">学历</span>            
<span class="o">-</span> <span class="n">Major</span>             <span class="n">专业</span>            
<span class="o">-</span> <span class="n">Profession</span>        <span class="n">职称</span>            
<span class="o">-</span> <span class="n">Resume</span>            <span class="n">个人简历</span>          
<span class="o">-</span> <span class="n">PaidSign</span>          <span class="n">是否领取薪酬</span>        
<span class="o">-</span> <span class="n">TotalSalary</span>       <span class="n">报告期报酬总额</span>       
<span class="o">-</span> <span class="n">Allowance</span>         <span class="n">其中</span><span class="err">：</span><span class="n">津贴</span>         
<span class="o">-</span> <span class="n">SharEnd</span>           <span class="n">年末持股数</span>         
<span class="o">-</span> <span class="n">IsMTMT</span>            <span class="n">是否高管团队成员</span>      
<span class="o">-</span> <span class="n">TMTP</span>              <span class="n">高管职务类别</span>        
<span class="o">-</span> <span class="n">IsMTB</span>             <span class="n">是否董事会成员</span>       
<span class="o">-</span> <span class="n">CTB</span>               <span class="n">董事会职务类别</span>       
<span class="o">-</span> <span class="n">IsIdirecotr</span>       <span class="n">是否独立董事</span>        
<span class="o">-</span> <span class="n">IsDuality</span>         <span class="n">是否兼任董事长和CEO</span>   
<span class="o">-</span> <span class="n">IsSupervisor</span>      <span class="n">是否监事</span>          
<span class="o">-</span> <span class="n">Position</span>          <span class="n">具体职务</span>          
<span class="o">-</span> <span class="n">PositionID</span>        <span class="n">具体职务ID</span>        
<span class="o">-</span> <span class="n">ServicePosition</span>   <span class="n">在职职务</span>          
<span class="o">-</span> <span class="n">ServicePositionID</span> <span class="n">在职职务ID</span>        
<span class="o">-</span> <span class="n">Funback</span>           <span class="n">职业背景</span>          
<span class="o">-</span> <span class="n">OveseaBack</span>        <span class="n">海外背景</span>          
<span class="o">-</span> <span class="n">Academic</span>          <span class="n">学术背景</span>          
<span class="o">-</span> <span class="n">FinBack</span>           <span class="n">金融背景</span>          
<span class="o">-</span> <span class="n">IsCocurP</span>          <span class="n">是否在股东单位兼任</span>     
<span class="o">-</span> <span class="n">OtherCo</span>           <span class="n">兼任职务</span>          
<span class="o">-</span> <span class="n">OtherCoType</span>       <span class="n">兼任职务类别</span>        
<span class="o">-</span> <span class="n">Director_TotCO</span>    <span class="n">兼任职务为董事的公司总数</span>  
<span class="o">-</span> <span class="n">Director_ListCO</span>   <span class="n">兼任职务为董事的上市公司总数</span>
<span class="o">-</span> <span class="n">Stkcd_director</span>    <span class="n">兼任职务为董事的上市公司代码</span>
</code></pre></div><br>
<br>
<h3 id="23-董监高任职情况表">2.3 董监高任职情况表</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;董监高任职情况表.csv&#39;</span><span class="p">)</span>
<span class="n">df3</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">field_max_len</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df3</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">index</span><span class="p">])</span>
<span class="n">desc_max_len</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df3</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">values</span><span class="p">])</span>

<span class="k">for</span> <span class="n">field</span><span class="p">,</span> <span class="n">desc</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">df3</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df3</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">values</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;- </span><span class="si">{</span><span class="n">field</span><span class="si">:</span><span class="s1">&lt;</span><span class="si">{</span><span class="n">field_max_len</span><span class="si">}}</span><span class="s1"> </span><span class="si">{</span><span class="n">desc</span><span class="si">:</span><span class="s1">&lt;</span><span class="si">{</span><span class="n">desc_max_len</span><span class="si">}}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- Stkcd         证券代码    
- Reptdt        统计截止日期  
- PersonID      人员ID    
- Name          姓名      
- Position      具体职务    
- PositionID    具体职务ID  
- StartDate     任职开始日期  
- EndDate       任职结束日期  
- ServiceStatus 是否在职    
- Tenure        任期      
- ToLeavPost    距离离任剩余日期
- ResignReason  离职原因    
- GTAPosition   职务名称    
</code></pre></div><p><br><br></p>
<h2 id="三相关数据">三、相关数据</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2022-11-25-senior-manager-resume-dataset/">数据集(付费) | 90w条中国上市公司高管数据</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-05-17-top-manager-violation/">数据集 | 上市公司高管违规数据(2008-2022)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">数据集 | 2001-2022年A股上市公司年报&amp;管理层讨论与分析</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/">数据集(付费) | 三板上市公司年报2002-2023.12</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2024-01-03-listed-company-arbitration-dataset/">数据集 | 36330条上市公司仲裁数据(2000-2021)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/">数据集 | 上市公司 208 万条专利数据集 (1991-2022)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-09-08-china-a-share-market-listed-company-earnings-communication-conference/">数据集 | 84w条业绩说明会问答数据(2005-2023)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-08-11-china-a-market-corporate-social-responsibility-dataste/">数据集 | 2006年-2022年企业社会责任报告</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-04-17-china-a-market-inquiry-letter-datasets/">数据集(付费) | 2014年-2022年监管问询函</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-04-26-entrusted-loan-dataset/">数据集| 07-21年上市公司「委托贷款公告」</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/coporate_social_responsibility_datasets/">数据集 | 企业社会责任报告数据集</a></p>
</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  使用3394w条豆瓣书评数据集</title>
      <link>https://textdata.cn/blog/2024-04-17-douban-book-3394w-ratings-comments-dataset/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-04-17-douban-book-3394w-ratings-comments-dataset/</guid>
      <description>&lt;h2 id=&#34;一豆瓣读书介绍&#34;&gt;一、豆瓣读书介绍&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集: douba-book

数据源: 豆瓣读书
   
记录数:
   - 标签 120 个
   - 书 17967 部
   - 书评 33941454 条
   
书评日期起止: 2005-06-12 ~ 2018-10-13
   
体积: 2.11G(解压后5.52G) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该数据已经过初步清洗，可用于推荐系统、情感分析、知识图谱、社会学文化变迁等多个领域(或主题)。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;p&gt;下载 &lt;em&gt;&lt;strong&gt;douban_book.csv.gz&lt;/strong&gt;&lt;/em&gt; 解压后，可以看到数据集中有一个 &lt;em&gt;&lt;strong&gt;douban_book.csv&lt;/strong&gt;&lt;/em&gt; 文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;douban_book.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;33941454
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-所含字段&#34;&gt;2.2 所含字段&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; - &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; - tag          标签
 - book_name    书名
 - user_name    书评人
 - date         书评发布日期
 - comment      书评内容
 - star         评分(1-5)
 - vote_count   书评获赞数
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23--覆盖日期&#34;&gt;2.3  覆盖日期&lt;/h3&gt;
&lt;p&gt;书评发布日期覆盖(最早~ 最晚)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2005-06-12 00:00:00
2018-10-13 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;24-标签&#34;&gt;2.4 标签&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;120

[&amp;#39;思想&amp;#39; &amp;#39;科技&amp;#39; &amp;#39;金融&amp;#39; &amp;#39;政治学&amp;#39; &amp;#39;随笔&amp;#39; &amp;#39;爱情&amp;#39; &amp;#39;名著&amp;#39; &amp;#39;幾米&amp;#39; &amp;#39;人文&amp;#39; &amp;#39;交互&amp;#39; &amp;#39;悬疑&amp;#39; &amp;#39;算法&amp;#39; &amp;#39;哲学&amp;#39; &amp;#39;艺术史&amp;#39;
 &amp;#39;历史&amp;#39; &amp;#39;用户体验&amp;#39; &amp;#39;绘画&amp;#39; &amp;#39;诗词&amp;#39; &amp;#39;考古&amp;#39; &amp;#39;心理学&amp;#39; &amp;#39;互联网&amp;#39; &amp;#39;戏剧&amp;#39; &amp;#39;安妮宝贝&amp;#39; &amp;#39;艺术&amp;#39; &amp;#39;东野圭吾&amp;#39; &amp;#39;散文&amp;#39; &amp;#39;魔幻&amp;#39;
 &amp;#39;童话&amp;#39; &amp;#39;商业&amp;#39; &amp;#39;UCD&amp;#39; &amp;#39;日本文学&amp;#39; &amp;#39;武侠&amp;#39; &amp;#39;音乐&amp;#39; &amp;#39;通信&amp;#39; &amp;#39;科幻小说&amp;#39; &amp;#39;科普&amp;#39; &amp;#39;程序&amp;#39; &amp;#39;生活&amp;#39; &amp;#39;张悦然&amp;#39; &amp;#39;经济&amp;#39;
 &amp;#39;小说&amp;#39; &amp;#39;科幻&amp;#39; &amp;#39;军事&amp;#39; &amp;#39;心理&amp;#39; &amp;#39;文学&amp;#39; &amp;#39;电影&amp;#39; &amp;#39;社会学&amp;#39; &amp;#39;广告&amp;#39; &amp;#39;管理&amp;#39; &amp;#39;励志&amp;#39; &amp;#39;耽美&amp;#39; &amp;#39;郭敬明&amp;#39; &amp;#39;穿越&amp;#39;
 &amp;#39;阿加莎·克里斯蒂&amp;#39; &amp;#39;杂文&amp;#39; &amp;#39;传记&amp;#39; &amp;#39;韩寒&amp;#39; &amp;#39;设计&amp;#39; &amp;#39;落落&amp;#39; &amp;#39;言情&amp;#39; &amp;#39;职场&amp;#39; &amp;#39;成长&amp;#39; &amp;#39;佛教&amp;#39; &amp;#39;女性&amp;#39; &amp;#39;政治&amp;#39; &amp;#39;近代史&amp;#39;
 &amp;#39;营销&amp;#39; &amp;#39;推理小说&amp;#39; &amp;#39;建筑&amp;#39; &amp;#39;经典&amp;#39; &amp;#39;外国名著&amp;#39; &amp;#39;二战&amp;#39; &amp;#39;鲁迅&amp;#39; &amp;#39;J.K.罗琳&amp;#39; &amp;#39;奇幻&amp;#39; &amp;#39;外国文学&amp;#39; &amp;#39;校园&amp;#39; &amp;#39;人物传记&amp;#39;
 &amp;#39;西方哲学&amp;#39; &amp;#39;自由主义&amp;#39; &amp;#39;文化&amp;#39; &amp;#39;旅行&amp;#39; &amp;#39;张小娴&amp;#39; &amp;#39;企业史&amp;#39; &amp;#39;国学&amp;#39; &amp;#39;摄影&amp;#39; &amp;#39;亦舒&amp;#39; &amp;#39;青春&amp;#39; &amp;#39;科学&amp;#39; &amp;#39;策划&amp;#39; &amp;#39;web&amp;#39;
 &amp;#39;创业&amp;#39; &amp;#39;美术&amp;#39; &amp;#39;宗教&amp;#39; &amp;#39;古龙&amp;#39; &amp;#39;沧月&amp;#39; &amp;#39;村上春树&amp;#39; &amp;#39;社会&amp;#39; &amp;#39;股票&amp;#39; &amp;#39;理财&amp;#39; &amp;#39;日本漫画&amp;#39; &amp;#39;轻小说&amp;#39; &amp;#39;数学&amp;#39; &amp;#39;神经网络&amp;#39;
 &amp;#39;网络小说&amp;#39; &amp;#39;当代文学&amp;#39; &amp;#39;中国历史&amp;#39; &amp;#39;三毛&amp;#39; &amp;#39;回忆录&amp;#39; &amp;#39;古典文学&amp;#39; &amp;#39;交互设计&amp;#39; &amp;#39;推理&amp;#39; &amp;#39;高木直子&amp;#39; &amp;#39;中国文学&amp;#39; &amp;#39;青春文学&amp;#39;
 &amp;#39;金庸&amp;#39; &amp;#39;UE&amp;#39; &amp;#39;投资&amp;#39; &amp;#39;编程&amp;#39; &amp;#39;几米&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;25--可视化&#34;&gt;2.5  可视化&lt;/h3&gt;
&lt;p&gt;书评发布数量随年份变化&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#初始化matplotlib汉化美化配置&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;#构造数据&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;date_series&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;volume_series&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Grouper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;freq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#这里的date， month_df都是特殊数据类型&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;date_series&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;volume_series&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;volume_by_time_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;volume_series&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;volume_by_time_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;volume_by_time_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;



&lt;span class=&#34;c1&#34;&gt;#开始绘图&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;volume_by_time_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
         &lt;span class=&#34;n&#34;&gt;volume_by_time_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;volume&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
         &lt;span class=&#34;n&#34;&gt;linestyle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;--&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;volume_by_time_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
            &lt;span class=&#34;n&#34;&gt;volume_by_time_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;volume&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
            &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;豆瓣读书随年份书评数量变化(2005.6.12 ~ 2018.10.13)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;fontsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;书评数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;savefig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;plot.png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dpi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三相关内容&#34;&gt;三、相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-16-douban-movie-1000w-ratings-comments-dataset/&#34;&gt;数据集 | 使用1000w条豆瓣影评训练Word2Vec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四获取数据&#34;&gt;四、获取数据&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;douban-book&lt;/strong&gt;&lt;/em&gt; 链接: &lt;a href=&#34;https://pan.baidu.com/s/1qySKU_0dsoi1NAF9lQ971w?pwd=n5qe&#34;&gt;https://pan.baidu.com/s/1qySKU_0dsoi1NAF9lQ971w?pwd=n5qe&lt;/a&gt; 提取码: n5qe&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一豆瓣读书介绍">一、豆瓣读书介绍</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集: douba-book

数据源: 豆瓣读书
   
记录数:
   - 标签 120 个
   - 书 17967 部
   - 书评 33941454 条
   
书评日期起止: 2005-06-12 ~ 2018-10-13
   
体积: 2.11G(解压后5.52G) 
</code></pre></div><p>该数据已经过初步清洗，可用于推荐系统、情感分析、知识图谱、社会学文化变迁等多个领域(或主题)。</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>下载 <em><strong>douban_book.csv.gz</strong></em> 解压后，可以看到数据集中有一个 <em><strong>douban_book.csv</strong></em> 文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;douban_book.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">33941454
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-所含字段">2.2 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - tag          标签
 - book_name    书名
 - user_name    书评人
 - date         书评发布日期
 - comment      书评内容
 - star         评分(1-5)
 - vote_count   书评获赞数
</code></pre></div><br>
<h3 id="23--覆盖日期">2.3  覆盖日期</h3>
<p>书评发布日期覆盖(最早~ 最晚)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2005-06-12 00:00:00
2018-10-13 00:00:00
</code></pre></div><br>
<h3 id="24-标签">2.4 标签</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">nunique</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">120

[&#39;思想&#39; &#39;科技&#39; &#39;金融&#39; &#39;政治学&#39; &#39;随笔&#39; &#39;爱情&#39; &#39;名著&#39; &#39;幾米&#39; &#39;人文&#39; &#39;交互&#39; &#39;悬疑&#39; &#39;算法&#39; &#39;哲学&#39; &#39;艺术史&#39;
 &#39;历史&#39; &#39;用户体验&#39; &#39;绘画&#39; &#39;诗词&#39; &#39;考古&#39; &#39;心理学&#39; &#39;互联网&#39; &#39;戏剧&#39; &#39;安妮宝贝&#39; &#39;艺术&#39; &#39;东野圭吾&#39; &#39;散文&#39; &#39;魔幻&#39;
 &#39;童话&#39; &#39;商业&#39; &#39;UCD&#39; &#39;日本文学&#39; &#39;武侠&#39; &#39;音乐&#39; &#39;通信&#39; &#39;科幻小说&#39; &#39;科普&#39; &#39;程序&#39; &#39;生活&#39; &#39;张悦然&#39; &#39;经济&#39;
 &#39;小说&#39; &#39;科幻&#39; &#39;军事&#39; &#39;心理&#39; &#39;文学&#39; &#39;电影&#39; &#39;社会学&#39; &#39;广告&#39; &#39;管理&#39; &#39;励志&#39; &#39;耽美&#39; &#39;郭敬明&#39; &#39;穿越&#39;
 &#39;阿加莎·克里斯蒂&#39; &#39;杂文&#39; &#39;传记&#39; &#39;韩寒&#39; &#39;设计&#39; &#39;落落&#39; &#39;言情&#39; &#39;职场&#39; &#39;成长&#39; &#39;佛教&#39; &#39;女性&#39; &#39;政治&#39; &#39;近代史&#39;
 &#39;营销&#39; &#39;推理小说&#39; &#39;建筑&#39; &#39;经典&#39; &#39;外国名著&#39; &#39;二战&#39; &#39;鲁迅&#39; &#39;J.K.罗琳&#39; &#39;奇幻&#39; &#39;外国文学&#39; &#39;校园&#39; &#39;人物传记&#39;
 &#39;西方哲学&#39; &#39;自由主义&#39; &#39;文化&#39; &#39;旅行&#39; &#39;张小娴&#39; &#39;企业史&#39; &#39;国学&#39; &#39;摄影&#39; &#39;亦舒&#39; &#39;青春&#39; &#39;科学&#39; &#39;策划&#39; &#39;web&#39;
 &#39;创业&#39; &#39;美术&#39; &#39;宗教&#39; &#39;古龙&#39; &#39;沧月&#39; &#39;村上春树&#39; &#39;社会&#39; &#39;股票&#39; &#39;理财&#39; &#39;日本漫画&#39; &#39;轻小说&#39; &#39;数学&#39; &#39;神经网络&#39;
 &#39;网络小说&#39; &#39;当代文学&#39; &#39;中国历史&#39; &#39;三毛&#39; &#39;回忆录&#39; &#39;古典文学&#39; &#39;交互设计&#39; &#39;推理&#39; &#39;高木直子&#39; &#39;中国文学&#39; &#39;青春文学&#39;
 &#39;金庸&#39; &#39;UE&#39; &#39;投资&#39; &#39;编程&#39; &#39;几米&#39;]
</code></pre></div><br>
<h3 id="25--可视化">2.5  可视化</h3>
<p>书评发布数量随年份变化</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>

<span class="c1">#初始化matplotlib汉化美化配置</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>
<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>


<span class="c1">#构造数据</span>
<span class="n">date_series</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">volume_series</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">)):</span>
    <span class="c1">#这里的date， month_df都是特殊数据类型</span>
    <span class="n">date_series</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">date</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
    <span class="n">volume_series</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">))</span>
<span class="n">volume_by_time_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">({</span><span class="s1">&#39;date&#39;</span><span class="p">:</span> <span class="n">date_series</span><span class="p">,</span> <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="n">volume_series</span><span class="p">})</span>
<span class="n">volume_by_time_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">volume_by_time_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>



<span class="c1">#开始绘图</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">volume_by_time_df</span><span class="o">.</span><span class="n">date</span><span class="p">,</span> 
         <span class="n">volume_by_time_df</span><span class="o">.</span><span class="n">volume</span><span class="p">,</span>
         <span class="n">linestyle</span> <span class="o">=</span> <span class="s1">&#39;--&#39;</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">volume_by_time_df</span><span class="o">.</span><span class="n">date</span><span class="p">,</span> 
            <span class="n">volume_by_time_df</span><span class="o">.</span><span class="n">volume</span><span class="p">,</span> 
            <span class="n">s</span><span class="o">=</span><span class="mi">8</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;豆瓣读书随年份书评数量变化(2005.6.12 ~ 2018.10.13)&#39;</span><span class="p">,</span> 
          <span class="n">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;日期&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;书评数量&#39;</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">savefig</span><span class="p">(</span><span class="s1">&#39;plot.png&#39;</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三相关内容">三、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-04-16-douban-movie-1000w-ratings-comments-dataset/">数据集 | 使用1000w条豆瓣影评训练Word2Vec</a></li>
</ul>
<p><br><br></p>
<h2 id="四获取数据">四、获取数据</h2>
<p><em><strong>douban-book</strong></em> 链接: <a href="https://pan.baidu.com/s/1qySKU_0dsoi1NAF9lQ971w?pwd=n5qe">https://pan.baidu.com/s/1qySKU_0dsoi1NAF9lQ971w?pwd=n5qe</a> 提取码: n5qe</p>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  使用1000w条豆瓣影评训练Word2Vec</title>
      <link>https://textdata.cn/blog/2024-04-16-douban-movie-1000w-ratings-comments-dataset/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-04-16-douban-movie-1000w-ratings-comments-dataset/</guid>
      <description>&lt;p&gt;本文内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;介绍豆瓣影评数据集&lt;/li&gt;
&lt;li&gt;构造语料训练Word2Vec模型&lt;/li&gt;
&lt;li&gt;获取数据&amp;amp;cntext&amp;amp;Word2Vec模型文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一豆瓣影评数据集&#34;&gt;一、豆瓣影评数据集&lt;/h2&gt;
&lt;h3 id=&#34;11-数据集介绍&#34;&gt;1.1 数据集介绍&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集: douba-movie-1000w

数据源: 豆瓣电影
   
记录数:
   - 电影 10269 部
   - 影评 10310989 条
   
体积: 1.35G 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该数据集正好弥补下国内公开电影数据集的空缺， 数据已经过初步清洗，可用于推荐系统、情感分析、知识图谱、新闻传播学、社会学文化变迁等多个领域(或主题)。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-读取数据&#34;&gt;1.2 读取数据&lt;/h3&gt;
&lt;p&gt;下载 &lt;em&gt;&lt;strong&gt;douba-movie-1000w.zip&lt;/strong&gt;&lt;/em&gt; 解压后，可以看到数据集中有一个 &lt;em&gt;&lt;strong&gt;all_movies_with_id.csv&lt;/strong&gt;&lt;/em&gt; 文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;all_movies_with_id.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;13-所含字段&#34;&gt;1.3 所含字段&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; - &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; - ID
 - Movie_Name  电影名
 - Score  豆瓣电影评分(1-10)
 - Review_People  评论者人数
 - Star_Distribution  评论评分分布(1-5, 含多个数值，数值以%间隔)
 - Craw_Date 爬虫运行日期
 - Username 豆瓣评论者用户名
 - Date 影评日期
 - Star  影评评分(1-5)
 - Comment 影评内容
 - Comment_Distribution 影评评分分布
 - Like 影评获得的喜欢数
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-构造语料训练word2vec&#34;&gt;二、 构造语料&amp;amp;训练Word2Vec&lt;/h2&gt;
&lt;h3 id=&#34;21-构造语料&#34;&gt;2.1 构造语料&lt;/h3&gt;
&lt;p&gt;将字段 &lt;em&gt;&lt;strong&gt;Comment&lt;/strong&gt;&lt;/em&gt; 中所有文本汇总到 &lt;em&gt;&lt;strong&gt;douban-movie-1000w.txt&lt;/strong&gt;&lt;/em&gt;,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;douban-movie-1000w.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Comment&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22-配置cntext211&#34;&gt;2.2 配置cntext2.1.1&lt;/h3&gt;
&lt;p&gt;将 &lt;em&gt;&lt;strong&gt;cntext-2.1.1-py3-none-any.whl&lt;/strong&gt;&lt;/em&gt; 放置于桌面，打开 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt;  (苹果电脑打开terminal)， 输入cd desktop&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后在 &lt;em&gt;&lt;strong&gt;cmd&lt;/strong&gt;&lt;/em&gt;  (苹果电脑打开terminal) 中使用 &lt;em&gt;&lt;strong&gt;pip3&lt;/strong&gt;&lt;/em&gt; 安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;pip3 install distinctiveness
pip3 install cntext-2.1.1-py3-none-any.whl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文末有 &lt;em&gt;&lt;strong&gt;cntext-2.1.1-py3-none-any.whl&lt;/strong&gt;&lt;/em&gt; 获取方式&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-训练word2vec&#34;&gt;2.3 训练Word2Vec&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#cntext为2.1.1&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;W2VModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;corpus_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;douban-movie-1000w.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                        &lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;chinese&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;train&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Starting Preprocessing Corpus ...
Starting Training! This may take a while.Please be patient...
Traning word2vec model took 3965 seconds
Note: The Word2Vec model hase saved to output/Word2Vec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/word2vec.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;经过大概一个小时的训练， 得到模型文件 &lt;em&gt;&lt;strong&gt;douban-movie-1000w.200.6.bin&lt;/strong&gt;&lt;/em&gt; 及相关文件， 注意不要删掉哦。 已训练好的模型，可以自己用， 也可分享给其他人使用。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四使用word2vec&#34;&gt;四、使用Word2Vec&lt;/h2&gt;
&lt;h3 id=&#34;41-导入word2vec模型文件&#34;&gt;4.1 导入Word2Vec模型文件&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;
 
&lt;span class=&#34;c1&#34;&gt;#导入模型，请注意路径。&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 【当前代码】 与 【Word2Vec文件夹】 同处于一个文件夹内&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_w2v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Word2Vec/douban-movie-1000w.200.6.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Loading word2vec model...
&amp;lt;gensim.models.word2vec.Word2Vec at 0x10cb02090&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;42-常用函数&#34;&gt;4.2 常用函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;dm_w2v.wv.get_vector(key)&lt;/strong&gt;&lt;/em&gt; 获取key的词向量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;dm_w2v.most_similar_to_given(key1, keys_list)&lt;/strong&gt;&lt;/em&gt; 从 keys_list 中获取与 key1 最相似的词&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;dm_w2v.n_similarity(ws1, ws2)&lt;/strong&gt;&lt;/em&gt;  两组词ws1, ws2 的相似度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;dm_w2v.closer_than(key1, key2)&lt;/strong&gt;&lt;/em&gt;  更接近于key1的词向量(相比于key2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;dm_w2v.most_similar(positive, negative)&lt;/strong&gt;&lt;/em&gt;  找出与positive同方向，与negative反向相反的词。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4 id=&#34;421-get_vectorkey&#34;&gt;4.2.1 get_vector(key)&lt;/h4&gt;
&lt;p&gt;使用词向量查看某&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;给力&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.55084002e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.22685611e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;8.48365605e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.23056602e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;1.35057056e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.65976137e-02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.26512849e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.47152972e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;9.99028236e-03&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.00873756e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.05153358e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.39181948e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;6.02373898e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.00308895e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;2.33978868e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.83010173e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;9.67333555e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;3.04877937e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;6.59058094e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;3.19660306e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.21165246e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.68000716e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.36653373e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;6.83727741e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;......&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;......&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.23901594e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;5.07202707e-02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;8.75848413e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;4.31963325e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;1.31377324e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.19606090e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.68391216e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;6.27069890e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;7.37121344e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;2.49946609e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.47220814e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.33507824e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;2.97913142e-02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;4.91593599e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;5.83192170e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;8.48378658e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.30877733e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;2.17747837e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;2.22701088e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.00758147e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;3.41430195e-02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;7.27023900e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;7.94953525e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.03226733e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
       &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;4.55965906e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.66779244e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;1.16857982e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.02211344e+00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;4.11061406e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;8.95921767e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;9.48565483e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.48802996e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;mf&#34;&gt;9.36261594e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;3.98367733e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mf&#34;&gt;3.12385857e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;8.67059827e-01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;422-most_similar_to_givenkey1-keys_list&#34;&gt;4.2.2 most_similar_to_given(key1, keys_list)&lt;/h4&gt;
&lt;p&gt;从 keys_list 中获取与 key1 最相似的词。例如在 1000w 影评中，从&lt;code&gt;&#39;爱情&#39;, &#39;悬疑&#39;, &#39;飞船&#39;, &#39;历史&#39;, &#39;战争&#39;&lt;/code&gt;找出最接近&lt;code&gt;&#39;太空&#39;&lt;/code&gt;，最后返回&lt;code&gt;&#39;飞船&#39;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#从 `keys_list` 中获取与 `key1` 最相似的 `key`。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;most_similar_to_given&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;太空&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                                &lt;span class=&#34;n&#34;&gt;keys_list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;爱情&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;悬疑&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;飞船&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;历史&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;战争&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;#39;飞船&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;423-w2v_modeln_similarityws1-ws2&#34;&gt;4.2.3 w2v_model.n_similarity(ws1, ws2)&lt;/h4&gt;
&lt;p&gt;两组词ws1, ws2 的相似度。注意相似值更多的是体现了语义的相关性， 并不能准确反映语义的远近。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sklearn.metrics.pairwise&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cosine_similarity&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;cosine_similarity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;理想&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)],&lt;/span&gt;  
                  &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;现实&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)])[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0.4698379
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#cosine算法&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_similarity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;理想&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
                       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;现实&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0.4698379
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#计算两组键之间的余弦相似度。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_similarity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;给力&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;精彩&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;赞&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;推荐&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
                       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;无聊&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;尴尬&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;垃圾&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0.109311774
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n_similarity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;理想&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;梦想&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
                       &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;现实&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;生活&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0.48020104
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;424-closer_thankey1-key2&#34;&gt;4.2.4 closer_than(key1, key2)&lt;/h4&gt;
&lt;p&gt;更接近于key1的词向量(相比于key2)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#获取所有更接近 `key1` 的键，而不是 `key2` 。&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;closer_than&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;理想&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                      &lt;span class=&#34;n&#34;&gt;key2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;现实&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;梦想&amp;#39;,
 &amp;#39;追求&amp;#39;,
 &amp;#39;实现&amp;#39;,
 &amp;#39;向往&amp;#39;,
 &amp;#39;信念&amp;#39;,
 &amp;#39;妥协&amp;#39;,
 &amp;#39;奋斗&amp;#39;,
 &amp;#39;乌托邦&amp;#39;,
 &amp;#39;愿望&amp;#39;,
 &amp;#39;理想主义&amp;#39;,
 &amp;#39;理想化&amp;#39;,
 &amp;#39;虚幻&amp;#39;,
 &amp;#39;憧憬&amp;#39;,
 &amp;#39;现实残酷&amp;#39;,
 &amp;#39;不切实际&amp;#39;,
 &amp;#39;实现梦想&amp;#39;,
 &amp;#39;崇高&amp;#39;,
 &amp;#39;理想主义者&amp;#39;,
 &amp;#39;追求自由&amp;#39;,
 &amp;#39;破灭&amp;#39;,
 &amp;#39;名利&amp;#39;,
 &amp;#39;追梦&amp;#39;,
 &amp;#39;奢望&amp;#39;,
 &amp;#39;追求梦想&amp;#39;,
 &amp;#39;现实现实&amp;#39;,
 &amp;#39;执著&amp;#39;,
 &amp;#39;理想现实&amp;#39;,
 &amp;#39;拼搏&amp;#39;,
 &amp;#39;面对现实&amp;#39;,
 &amp;#39;美好事物&amp;#39;,
 &amp;#39;追逐梦想&amp;#39;,
 &amp;#39;勇往直前&amp;#39;,
 &amp;#39;遥不可及&amp;#39;,
 &amp;#39;怀揣&amp;#39;,
 &amp;#39;梦想现实&amp;#39;,
 &amp;#39;美好生活&amp;#39;,
 &amp;#39;脚踏实地&amp;#39;,
 &amp;#39;本心&amp;#39;,
 &amp;#39;坚持梦想&amp;#39;,
 &amp;#39;梦想实现&amp;#39;,
 &amp;#39;青春梦想&amp;#39;,
 &amp;#39;热忱&amp;#39;,
 &amp;#39;空想&amp;#39;,
 &amp;#39;抱负&amp;#39;,
 &amp;#39;努力奋斗&amp;#39;,
 &amp;#39;美好幻想&amp;#39;,
 &amp;#39;务实&amp;#39;,
 &amp;#39;坚定信念&amp;#39;,
 &amp;#39;梦想努力&amp;#39;,
 &amp;#39;理想国&amp;#39;,
 &amp;#39;无法实现&amp;#39;,
 &amp;#39;美好愿望&amp;#39;,
 &amp;#39;理想生活&amp;#39;,
 &amp;#39;坚持自我&amp;#39;,
 &amp;#39;事业爱情&amp;#39;,
 &amp;#39;放弃梦想&amp;#39;,
 &amp;#39;愿景&amp;#39;,
 &amp;#39;自我价值&amp;#39;,
 &amp;#39;自我实现&amp;#39;,
 &amp;#39;现实面前&amp;#39;,
 &amp;#39;梦想坚持&amp;#39;,
 &amp;#39;梦想梦想&amp;#39;,
 &amp;#39;志向&amp;#39;,
 &amp;#39;乌托邦式&amp;#39;,
 &amp;#39;可能实现&amp;#39;,
 &amp;#39;追寻梦想&amp;#39;,
 &amp;#39;追求自我&amp;#39;,
 &amp;#39;追求理想&amp;#39;,
 &amp;#39;人生理想&amp;#39;,
 &amp;#39;追求完美&amp;#39;,
 &amp;#39;诗远方&amp;#39;,
 &amp;#39;梦想追求&amp;#39;,
 &amp;#39;追求艺术&amp;#39;,
 &amp;#39;执着追求&amp;#39;,
 &amp;#39;不断努力&amp;#39;,
 &amp;#39;怀揣梦想&amp;#39;,
 &amp;#39;儿时梦想&amp;#39;,
 &amp;#39;最初梦想&amp;#39;,
 &amp;#39;梦想奋斗&amp;#39;,
 &amp;#39;曾经梦想&amp;#39;,
 &amp;#39;美好向往&amp;#39;,
 &amp;#39;理想状态&amp;#39;,
 &amp;#39;现实妥协&amp;#39;,
 &amp;#39;实现理想&amp;#39;,
 &amp;#39;梦想执着&amp;#39;,
 &amp;#39;坚持理想&amp;#39;,
 &amp;#39;一个理想主义者&amp;#39;,
 &amp;#39;不切实际幻想&amp;#39;,
 &amp;#39;实现不了&amp;#39;,
 &amp;#39;努力追求&amp;#39;,
 &amp;#39;精神追求&amp;#39;,
 &amp;#39;现实打败&amp;#39;,
 &amp;#39;过于理想&amp;#39;,
 &amp;#39;美好憧憬&amp;#39;,
 &amp;#39;追寻自由&amp;#39;,
 &amp;#39;美好愿景&amp;#39;,
 &amp;#39;远大&amp;#39;,
 &amp;#39;梦想破灭&amp;#39;,
 &amp;#39;美好未来&amp;#39;,
 &amp;#39;最终实现&amp;#39;,
 &amp;#39;现实主义者&amp;#39;,
 &amp;#39;心中理想&amp;#39;,
 &amp;#39;努力实现&amp;#39;,
 &amp;#39;理想追求&amp;#39;,
 &amp;#39;理想丰满&amp;#39;,
 &amp;#39;难以实现&amp;#39;,
 &amp;#39;自由梦想&amp;#39;,
 &amp;#39;未竟&amp;#39;,
 &amp;#39;理想信念&amp;#39;,
 &amp;#39;追名逐利&amp;#39;,
 &amp;#39;崇尚自由&amp;#39;,
 &amp;#39;理想奋斗&amp;#39;,
 &amp;#39;摇滚梦&amp;#39;,
 &amp;#39;心中梦想&amp;#39;,
 &amp;#39;梦想追逐&amp;#39;,
 &amp;#39;崇高理想&amp;#39;,
 &amp;#39;爱与梦想&amp;#39;,
 &amp;#39;梦想放弃&amp;#39;,
 &amp;#39;自由理想&amp;#39;,
 &amp;#39;远大理想&amp;#39;,
 &amp;#39;革命理想&amp;#39;,
 &amp;#39;勇于追求&amp;#39;,
 &amp;#39;世俗成功&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;425-most_similarpositive-negative&#34;&gt;4.2.5 most_similar(positive, negative)&lt;/h4&gt;
&lt;p&gt;找出与positive同方向，与negative反向相反的词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;most_similar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;positive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;给力&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;精彩&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;过瘾&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                       &lt;span class=&#34;n&#34;&gt;negative&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;垃圾&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                       &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[(&amp;#39;看得过瘾&amp;#39;, 0.7470669746398926),
 (&amp;#39;相当精彩&amp;#39;, 0.7082503437995911),
 (&amp;#39;带劲&amp;#39;, 0.6865044236183167),
 (&amp;#39;非常过瘾&amp;#39;, 0.6556571125984192),
 (&amp;#39;非常精彩&amp;#39;, 0.6555824875831604),
 (&amp;#39;够劲&amp;#39;, 0.6424692869186401),
 (&amp;#39;太精彩&amp;#39;, 0.6424689292907715),
 (&amp;#39;十分精彩&amp;#39;, 0.6388185024261475),
 (&amp;#39;足够精彩&amp;#39;, 0.6384131908416748),
 (&amp;#39;十分过瘾&amp;#39;, 0.6383010745048523)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;43-类比king-manwomanqueen&#34;&gt;4.3 类比king-man+woman~queen&lt;/h3&gt;
&lt;p&gt;每个词是高维向量空间中的一个点， 两个点可以组成有方向的向量，而向量可以比较方向。&lt;/p&gt;
&lt;p&gt;这里是推理过程，受限于数据，公式不一定完全成立， 但是思维可以类比。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/king-queen-formular.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;这两个词相减，按感觉应该得到的是性别方向，雄性-&amp;gt;雌性。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;gender_direction_1 = vector(man)-vector(woman)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;gender_direction_2 = vector(king)-vector(queen)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;那两个性别方向应该近似，假设这里将其 &lt;em&gt;&lt;strong&gt;gender_direction_1=gender_direction_2&lt;/strong&gt;&lt;/em&gt; ，则对于公式中任意一个词，都可以由等式中的其他三个词经过运算得到。例如&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;vector(queen) = vector(king)-vector(man)+vector(woman)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这里构造了一个 &lt;code&gt;北京a - 中国b~=  巴黎c - 某国d&lt;/code&gt; 的公式，计算如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 北京a - 中国b~=  巴黎c - 某国d&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;北京&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;中国&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;巴黎&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#d = b-a+c&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;dm_w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;similar_by_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[(&amp;#39;中国&amp;#39;, 0.6384854912757874),
 (&amp;#39;法国&amp;#39;, 0.599371612071991),
 (&amp;#39;欧洲&amp;#39;, 0.5970593094825745),
 (&amp;#39;法国人&amp;#39;, 0.5338885188102722),
 (&amp;#39;欧洲人&amp;#39;, 0.5236572027206421),
 (&amp;#39;意大利&amp;#39;, 0.5203548669815063),
 (&amp;#39;西方&amp;#39;, 0.4940629303455353),
 (&amp;#39;亚洲&amp;#39;, 0.4907427728176117),
 (&amp;#39;美国&amp;#39;, 0.490087628364563),
 (&amp;#39;欧美&amp;#39;, 0.48989546298980713)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;大概是跑出了我们预期的 &lt;strong&gt;法国&lt;/strong&gt;， 但不够Perfect， 有些遗憾。 毕竟语料是影评，且讨论环境不够正式， 豆瓣用户没那么多心思研究地理和政治，所以网络记忆不全不准。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;五获取数据&#34;&gt;五、获取数据&lt;/h2&gt;
&lt;h3 id=&#34;51-获取影评数据&#34;&gt;5.1 获取影评数据&lt;/h3&gt;
&lt;p&gt;除了本文介绍的这个 1000w 条影评数据集， 大邓还有2个类似的豆瓣影评数据集，影评记录量 212w和442 w 条。 两个数据集下载链接我都公开，感兴趣的可以都下载下来。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;douba-movie-1000w&lt;/strong&gt;&lt;/em&gt; 链接: &lt;a href=&#34;https://pan.baidu.com/s/1NHttdosb0VZUQV7Tg7MHXw?pwd=rndk&#34;&gt;https://pan.baidu.com/s/1NHttdosb0VZUQV7Tg7MHXw?pwd=rndk&lt;/a&gt; 提取码: rndk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;douban-movie-442w&lt;/strong&gt;&lt;/em&gt; 链接: &lt;a href=&#34;https://pan.baidu.com/s/10KK5FrGL0ZHx4wiuhlvuXw?pwd=db7m&#34;&gt;https://pan.baidu.com/s/10KK5FrGL0ZHx4wiuhlvuXw?pwd=db7m&lt;/a&gt; 提取码: db7m&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;【douban-movie-442w介绍】

采集时间: 
   - 电影&amp;amp;明星 2019年8月上旬
   - 影评(用户、评分、评论) 2019年9月初

记录数:
   - 电影 140502 部
   - 演员 72959 人
   - 影评 4428475 条
   - 评分 4169420 条
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;douban-movie-212w&lt;/strong&gt;&lt;/em&gt; 链接: &lt;a href=&#34;https://pan.baidu.com/s/1iCKGu_6zTe6ZhlB_9Bf1HA?pwd=cv2p&#34;&gt;https://pan.baidu.com/s/1iCKGu_6zTe6ZhlB_9Bf1HA?pwd=cv2p&lt;/a&gt; 提取码: cv2p&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;52-cntext211&#34;&gt;5.2 cntext2.1.1&lt;/h3&gt;
&lt;p&gt;cntext2.1.1 是非公开内容， &lt;strong&gt;100元&lt;/strong&gt;  可得 &lt;em&gt;&lt;strong&gt;cntext-2.1.1-py3-none-any.whl&lt;/strong&gt;&lt;/em&gt;  ， 加微信 &lt;em&gt;&lt;strong&gt;372335839&lt;/strong&gt;&lt;/em&gt;， 备注「姓名-学校-专业」&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;53-word2vec模型文件&#34;&gt;5.3 Word2Vec模型文件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;douba-movie-1000w.200.6.bin&lt;/strong&gt;&lt;/em&gt; 链接: &lt;a href=&#34;https://pan.baidu.com/s/1ahbYq2IOqUA_AE0T3XIb9g?pwd=su1y&#34;&gt;https://pan.baidu.com/s/1ahbYq2IOqUA_AE0T3XIb9g?pwd=su1y&lt;/a&gt; 提取码: su1y&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;douban-movie-442w.200.6.bin&lt;/strong&gt;&lt;/em&gt;  链接: &lt;a href=&#34;https://pan.baidu.com/s/181eVuM0qldUJ53i7u1a5vA?pwd=uarj&#34;&gt;https://pan.baidu.com/s/181eVuM0qldUJ53i7u1a5vA?pwd=uarj&lt;/a&gt; 提取码: uarj&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;douban-movie-212w200.6.bin&lt;/strong&gt;&lt;/em&gt; 链接: &lt;a href=&#34;https://pan.baidu.com/s/1bvIZAM4zqX_35WHrBJSFUg?pwd=mf9u&#34;&gt;https://pan.baidu.com/s/1bvIZAM4zqX_35WHrBJSFUg?pwd=mf9u&lt;/a&gt; 提取码: mf9u&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;相关内容&#34;&gt;相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-04-17-douban-book-3394w-ratings-comments-dataset/&#34;&gt;数据集 | 3394w条豆瓣书评数据集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p>本文内容</p>
<ol>
<li>介绍豆瓣影评数据集</li>
<li>构造语料训练Word2Vec模型</li>
<li>获取数据&amp;cntext&amp;Word2Vec模型文件</li>
</ol>
<p><br><br></p>
<h2 id="一豆瓣影评数据集">一、豆瓣影评数据集</h2>
<h3 id="11-数据集介绍">1.1 数据集介绍</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集: douba-movie-1000w

数据源: 豆瓣电影
   
记录数:
   - 电影 10269 部
   - 影评 10310989 条
   
体积: 1.35G 
</code></pre></div><p>该数据集正好弥补下国内公开电影数据集的空缺， 数据已经过初步清洗，可用于推荐系统、情感分析、知识图谱、新闻传播学、社会学文化变迁等多个领域(或主题)。</p>
<br>
<h3 id="12-读取数据">1.2 读取数据</h3>
<p>下载 <em><strong>douba-movie-1000w.zip</strong></em> 解压后，可以看到数据集中有一个 <em><strong>all_movies_with_id.csv</strong></em> 文件。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;all_movies_with_id.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="13-所含字段">1.3 所含字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39; - </span><span class="si">{</span><span class="n">col</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - ID
 - Movie_Name  电影名
 - Score  豆瓣电影评分(1-10)
 - Review_People  评论者人数
 - Star_Distribution  评论评分分布(1-5, 含多个数值，数值以%间隔)
 - Craw_Date 爬虫运行日期
 - Username 豆瓣评论者用户名
 - Date 影评日期
 - Star  影评评分(1-5)
 - Comment 影评内容
 - Comment_Distribution 影评评分分布
 - Like 影评获得的喜欢数
</code></pre></div><p><br><br></p>
<h2 id="二-构造语料训练word2vec">二、 构造语料&amp;训练Word2Vec</h2>
<h3 id="21-构造语料">2.1 构造语料</h3>
<p>将字段 <em><strong>Comment</strong></em> 中所有文本汇总到 <em><strong>douban-movie-1000w.txt</strong></em>,</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;douban-movie-1000w.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;Comment&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">)</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="22-配置cntext211">2.2 配置cntext2.1.1</h3>
<p>将 <em><strong>cntext-2.1.1-py3-none-any.whl</strong></em> 放置于桌面，打开 <em><strong>cmd</strong></em>  (苹果电脑打开terminal)， 输入cd desktop</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop
</code></pre></div><p>之后在 <em><strong>cmd</strong></em>  (苹果电脑打开terminal) 中使用 <em><strong>pip3</strong></em> 安装</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install distinctiveness
pip3 install cntext-2.1.1-py3-none-any.whl
</code></pre></div><p>文末有 <em><strong>cntext-2.1.1-py3-none-any.whl</strong></em> 获取方式</p>
<br>
<h3 id="23-训练word2vec">2.3 训练Word2Vec</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#cntext为2.1.1</span>
<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2VModel</span><span class="p">(</span><span class="n">corpus_file</span><span class="o">=</span><span class="s1">&#39;douban-movie-1000w.txt&#39;</span><span class="p">,</span>
                        <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>

<span class="n">w2v_model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">vector_size</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span> <span class="n">window_size</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Starting Preprocessing Corpus ...
Starting Training! This may take a while.Please be patient...
Traning word2vec model took 3965 seconds
Note: The Word2Vec model hase saved to output/Word2Vec
</code></pre></div><p><img loading="lazy" src="img/word2vec.png" alt=""  />
</p>
<p>经过大概一个小时的训练， 得到模型文件 <em><strong>douban-movie-1000w.200.6.bin</strong></em> 及相关文件， 注意不要删掉哦。 已训练好的模型，可以自己用， 也可分享给其他人使用。</p>
<p><br><br></p>
<h2 id="四使用word2vec">四、使用Word2Vec</h2>
<h3 id="41-导入word2vec模型文件">4.1 导入Word2Vec模型文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
 
<span class="c1">#导入模型，请注意路径。</span>
<span class="c1"># 【当前代码】 与 【Word2Vec文件夹】 同处于一个文件夹内</span>
<span class="n">dm_w2v</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="s1">&#39;Word2Vec/douban-movie-1000w.200.6.bin&#39;</span><span class="p">)</span>
<span class="n">dm_w2v</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Loading word2vec model...
&lt;gensim.models.word2vec.Word2Vec at 0x10cb02090&gt;
</code></pre></div><br>
<h3 id="42-常用函数">4.2 常用函数</h3>
<ul>
<li>
<p><em><strong>dm_w2v.wv.get_vector(key)</strong></em> 获取key的词向量</p>
</li>
<li>
<p><em><strong>dm_w2v.most_similar_to_given(key1, keys_list)</strong></em> 从 keys_list 中获取与 key1 最相似的词</p>
</li>
<li>
<p><em><strong>dm_w2v.n_similarity(ws1, ws2)</strong></em>  两组词ws1, ws2 的相似度</p>
</li>
<li>
<p><em><strong>dm_w2v.closer_than(key1, key2)</strong></em>  更接近于key1的词向量(相比于key2)</p>
</li>
<li>
<p><em><strong>dm_w2v.most_similar(positive, negative)</strong></em>  找出与positive同方向，与negative反向相反的词。</p>
</li>
</ul>
<br>
<h4 id="421-get_vectorkey">4.2.1 get_vector(key)</h4>
<p>使用词向量查看某</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;给力&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">array</span><span class="p">([</span><span class="o">-</span><span class="mf">3.55084002e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.22685611e+00</span><span class="p">,</span> <span class="o">-</span><span class="mf">8.48365605e-01</span><span class="p">,</span>  <span class="mf">1.23056602e+00</span><span class="p">,</span>
        <span class="mf">1.35057056e+00</span><span class="p">,</span>  <span class="mf">1.65976137e-02</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.26512849e+00</span><span class="p">,</span>  <span class="mf">1.47152972e+00</span><span class="p">,</span>
        <span class="mf">9.99028236e-03</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.00873756e+00</span><span class="p">,</span>  <span class="mf">1.05153358e+00</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.39181948e+00</span><span class="p">,</span>
        <span class="mf">6.02373898e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.00308895e+00</span><span class="p">,</span>  <span class="mf">2.33978868e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.83010173e+00</span><span class="p">,</span>
       <span class="o">-</span><span class="mf">9.67333555e-01</span><span class="p">,</span>  <span class="mf">3.04877937e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">6.59058094e-01</span><span class="p">,</span>  <span class="mf">3.19660306e+00</span><span class="p">,</span>
       <span class="o">-</span><span class="mf">1.21165246e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">3.68000716e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">2.36653373e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">6.83727741e-01</span><span class="p">,</span>
      <span class="o">......</span>
      <span class="o">......</span>
       <span class="o">-</span><span class="mf">1.23901594e+00</span><span class="p">,</span>  <span class="mf">5.07202707e-02</span><span class="p">,</span>  <span class="mf">8.75848413e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">4.31963325e-01</span><span class="p">,</span>
        <span class="mf">1.31377324e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.19606090e+00</span><span class="p">,</span>  <span class="mf">1.68391216e+00</span><span class="p">,</span> <span class="o">-</span><span class="mf">6.27069890e-01</span><span class="p">,</span>
       <span class="o">-</span><span class="mf">7.37121344e-01</span><span class="p">,</span>  <span class="mf">2.49946609e-01</span><span class="p">,</span>  <span class="mf">1.47220814e+00</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.33507824e+00</span><span class="p">,</span>
        <span class="mf">2.97913142e-02</span><span class="p">,</span> <span class="o">-</span><span class="mf">4.91593599e-01</span><span class="p">,</span>  <span class="mf">5.83192170e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">8.48378658e-01</span><span class="p">,</span>
       <span class="o">-</span><span class="mf">3.30877733e+00</span><span class="p">,</span>  <span class="mf">2.17747837e-01</span><span class="p">,</span>  <span class="mf">2.22701088e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.00758147e+00</span><span class="p">,</span>
        <span class="mf">3.41430195e-02</span><span class="p">,</span> <span class="o">-</span><span class="mf">7.27023900e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">7.94953525e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.03226733e+00</span><span class="p">,</span>
       <span class="o">-</span><span class="mf">4.55965906e-01</span><span class="p">,</span>  <span class="mf">1.66779244e+00</span><span class="p">,</span>  <span class="mf">1.16857982e+00</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.02211344e+00</span><span class="p">,</span>
        <span class="mf">4.11061406e-01</span><span class="p">,</span>  <span class="mf">8.95921767e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">9.48565483e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.48802996e-01</span><span class="p">,</span>
        <span class="mf">9.36261594e-01</span><span class="p">,</span>  <span class="mf">3.98367733e-01</span><span class="p">,</span>  <span class="mf">3.12385857e-01</span><span class="p">,</span> <span class="o">-</span><span class="mf">8.67059827e-01</span><span class="p">],</span>
      <span class="n">dtype</span><span class="o">=</span><span class="n">float32</span><span class="p">)</span>
</code></pre></div><br>
<h4 id="422-most_similar_to_givenkey1-keys_list">4.2.2 most_similar_to_given(key1, keys_list)</h4>
<p>从 keys_list 中获取与 key1 最相似的词。例如在 1000w 影评中，从<code>'爱情', '悬疑', '飞船', '历史', '战争'</code>找出最接近<code>'太空'</code>，最后返回<code>'飞船'</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#从 `keys_list` 中获取与 `key1` 最相似的 `key`。</span>
<span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar_to_given</span><span class="p">(</span><span class="n">key1</span><span class="o">=</span><span class="s1">&#39;太空&#39;</span><span class="p">,</span> 
                                <span class="n">keys_list</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;爱情&#39;</span><span class="p">,</span> <span class="s1">&#39;悬疑&#39;</span><span class="p">,</span> <span class="s1">&#39;飞船&#39;</span><span class="p">,</span> <span class="s1">&#39;历史&#39;</span><span class="p">,</span> <span class="s1">&#39;战争&#39;</span><span class="p">])</span>

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#39;飞船&#39;
</code></pre></div><br>
<h4 id="423-w2v_modeln_similarityws1-ws2">4.2.3 w2v_model.n_similarity(ws1, ws2)</h4>
<p>两组词ws1, ws2 的相似度。注意相似值更多的是体现了语义的相关性， 并不能准确反映语义的远近。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.metrics.pairwise</span> <span class="kn">import</span> <span class="n">cosine_similarity</span>

<span class="n">cosine_similarity</span><span class="p">([</span><span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;理想&#39;</span><span class="p">)],</span>  
                  <span class="p">[</span><span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;现实&#39;</span><span class="p">)])[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.4698379
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#cosine算法</span>
<span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="s1">&#39;理想&#39;</span><span class="p">],</span> 
                       <span class="p">[</span><span class="s1">&#39;现实&#39;</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.4698379
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#计算两组键之间的余弦相似度。</span>
<span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="s1">&#39;给力&#39;</span><span class="p">,</span> <span class="s1">&#39;精彩&#39;</span><span class="p">,</span> <span class="s1">&#39;赞&#39;</span><span class="p">,</span> <span class="s1">&#39;推荐&#39;</span><span class="p">],</span> 
                       <span class="p">[</span><span class="s1">&#39;无聊&#39;</span><span class="p">,</span> <span class="s1">&#39;尴尬&#39;</span><span class="p">,</span> <span class="s1">&#39;垃圾&#39;</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.109311774
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="s1">&#39;理想&#39;</span><span class="p">,</span> <span class="s1">&#39;梦想&#39;</span><span class="p">],</span> 
                       <span class="p">[</span><span class="s1">&#39;现实&#39;</span><span class="p">,</span> <span class="s1">&#39;生活&#39;</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.48020104
</code></pre></div><br>
<h4 id="424-closer_thankey1-key2">4.2.4 closer_than(key1, key2)</h4>
<p>更接近于key1的词向量(相比于key2)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#获取所有更接近 `key1` 的键，而不是 `key2` 。</span>
<span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">closer_than</span><span class="p">(</span><span class="n">key1</span><span class="o">=</span><span class="s1">&#39;理想&#39;</span><span class="p">,</span> 
                      <span class="n">key2</span><span class="o">=</span><span class="s1">&#39;现实&#39;</span><span class="p">)</span>

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;梦想&#39;,
 &#39;追求&#39;,
 &#39;实现&#39;,
 &#39;向往&#39;,
 &#39;信念&#39;,
 &#39;妥协&#39;,
 &#39;奋斗&#39;,
 &#39;乌托邦&#39;,
 &#39;愿望&#39;,
 &#39;理想主义&#39;,
 &#39;理想化&#39;,
 &#39;虚幻&#39;,
 &#39;憧憬&#39;,
 &#39;现实残酷&#39;,
 &#39;不切实际&#39;,
 &#39;实现梦想&#39;,
 &#39;崇高&#39;,
 &#39;理想主义者&#39;,
 &#39;追求自由&#39;,
 &#39;破灭&#39;,
 &#39;名利&#39;,
 &#39;追梦&#39;,
 &#39;奢望&#39;,
 &#39;追求梦想&#39;,
 &#39;现实现实&#39;,
 &#39;执著&#39;,
 &#39;理想现实&#39;,
 &#39;拼搏&#39;,
 &#39;面对现实&#39;,
 &#39;美好事物&#39;,
 &#39;追逐梦想&#39;,
 &#39;勇往直前&#39;,
 &#39;遥不可及&#39;,
 &#39;怀揣&#39;,
 &#39;梦想现实&#39;,
 &#39;美好生活&#39;,
 &#39;脚踏实地&#39;,
 &#39;本心&#39;,
 &#39;坚持梦想&#39;,
 &#39;梦想实现&#39;,
 &#39;青春梦想&#39;,
 &#39;热忱&#39;,
 &#39;空想&#39;,
 &#39;抱负&#39;,
 &#39;努力奋斗&#39;,
 &#39;美好幻想&#39;,
 &#39;务实&#39;,
 &#39;坚定信念&#39;,
 &#39;梦想努力&#39;,
 &#39;理想国&#39;,
 &#39;无法实现&#39;,
 &#39;美好愿望&#39;,
 &#39;理想生活&#39;,
 &#39;坚持自我&#39;,
 &#39;事业爱情&#39;,
 &#39;放弃梦想&#39;,
 &#39;愿景&#39;,
 &#39;自我价值&#39;,
 &#39;自我实现&#39;,
 &#39;现实面前&#39;,
 &#39;梦想坚持&#39;,
 &#39;梦想梦想&#39;,
 &#39;志向&#39;,
 &#39;乌托邦式&#39;,
 &#39;可能实现&#39;,
 &#39;追寻梦想&#39;,
 &#39;追求自我&#39;,
 &#39;追求理想&#39;,
 &#39;人生理想&#39;,
 &#39;追求完美&#39;,
 &#39;诗远方&#39;,
 &#39;梦想追求&#39;,
 &#39;追求艺术&#39;,
 &#39;执着追求&#39;,
 &#39;不断努力&#39;,
 &#39;怀揣梦想&#39;,
 &#39;儿时梦想&#39;,
 &#39;最初梦想&#39;,
 &#39;梦想奋斗&#39;,
 &#39;曾经梦想&#39;,
 &#39;美好向往&#39;,
 &#39;理想状态&#39;,
 &#39;现实妥协&#39;,
 &#39;实现理想&#39;,
 &#39;梦想执着&#39;,
 &#39;坚持理想&#39;,
 &#39;一个理想主义者&#39;,
 &#39;不切实际幻想&#39;,
 &#39;实现不了&#39;,
 &#39;努力追求&#39;,
 &#39;精神追求&#39;,
 &#39;现实打败&#39;,
 &#39;过于理想&#39;,
 &#39;美好憧憬&#39;,
 &#39;追寻自由&#39;,
 &#39;美好愿景&#39;,
 &#39;远大&#39;,
 &#39;梦想破灭&#39;,
 &#39;美好未来&#39;,
 &#39;最终实现&#39;,
 &#39;现实主义者&#39;,
 &#39;心中理想&#39;,
 &#39;努力实现&#39;,
 &#39;理想追求&#39;,
 &#39;理想丰满&#39;,
 &#39;难以实现&#39;,
 &#39;自由梦想&#39;,
 &#39;未竟&#39;,
 &#39;理想信念&#39;,
 &#39;追名逐利&#39;,
 &#39;崇尚自由&#39;,
 &#39;理想奋斗&#39;,
 &#39;摇滚梦&#39;,
 &#39;心中梦想&#39;,
 &#39;梦想追逐&#39;,
 &#39;崇高理想&#39;,
 &#39;爱与梦想&#39;,
 &#39;梦想放弃&#39;,
 &#39;自由理想&#39;,
 &#39;远大理想&#39;,
 &#39;革命理想&#39;,
 &#39;勇于追求&#39;,
 &#39;世俗成功&#39;]
</code></pre></div><br>
<h4 id="425-most_similarpositive-negative">4.2.5 most_similar(positive, negative)</h4>
<p>找出与positive同方向，与negative反向相反的词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar</span><span class="p">(</span><span class="n">positive</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;给力&#39;</span><span class="p">,</span> <span class="s1">&#39;精彩&#39;</span><span class="p">,</span> <span class="s1">&#39;过瘾&#39;</span><span class="p">],</span>
                       <span class="n">negative</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;垃圾&#39;</span><span class="p">],</span>
                       <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;看得过瘾&#39;, 0.7470669746398926),
 (&#39;相当精彩&#39;, 0.7082503437995911),
 (&#39;带劲&#39;, 0.6865044236183167),
 (&#39;非常过瘾&#39;, 0.6556571125984192),
 (&#39;非常精彩&#39;, 0.6555824875831604),
 (&#39;够劲&#39;, 0.6424692869186401),
 (&#39;太精彩&#39;, 0.6424689292907715),
 (&#39;十分精彩&#39;, 0.6388185024261475),
 (&#39;足够精彩&#39;, 0.6384131908416748),
 (&#39;十分过瘾&#39;, 0.6383010745048523)]
</code></pre></div><br>
<h3 id="43-类比king-manwomanqueen">4.3 类比king-man+woman~queen</h3>
<p>每个词是高维向量空间中的一个点， 两个点可以组成有方向的向量，而向量可以比较方向。</p>
<p>这里是推理过程，受限于数据，公式不一定完全成立， 但是思维可以类比。</p>
<p><img loading="lazy" src="img/king-queen-formular.png" alt=""  />
</p>
<p>这两个词相减，按感觉应该得到的是性别方向，雄性-&gt;雌性。</p>
<p><em><strong>gender_direction_1 = vector(man)-vector(woman)</strong></em></p>
<p><em><strong>gender_direction_2 = vector(king)-vector(queen)</strong></em></p>
<p>那两个性别方向应该近似，假设这里将其 <em><strong>gender_direction_1=gender_direction_2</strong></em> ，则对于公式中任意一个词，都可以由等式中的其他三个词经过运算得到。例如</p>
<p><em><strong>vector(queen) = vector(king)-vector(man)+vector(woman)</strong></em></p>
<p>这里构造了一个 <code>北京a - 中国b~=  巴黎c - 某国d</code> 的公式，计算如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 北京a - 中国b~=  巴黎c - 某国d</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;北京&#39;</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;中国&#39;</span><span class="p">)</span>
<span class="n">c</span> <span class="o">=</span> <span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;巴黎&#39;</span><span class="p">)</span>

<span class="c1">#d = b-a+c</span>
<span class="n">dm_w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">similar_by_vector</span><span class="p">(</span><span class="n">b</span><span class="o">-</span><span class="n">a</span><span class="o">+</span><span class="n">c</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;中国&#39;, 0.6384854912757874),
 (&#39;法国&#39;, 0.599371612071991),
 (&#39;欧洲&#39;, 0.5970593094825745),
 (&#39;法国人&#39;, 0.5338885188102722),
 (&#39;欧洲人&#39;, 0.5236572027206421),
 (&#39;意大利&#39;, 0.5203548669815063),
 (&#39;西方&#39;, 0.4940629303455353),
 (&#39;亚洲&#39;, 0.4907427728176117),
 (&#39;美国&#39;, 0.490087628364563),
 (&#39;欧美&#39;, 0.48989546298980713)]
</code></pre></div><p>大概是跑出了我们预期的 <strong>法国</strong>， 但不够Perfect， 有些遗憾。 毕竟语料是影评，且讨论环境不够正式， 豆瓣用户没那么多心思研究地理和政治，所以网络记忆不全不准。</p>
<p><br><br></p>
<h2 id="五获取数据">五、获取数据</h2>
<h3 id="51-获取影评数据">5.1 获取影评数据</h3>
<p>除了本文介绍的这个 1000w 条影评数据集， 大邓还有2个类似的豆瓣影评数据集，影评记录量 212w和442 w 条。 两个数据集下载链接我都公开，感兴趣的可以都下载下来。</p>
<ul>
<li>
<p><em><strong>douba-movie-1000w</strong></em> 链接: <a href="https://pan.baidu.com/s/1NHttdosb0VZUQV7Tg7MHXw?pwd=rndk">https://pan.baidu.com/s/1NHttdosb0VZUQV7Tg7MHXw?pwd=rndk</a> 提取码: rndk</p>
</li>
<li>
<p><em><strong>douban-movie-442w</strong></em> 链接: <a href="https://pan.baidu.com/s/10KK5FrGL0ZHx4wiuhlvuXw?pwd=db7m">https://pan.baidu.com/s/10KK5FrGL0ZHx4wiuhlvuXw?pwd=db7m</a> 提取码: db7m</p>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">【douban-movie-442w介绍】

采集时间: 
   - 电影&amp;明星 2019年8月上旬
   - 影评(用户、评分、评论) 2019年9月初

记录数:
   - 电影 140502 部
   - 演员 72959 人
   - 影评 4428475 条
   - 评分 4169420 条
</code></pre></div><ul>
<li><em><strong>douban-movie-212w</strong></em> 链接: <a href="https://pan.baidu.com/s/1iCKGu_6zTe6ZhlB_9Bf1HA?pwd=cv2p">https://pan.baidu.com/s/1iCKGu_6zTe6ZhlB_9Bf1HA?pwd=cv2p</a> 提取码: cv2p</li>
</ul>
<p><br><br></p>
<h3 id="52-cntext211">5.2 cntext2.1.1</h3>
<p>cntext2.1.1 是非公开内容， <strong>100元</strong>  可得 <em><strong>cntext-2.1.1-py3-none-any.whl</strong></em>  ， 加微信 <em><strong>372335839</strong></em>， 备注「姓名-学校-专业」</p>
<br>
<h3 id="53-word2vec模型文件">5.3 Word2Vec模型文件</h3>
<ul>
<li><em><strong>douba-movie-1000w.200.6.bin</strong></em> 链接: <a href="https://pan.baidu.com/s/1ahbYq2IOqUA_AE0T3XIb9g?pwd=su1y">https://pan.baidu.com/s/1ahbYq2IOqUA_AE0T3XIb9g?pwd=su1y</a> 提取码: su1y</li>
<li><em><strong>douban-movie-442w.200.6.bin</strong></em>  链接: <a href="https://pan.baidu.com/s/181eVuM0qldUJ53i7u1a5vA?pwd=uarj">https://pan.baidu.com/s/181eVuM0qldUJ53i7u1a5vA?pwd=uarj</a> 提取码: uarj</li>
<li><em><strong>douban-movie-212w200.6.bin</strong></em> 链接: <a href="https://pan.baidu.com/s/1bvIZAM4zqX_35WHrBJSFUg?pwd=mf9u">https://pan.baidu.com/s/1bvIZAM4zqX_35WHrBJSFUg?pwd=mf9u</a> 提取码: mf9u</li>
</ul>
<br>
<br>
<h2 id="相关内容">相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-04-17-douban-book-3394w-ratings-comments-dataset/">数据集 | 3394w条豆瓣书评数据集</a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集| A股上市公司基本信息2000-2023</title>
      <link>https://textdata.cn/blog/2024-04-16-china-listed-company-information-dataset/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-04-16-china-listed-company-information-dataset/</guid>
      <description>A股上市公司基本信息</description>
      <content:encoded><![CDATA[<h2 id="一数据概况">一、数据概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集: A股上市公司基本信息
年份: 2000-2023
公司数: 5504
记录数: 60901
用途: 可与年报、md&amp;a数据集进行并表
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-导入数据">2.1 导入数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;上市公司基本信息2000-2023.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<p><br><br></p>
<p>如果股票代码中带的字母A别扭，可以剔除掉</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">Symbol</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">Symbol</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<p><br><br></p>
<h3 id="22-查看字段">2.2 查看字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 查看字段/含义</span>
<span class="n">max_col_len</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="nb">len</span><span class="p">(</span><span class="n">col</span><span class="p">)</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">])</span>
<span class="n">max_desc_len</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="nb">len</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">desc</span><span class="p">))</span> <span class="k">for</span> <span class="n">desc</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="o">==</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;- 字段                   含义         缺失率&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">col</span><span class="p">,</span> <span class="n">desc</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">index</span><span class="o">==</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;- </span><span class="si">{</span><span class="n">col</span><span class="si">:</span><span class="s1">&lt;</span><span class="si">{</span><span class="n">max_col_len</span><span class="si">}}</span><span class="s1">   </span><span class="si">{</span><span class="n">desc</span><span class="si">:</span><span class="s1">&lt;</span><span class="si">{</span><span class="n">max_desc_len</span><span class="si">}}</span><span class="s1">     </span><span class="si">{</span><span class="nb">round</span><span class="p">(</span><span class="n">ratio</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span><span class="o">*</span><span class="mi">100</span><span class="si">}</span><span class="s1">%&#39;</span><span class="p">)</span>

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 字段                   含义         缺失率
- Symbol                股票代码         0.0%
- ShortName             股票简称         0.0%
- EndDate               统计截止日期       0.0%
- ListedCoID            上市公司ID       0.0%
- SecurityID            证券ID         0.0%
- IndustryName          行业名称         0.0%
- IndustryCode          行业代码         0.0%
- IndustryNameC         行业名称C        0.0%
- IndustryCodeC         行业代码C        0.0%
- RegisterAddress       注册具体地址       0.0%
- OfficeAddress         公司办公地址       0.0%
- Zipcode               办公地址邮政编码     0.0%
- Secretary             董事会秘书        0.1%
- SecretaryTel          董秘联系电话       0.1%
- SecretaryFax          董秘传真         0.7000000000000001%
- SecretaryEmail        董秘电子邮箱       0.7000000000000001%
- SecurityConsultant    证券事务代表       17.7%
- SocialCreditCode      统一社会信用代码     23.400000000000002%
- Sigchange             重大变更         5.3%
- Lng                   办公地经度        4.6%
- Lat                   办公地纬度        4.6%
- ISIN                  ISIN编码       0.6%
- FullName              中文全称         0.0%
- LegalRepresentative   法人代表         0.0%
- EstablishDate         公司成立日期       0.0%
- Crcd                  ABH股交叉码      93.8%
- RegisterCapital       注册资本         0.0%
- Website               公司网址         4.5%
- BusinessScope         经营范围         0.0%
- RegisterLongitude     注册地经度        4.7%
- RegisterLatitude      注册地纬度        4.7%
- EMAIL                 电子邮箱         0.7000000000000001%
- LISTINGDATE           首次上市日期       0.0%
- PROVINCECODE          所属省份代码       0.0%
- PROVINCE              所属省份         0.0%
- CITYCODE              所属城市代码       0.2%
- CITY                  所属城市         0.0%
- MAINBUSSINESS         主营业务         0.0%
- LISTINGSTATE          上市状态         0.0%
</code></pre></div><br>
<h3 id="23-公司数">2.3 公司数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">Symbol</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">5504
</code></pre></div><br>
<br>
<h2 id="三增加其他数据集字段数量">三、增加其他数据集字段数量</h2>
<p><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/"><strong>数据集 | 2001-2023A股上市公司年报&amp;管理层讨论与分析</strong></a> 只有 <em><strong>year</strong></em>、<em><strong>code</strong></em>、<em><strong>text</strong></em> 三个字段， 通过与本数据集合并操作(pd.merge) ，现在希望增加 <em><strong>EndDate</strong></em>、<em><strong>ShortName</strong></em>、<em><strong>IndustryCode</strong></em>、 <em><strong>RegisterAddress</strong></em> 四个字段。<br></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">mda_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;mda01-23.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">mda_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">mda_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>
<span class="n">mda_df</span>
</code></pre></div><p><img loading="lazy" src="img/mda.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#选择需要的字段进行读取</span>
<span class="n">info_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[[</span><span class="s1">&#39;Symbol&#39;</span><span class="p">,</span> <span class="s1">&#39;ShortName&#39;</span><span class="p">,</span> <span class="s1">&#39;EndDate&#39;</span><span class="p">,</span> <span class="s1">&#39;IndustryCode&#39;</span><span class="p">,</span> <span class="s1">&#39;RegisterAddress&#39;</span><span class="p">]]</span>

<span class="c1">#更改字段名Symbol为code</span>
<span class="n">info_df</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;Symbol&#34;</span><span class="p">:</span> <span class="s2">&#34;code&#34;</span><span class="p">},</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="c1">#根据EndDate计算会计年度year</span>
<span class="n">info_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">info_df</span><span class="p">[</span><span class="s1">&#39;EndDate&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">y</span><span class="p">:</span> <span class="n">y</span><span class="p">[:</span><span class="mi">4</span><span class="p">])</span>
<span class="n">info_df</span>
</code></pre></div><p><img loading="lazy" src="img/info_df.png" alt=""  />
</p>
<p><br><br>根据字段 <em><strong>year</strong></em>、<em><strong>code</strong></em> 进行合并，合并方式为内连接 <em><strong>inner</strong></em> ， 即两数据集的交集。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df_merge</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">mda_df</span><span class="p">,</span> <span class="n">info_df</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">],</span> <span class="n">how</span><span class="o">=</span><span class="s1">&#39;inner&#39;</span><span class="p">)</span>

<span class="c1">#保存</span>
<span class="c1">#df_merge.to_csv(&#39;合并后的数据.csv&#39;, index=False)</span>
<span class="c1">#df_merge.to_excel(&#39;合并后的数据.xlsx&#39;, index=False)</span>
<span class="n">df_merge</span>
</code></pre></div><p><img loading="lazy" src="img/merge.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三相关内容">三、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">数据集 | 2001-2023年A股上市公司年报&amp;管理层讨论与分析</a></li>
<li><a href="https://textdata.cn/blog/2023-01-06-mda_informative_content/">中国工业经济 | MD&amp;A信息含量指标构建代码实现</a></li>
<li><a href="https://textdata.cn/blog/2023-01-13-information-content-of-critical-audit/">金融研究 | 使用Python构建「关键审计事项信息含量」</a></li>
</ul>
<br>
<br>
<h2 id="四获取数据">四、获取数据</h2>
<p>整理不易， 50元 ， 加微信 372335839 ， 备注 「姓名-学校-专业」。</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>文献&amp;代码 | 使用Python计算语义品牌评分(Semantic Brand Score)</title>
      <link>https://textdata.cn/blog/2024-04-12-semantic-brand-score/</link>
      <pubDate>Fri, 12 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-04-12-semantic-brand-score/</guid>
      <description>Semantic Brand Score</description>
      <content:encoded><![CDATA[<h2 id="一语义品牌评分">一、语义品牌评分</h2>
<p><strong>语义品牌评分(SBS)</strong>  是一种新颖的指标，可以通过文本语料，衡量(评估)不同环境下一个或多个品牌的 <strong>品牌重要性</strong>。 <br></p>
<blockquote>
<p>Colladon, Andrea Fronzetti. &ldquo;<em><strong>The semantic brand score</strong></em>.&rdquo; <em>Journal of Business Research</em> 88 (2018): 150-160.</p>
</blockquote>
<br>
<p>相对于一些传统措施的优点是，SBS 不依赖于对小样本消费者进行的调查，可以捕捉到真实可信的信号 。该度量可以<strong>对任意来源的文本进行计算</strong>， 例如报纸文章、电子邮件、推文、在线论坛、博客和社交媒体上的帖子。  如果研究景点品牌的重要性，可以从消费者或其他品牌利益相关者通常出现的地方（例如旅游论坛）收集他们的发表的信息。这样做的优点是可以减少因使用问卷而引起的偏见，因为受访者知道他们正在被观察。 SBS 还可以适应不同的语言，并研究特定单词或单词集（不一定是“品牌”）的重要性。</p>
<p>通过 “品牌”，人们可以指政治家的名字，或者代表一个概念的一组单词（例如，“创新”的概念或企业核心价值）。该措施用于评估新品牌取代旧品牌时发生的过渡动态。语义品牌评分还可用于将品牌的重要性与其竞争对手的重要性联系起来，或分析单个品牌的重要性时间趋势。在某些应用中，事实证明该分数对于预测目的很有用。例如，人们发现在线媒体中政治候选人的品牌重要性与选举结果之间存在联系，或者景点品牌的重要性与游客数量趋势之间存在联系。</p>
<p><img loading="lazy" src="img/sbs-trend-plot.jpg" alt=""  />
</p>
<p><br><br></p>
<h2 id="二品牌重要性的三个维度">二、品牌重要性的三个维度</h2>
<p>SBS 衡量 <strong>品牌重要性</strong> ，这是品牌资产的基础(Fronzetti Colladon， 2018)。事实上，该指标的部分灵感来自于众所周知的品牌资产概念以及品牌形象和品牌意识的构建（Keller, 1993）。 品牌重要性通过三个维度来衡量：<strong>流行度</strong>、<strong>多样性</strong> 和 <strong>连通性</strong>。</p>
<ul>
<li><strong>流行度(Prevalence)</strong>   衡量品牌名称的使用频率，即直接提及品牌的次数。</li>
<li><strong>多样性(Diversity)</strong>  衡量与品牌相关的词语的多样性。</li>
<li><strong>连接性(Connectivity)</strong>  代表品牌在其他单词或单词组（有时被视为话语主题）之间建立联系的能力。</li>
</ul>
<p><br><br></p>
<h2 id="三文本分析步骤">三、文本分析步骤</h2>
<p><strong>语义品牌得分(SBS)</strong>  的计算需要结合文本挖掘和社交网络分析的方法和工具。下图说明了主要的初步步骤，包括数据收集、文本预处理和单词共现网络的构建。</p>
<p><img loading="lazy" src="img/text-preprocess.jpg" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1. 准备文本数据
2. 文本预处理(剔除标点符号、剔除特殊字符、剔除html标签、剔除#@等符号、剔除停用词)
3. 英文小写、分词、合并同类项(类似于is、was、are都合并到be)
4. 从文本信息中构建共现语义网络(确定词语上下文范围，涉及到co-range， 默认co-range=7)
5. 剔除贡献语义网络中不重要的边(联系， 涉及到参数link_filter， 默认link_filter=2))
</code></pre></div><br>
<br>
<h2 id="四实验">四、实验</h2>
<p>以三体为例，分析小说中5个角色的语义品牌评分（类比于文本中分析品牌的重要性） 。我们将小说等分为20分，希望得到角色语义品牌评分随着小说进度的变化趋势。</p>
<p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<br>
<h3 id="41-读取数据">4.1 读取数据</h3>
<p>三体小说2.5M</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="k">def</span> <span class="nf">read_txt</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">num_segments</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">):</span>
    <span class="c1"># 读取txt文件</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">encoding</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">text</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
    
    <span class="c1"># 获取文本的总长度和每一段的长度</span>
    <span class="n">total_length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="n">segment_length</span> <span class="o">=</span> <span class="n">total_length</span> <span class="o">//</span> <span class="n">num_segments</span>
    
    <span class="c1"># 将文本分割成指定数量的段落</span>
    <span class="n">segments</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num_segments</span><span class="p">):</span>
        <span class="n">start</span> <span class="o">=</span> <span class="n">i</span> <span class="o">*</span> <span class="n">segment_length</span>
        <span class="n">end</span> <span class="o">=</span> <span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">segment_length</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">num_segments</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">total_length</span>
        <span class="n">segment</span> <span class="o">=</span> <span class="n">text</span><span class="p">[</span><span class="n">start</span><span class="p">:</span><span class="n">end</span><span class="p">]</span>
        <span class="n">segments</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">segment</span><span class="p">)</span>

    <span class="c1"># 将内容存储在数据框中</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">segments</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s2">&#34;docs&#34;</span><span class="p">])</span>
    
    <span class="k">return</span> <span class="n">df</span>


<span class="c1">#分成20份</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">read_txt</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s1">&#39;三体全集.txt&#39;</span><span class="p">,</span> <span class="n">num_segments</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="42-计算sbs">4.2 计算SBS</h3>
<p>语义品牌评分SBS已经封装到  <em><strong>cntext2.1.1</strong></em> 中， 文末有 <em><strong>cntext-2.1.1-py3-none-any.whl</strong></em> 获取方式 。</p>
<br>
<h4 id="421-安装cntext211">4.2.1 安装cntext2.1.1</h4>
<p>将 cntext-2.1.1-py3-none-any.whl 放置于桌面，打开 cmd (苹果电脑打开terminal)， 输入 cd desktop</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop
</code></pre></div><br>
<p>之后在 <em><strong>cmd</strong></em>  (苹果电脑打开terminal) 中使用 <em><strong>pip3</strong></em> 安装</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install distinctiveness
pip3 install cntext-2.1.1-py3-none-any.whl
</code></pre></div><p><br><br></p>
<h4 id="422--开始计算">4.2.2  开始计算</h4>
<p><em><strong>2.7M</strong></em> 的三体小说文本，全部运行下来大概 10-20min ，可见SBS计算非常慢， 所以为了省时间，我们先以三体小说第一份（等分20份中的第一份）做个小实验。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">brands</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;汪淼&#39;</span><span class="p">,</span> <span class="s1">&#39;史强&#39;</span><span class="p">,</span> <span class="s1">&#39;罗辑&#39;</span><span class="p">,</span> <span class="s1">&#39;叶文洁&#39;</span><span class="p">,</span> <span class="s1">&#39;伊文斯&#39;</span><span class="p">]</span>

<span class="c1">#小说第一份文本（等分20份中的第一份）</span>
<span class="n">text</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;docs&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

<span class="c1">#如果不用三体， 只想分析某个txt，以data.txt为例</span>
<span class="c1">#text = open(&#39;data.txt&#39;).read()</span>

<span class="n">sbs_df0</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">semantic_brand_score</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
                               <span class="n">brands</span><span class="o">=</span><span class="n">brands</span><span class="p">,</span> 
                               <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
<span class="n">sbs_df0</span><span class="p">[</span><span class="s1">&#39;doc_idx&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">sbs_df0</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<p><br> 运行没出现问题， 现在我们对整个小说进行实验，计算五个角色的 SBS 随时间变化。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>  <span class="c1">#记录时间</span>

<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">brands</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;汪淼&#39;</span><span class="p">,</span> <span class="s1">&#39;史强&#39;</span><span class="p">,</span> <span class="s1">&#39;罗辑&#39;</span><span class="p">,</span> <span class="s1">&#39;叶文洁&#39;</span><span class="p">,</span> <span class="s1">&#39;伊文斯&#39;</span><span class="p">]</span>
<span class="n">sbs_dfs</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">text</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;docs&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">idx</span><span class="p">)</span>
    <span class="n">sbs_df</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">semantic_brand_score</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">text</span><span class="p">,</span> 
                              <span class="n">brands</span><span class="o">=</span><span class="n">brands</span><span class="p">,</span> 
                              <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
    <span class="n">sbs_df</span><span class="p">[</span><span class="s1">&#39;doc_idx&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">idx</span>
    <span class="n">sbs_dfs</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">sbs_df</span><span class="p">)</span>
    
<span class="n">SBS_DFs</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="n">sbs_dfs</span><span class="p">)</span>
<span class="n">SBS_DFs</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0
WARNING: Loops will be ignored.
1
WARNING: Loops will be ignored.
2
WARNING: Loops will be ignored.
3
WARNING: Loops will be ignored.
4
WARNING: Loops will be ignored.
5
WARNING: Loops will be ignored.
6
WARNING: Loops will be ignored.
7
WARNING: Loops will be ignored.
8
WARNING: Loops will be ignored.
9
WARNING: Loops will be ignored.
10
WARNING: Loops will be ignored.
11
WARNING: Loops will be ignored.
12
WARNING: Loops will be ignored.
13
WARNING: Loops will be ignored.
14
WARNING: Loops will be ignored.
15
WARNING: Loops will be ignored.
16
WARNING: Loops will be ignored.
17
WARNING: Loops will be ignored.
18
WARNING: Loops will be ignored.
19
WARNING: Loops will be ignored.

CPU times: user 10min 9s, sys: 8.53 s, total: 10min 17s
Wall time: 10min 19s
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="43-可视化sbs">4.3 可视化SBS</h3>
<p>可视化三体小说五个角色重要性（语义品牌评分， SBS）随时间 (文本字符位置) 变化趋势</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">SBS_DFs</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">SBS_DFs</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;index&#39;</span><span class="p">:</span> <span class="s1">&#39;Brand&#39;</span><span class="p">},</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">SBS_DFs</span>
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />

<br></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>


<span class="k">for</span> <span class="n">brand</span><span class="p">,</span> <span class="n">brand_df</span> <span class="ow">in</span> <span class="n">SBS_DFs</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;Brand&#39;</span><span class="p">):</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">brand_df</span><span class="o">.</span><span class="n">doc_idx</span><span class="p">,</span> <span class="n">brand_df</span><span class="o">.</span><span class="n">SBS</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">brand</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">brand_df</span><span class="o">.</span><span class="n">doc_idx</span><span class="p">,</span> <span class="n">brand_df</span><span class="o">.</span><span class="n">SBS</span><span class="p">)</span>
    
    
    
    
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;三体人物角色的语义品牌评分(semantic brand score)趋势&#39;</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;center&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;小说字符位置(小说等分为20份)&#39;</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;Semantic Brand Score&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper right&#39;</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>    
</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="五-获取资源">五、 获取资源</h2>
<p>内容整理不易， 如果对本文感兴趣</p>
<ul>
<li><em><strong>免费</strong></em>   获取本文代码&amp;实验数据  链接: <a href="https://pan.baidu.com/s/1ut8bKDxd5PGL_dm_yXTzcA?pwd=tr3t">https://pan.baidu.com/s/1ut8bKDxd5PGL_dm_yXTzcA?pwd=tr3t</a> 提取码: tr3t</li>
<li><em><strong>100元</strong></em>   <em><strong>cntext-2.1.1-py3-none-any.whl</strong></em>  ，可加微信 <em><strong>372335839</strong></em>， 备注「姓名-学校-专业」</li>
</ul>
<p><br><br></p>
<h2 id="相关资料">相关资料</h2>
<p>Colladon, Andrea Fronzetti. &ldquo;<em><strong>The semantic brand score</strong></em>.&rdquo; <em>Journal of Business Research</em> 88 (2018): 150-160.</p>
<p>SBS相关文章列表  <a href="https://semanticbrandscore.com/sbsarticles.html">https://semanticbrandscore.com/sbsarticles.html</a></p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 372w政府采购合同公告明细数据（2024.03）</title>
      <link>https://textdata.cn/blog/2023-09-03-government-procurement-contract-data/</link>
      <pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-09-03-government-procurement-contract-data/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-cover.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;一数据集概况&#34;&gt;一、数据集概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 数据来源: 中国政府采购网（www.ccgp.gov.cn）
- 记录数量: 3724395
- 发布时间: 1996-06-05 ~ 2024-03-07, 但主要是2015之后


声明: 科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二应用&#34;&gt;二、应用&lt;/h2&gt;
&lt;p&gt;随着政府采购规模的逐步增加，中国政府采购网披露的信息越来越丰富。近年来一些学者也关 注到中国政府采购数据，但由于文本数据半结构化、高维、数据量大的特性，该数据在文本的整理、 关键变量识别与关键变量提取方面存在着不小的难度，目前而言使用该数据的研究并没有很多。&lt;/p&gt;
&lt;h3 id=&#34;21-创新&#34;&gt;2.1 创新&lt;/h3&gt;
&lt;p&gt;姜爱华和费堃桀（2021） 手工整理了 2015-2019 年的政府采购数据，利用公告中供应商的名称与上市公司全称进行匹配，最终得到了 13 004 个企业年度观测值，发现企业获 得政府采购订单能够显著促进企业创新。&lt;/p&gt;
&lt;p&gt;Beraja 等（2020）基 于 2013-2019 年政府采购合同，与中国人工智能企业进行名单匹配，得到 28 023 份政 府人脸识别采购合同样本，发现政府采购对人脸识别相关的人工智能专利的增长起到了推动作用。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-政企关系&#34;&gt;2.2 政企关系&lt;/h3&gt;
&lt;p&gt;Fang 等（2022）利用中国政府采购网 2013-2020 年的采购公告与工商注册企业数据进行匹配，发现当本地官员处于激烈的政治竞争中时，本地政府将更少地向 竞争地区的企业进行采购，这造成了市场分割，影响了资源分配。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-其他&#34;&gt;2.3 其他&lt;/h3&gt;
&lt;p&gt;政府采购影响企业履行企业社会责任（韩旭和武威，2021）、中国特色精准扶贫（武威等，2022）、经济 发展（武威和刘国平，2021）等。此外，还有研究单独使用政府采购数据测量经济生产生活。江鸿 泽和梁平汉（2022）基于政府采购公告整理了各地的公共视频监控系统使用情况，Liu 等（2022） 则抓取了 2013-2021 年政府采购公告，用以识别企业的政治联系。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;政府采购公告1996-2024.3.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#gz文件可用bandizp或winrar解压得到csv&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df = pd.read_csv(&amp;#39;政府采购公告1996-2024.3.csv&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-记录数&#34;&gt;2.2 记录数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;数据集记录数: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;数据集记录数:  2883958
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-字段&#34;&gt;2.3 字段&lt;/h3&gt;
&lt;p&gt;数据所含字段&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;合同编号
合同名称
项目编号
项目名称
采购人(甲方)
采购人地址
采购人联系方式
供应商(乙方)
供应商地址
供应商联系方式
主要标的名称
规格型号或服务要求
主要标的数量
主要标的单价
合同金额(万元)
履约期限、地点等简要信息
采购方式
合同签订日期
合同公告日期
其他补充事宜
所属地域
所属行业
代理机构
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;24-公告日期&#34;&gt;2.4 公告日期&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#数据集公告日期起止&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;发布时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;发布时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;发布时间 1996-06-05 00:00:00
发布时间 2024-03-07 00:00:00
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#政府采购合同公告数据，主要出现在2015年之后&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value_counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;合同公告日期
1996          1
2000          1
2002          2
2004          7
2008          5
2009          3
2010          2
2011         13
2012          3
2013          4
2014         24
2015      15543
2016      42195
2017      94193
2018     154922
2019     151181
2020     187874
2021     549078
2022    1060710
2023    1355749
2024     112885
Name: count, dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;梁平汉和郭宇辰(2023) 认为 &lt;strong&gt;2015年财政部相关采购信息发布文件出台之后采购公告上传率大幅上升至80%以上，因此采用2015年以后的中国政府采购网数据进行研究更为合适&lt;/strong&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;24-甲乙方人数&#34;&gt;2.4 甲(乙)方人数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#甲方乙方数量&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#甲方乙方数量&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人(甲方)数: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;供应商(乙方)数: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;供应商&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;采购人(甲方)数:  234082
供应商(乙方)数:  499943
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三实验代码&#34;&gt;三、实验代码&lt;/h2&gt;
&lt;h3 id=&#34;31-是否含某类词&#34;&gt;3.1 是否含某(类)词&lt;/h3&gt;
&lt;p&gt;根据公告中是否出现某(类)词，可以提起一些指标。例如 Beraja 等（2020）基于 2013-2019 年政府采购合同，与中国人工智能企业进行名单匹配，得到 28 023 份政府人脸识别采购合同样本。 本文仅简单示范， 以 &lt;em&gt;&lt;strong&gt;人工智能&lt;/strong&gt;&lt;/em&gt; 相关词为例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同名称&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;人工智能|自然语言处理|自动驾驶|AI|ai&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0          False
1          False
2          False
3          False
4          False
           ...  
3724390    False
3724391    False
3724392    False
3724393    False
3724394    False
Name: 合同名称, Length: 3724395, dtype: bool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#AI相关公告的数量&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同名称&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;人工智能|自然语言处理|自动驾驶|AI|ai&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1323
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#显示匹配到的与 AI 有关的【合同名称】&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同名称&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;人工智能|自然语言处理|自动驾驶|AI|ai&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;合同名称&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1129                                     贵州大学人工智能研究院建设项目采购合同
4935            龙岩初级中学人工智能创客实验室设备货物类采购项目合同\n （macrodatas.cn）
12231                       中国医学科学院系统医学研究院人工智能高性能计算设备采购合同协议书
13171      双高基于AIoT轨道交通智慧运维环境信号检测分析设备购置(二次)\n\n微信公众号“马克 数据网”
16921                           广州国际生物岛自动驾驶新能源环卫作业创新试点服务采购项目
                                 ...                        
3708596               榆林市教育技术中心人工智能助推教师队伍建设-教师发展智慧管理平台建设项目合同
3708922        邢台市信都区“人工智能公共技术服务平台”项目一标段数字教育、数字文旅采购合同\n\n （）
3709875         吴忠市第三中学南湖校区AI课堂教学行为分析评测系统及智慧教室设备采购项目系统集成服务合同
3712051                               人工智能与机器人领域创新成果产业化成熟度评价
3724277        民乐县现代农业投资有限责任公司民乐县人工智能一二三产业融合功能区食用菌菌棒生产项目  （）
Name: 合同名称, Length: 1323, dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;32-构建省份字段&#34;&gt;3.2 构建省份字段&lt;/h3&gt;
&lt;p&gt;数据集中有  &lt;em&gt;&lt;strong&gt;采购人地址&lt;/strong&gt;&lt;/em&gt;、&lt;em&gt;&lt;strong&gt;采购人(甲方)&lt;/strong&gt;&lt;/em&gt; 两个地址字段，我们以 &lt;em&gt;&lt;strong&gt;采购人(甲方)&lt;/strong&gt;&lt;/em&gt; 为例，构建 &lt;em&gt;&lt;strong&gt;采购人省份&lt;/strong&gt;&lt;/em&gt; 字段。 注意: 经过测试，使用cpca库提取省份信息， 两种方式提取省份信息缺失率依次是 24.8%、 7%， 因此我们决定采用 &lt;em&gt;&lt;strong&gt;采购人(甲方)&lt;/strong&gt;&lt;/em&gt;  来提取省份。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cpca&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;provs_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cpca&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人(甲方)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人省份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cpca&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人(甲方)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;省&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人省份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人省份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;自治区|特别行政区&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;33-按省分组查看记录量&#34;&gt;3.3 按省分组查看记录量&lt;/h3&gt;
&lt;p&gt;假设 &lt;em&gt;&lt;strong&gt;采购人省份&lt;/strong&gt;&lt;/em&gt; 构建的准确的话， 就可以分组查看每个省的记录量。   df.groupby(&amp;lsquo;采购人省份&amp;rsquo;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prov&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prov_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人省份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prov&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prov_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; 267312  (未知省份，cpca缺失字段，占比大概7%)
上海市 29493
云南省 49789
内蒙古 480459
北京市 71869
台湾省 93
吉林省 14219
四川省 155028
天津市 10734
宁夏回族 76783
安徽省 44133
山东省 14634
山西省 5784
广东省 1349039
广西壮族 12534
新疆维吾尔 8000
江苏省 28655
江西省 8949
河北省 203761
河南省 8159
浙江省 12158
海南省 38603
湖北省 6156
湖南省 11300
甘肃省 289772
福建省 97527
西藏 2558
贵州省 2599
辽宁省 34547
重庆市 58673
陕西省 55478
青海省 22441
香港 80
黑龙江省 253076
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;warnings&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;warnings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;



&lt;span class=&#34;n&#34;&gt;prov_volumes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prov&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prov_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购人省份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;prov_volumes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;prov&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prov&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prov_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)})&lt;/span&gt;
    
&lt;span class=&#34;n&#34;&gt;prov_volumes_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prov_volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;prov_volumes_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;prov&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort_values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ascending&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;政府采购数量(采购人按省)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xticks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;省份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;采购公告数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;采购按省， 最多的几个省份依次是广东、内蒙、甘肃、黑龙江等。  甘肃和黑龙江之间有个空白， 这是因为根据采购人(甲方)使用cpca提取省份信息时，有7%记录是缺失的。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三相关研究&#34;&gt;三、相关研究&lt;/h2&gt;
&lt;p&gt;相关研究近期文献&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[1]周亚虹,蒲余路,陈诗一等.政府扶持与新型产业发展——以新能源为例[J].经济研究,2015,50(06):147-161.
[2]武威,刘国平.政府采购与经济发展：转型效应与协同效应——基于产业结构升级视角[J].财政研究,2021(08):77-90.
[3]孙薇,叶初升.政府采购何以牵动企业创新——兼论需求侧政策“拉力”与供给侧政策“推力”的协同[J].中国工业经济,2023(01):95-113.
[4]姜爱华,费堃桀,张鑫娜.政府采购、营商环境与企业创新——基于A股上市公司的经验证据[J].中央财经大学学报,2022(09):3-15.
[5]梁平汉, 郭宇辰. 中国政府采购公告数据的使用和潜在问题[J]. 产业经济评论, 2023, (01): 68-80.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="img/01-cover.png" alt=""  />
</p>
<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 数据来源: 中国政府采购网（www.ccgp.gov.cn）
- 记录数量: 3724395
- 发布时间: 1996-06-05 ~ 2024-03-07, 但主要是2015之后


声明: 科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><br><br></p>
<h2 id="二应用">二、应用</h2>
<p>随着政府采购规模的逐步增加，中国政府采购网披露的信息越来越丰富。近年来一些学者也关 注到中国政府采购数据，但由于文本数据半结构化、高维、数据量大的特性，该数据在文本的整理、 关键变量识别与关键变量提取方面存在着不小的难度，目前而言使用该数据的研究并没有很多。</p>
<h3 id="21-创新">2.1 创新</h3>
<p>姜爱华和费堃桀（2021） 手工整理了 2015-2019 年的政府采购数据，利用公告中供应商的名称与上市公司全称进行匹配，最终得到了 13 004 个企业年度观测值，发现企业获 得政府采购订单能够显著促进企业创新。</p>
<p>Beraja 等（2020）基 于 2013-2019 年政府采购合同，与中国人工智能企业进行名单匹配，得到 28 023 份政 府人脸识别采购合同样本，发现政府采购对人脸识别相关的人工智能专利的增长起到了推动作用。</p>
<br>
<h3 id="22-政企关系">2.2 政企关系</h3>
<p>Fang 等（2022）利用中国政府采购网 2013-2020 年的采购公告与工商注册企业数据进行匹配，发现当本地官员处于激烈的政治竞争中时，本地政府将更少地向 竞争地区的企业进行采购，这造成了市场分割，影响了资源分配。</p>
<br>
<h3 id="23-其他">2.3 其他</h3>
<p>政府采购影响企业履行企业社会责任（韩旭和武威，2021）、中国特色精准扶贫（武威等，2022）、经济 发展（武威和刘国平，2021）等。此外，还有研究单独使用政府采购数据测量经济生产生活。江鸿 泽和梁平汉（2022）基于政府采购公告整理了各地的公共视频监控系统使用情况，Liu 等（2022） 则抓取了 2013-2021 年政府采购公告，用以识别企业的政治联系。</p>
<p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;政府采购公告1996-2024.3.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>

<span class="c1">#gz文件可用bandizp或winrar解压得到csv</span>
<span class="c1">#df = pd.read_csv(&#39;政府采购公告1996-2024.3.csv&#39;)</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同公告日期&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同公告日期&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h3 id="22-记录数">2.2 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;数据集记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
</code></pre></div><pre><code>数据集记录数:  2883958
</code></pre>
<br>
<h3 id="23-字段">2.3 字段</h3>
<p>数据所含字段</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">col</span><span class="p">)</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">合同编号
合同名称
项目编号
项目名称
采购人(甲方)
采购人地址
采购人联系方式
供应商(乙方)
供应商地址
供应商联系方式
主要标的名称
规格型号或服务要求
主要标的数量
主要标的单价
合同金额(万元)
履约期限、地点等简要信息
采购方式
合同签订日期
合同公告日期
其他补充事宜
所属地域
所属行业
代理机构
</code></pre></div><br>
<h3 id="24-公告日期">2.4 公告日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据集公告日期起止</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同公告日期&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同公告日期&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;发布时间&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;发布时间&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><pre><code>发布时间 1996-06-05 00:00:00
发布时间 2024-03-07 00:00:00
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#政府采购合同公告数据，主要出现在2015年之后</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">合同公告日期
1996          1
2000          1
2002          2
2004          7
2008          5
2009          3
2010          2
2011         13
2012          3
2013          4
2014         24
2015      15543
2016      42195
2017      94193
2018     154922
2019     151181
2020     187874
2021     549078
2022    1060710
2023    1355749
2024     112885
Name: count, dtype: int64
</code></pre></div><p>梁平汉和郭宇辰(2023) 认为 <strong>2015年财政部相关采购信息发布文件出台之后采购公告上传率大幅上升至80%以上，因此采用2015年以后的中国政府采购网数据进行研究更为合适</strong>。</p>
<br>
<h3 id="24-甲乙方人数">2.4 甲(乙)方人数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#甲方乙方数量</span>
<span class="c1">#甲方乙方数量</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;采购人(甲方)数: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;采购人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;供应商(乙方)数: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;供应商&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">())</span>
</code></pre></div><pre><code>采购人(甲方)数:  234082
供应商(乙方)数:  499943
</code></pre>
<p><br><br></p>
<h2 id="三实验代码">三、实验代码</h2>
<h3 id="31-是否含某类词">3.1 是否含某(类)词</h3>
<p>根据公告中是否出现某(类)词，可以提起一些指标。例如 Beraja 等（2020）基于 2013-2019 年政府采购合同，与中国人工智能企业进行名单匹配，得到 28 023 份政府人脸识别采购合同样本。 本文仅简单示范， 以 <em><strong>人工智能</strong></em> 相关词为例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;人工智能|自然语言处理|自动驾驶|AI|ai&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0          False
1          False
2          False
3          False
4          False
           ...  
3724390    False
3724391    False
3724392    False
3724393    False
3724394    False
Name: 合同名称, Length: 3724395, dtype: bool
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#AI相关公告的数量</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;人工智能|自然语言处理|自动驾驶|AI|ai&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1323
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#显示匹配到的与 AI 有关的【合同名称】</span>
<span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;合同名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;人工智能|自然语言处理|自动驾驶|AI|ai&#39;</span><span class="p">)][</span><span class="s1">&#39;合同名称&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1129                                     贵州大学人工智能研究院建设项目采购合同
4935            龙岩初级中学人工智能创客实验室设备货物类采购项目合同\n （macrodatas.cn）
12231                       中国医学科学院系统医学研究院人工智能高性能计算设备采购合同协议书
13171      双高基于AIoT轨道交通智慧运维环境信号检测分析设备购置(二次)\n\n微信公众号“马克 数据网”
16921                           广州国际生物岛自动驾驶新能源环卫作业创新试点服务采购项目
                                 ...                        
3708596               榆林市教育技术中心人工智能助推教师队伍建设-教师发展智慧管理平台建设项目合同
3708922        邢台市信都区“人工智能公共技术服务平台”项目一标段数字教育、数字文旅采购合同\n\n （）
3709875         吴忠市第三中学南湖校区AI课堂教学行为分析评测系统及智慧教室设备采购项目系统集成服务合同
3712051                               人工智能与机器人领域创新成果产业化成熟度评价
3724277        民乐县现代农业投资有限责任公司民乐县人工智能一二三产业融合功能区食用菌菌棒生产项目  （）
Name: 合同名称, Length: 1323, dtype: object
</code></pre></div><br>
<h3 id="32-构建省份字段">3.2 构建省份字段</h3>
<p>数据集中有  <em><strong>采购人地址</strong></em>、<em><strong>采购人(甲方)</strong></em> 两个地址字段，我们以 <em><strong>采购人(甲方)</strong></em> 为例，构建 <em><strong>采购人省份</strong></em> 字段。 注意: 经过测试，使用cpca库提取省份信息， 两种方式提取省份信息缺失率依次是 24.8%、 7%， 因此我们决定采用 <em><strong>采购人(甲方)</strong></em>  来提取省份。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cpca</span>

<span class="n">provs_df</span> <span class="o">=</span> <span class="n">cpca</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;采购人(甲方)&#39;</span><span class="p">])</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;采购人省份&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">cpca</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;采购人(甲方)&#39;</span><span class="p">])[</span><span class="s1">&#39;省&#39;</span><span class="p">]</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;采购人省份&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;采购人省份&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">k</span><span class="p">:</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s1">&#39;自治区|特别行政区&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>

<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="33-按省分组查看记录量">3.3 按省分组查看记录量</h3>
<p>假设 <em><strong>采购人省份</strong></em> 构建的准确的话， 就可以分组查看每个省的记录量。   df.groupby(&lsquo;采购人省份&rsquo;)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">prov</span><span class="p">,</span> <span class="n">prov_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;采购人省份&#39;</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">prov</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">prov_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> 267312  (未知省份，cpca缺失字段，占比大概7%)
上海市 29493
云南省 49789
内蒙古 480459
北京市 71869
台湾省 93
吉林省 14219
四川省 155028
天津市 10734
宁夏回族 76783
安徽省 44133
山东省 14634
山西省 5784
广东省 1349039
广西壮族 12534
新疆维吾尔 8000
江苏省 28655
江西省 8949
河北省 203761
河南省 8159
浙江省 12158
海南省 38603
湖北省 6156
湖南省 11300
甘肃省 289772
福建省 97527
西藏 2558
贵州省 2599
辽宁省 34547
重庆市 58673
陕西省 55478
青海省 22441
香港 80
黑龙江省 253076
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>
<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>



<span class="n">prov_volumes</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">prov</span><span class="p">,</span> <span class="n">prov_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;采购人省份&#39;</span><span class="p">):</span>
    <span class="n">prov_volumes</span><span class="o">.</span><span class="n">append</span><span class="p">({</span><span class="s1">&#39;prov&#39;</span><span class="p">:</span> <span class="n">prov</span><span class="p">,</span> <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">prov_df</span><span class="p">)})</span>
    
<span class="n">prov_volumes_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">prov_volumes</span><span class="p">)</span>
<span class="n">prov_volumes_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;prov&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">&#39;volume&#39;</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;政府采购数量(采购人按省)&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;省份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;采购公告数量&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<p>采购按省， 最多的几个省份依次是广东、内蒙、甘肃、黑龙江等。  甘肃和黑龙江之间有个空白， 这是因为根据采购人(甲方)使用cpca提取省份信息时，有7%记录是缺失的。<br><br></p>
<h2 id="三相关研究">三、相关研究</h2>
<p>相关研究近期文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]周亚虹,蒲余路,陈诗一等.政府扶持与新型产业发展——以新能源为例[J].经济研究,2015,50(06):147-161.
[2]武威,刘国平.政府采购与经济发展：转型效应与协同效应——基于产业结构升级视角[J].财政研究,2021(08):77-90.
[3]孙薇,叶初升.政府采购何以牵动企业创新——兼论需求侧政策“拉力”与供给侧政策“推力”的协同[J].中国工业经济,2023(01):95-113.
[4]姜爱华,费堃桀,张鑫娜.政府采购、营商环境与企业创新——基于A股上市公司的经验证据[J].中央财经大学学报,2022(09):3-15.
[5]梁平汉, 郭宇辰. 中国政府采购公告数据的使用和潜在问题[J]. 产业经济评论, 2023, (01): 68-80.
</code></pre></div><p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 众筹金融投资平台kiva借贷数据</title>
      <link>https://textdata.cn/blog/2024-04-10-kiva-crowdfunding/</link>
      <pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-04-10-kiva-crowdfunding/</guid>
      <description>众筹</description>
      <content:encoded><![CDATA[<h2 id="一kiva简介">一、Kiva简介</h2>
<p>Kiva.org 是一个成立于 2005 年的国际非营利亲社会金融投资平台，其主要工作是通过众筹贷款，并以极低的利息来发放给那些需要的人们， 以助其购买生活必需品，或是找到一份能维持生计的工作。具体来说，这一类 <strong>亲社会</strong> 金融投资平台在世界各地寻找合作伙伴，例如当地的享有盛誉的非营利组织，来筛选当地对于低息贷款有需要或生活上遭受苦难的人，并收集其资料， 然后向平台发出这些资料以请求帮助。而平台则通过众筹的方式为这些项目筹集贷款资金，投资者则可以以个人或团队的形式进行投资。</p>
<p><br><br></p>
<h2 id="二研究主题">二、研究主题</h2>
<ul>
<li>亲社会行为心理（Pro-Social Behaviorial Psychology)</li>
<li>社会公益 ML 应用（Social Good ML Applications ）</li>
<li>公平性研究（Fairness Research）</li>
<li>社会影响评估（Social Impact Assessments）</li>
</ul>
<p>部分参考文献</p>
<blockquote>
<p>Defazio, Daniela, Chiara Franzoni, and Cristina Rossi-Lamastra. &ldquo;How pro-social framing affects the success of crowdfunding projects: The role of emphasis and information crowdedness.&rdquo; <em>Journal of Business Ethics</em> 171 (2021): 357-378.</p>
</blockquote>
<p><br><br></p>
<h2 id="三获取数据">三、获取数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">网站: Kiva Tools

网址: http://kivatools.com/downloads

项目数(截止2024.4.10): 2187819

介绍: Kiva Tools 是一个帮助Kiva贷方更好地了解小额信贷和 Kiva 运营的网站。 Kiva 目前在多个国家开展业务，并生成大量数据。查看这些数据以更好地了解地理和经济是非常有教育意义的。注意：Kiva Tools不隶属于 Kiva，也不受 Kiva 认可。

声明: 科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/kivatools.png" alt=""  />
</p>
<p><br>2024.4.10 打开 <a href="http://kivatools.com/downloads">http://kivatools.com/downloads</a> ，点击 <em><strong>All loans</strong></em> 对应的数据，进行下载，最终得到 875M 的 csv 文件。</p>
<p><br><br></p>
<h2 id="四查看数据">四、查看数据</h2>
<h3 id="41-导入数据">4.1 导入数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;all_loans.csv&#39;</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
 <br>
<h3 id="42-所含字段">4.2 所含字段</h3>
<p>所含字段包含</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">col</span><span class="p">)</span>
</code></pre></div><p>字段详情</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> - LOAN_ID:    贷款ID
 - LOAN_NAME:   Kiva贷方(出借人)姓名
 - FUNDED_AMOUNT:  Kiva贷方(出借人)已购买的贷款金额
 - LOAN_AMOUNT: 贷款额度
 - STATUS:   贷款状态包括违约、还款和已付级别，请参阅 http://build.kiva.org/docs/data/loans 了解每个级别的含义
 - IMAGE_ID: 图片ID
 - VIDEO_ID: 视频ID
 - ACTIVITY_NAME: 活动
 - SECTOR_NAME: 部门
 - LOAN_USE: 借款用途
 - COUNTRY_CODE: 国家代码
 - COUNTRY_NAME: 国家名称
 - TOWN_NAME: 城镇名称
 - CURRENCY_POLICY: 货币政策
 - CURRENCY_EXCHANGE_COVERAGE_RATE: 货币兑换
 - CURRENCY: 货币类型
 - PARTNER_ID: 当地贷款机构的现场合作伙伴 ID，请参阅http://api.kivaws.org/v1/partners.json
 - POSTED_TIME: 项目发布时间
 - PLANNED_EXPIRATION_TIME: 项目截止时间
 - DISBURSE_TIME: 发放给借款人的时间;  请注意，在 Kiva 上发布贷款之前，这笔钱可能会支付给借款人。
 - RAISED_TIME:   
 - LENDER_TERM:   借款人条款
 - NUM_LENDERS_TOTAL: 借款人数量
 - NUM_JOURNAL_ENTRIES: 借款人的日记账分录数量（Kiva 网站上的更新）。Number of journal entries (updates on the Kiva website) by borrower.
 - NUM_BULK_ENTRIES:
 - TAGS: 标签
 - BORROWER_NAMES:  借款人姓名
 - BORROWER_GENDERS: 借款人性别（有可能会存在多个借款人，所以数据类型为字符串或列表）
 - BORROWER_PICTURED:  借款人是否提供了图片
 - REPAYMENT_INTERVAL:  还款间隔
 - DISTRIBUTION_MODEL: 分销模式
</code></pre></div> <br>
<h3 id="43-行业">4.3 行业</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>


<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;SECTOR_NAME&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;pie&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;Kiva项目所属行业部门分布&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/pie.png" alt=""  />
</p>
<br>
<h3 id="44-国家项目数量">4.4 国家项目数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>

<span class="n">props</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;COUNTRY_NAME&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">props_</span> <span class="o">=</span> <span class="n">props</span><span class="p">[</span><span class="n">props</span><span class="o">&gt;=</span><span class="mf">0.01</span><span class="p">]</span>
<span class="n">props_</span><span class="p">[</span><span class="s1">&#39;Others&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">props</span><span class="p">[</span><span class="n">props</span><span class="o">&lt;</span><span class="mf">0.01</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>

<span class="n">props_</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;pie&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;国家Kiva项目数量分布&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/pie2.png" alt=""  />
</p>
<p>Kiva 向菲律宾提供的贷款数量较多，按数量(递减)依次是是肯尼亚、柬埔寨、秘鲁、萨瓦尔多、乌干达等。</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用 Langchain-Chatchat 搭建本地知识库问答系统</title>
      <link>https://textdata.cn/blog/2024-01-31-langchain-chatchat/</link>
      <pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-31-langchain-chatchat/</guid>
      <description>&lt;h2 id=&#34;一langchain-chatchat&#34;&gt;一、LangChain-Chatchat&lt;/h2&gt;
&lt;p&gt;基于 ChatGLM 等大语言模型与 Langchain 等应用框架实现，开源、可离线部署的检索增强生成(RAG)大模型知识库项目。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为咱们经年累月积累的文献阅读笔记，本地知识库特别适合咱们科研群体。 不过目前本地部署受限于电脑性能， 使用受限， 但不远的未来应该会有一些收费的在线知识库应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;依托于本项目支持的开源 LLM 与 Embedding 模型，本项目可实现全部使用&lt;strong&gt;开源&lt;/strong&gt;模型&lt;strong&gt;离线私有部署&lt;/strong&gt;。与此同时，本项目也支持
OpenAI GPT API 的调用，并将在后续持续扩充对各类模型及模型 API 的接入。&lt;/p&gt;
&lt;p&gt;本项目实现原理如下图所示，过程包括 加载文件 -&amp;gt; 读取文本 -&amp;gt; 文本分割 -&amp;gt; 文本向量化 -&amp;gt; 问句向量化 -&amp;gt;
在文本向量中匹配出与问句向量最相似的 &lt;code&gt;top k&lt;/code&gt;个 -&amp;gt; 匹配出的文本作为上下文和问题一起添加到 &lt;code&gt;prompt&lt;/code&gt;中 -&amp;gt; 提交给 &lt;code&gt;LLM&lt;/code&gt;生成回答。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/langchain&amp;#43;chatglm.png&#34; alt=&#34;实现原理图&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;从文档处理角度来看，实现流程如下：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/langchain&amp;#43;chatglm2.png&#34; alt=&#34;实现原理图2&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二搭建步骤&#34;&gt;二、搭建步骤&lt;/h2&gt;
&lt;h3 id=&#34;21-环境配置&#34;&gt;2.1 环境配置&lt;/h3&gt;
&lt;p&gt;强烈推荐使用 Python3.11， 创建一个虚拟环境，并在虚拟环境内安装项目的依赖。需要注意&lt;strong&gt;电脑显存要大于12G&lt;/strong&gt;， 不然该项目跑不动。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 拉取仓库&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chatchat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;space&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Langchain&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Chatchat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 进入目录&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Langchain&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Chatchat&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 安装全部依赖&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requirements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt; 
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requirements_api&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requirements_webui&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt;  

&lt;span class=&#34;c1&#34;&gt;# 默认依赖包括基本运行环境（FAISS向量库）。如果要使用 milvus/pg_vector 等向量库，请将 requirements.txt 中相应依赖取消注释再安装。&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22-模型下载&#34;&gt;2.2 模型下载&lt;/h3&gt;
&lt;p&gt;如需在本地或离线环境下运行本项目，需要首先将项目所需的模型下载至本地，通常开源 LLM 与 Embedding 模型可以从 &lt;a href=&#34;https://huggingface.co/models&#34;&gt;HuggingFace&lt;/a&gt; 下载。&lt;/p&gt;
&lt;p&gt;以本项目中默认使用的 LLM 模型 &lt;a href=&#34;https://huggingface.co/THUDM/chatglm3-6b&#34;&gt;THUDM/ChatGLM3-6B&lt;/a&gt; 与 Embedding 模型 &lt;a href=&#34;https://huggingface.co/BAAI/bge-large-zh&#34;&gt;BAAI/bge-large-zh&lt;/a&gt; 为例：&lt;/p&gt;
&lt;p&gt;下载模型需要先&lt;a href=&#34;https://docs.github.com/zh/repositories/working-with-files/managing-large-files/installing-git-large-file-storage&#34;&gt;安装 Git LFS&lt;/a&gt; ，然后运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ git lfs install
$ git clone https://huggingface.co/THUDM/chatglm3-6b
$ git clone https://huggingface.co/BAAI/bge-large-zh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23-初始化知识库和配置文件&#34;&gt;2.3 初始化知识库和配置文件&lt;/h3&gt;
&lt;p&gt;按照下列方式初始化自己的知识库和简单的复制配置文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ python copy_config_example.py
$ python init_database.py --recreate-vs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;24-一键启动&#34;&gt;2.4 一键启动&lt;/h3&gt;
&lt;p&gt;按照以下命令启动项目&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;$ python startup.py -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;25-启动界面示例&#34;&gt;2.5 启动界面示例&lt;/h3&gt;
&lt;p&gt;如果正常启动，你将能看到以下界面&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/LLM_success.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/init_knowledge_base.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;三-外包&#34;&gt;三、 外包&lt;/h3&gt;
&lt;p&gt;如果电脑显存大于12G，不差钱但缺时间，可以在某鱼搜「langchain-chatchat」，配置费用大概100-200元。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/xianyu.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;b&gt;
&lt;b&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一langchain-chatchat">一、LangChain-Chatchat</h2>
<p>基于 ChatGLM 等大语言模型与 Langchain 等应用框架实现，开源、可离线部署的检索增强生成(RAG)大模型知识库项目。</p>
<blockquote>
<p>因为咱们经年累月积累的文献阅读笔记，本地知识库特别适合咱们科研群体。 不过目前本地部署受限于电脑性能， 使用受限， 但不远的未来应该会有一些收费的在线知识库应用。</p>
</blockquote>
<p>依托于本项目支持的开源 LLM 与 Embedding 模型，本项目可实现全部使用<strong>开源</strong>模型<strong>离线私有部署</strong>。与此同时，本项目也支持
OpenAI GPT API 的调用，并将在后续持续扩充对各类模型及模型 API 的接入。</p>
<p>本项目实现原理如下图所示，过程包括 加载文件 -&gt; 读取文本 -&gt; 文本分割 -&gt; 文本向量化 -&gt; 问句向量化 -&gt;
在文本向量中匹配出与问句向量最相似的 <code>top k</code>个 -&gt; 匹配出的文本作为上下文和问题一起添加到 <code>prompt</code>中 -&gt; 提交给 <code>LLM</code>生成回答。</p>
<p><img loading="lazy" src="img/langchain&#43;chatglm.png" alt="实现原理图"  />
</p>
<p>从文档处理角度来看，实现流程如下：</p>
<p><img loading="lazy" src="img/langchain&#43;chatglm2.png" alt="实现原理图2"  />
</p>
<p><br><br></p>
<h2 id="二搭建步骤">二、搭建步骤</h2>
<h3 id="21-环境配置">2.1 环境配置</h3>
<p>强烈推荐使用 Python3.11， 创建一个虚拟环境，并在虚拟环境内安装项目的依赖。需要注意<strong>电脑显存要大于12G</strong>， 不然该项目跑不动。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 拉取仓库</span>
<span class="err">$</span> <span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">chatchat</span><span class="o">-</span><span class="n">space</span><span class="o">/</span><span class="n">Langchain</span><span class="o">-</span><span class="n">Chatchat</span><span class="o">.</span><span class="n">git</span>

<span class="c1"># 进入目录</span>
<span class="err">$</span> <span class="n">cd</span> <span class="n">Langchain</span><span class="o">-</span><span class="n">Chatchat</span>

<span class="c1"># 安装全部依赖</span>
<span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="n">requirements</span><span class="o">.</span><span class="n">txt</span> 
<span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="n">requirements_api</span><span class="o">.</span><span class="n">txt</span>
<span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="n">requirements_webui</span><span class="o">.</span><span class="n">txt</span>  

<span class="c1"># 默认依赖包括基本运行环境（FAISS向量库）。如果要使用 milvus/pg_vector 等向量库，请将 requirements.txt 中相应依赖取消注释再安装。</span>

</code></pre></div><br>
<h3 id="22-模型下载">2.2 模型下载</h3>
<p>如需在本地或离线环境下运行本项目，需要首先将项目所需的模型下载至本地，通常开源 LLM 与 Embedding 模型可以从 <a href="https://huggingface.co/models">HuggingFace</a> 下载。</p>
<p>以本项目中默认使用的 LLM 模型 <a href="https://huggingface.co/THUDM/chatglm3-6b">THUDM/ChatGLM3-6B</a> 与 Embedding 模型 <a href="https://huggingface.co/BAAI/bge-large-zh">BAAI/bge-large-zh</a> 为例：</p>
<p>下载模型需要先<a href="https://docs.github.com/zh/repositories/working-with-files/managing-large-files/installing-git-large-file-storage">安装 Git LFS</a> ，然后运行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$ git lfs install
$ git clone https://huggingface.co/THUDM/chatglm3-6b
$ git clone https://huggingface.co/BAAI/bge-large-zh
</code></pre></div><br>
<h3 id="23-初始化知识库和配置文件">2.3 初始化知识库和配置文件</h3>
<p>按照下列方式初始化自己的知识库和简单的复制配置文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$ python copy_config_example.py
$ python init_database.py --recreate-vs
</code></pre></div><br>
<h3 id="24-一键启动">2.4 一键启动</h3>
<p>按照以下命令启动项目</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$ python startup.py -a
</code></pre></div><h3 id="25-启动界面示例">2.5 启动界面示例</h3>
<p>如果正常启动，你将能看到以下界面</p>
<p><img loading="lazy" src="img/LLM_success.png" alt=""  />
</p>
<p><img loading="lazy" src="img/init_knowledge_base.jpg" alt=""  />
</p>
<p><br><br></p>
<h3 id="三-外包">三、 外包</h3>
<p>如果电脑显存大于12G，不差钱但缺时间，可以在某鱼搜「langchain-chatchat」，配置费用大概100-200元。</p>
<p><img loading="lazy" src="img/xianyu.jpg" alt=""  />
</p>
<b>
<b>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  港股年报文本数据集(2007 ~ 2023.12)</title>
      <link>https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/</link>
      <pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-21-hk-stock-market-anual-report/</guid>
      <description>&lt;h2 id=&#34;一数据集概况&#34;&gt;一、数据集概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据名称: 港股年报
数据来源: 披露易（https://www1.hkexnews.hk/）
报告类型: 中(英)文年报
公司数量: 2671
报告数量: 27172
会计年度: 2007 ~ 2023
报告发布日期: 2007-01-08 ~ 2023-12-22
数据类型: pdf、txt、csv(csv是对所有txt的汇总文件)
数据体积: 257G
本文声明: 科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;11-数据集截图&#34;&gt;1.1 数据集截图&lt;/h3&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-size.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-datascreen.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-pdf.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-txt.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-数据来源&#34;&gt;1.2 数据来源&lt;/h3&gt;
&lt;p&gt;数据整理自 &lt;em&gt;&lt;strong&gt;披露易 &lt;a href=&#34;https://www1.hkexnews.hk&#34;&gt;https://www1.hkexnews.hk&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;https://www1.hkexnews.hk/search/titlesearch.xhtml?lang=zh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-site.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二pdftxt&#34;&gt;二、PDF、TXT&lt;/h2&gt;
&lt;h3 id=&#34;21-读取txt&#34;&gt;2.1 读取TXT&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;港股年报中文TXT/09985_2022_衛龍_2022年年報_27-04-2023.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;#39;(Incorporated in the Cayman Islands with Limited Liability)\n（於開曼群島註冊成立的有限公司）\nStock code 股份代號 : 09985.HK\nANNUAL\nREPORT\n2022\n年報 2022\nANNUAL REPORT\n年報Contents 2 Company Profile\n公司簡介\n目錄\n3 Definitions\n釋義\n6 Corporate Information\n公司資料\n8 Financial Overview\n財務概覽\n10 Chairman’s Statement\n主席報告\n14 Management Discussion and Analysis\n管理層討論與分析\n33 Corporate Governance Report\n企業管治報告\n57 Biographies of Directors and Senior Management\n董事及高級管理人員履歷\n66 Report of the Directors\n董事會報告\n90 Independent Auditor’s Report\n獨立核數師&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22--pdf&#34;&gt;2.2  PDF&lt;/h3&gt;
&lt;h3 id=&#34;221-安装pdfdocx&#34;&gt;2.2.1 安装pdfdocx&lt;/h3&gt;
&lt;p&gt;打开命令行(cmd）， 执行安装命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;pip install pdfdocx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;222-读取pdf&#34;&gt;2.2.2 读取pdf&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pdfdocx&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read_pdf&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read_pdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;港股年报中文PDF/09990_2022_祖龍娛樂_2022年度報告_24-04-2023.PDF&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;#39;2022\n2022\n年\n報\nANNUAL REPORT \n(Incorporated in the Cayman Islands with limited liability)\n( 於開曼群島註冊成立的有限公司 )\nStock Code 股份代號 : 9990\n祖龍娛樂有限公司\nArchosaur Games Inc.\n \n頁次\n釋義 \n2\n公司資料 \n9\n財務概要 \n11\n主席致辭 \n13\n財務表現摘要 \n18\n管理層討論與分析 \n19\n董事會報告 \n32\n董事及高級管理層履歷詳情 \n61\n企業管治報告 \n66\n獨立核數師報告 \n79\n綜合損益表 \n85\n綜合全面收益表 \n86\n綜合資產負債表 \n87\n綜合權益變動表 \n89\n綜合現金流量表 \n91\n綜合財務報表附註 \n93\n目錄\n祖龙娛樂有限公司  年度報告 2022\n02\n釋義\n於本年報內，除文義另有所指外，下列詞彙具有以下涵義：\n「採納日期」\n指\n2021年2月5日，即股東於本公司在2021年2月5日（星期五）舉行的股東\n特別大會上採納購股權計劃的日期\n「修訂日期」\n指\n2022年12月22日，即購股權計劃的修訂獲股東在本公司於&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三-繁体2简体&#34;&gt;三、 繁体2简体&lt;/h2&gt;
&lt;p&gt;港股年报 PDF 和  TXT 内容均为繁体字未做处理， 后续如果用 Python 做文本分析， 可以使用 opencc-python 处理中英文&lt;/p&gt;
&lt;h3 id=&#34;31-安装&#34;&gt;3.1 安装&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;pip3 install opencc-python-reimplemented
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;32-转换语法&#34;&gt;3.2 转换语法&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;opencc&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OpenCC&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OpenCC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;t2s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 繁体2简体&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;開放中文轉換&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;开放中文转换
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四csv&#34;&gt;四、CSV&lt;/h2&gt;
&lt;p&gt;csv是对港股中(英)文TXT的汇总，且已对中文进行了繁体转简体处理。&lt;/p&gt;
&lt;h3 id=&#34;41-读取&#34;&gt;4.1 读取&lt;/h3&gt;
&lt;p&gt;csv是对所有 txt 的汇总文件， 如果电脑内存16G +， 可直接读取。 &lt;code&gt;港股中文年报.csv.gz(2.69G，解压后大概8.8G)&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;港股中文年报.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/06-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;如果电脑内存小于16G， 可参考 &lt;a href=&#34;https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/&#34;&gt;&lt;strong&gt;代码 | 如何处理远超电脑内存的csv文件&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#只读取5行&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cdf2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;港股中文年报.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;nrows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;42-记录数&#34;&gt;4.2 记录数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;27170
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;43-公司数量&#34;&gt;4.3 公司数量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2670
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;44-会计年度&#34;&gt;4.4 会计年度&lt;/h3&gt;
&lt;p&gt;数据集覆盖的会计年度主要集中在 2007 ~ 2023，但2001 ~ 2006也会有少量记录。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/07-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2003&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/08-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2006&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/09-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2007&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/10-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;45-发布日期&#34;&gt;4.5 发布日期&lt;/h3&gt;
&lt;p&gt;港股年报报告发布日期&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pubdate&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pubdate&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pubdate&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pubdate&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2007-01-08 00:00:00
2023-12-22 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;相关内容&#34;&gt;相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/call_for_paper/&#34;&gt;长期征稿&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/we_need_you/&#34;&gt;长期招募小伙伴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course&#34;&gt;&lt;strong&gt;付费视频课 | Python实证指标构建与文本分析&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;数据集 | 2001-2022年A股上市公司年报&amp;amp;管理层讨论与分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/&#34;&gt;数据集 | 三板上市公司年报2002-2023.12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/&#34;&gt;数据集 | 美股年报10-K、20-F数据(2000-2023.12)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据名称: 港股年报
数据来源: 披露易（https://www1.hkexnews.hk/）
报告类型: 中(英)文年报
公司数量: 2671
报告数量: 27172
会计年度: 2007 ~ 2023
报告发布日期: 2007-01-08 ~ 2023-12-22
数据类型: pdf、txt、csv(csv是对所有txt的汇总文件)
数据体积: 257G
本文声明: 科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><br>
<h3 id="11-数据集截图">1.1 数据集截图</h3>
<p><img loading="lazy" src="img/01-size.jpg" alt=""  />
</p>
<p><img loading="lazy" src="img/02-datascreen.png" alt=""  />
</p>
<p><img loading="lazy" src="img/03-pdf.png" alt=""  />
</p>
<p><img loading="lazy" src="img/04-txt.png" alt=""  />
</p>
<br>
<h3 id="12-数据来源">1.2 数据来源</h3>
<p>数据整理自 <em><strong>披露易 <a href="https://www1.hkexnews.hk">https://www1.hkexnews.hk</a></strong></em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">https://www1.hkexnews.hk/search/titlesearch.xhtml?lang=zh
</code></pre></div><p><img loading="lazy" src="img/05-site.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二pdftxt">二、PDF、TXT</h2>
<h3 id="21-读取txt">2.1 读取TXT</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;港股年报中文TXT/09985_2022_衛龍_2022年年報_27-04-2023.txt&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
<span class="n">text</span><span class="p">[:</span><span class="mi">500</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#39;(Incorporated in the Cayman Islands with Limited Liability)\n（於開曼群島註冊成立的有限公司）\nStock code 股份代號 : 09985.HK\nANNUAL\nREPORT\n2022\n年報 2022\nANNUAL REPORT\n年報Contents 2 Company Profile\n公司簡介\n目錄\n3 Definitions\n釋義\n6 Corporate Information\n公司資料\n8 Financial Overview\n財務概覽\n10 Chairman’s Statement\n主席報告\n14 Management Discussion and Analysis\n管理層討論與分析\n33 Corporate Governance Report\n企業管治報告\n57 Biographies of Directors and Senior Management\n董事及高級管理人員履歷\n66 Report of the Directors\n董事會報告\n90 Independent Auditor’s Report\n獨立核數師&#39;
</code></pre></div><br>
<h3 id="22--pdf">2.2  PDF</h3>
<h3 id="221-安装pdfdocx">2.2.1 安装pdfdocx</h3>
<p>打开命令行(cmd）， 执行安装命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install pdfdocx
</code></pre></div><h3 id="222-读取pdf">2.2.2 读取pdf</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">pdfdocx</span> <span class="kn">import</span> <span class="n">read_pdf</span>

<span class="n">text</span> <span class="o">=</span> <span class="n">read_pdf</span><span class="p">(</span><span class="s1">&#39;港股年报中文PDF/09990_2022_祖龍娛樂_2022年度報告_24-04-2023.PDF&#39;</span><span class="p">)</span>
<span class="n">text</span><span class="p">[:</span><span class="mi">500</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#39;2022\n2022\n年\n報\nANNUAL REPORT \n(Incorporated in the Cayman Islands with limited liability)\n( 於開曼群島註冊成立的有限公司 )\nStock Code 股份代號 : 9990\n祖龍娛樂有限公司\nArchosaur Games Inc.\n \n頁次\n釋義 \n2\n公司資料 \n9\n財務概要 \n11\n主席致辭 \n13\n財務表現摘要 \n18\n管理層討論與分析 \n19\n董事會報告 \n32\n董事及高級管理層履歷詳情 \n61\n企業管治報告 \n66\n獨立核數師報告 \n79\n綜合損益表 \n85\n綜合全面收益表 \n86\n綜合資產負債表 \n87\n綜合權益變動表 \n89\n綜合現金流量表 \n91\n綜合財務報表附註 \n93\n目錄\n祖龙娛樂有限公司  年度報告 2022\n02\n釋義\n於本年報內，除文義另有所指外，下列詞彙具有以下涵義：\n「採納日期」\n指\n2021年2月5日，即股東於本公司在2021年2月5日（星期五）舉行的股東\n特別大會上採納購股權計劃的日期\n「修訂日期」\n指\n2022年12月22日，即購股權計劃的修訂獲股東在本公司於&#39;
</code></pre></div><p><br><br></p>
<h2 id="三-繁体2简体">三、 繁体2简体</h2>
<p>港股年报 PDF 和  TXT 内容均为繁体字未做处理， 后续如果用 Python 做文本分析， 可以使用 opencc-python 处理中英文</p>
<h3 id="31-安装">3.1 安装</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install opencc-python-reimplemented
</code></pre></div><br>
<h3 id="32-转换语法">3.2 转换语法</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">opencc</span> <span class="kn">import</span> <span class="n">OpenCC</span>
<span class="n">cc</span> <span class="o">=</span> <span class="n">OpenCC</span><span class="p">(</span><span class="s1">&#39;t2s&#39;</span><span class="p">)</span>  <span class="c1"># 繁体2简体</span>

<span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;開放中文轉換&#39;</span>
<span class="n">cc</span><span class="o">.</span><span class="n">convert</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">开放中文转换
</code></pre></div><p><br><br></p>
<h2 id="四csv">四、CSV</h2>
<p>csv是对港股中(英)文TXT的汇总，且已对中文进行了繁体转简体处理。</p>
<h3 id="41-读取">4.1 读取</h3>
<p>csv是对所有 txt 的汇总文件， 如果电脑内存16G +， 可直接读取。 <code>港股中文年报.csv.gz(2.69G，解压后大概8.8G)</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">cdf</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;港股中文年报.csv.gz&#39;</span><span class="p">)</span>
<span class="n">cdf</span>
</code></pre></div><p><img loading="lazy" src="img/06-df.png" alt=""  />
</p>
<br>
<br>
<p>如果电脑内存小于16G， 可参考 <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>代码 | 如何处理远超电脑内存的csv文件</strong></a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#只读取5行</span>
<span class="n">cdf2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;港股中文年报.csv.gz&#39;</span><span class="p">,</span> 
                  <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> 
                  <span class="n">nrows</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="42-记录数">4.2 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">cdf</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">27170
</code></pre></div><h3 id="43-公司数量">4.3 公司数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2670
</code></pre></div><br>
<h3 id="44-会计年度">4.4 会计年度</h3>
<p>数据集覆盖的会计年度主要集中在 2007 ~ 2023，但2001 ~ 2006也会有少量记录。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">sorted</span><span class="p">(</span><span class="n">cdf</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span><span class="p">[</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">2001</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/07-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span><span class="p">[</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">2003</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/08-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span><span class="p">[</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">2006</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/09-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span><span class="p">[</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">2007</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/10-df.png" alt=""  />
</p>
<br>
<h3 id="45-发布日期">4.5 发布日期</h3>
<p>港股年报报告发布日期</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;pubdate&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;pubdate&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;pubdate&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">cdf</span><span class="p">[</span><span class="s1">&#39;pubdate&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2007-01-08 00:00:00
2023-12-22 00:00:00
</code></pre></div><br>
<br>
<h2 id="相关内容">相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course"><strong>付费视频课 | Python实证指标构建与文本分析</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">数据集 | 2001-2022年A股上市公司年报&amp;管理层讨论与分析</a></li>
<li><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/">数据集 | 三板上市公司年报2002-2023.12</a></li>
<li><a href="https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/">数据集 | 美股年报10-K、20-F数据(2000-2023.12)</a></li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 用来练习pandas的招聘数据</title>
      <link>https://textdata.cn/blog/2024-01-19-recruitment-dataset/</link>
      <pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-19-recruitment-dataset/</guid>
      <description>&lt;h2 id=&#34;相关推文&#34;&gt;相关推文&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/&#34;&gt;推荐 | 如何处理远超电脑内存的csv文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一数据集概况&#34;&gt;一、数据集概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 数据集名：招聘数据集
- 采集时间：2018.7
- 数据来源：58同城、智联招聘
- 记录数: 1701992

百度网盘链接: https://pan.baidu.com/s/1arYXcrexLW__SFF5AbjAaA?pwd=sfg5 提取码: sfg5 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;声明&#34;&gt;声明&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;仅供科研使用，大家可以用来练习Pandas&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;该数据集是有偏的， 不太适合做研究。 如果你想用这个数据集做研究， 拿去不谢，但不要加我微信提问呀！！我知道的都在推文里！！&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二pandas练习&#34;&gt;二、Pandas练习&lt;/h2&gt;
&lt;h3 id=&#34;21-读取&#34;&gt;2.1 读取&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2018.7招聘数据.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#使用bandizip或winrar解压gz，得到csv&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df = pd.read_csv(&amp;#39;2018.7招聘数据.csv&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;记录数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1701992
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22-省份&#34;&gt;2.2 省份&lt;/h3&gt;
&lt;p&gt;不同省份的记录数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;省份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value_counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;省份
北京市         410142
上海市         364047
河南省         156374
福建省         120816
广东省         101390
湖北省          63507
河北省          57152
江苏省          52360
四川省          51849
山东省          46956
重庆市          43153
湖南省          41438
陕西省          32108
浙江省          31838
黑龙江省         20466
贵州省          17837
辽宁省          15015
海南省          14412
云南省          13542
广西壮族自治区      12842
吉林省          11502
江西省           9638
新疆维吾尔自治区      5071
天津市           3681
安徽省           3547
山西省           1308
Name: count, dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23-学历&#34;&gt;2.3 学历&lt;/h3&gt;
&lt;p&gt;不同学历的记录数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;学历&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value_counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;学历
学历不限    999542
大专      286629
高中      123481
中专      100423
不限       84206
本科       83400
中技       10810
技校        6736
硕士        6151
博士         613
Name: count, dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;筛选出需要博士学历的记录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;学历&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;博士&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;24-岗位描述&#34;&gt;2.4 岗位描述&lt;/h3&gt;
&lt;h4 id=&#34;241-文本长度&#34;&gt;2.4.1 文本长度&lt;/h4&gt;
&lt;p&gt;岗位描述文本长度&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;岗位描述&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0           974
1           457
2           731
3           430
4           348
           ... 
1701987     294
1701988    1029
1701989     322
1701990      25
1701991     377
Name: 岗位描述, Length: 1701992, dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;242-是否含某个类词&#34;&gt;2.4.2 是否含某个(类)词&lt;/h4&gt;
&lt;p&gt;岗位描述是否含 &lt;code&gt;抗压能力强&lt;/code&gt; 或 &lt;code&gt;压力大&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#一个词&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df[df[&amp;#39;岗位描述&amp;#39;].fillna(&amp;#39;&amp;#39;).str.contains(&amp;#39;抗压能力强&amp;#39;)].head()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#多个词用|间隔&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;岗位描述&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;抗压能力强|压力大&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;岗位描述含 &lt;code&gt;抗压能力强|压力大&lt;/code&gt; 的工作占比&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;压力占比&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;岗位描述&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;抗压能力强|压力大&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;轻松占比&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;岗位描述&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;工作轻松|压力小&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;压力占比 0.012797357449388716
轻松占比 0.018608195573187183
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;三获取数据&#34;&gt;三、获取数据&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;百度网盘链接: https://pan.baidu.com/s/1arYXcrexLW__SFF5AbjAaA?pwd=sfg5 提取码: sfg5 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;声明-1&#34;&gt;声明&lt;/h3&gt;
&lt;p&gt;仅供科研使用，大家可以用来练习Pandas**。&lt;/p&gt;
&lt;p&gt;该数据集是有偏的， 不太适合做研究。 如果你想用这个数据集做研究， 拿去不谢，但不要加我微信提问呀！！我知道的都在推文里！！&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="相关推文">相关推文</h2>
<p><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">推荐 | 如何处理远超电脑内存的csv文件</a></p>
<p><br><br></p>
<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 数据集名：招聘数据集
- 采集时间：2018.7
- 数据来源：58同城、智联招聘
- 记录数: 1701992

百度网盘链接: https://pan.baidu.com/s/1arYXcrexLW__SFF5AbjAaA?pwd=sfg5 提取码: sfg5 
</code></pre></div><h3 id="声明">声明</h3>
<p><strong>仅供科研使用，大家可以用来练习Pandas</strong>。</p>
<p>该数据集是有偏的， 不太适合做研究。 如果你想用这个数据集做研究， 拿去不谢，但不要加我微信提问呀！！我知道的都在推文里！！</p>
<p><br><br></p>
<h2 id="二pandas练习">二、Pandas练习</h2>
<h3 id="21-读取">2.1 读取</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;2018.7招聘数据.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>

<span class="c1">#使用bandizip或winrar解压gz，得到csv</span>
<span class="c1">#df = pd.read_csv(&#39;2018.7招聘数据.csv&#39;)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<p>记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1701992
</code></pre></div><br>
<h3 id="22-省份">2.2 省份</h3>
<p>不同省份的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;省份&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">省份
北京市         410142
上海市         364047
河南省         156374
福建省         120816
广东省         101390
湖北省          63507
河北省          57152
江苏省          52360
四川省          51849
山东省          46956
重庆市          43153
湖南省          41438
陕西省          32108
浙江省          31838
黑龙江省         20466
贵州省          17837
辽宁省          15015
海南省          14412
云南省          13542
广西壮族自治区      12842
吉林省          11502
江西省           9638
新疆维吾尔自治区      5071
天津市           3681
安徽省           3547
山西省           1308
Name: count, dtype: int64
</code></pre></div><br>
<h3 id="23-学历">2.3 学历</h3>
<p>不同学历的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;学历&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">学历
学历不限    999542
大专      286629
高中      123481
中专      100423
不限       84206
本科       83400
中技       10810
技校        6736
硕士        6151
博士         613
Name: count, dtype: int64
</code></pre></div><br>
<p>筛选出需要博士学历的记录</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;学历&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;博士&#39;</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
<img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="24-岗位描述">2.4 岗位描述</h3>
<h4 id="241-文本长度">2.4.1 文本长度</h4>
<p>岗位描述文本长度</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;岗位描述&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0           974
1           457
2           731
3           430
4           348
           ... 
1701987     294
1701988    1029
1701989     322
1701990      25
1701991     377
Name: 岗位描述, Length: 1701992, dtype: int64
</code></pre></div><br>
<h4 id="242-是否含某个类词">2.4.2 是否含某个(类)词</h4>
<p>岗位描述是否含 <code>抗压能力强</code> 或 <code>压力大</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#一个词</span>
<span class="c1">#df[df[&#39;岗位描述&#39;].fillna(&#39;&#39;).str.contains(&#39;抗压能力强&#39;)].head()</span>

<span class="c1">#多个词用|间隔</span>
<span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;岗位描述&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;抗压能力强|压力大&#39;</span><span class="p">)]</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<br>
<p>岗位描述含 <code>抗压能力强|压力大</code> 的工作占比</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;压力占比&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;岗位描述&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;抗压能力强|压力大&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;轻松占比&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;岗位描述&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;工作轻松|压力小&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">压力占比 0.012797357449388716
轻松占比 0.018608195573187183
</code></pre></div><p>&hellip;</p>
<h2 id="三获取数据">三、获取数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">百度网盘链接: https://pan.baidu.com/s/1arYXcrexLW__SFF5AbjAaA?pwd=sfg5 提取码: sfg5 
</code></pre></div><h3 id="声明-1">声明</h3>
<p>仅供科研使用，大家可以用来练习Pandas**。</p>
<p>该数据集是有偏的， 不太适合做研究。 如果你想用这个数据集做研究， 拿去不谢，但不要加我微信提问呀！！我知道的都在推文里！！</p>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 三板上市公司年报2002-2023.12</title>
      <link>https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/</guid>
      <description>&lt;h2 id=&#34;一数据集&#34;&gt;一、数据集&lt;/h2&gt;
&lt;h3 id=&#34;11-概况&#34;&gt;1.1 概况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据来源: 全国中小企业股份转让系统(https://www.neeq.com.cn/）

覆盖时间: 2002-04-02 ~ 2023-12-06

年报数量: 70838

累积挂牌数量: 13884

数据集体积: 131G

文件格式: pdf、txt、csv(csv是一个汇总文件，方便数据分析)
   
    
csv所含字段:
 - code
 - year
 - text
 
声明: 科研用途; 如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-dataset.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-pdf.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-txt.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;12--声明&#34;&gt;1.2  声明&lt;/h3&gt;
&lt;p&gt;&lt;span style=&#34;font-size: 18px;color: green;&#34;&gt;科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;三板年报.csv.gz&lt;/strong&gt;&lt;/em&gt; 是一个汇总的 csv 文件，特别适合进行数据分析。 解压后大概 15G， 如果你的电脑内存小于32G， &lt;a href=&#34;https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/&#34;&gt;推荐阅读 | 如何处理远超电脑内存的csv文件&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;三板年报.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-记录数&#34;&gt;2.2 记录数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;70838
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23--累计挂牌企业数量&#34;&gt;2.3  累计挂牌企业数量&lt;/h3&gt;
&lt;p&gt;累计挂牌企业数量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;13884
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;24-日期范围&#34;&gt;2.4 日期范围&lt;/h3&gt;
&lt;p&gt;数据集覆盖的日期范围&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#年报发布日期&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2002-04-02
2023-12-06
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;25-年度记录数&#34;&gt;2.5 年度记录数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2002 5
2003 6
2004 19
2005 29
2006 33
2007 48
2008 59
2009 80
2010 90
2011 107
2012 139
2013 225
2014 732
2015 2336
2016 6874
2017 10811
2018 10948
2019 9258
2020 8400
2021 6859
2022 7019
2023 6761
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;warnings&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;warnings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;三板历年企业年报数&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三相关内容&#34;&gt;三、相关内容&lt;/h2&gt;
&lt;p&gt;想用 python 对 csv、xlsx 进行分析， 要学会尽量用 pandas 写代码。 以下是近期 pandas 的一些处理推文免费教程， 感兴趣的可以进去浏览浏览。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/&#34;&gt;推荐阅读 | 如何处理远超电脑内存的csv文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;数据集 | 2001-2022年A股上市公司年报&amp;amp;管理层讨论与分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/&#34;&gt;词向量 | 使用MD&amp;amp;A2001-2022语料训练Word2Vec模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/&#34;&gt;&lt;strong&gt;数据集 | 港股年报文本数据集(2007 ~ 2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/&#34;&gt;&lt;strong&gt;数据集 |  美股年报10-K、20-F数据(2000-2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/&#34;&gt;数据集 |  港股年报文本数据集(2007 ~ 2023.12)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集">一、数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: 全国中小企业股份转让系统(https://www.neeq.com.cn/）

覆盖时间: 2002-04-02 ~ 2023-12-06

年报数量: 70838

累积挂牌数量: 13884

数据集体积: 131G

文件格式: pdf、txt、csv(csv是一个汇总文件，方便数据分析)
   
    
csv所含字段:
 - code
 - year
 - text
 
声明: 科研用途; 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/01-dataset.png" alt=""  />
</p>
<p><img loading="lazy" src="img/02-pdf.png" alt=""  />
</p>
<p><img loading="lazy" src="img/03-txt.png" alt=""  />
</p>
<br>
<br>
<h3 id="12--声明">1.2  声明</h3>
<p><span style="font-size: 18px;color: green;">科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</span><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<p><em><strong>三板年报.csv.gz</strong></em> 是一个汇总的 csv 文件，特别适合进行数据分析。 解压后大概 15G， 如果你的电脑内存小于32G， <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">推荐阅读 | 如何处理远超电脑内存的csv文件</a></p>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;三板年报.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<br>
<h3 id="22-记录数">2.2 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">70838
</code></pre></div><br>
<h3 id="23--累计挂牌企业数量">2.3  累计挂牌企业数量</h3>
<p>累计挂牌企业数量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">13884
</code></pre></div><br>
<h3 id="24-日期范围">2.4 日期范围</h3>
<p>数据集覆盖的日期范围</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>

<span class="c1">#年报发布日期</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2002-04-02
2023-12-06
</code></pre></div><br>
<h3 id="25-年度记录数">2.5 年度记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2002 5
2003 6
2004 19
2005 29
2006 33
2007 48
2008 59
2009 80
2010 90
2011 107
2012 139
2013 225
2014 732
2015 2336
2016 6874
2017 10811
2018 10948
2019 9258
2020 8400
2021 6859
2022 7019
2023 6761
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>
<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>


<span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">)</span><span class="o">.</span><span class="n">count</span><span class="p">()[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="n">title</span><span class="o">=</span><span class="s1">&#39;三板历年企业年报数&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三相关内容">三、相关内容</h2>
<p>想用 python 对 csv、xlsx 进行分析， 要学会尽量用 pandas 写代码。 以下是近期 pandas 的一些处理推文免费教程， 感兴趣的可以进去浏览浏览。</p>
<ul>
<li><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">推荐阅读 | 如何处理远超电脑内存的csv文件</a></li>
<li><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/">数据集 | 2001-2022年A股上市公司年报&amp;管理层讨论与分析</a></li>
<li><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">词向量 | 使用MD&amp;A2001-2022语料训练Word2Vec模型</a></li>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/"><strong>数据集 | 港股年报文本数据集(2007 ~ 2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/"><strong>数据集 |  美股年报10-K、20-F数据(2000-2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/">数据集 |  港股年报文本数据集(2007 ~ 2023.12)</a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 |  美股年报10-K、20-F数据(2000-2023.12)</title>
      <link>https://textdata.cn/blog/2024-01-14-usa-sec-10k-report-dataset/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-14-usa-sec-10k-report-dataset/</guid>
      <description>&lt;h2 id=&#34;一数据集概况&#34;&gt;一、数据集概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据名称: 美股年报10-K、20-F报告
数据来源: SEC
报告类型: 10-K、20-F
公司数量: 33619
报告数量: 189739
覆盖日期: 2000-07-05 ~ 2024.01.05
数据类型: html、csv(csv是对所有html的汇总文件)
数据体积: 378G
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-size.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;11-声明&#34;&gt;1.1 声明&lt;/h3&gt;
&lt;p&gt;科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-格式说明&#34;&gt;1.2 格式说明&lt;/h3&gt;
&lt;p&gt;美股报告是html格式(中国沪深交易所的报告是pdf格式),   可以通过爬虫批量下载所有的报告，并保存为html。&lt;/p&gt;
&lt;p&gt;以苹果公司为例，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;https://www.sec.gov/Archives/edgar/data/320193/000032019323000106/aapl-20230930.htm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-apple.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二-html文件&#34;&gt;二、 html文件&lt;/h2&gt;
&lt;p&gt;美股报告数据以html格式存储， 总体积了解其命名规则和处理方式，才能更好的使用该数据集。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-2023.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;21-html命名规则&#34;&gt;2.1 html命名规则&lt;/h3&gt;
&lt;p&gt;以 &lt;code&gt;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&lt;/code&gt; 为例, html命名遵循CIK码(股票代码)、会计期末、上市公司简称、上市公司全名、Form类型、报告发布日期&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;1973368&amp;#39;,
 &amp;#39;2023-03-31&amp;#39;,
 &amp;#39;SVMH&amp;#39;,
 &amp;#39;SRIVARU Holding Ltd&amp;#39;,
 &amp;#39;20-F&amp;#39;,
 &amp;#39;2023-12-28.html&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22-提取文本&#34;&gt;2.2 提取文本&lt;/h3&gt;
&lt;p&gt;如果觉得html不方便分析，可以使用 pyquery、BeautifulSoup等html解析库，提取html中的文本内容。本文以pyquery为例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pyquery&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PyQuery&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PyQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;bazadebezolkohpepadr=&amp;#34;608506832&amp;#34;\nfalse\nFY\n0001973368\n0001973368\n2022-04-01\n2023-03-31\n0001973368\ndei:BusinessContactMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:OrdinarySharesMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:WarrantsMember\n2022-04-01\n2023-03-31\n0001973368\n2023-03-31\n0001973368\n2022-03-31\n0001973368\n2021-06-16\n2022-03-31\n0001973368\nSVMHW:PredecessorMember\n2021-04-01\n2021-06-15\n0001973368\n2021-04-01\n2021-06-15\n0001973368\nSVMHW:PredecessorMember\nus-gaap:CommonStockMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nSVMHW:SharePremiumMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nus-gaap:RetainedEarningsMember\n2021-03-
......
SVMHW:Integer\nxbrli:pure\nUNITED STATES\nSECURITIES AND EXCHANGE COMMISSION\nWASHINGTON, D.C. 20549\nFORM\n20-F\n(Mark One)\n☐\nREGISTRATION STATEMENT PURSUANT TO SECTION 12(b) OR 12(g) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☐\nANNUAL REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nFor the fiscal year ended\nMarch 31\n,\n2023\nOR\n☐\nTRANSITION REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☒\nSHELL COMPANY REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nDate of event requiring this shell company report:\nDecember 8, 2023\nCommission File Number:\n333-272717\nSRIVARU Holding Limited\n(Exact name of Registrant as specified in its charter)\nNot applicable\nCayman Islands\n(Translation of Registrant’s name into English)\n(Jurisdiction of incorporation or organization)\n2nd Floor, Regatta Office Park\n,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\n(Address of Principal Executive Offices)\nSRIVARU Holding Limited\n2nd Floor, Regatta Office Park,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\nTelephone:\n+1 (888)\n227-8066\nEmail: ir@srivarumotors.com\n(Name, Telephone, Email and/or Facsimile number and Address of Company Contact Person)\nSecurities registered or to be registered pursuant to Section 12(b) of the Act:\nTitle of each class\nTrading Symbol(s)\nName of each exchange\non which registered\nOrdinary shares\nSVMH\nThe\nNasdaq\nGlobal Market\nWarrants\nSVMHW\nThe\nNasdaq\nGlobal Market\nSecurities registered or to be registered pursuant to Section 12(g) of the Act:\nNone\n(Title of Class)\nSecurities for which there is a reporting obligation pursuant to Section 15(d) of the Act:\nNone\n(Title of Class)\nIndicate the number of outstanding shares of each of the issuer’s classes of capital or common stock as of the close of the period covered by the shell company report:\n14,946,286\nordinary shares and 10,005,000 warrants.\nIndicate by check mark if the registrant is a well-known seasoned issuer, as defined in Rule 405 of the Securities Act. Yes ☐\nNo\n☒\nIf this report is an annual or transition report, indicate by check mark if the registrant is not required to file reports pursuant to Section 13 or 15(d) of the Securities Exchange Act of 1934. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant has submitted electronically every Interactive Data File required to be submitted pursuant to Rule 405 of Regulation S-T (§232.405 of this chapter) during the preceding 12 months (or for such shorter period that the registrant was required to submit and post such files).\nYes\n☒ No ☐\nIf securities are registered pursuant to Section 12(b) of the Act, indicate by check mark whether the financial statements of the registrant included in the filing reflect the correction of an error to previously issued financial statements.\n☐\nIndicate by check mark whether any of those error corrections are restatements that required a recovery analysis of incentive-based compensation received by any of the registrant’s executive officers during the relevant recovery period pursuant to §240.10D-1(b).\u202f☐\nIndicate by check mark whether the registrant is a large accelerated filer, an accelerated filer, a non-accelerated filer, or an emerging growth company. See definition of “large accelerated filer,” “accelerated filer,” and “emerging growth company” in Rule 12b-2 of the Exchange Act.\nLarge accelerated filer\n☐\nAccelerated filer\n☐\nNon-accelerated filer\n☒\nEmerging growth company\n☒\nIf an emerging growth company that prepares its financial statements in accordance with U.S. GAAP, indicate by check mark if the registrant has elected to use the extended transition period for complying with any new or revised financial accounting standards† provided pursuant to Section 13(a) of the Exchange Act.
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三csv文件&#34;&gt;三、csv文件&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-file.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;31-读取&#34;&gt;3.1 读取&lt;/h3&gt;
&lt;p&gt;csv是对所有html的汇总文件， 如果电脑内存OK， 直接读取 &lt;code&gt;美股年报_10-K和20-F.csv.gz(14.27G，解压后大概50+G)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我使用的电内存256G， 读取时间大概17min。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;美股年报_10-K和20-F.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;converters&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cik&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;常见电脑内存一般8~16G， 可以借鉴这篇推文 &lt;a href=&#34;https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/&#34;&gt;&lt;strong&gt;代码 | 如何处理远超电脑内存的csv文件&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#只读取5行&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;美股年报_10-K和20-F.csv.gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;converters&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cik&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#防止股票代码被识别为数字&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;nrows&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/06-nrows5.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;32-公司数量&#34;&gt;3.2 公司数量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cik&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;33619
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;33-查看content&#34;&gt;3.3 查看content&lt;/h3&gt;
&lt;p&gt;使用df.loc方式查看content字段的内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#第一行，content字段&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;#39;10-K\n1\nw46943e10-k.txt\nANNUAL REPORT FOR FISCAL YEAR ENDED 12/30/2000\n1 SECURITIES AND EXCHANGE COMMISSION WASHINGTON, D.C. 20549 FORM 10-K (Mark One) [X] Annual report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the fiscal year ended December 30, 2000 or [ ] Transition report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the transition period from ________ to ________ COMMISSION FILE NUMBER 0-9576 ------ K-TRON INTERNATIONAL, INC. (EXACT NAME OF REGISTRANT AS SPECIFIED IN ITS CHARTER)\nNew Jersey 22-1759452 ------------ ------------\n(State or other jurisdiction of (I.R.S. Employer Identification No.) incorporation or organization)\nRoutes 55 and 553 P.O. Box 888 Pitman, New Jersey 08071-0888 -------------------- ---------- (Address of principal executive offices) (Zip Code) Registrant\&amp;#39;s telephone number, including area code: (856) 589-0500 -------------- Securities registered pursuant to Section 12(b) of the Act:\nTitle of each class Name of each exchange on which registered\nNone None ------------------- -----------------------------------------\nSecurities registered pursuant to Section 12(g) of the Act: Common Stock, par value $.01 per share -------------------------------------- (Title of class) Indicate by check mark whether the Registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the Registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes X No --- ---\n2 Indicate by check mark if disclosure of delinquent filers pursuant to Item 405 of Regulation S-K is not contained herein, and will not be contained, to the best of Registrant\&amp;#39;s knowledge, in the definitive proxy statement incorporated by reference in Part III of this annual report on Form 10-K or any amendment to this annual report on Form 10-K. |X| As of February 28, 2001, the aggregate market value of the Common Stock held by non-affiliates of the Registrant was $35,606,718. Such aggregate market value was computed by reference to the closing sale price of the Common Stock as quoted on the Nasdaq National Market on such date. For purposes of making this calculation only, the Registrant has defined affiliates as including all directors and executive ......此处略去无数字
......此处略去无数字
......此处略去无数字

Amendment No. 1 to Employment Agreement dated October 5, 1998 by and between K-Tron International, Inc. and Edward B. Cloues, II (Filed as Exhibit 10.1 to our report on Form 10-Q for the quarterly period ended October 3, 1998 and incorporated herein by reference)** 10.10 Form of Employment Agreement with certain of our employees, which are identical in all material respects except for the employee, amount of salary to be paid and date of execution (Filed as Exhibit 10.12 to our annual report on Form 10-K for the year ended January 3, 1998 and incorporated herein by reference)** 10.11 Form of Indemnification Agreement with certain of our directors and officers listed on Schedule 10.11, which are identical in all material respects except for the director or officer who is a party thereto and the date of execution (Filed as Exhibit 10.11 to the 1999 Form 10-K and incorporated herein by reference)** 10.12 Leasing Agreement dated October 30, 1990 between CS Immobilien Leasing AG, Zurich and Hasler Freres SA, with limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.1(b) to our report on Form 8-K dated October 30, 1990 and incorporated herein by reference) 10.13 Amendment, dated January 25, 1991, to Leasing Agreement, dated October 30, 1990, between CS Immobilien Leasing AG, Zurich and Hasler Freres SA and to the related limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.3.3 to our annual report on Form 10-K for the year ended December 29, 1990 and incorporated herein by reference) 10.14 Note dated February 4, 2000 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit (b)(1) on Amendment No.1 to our Tender Offer Statement on Schedule TO dated February 16, 2000 and incorporated herein by reference)\n55 10.15 Mortgage Note dated June 11, 1996 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.15 to the 1999 Form 10-K and incorporated herein by reference) 10.16 Loan Modification Agreement dated June 24, 1998 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.16 to the 1999 Form 10-K and incorporated herein by reference) 10.17 Note dated June 24, 1998 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.17 to the 1999 Form 10-K and incorporated herein by reference) 10.18 Loan Modification Agreement dated as of July 22, 1999 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.18 to the 1999 Form 10-K and incorporated herein by reference) 10.19 Loan Modification Agreement dated June 21, 2000 between K-Tron America, Inc. and The Bank of Gloucester County* 21.1 Subsidiaries* 23.1 Consent of Arthur Andersen LLP* 24.1 Power of Attorney (Included on Signature Page)* -------------------- * Filed herewith ** Management contract or compensatory plan or arrangement required to be filed or incorporated as an exhibit&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;34-日期&#34;&gt;3.4 日期&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#会计期末account_date&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;account_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2000-01-31 00:00:00
2023-10-31 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#报告发布日期&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pub_date&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2000-07-05 00:00:00
2024-01-05 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;四相关内容&#34;&gt;四、相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/&#34;&gt;&lt;strong&gt;数据集 | 港股年报文本数据集(2007 ~ 2023.12)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/&#34;&gt;&lt;strong&gt;数据集(付费) | 三板上市公司年报2002-2023.12&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;&lt;strong&gt;数据集 | 2001-2022年A股上市公司年报&amp;amp;管理层讨论与分析&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据名称: 美股年报10-K、20-F报告
数据来源: SEC
报告类型: 10-K、20-F
公司数量: 33619
报告数量: 189739
覆盖日期: 2000-07-05 ~ 2024.01.05
数据类型: html、csv(csv是对所有html的汇总文件)
数据体积: 378G
</code></pre></div><p><img loading="lazy" src="img/01-size.jpg" alt=""  />
</p>
<br>
<h3 id="11-声明">1.1 声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<br>
<h3 id="12-格式说明">1.2 格式说明</h3>
<p>美股报告是html格式(中国沪深交易所的报告是pdf格式),   可以通过爬虫批量下载所有的报告，并保存为html。</p>
<p>以苹果公司为例，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">https://www.sec.gov/Archives/edgar/data/320193/000032019323000106/aapl-20230930.htm
</code></pre></div><p><img loading="lazy" src="img/03-apple.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二-html文件">二、 html文件</h2>
<p>美股报告数据以html格式存储， 总体积了解其命名规则和处理方式，才能更好的使用该数据集。</p>
<p><img loading="lazy" src="img/04-2023.png" alt=""  />
</p>
<br>
<h3 id="21-html命名规则">2.1 html命名规则</h3>
<p>以 <code>1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html</code> 为例, html命名遵循CIK码(股票代码)、会计期末、上市公司简称、上市公司全名、Form类型、报告发布日期</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">file</span> <span class="o">=</span> <span class="s1">&#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&#39;</span>
<span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;_&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;1973368&#39;,
 &#39;2023-03-31&#39;,
 &#39;SVMH&#39;,
 &#39;SRIVARU Holding Ltd&#39;,
 &#39;20-F&#39;,
 &#39;2023-12-28.html&#39;]
</code></pre></div><br>
<h3 id="22-提取文本">2.2 提取文本</h3>
<p>如果觉得html不方便分析，可以使用 pyquery、BeautifulSoup等html解析库，提取html中的文本内容。本文以pyquery为例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">pyquery</span> <span class="kn">import</span> <span class="n">PyQuery</span>

<span class="n">file</span> <span class="o">=</span> <span class="s1">&#39;1973368_2023-03-31_SVMH_SRIVARU Holding Ltd_20-F_2023-12-28.html&#39;</span>
<span class="n">doc</span> <span class="o">=</span> <span class="n">PyQuery</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
<span class="n">doc</span><span class="o">.</span><span class="n">text</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">bazadebezolkohpepadr=&#34;608506832&#34;\nfalse\nFY\n0001973368\n0001973368\n2022-04-01\n2023-03-31\n0001973368\ndei:BusinessContactMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:OrdinarySharesMember\n2022-04-01\n2023-03-31\n0001973368\nSVMHW:WarrantsMember\n2022-04-01\n2023-03-31\n0001973368\n2023-03-31\n0001973368\n2022-03-31\n0001973368\n2021-06-16\n2022-03-31\n0001973368\nSVMHW:PredecessorMember\n2021-04-01\n2021-06-15\n0001973368\n2021-04-01\n2021-06-15\n0001973368\nSVMHW:PredecessorMember\nus-gaap:CommonStockMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nSVMHW:SharePremiumMember\n2021-03-31\n0001973368\nSVMHW:PredecessorMember\nus-gaap:RetainedEarningsMember\n2021-03-
......
SVMHW:Integer\nxbrli:pure\nUNITED STATES\nSECURITIES AND EXCHANGE COMMISSION\nWASHINGTON, D.C. 20549\nFORM\n20-F\n(Mark One)\n☐\nREGISTRATION STATEMENT PURSUANT TO SECTION 12(b) OR 12(g) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☐\nANNUAL REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nFor the fiscal year ended\nMarch 31\n,\n2023\nOR\n☐\nTRANSITION REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nOR\n☒\nSHELL COMPANY REPORT PURSUANT TO SECTION 13 OR 15(d) OF THE SECURITIES EXCHANGE ACT OF 1934\nDate of event requiring this shell company report:\nDecember 8, 2023\nCommission File Number:\n333-272717\nSRIVARU Holding Limited\n(Exact name of Registrant as specified in its charter)\nNot applicable\nCayman Islands\n(Translation of Registrant’s name into English)\n(Jurisdiction of incorporation or organization)\n2nd Floor, Regatta Office Park\n,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\n(Address of Principal Executive Offices)\nSRIVARU Holding Limited\n2nd Floor, Regatta Office Park,\nWest Bay Road\nP.O. Box 10655\nGrand Cayman\n,\nKY1-1006\nCayman Islands\nTelephone:\n+1 (888)\n227-8066\nEmail: ir@srivarumotors.com\n(Name, Telephone, Email and/or Facsimile number and Address of Company Contact Person)\nSecurities registered or to be registered pursuant to Section 12(b) of the Act:\nTitle of each class\nTrading Symbol(s)\nName of each exchange\non which registered\nOrdinary shares\nSVMH\nThe\nNasdaq\nGlobal Market\nWarrants\nSVMHW\nThe\nNasdaq\nGlobal Market\nSecurities registered or to be registered pursuant to Section 12(g) of the Act:\nNone\n(Title of Class)\nSecurities for which there is a reporting obligation pursuant to Section 15(d) of the Act:\nNone\n(Title of Class)\nIndicate the number of outstanding shares of each of the issuer’s classes of capital or common stock as of the close of the period covered by the shell company report:\n14,946,286\nordinary shares and 10,005,000 warrants.\nIndicate by check mark if the registrant is a well-known seasoned issuer, as defined in Rule 405 of the Securities Act. Yes ☐\nNo\n☒\nIf this report is an annual or transition report, indicate by check mark if the registrant is not required to file reports pursuant to Section 13 or 15(d) of the Securities Exchange Act of 1934. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes ☐\nNo\n☒\nIndicate by check mark whether the registrant has submitted electronically every Interactive Data File required to be submitted pursuant to Rule 405 of Regulation S-T (§232.405 of this chapter) during the preceding 12 months (or for such shorter period that the registrant was required to submit and post such files).\nYes\n☒ No ☐\nIf securities are registered pursuant to Section 12(b) of the Act, indicate by check mark whether the financial statements of the registrant included in the filing reflect the correction of an error to previously issued financial statements.\n☐\nIndicate by check mark whether any of those error corrections are restatements that required a recovery analysis of incentive-based compensation received by any of the registrant’s executive officers during the relevant recovery period pursuant to §240.10D-1(b).\u202f☐\nIndicate by check mark whether the registrant is a large accelerated filer, an accelerated filer, a non-accelerated filer, or an emerging growth company. See definition of “large accelerated filer,” “accelerated filer,” and “emerging growth company” in Rule 12b-2 of the Exchange Act.\nLarge accelerated filer\n☐\nAccelerated filer\n☐\nNon-accelerated filer\n☒\nEmerging growth company\n☒\nIf an emerging growth company that prepares its financial statements in accordance with U.S. GAAP, indicate by check mark if the registrant has elected to use the extended transition period for complying with any new or revised financial accounting standards† provided pursuant to Section 13(a) of the Exchange Act.
......
</code></pre></div><p><br><br></p>
<h2 id="三csv文件">三、csv文件</h2>
<p><img loading="lazy" src="img/02-file.png" alt=""  />
</p>
<h3 id="31-读取">3.1 读取</h3>
<p>csv是对所有html的汇总文件， 如果电脑内存OK， 直接读取 <code>美股年报_10-K和20-F.csv.gz(14.27G，解压后大概50+G)</code>。</p>
<p>我使用的电内存256G， 读取时间大概17min。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;美股年报_10-K和20-F.csv&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;cik&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df</span>
</code></pre></div><p><img loading="lazy" src="img/05-df.png" alt=""  />
</p>
<br>
<p>常见电脑内存一般8~16G， 可以借鉴这篇推文 <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>代码 | 如何处理远超电脑内存的csv文件</strong></a>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#只读取5行</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;美股年报_10-K和20-F.csv.gzip&#39;</span><span class="p">,</span> 
                  <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;cik&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">},</span> <span class="c1">#防止股票代码被识别为数字</span>
                  <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> 
                  <span class="n">nrows</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">df2</span>
</code></pre></div><p><img loading="lazy" src="img/06-nrows5.png" alt=""  />
</p>
<br>
<h3 id="32-公司数量">3.2 公司数量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;cik&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">33619
</code></pre></div><br>
<h3 id="33-查看content">3.3 查看content</h3>
<p>使用df.loc方式查看content字段的内容</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#第一行，content字段</span>
<span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;content&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#39;10-K\n1\nw46943e10-k.txt\nANNUAL REPORT FOR FISCAL YEAR ENDED 12/30/2000\n1 SECURITIES AND EXCHANGE COMMISSION WASHINGTON, D.C. 20549 FORM 10-K (Mark One) [X] Annual report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the fiscal year ended December 30, 2000 or [ ] Transition report pursuant to section 13 or 15(d) of the Securities Exchange Act of 1934 [NO FEE REQUIRED] for the transition period from ________ to ________ COMMISSION FILE NUMBER 0-9576 ------ K-TRON INTERNATIONAL, INC. (EXACT NAME OF REGISTRANT AS SPECIFIED IN ITS CHARTER)\nNew Jersey 22-1759452 ------------ ------------\n(State or other jurisdiction of (I.R.S. Employer Identification No.) incorporation or organization)\nRoutes 55 and 553 P.O. Box 888 Pitman, New Jersey 08071-0888 -------------------- ---------- (Address of principal executive offices) (Zip Code) Registrant\&#39;s telephone number, including area code: (856) 589-0500 -------------- Securities registered pursuant to Section 12(b) of the Act:\nTitle of each class Name of each exchange on which registered\nNone None ------------------- -----------------------------------------\nSecurities registered pursuant to Section 12(g) of the Act: Common Stock, par value $.01 per share -------------------------------------- (Title of class) Indicate by check mark whether the Registrant (1) has filed all reports required to be filed by Section 13 or 15(d) of the Securities Exchange Act of 1934 during the preceding 12 months (or for such shorter period that the Registrant was required to file such reports), and (2) has been subject to such filing requirements for the past 90 days. Yes X No --- ---\n2 Indicate by check mark if disclosure of delinquent filers pursuant to Item 405 of Regulation S-K is not contained herein, and will not be contained, to the best of Registrant\&#39;s knowledge, in the definitive proxy statement incorporated by reference in Part III of this annual report on Form 10-K or any amendment to this annual report on Form 10-K. |X| As of February 28, 2001, the aggregate market value of the Common Stock held by non-affiliates of the Registrant was $35,606,718. Such aggregate market value was computed by reference to the closing sale price of the Common Stock as quoted on the Nasdaq National Market on such date. For purposes of making this calculation only, the Registrant has defined affiliates as including all directors and executive ......此处略去无数字
......此处略去无数字
......此处略去无数字

Amendment No. 1 to Employment Agreement dated October 5, 1998 by and between K-Tron International, Inc. and Edward B. Cloues, II (Filed as Exhibit 10.1 to our report on Form 10-Q for the quarterly period ended October 3, 1998 and incorporated herein by reference)** 10.10 Form of Employment Agreement with certain of our employees, which are identical in all material respects except for the employee, amount of salary to be paid and date of execution (Filed as Exhibit 10.12 to our annual report on Form 10-K for the year ended January 3, 1998 and incorporated herein by reference)** 10.11 Form of Indemnification Agreement with certain of our directors and officers listed on Schedule 10.11, which are identical in all material respects except for the director or officer who is a party thereto and the date of execution (Filed as Exhibit 10.11 to the 1999 Form 10-K and incorporated herein by reference)** 10.12 Leasing Agreement dated October 30, 1990 between CS Immobilien Leasing AG, Zurich and Hasler Freres SA, with limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.1(b) to our report on Form 8-K dated October 30, 1990 and incorporated herein by reference) 10.13 Amendment, dated January 25, 1991, to Leasing Agreement, dated October 30, 1990, between CS Immobilien Leasing AG, Zurich and Hasler Freres SA and to the related limited guaranty of K-Tron Soder AG (Filed as Exhibit 10.3.3 to our annual report on Form 10-K for the year ended December 29, 1990 and incorporated herein by reference) 10.14 Note dated February 4, 2000 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit (b)(1) on Amendment No.1 to our Tender Offer Statement on Schedule TO dated February 16, 2000 and incorporated herein by reference)\n55 10.15 Mortgage Note dated June 11, 1996 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.15 to the 1999 Form 10-K and incorporated herein by reference) 10.16 Loan Modification Agreement dated June 24, 1998 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.16 to the 1999 Form 10-K and incorporated herein by reference) 10.17 Note dated June 24, 1998 from K-Tron America, Inc. in favor of The Bank of Gloucester County (Filed as Exhibit 10.17 to the 1999 Form 10-K and incorporated herein by reference) 10.18 Loan Modification Agreement dated as of July 22, 1999 between K-Tron America, Inc. and The Bank of Gloucester County (Filed as Exhibit 10.18 to the 1999 Form 10-K and incorporated herein by reference) 10.19 Loan Modification Agreement dated June 21, 2000 between K-Tron America, Inc. and The Bank of Gloucester County* 21.1 Subsidiaries* 23.1 Consent of Arthur Andersen LLP* 24.1 Power of Attorney (Included on Signature Page)* -------------------- * Filed herewith ** Management contract or compensatory plan or arrangement required to be filed or incorporated as an exhibit&#39;
</code></pre></div><br>
<h3 id="34-日期">3.4 日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">])</span>

<span class="c1">#会计期末account_date</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;account_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2000-01-31 00:00:00
2023-10-31 00:00:00
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#报告发布日期</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pub_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2000-07-05 00:00:00
2024-01-05 00:00:00
</code></pre></div><br>
<br>
<h2 id="四相关内容">四、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-01-21-hk-stock-market-anual-report/"><strong>数据集 | 港股年报文本数据集(2007 ~ 2023.12)</strong></a></li>
<li><a href="https://textdata.cn/blog/2024-01-18-neeq-china-listed-on-nation-equities-exchange-and-quotation-system-anunal-year-report/"><strong>数据集(付费) | 三板上市公司年报2002-2023.12</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/"><strong>数据集 | 2001-2022年A股上市公司年报&amp;管理层讨论与分析</strong></a></li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 36330条上市公司仲裁数据(2000-2021)</title>
      <link>https://textdata.cn/blog/2024-01-03-listed-company-arbitration-dataset/</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/2024-01-03-listed-company-arbitration-dataset/</guid>
      <description>&lt;h2 id=&#34;一数据介绍&#34;&gt;一、数据介绍&lt;/h2&gt;
&lt;h3 id=&#34;11-数据集概况&#34;&gt;1.1 数据集概况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集名: 上市公司仲裁数据
时间跨度: 2000-01-26 ~ 2021-09-28
案件数据: 36330
数据来源: 裁判文书网
下载链接: https://pan.baidu.com/s/16fBSpfJSididpPT43ew6fg?pwd=mm8r
本文声明: 科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据整理自&lt;a href=&#34;https://textdata.cn/blog/2023-05-07-china-law-judgment-documents-datasets/&#34;&gt;数据集 | 中国裁判文书网(2010-2021)&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-声明&#34;&gt;1.2 声明&lt;/h3&gt;
&lt;p&gt;科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;13-相关文献&#34;&gt;1.3 相关文献&lt;/h3&gt;
&lt;p&gt;上市公司仲裁数据可用于衡量上市公司法律风险等，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[1]冯延超,梁莱歆.上市公司法律风险、审计收费及非标准审计意见——来自中国上市公司的经验证据[J].审计研究,2010(03):75-81.
[2]祝继高.会计稳健性与债权人利益保护——基于银行与上市公司关于贷款的法律诉讼的研究[J].会计研究,2011(05):50-57+96.
[3]辛宇,黄欣怡,纪蓓蓓.投资者保护公益组织与股东诉讼在中国的实践——基于中证投服证券支持诉讼的多案例研究[J].管理世界,2020,36(01):69-87+235.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&#34;14-字段&#34;&gt;1.4 字段&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; -  公告日期
 -  股票代码
 -  股票简称
 -  涉案类型
 -  原告被告
 -  案件案由
 -  涉案金额
 -  判决情况
 -  执行情况
 -  货币种类
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;上市公司仲裁数据2000-2021.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-记录数&#34;&gt;2.2 记录数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;36330
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23-公司数&#34;&gt;2.3 公司数&lt;/h3&gt;
&lt;p&gt;涉案的上市公司数量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nunique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2251
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;2-4-覆盖日期&#34;&gt;2. 4 覆盖日期&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2000-01-26 00:00:00
2021-09-28 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;25-字段缺失率&#34;&gt;2.5 字段&amp;amp;缺失率&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;col&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ratio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;公告日期 0.0
股票代码 0.0
股票简称 2.7525461051472613e-05
涉案类型 0.0002202036884117809
原告被告 0.001568951279933939
案件案由 0.00013762730525736306
涉案金额 0.00016515276630883568
判决情况 0.8911643270024773
执行情况 0.740765207817231
货币种类 0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据介绍">一、数据介绍</h2>
<h3 id="11-数据集概况">1.1 数据集概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名: 上市公司仲裁数据
时间跨度: 2000-01-26 ~ 2021-09-28
案件数据: 36330
数据来源: 裁判文书网
下载链接: https://pan.baidu.com/s/16fBSpfJSididpPT43ew6fg?pwd=mm8r
本文声明: 科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p>数据整理自<a href="https://textdata.cn/blog/2023-05-07-china-law-judgment-documents-datasets/">数据集 | 中国裁判文书网(2010-2021)</a></p>
<br>
<h3 id="12-声明">1.2 声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<br>
<h3 id="13-相关文献">1.3 相关文献</h3>
<p>上市公司仲裁数据可用于衡量上市公司法律风险等，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]冯延超,梁莱歆.上市公司法律风险、审计收费及非标准审计意见——来自中国上市公司的经验证据[J].审计研究,2010(03):75-81.
[2]祝继高.会计稳健性与债权人利益保护——基于银行与上市公司关于贷款的法律诉讼的研究[J].会计研究,2011(05):50-57+96.
[3]辛宇,黄欣怡,纪蓓蓓.投资者保护公益组织与股东诉讼在中国的实践——基于中证投服证券支持诉讼的多案例研究[J].管理世界,2020,36(01):69-87+235.
</code></pre></div><br>
<br>
<h3 id="14-字段">1.4 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> -  公告日期
 -  股票代码
 -  股票简称
 -  涉案类型
 -  原告被告
 -  案件案由
 -  涉案金额
 -  判决情况
 -  执行情况
 -  货币种类
</code></pre></div><p><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;上市公司仲裁数据2000-2021.xlsx&#39;</span><span class="p">)</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="22-记录数">2.2 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">36330
</code></pre></div><br>
<h3 id="23-公司数">2.3 公司数</h3>
<p>涉案的上市公司数量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2251
</code></pre></div><br>
<h3 id="2-4-覆盖日期">2. 4 覆盖日期</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2000-01-26 00:00:00
2021-09-28 00:00:00
</code></pre></div><br>
<h3 id="25-字段缺失率">2.5 字段&amp;缺失率</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">col</span><span class="p">,</span> <span class="n">ratio</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">公告日期 0.0
股票代码 0.0
股票简称 2.7525461051472613e-05
涉案类型 0.0002202036884117809
原告被告 0.001568951279933939
案件案由 0.00013762730525736306
涉案金额 0.00016515276630883568
判决情况 0.8911643270024773
执行情况 0.740765207817231
货币种类 0.0
</code></pre></div><br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）</title>
      <link>https://textdata.cn/blog/2023-12-29-china-area-dataset/</link>
      <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-29-china-area-dataset/</guid>
      <description>&lt;p&gt;最近分享的数据集一般都含有地址信息，这就很有必要寻找中国区划数据集， 来帮助我们更好的清洗地址数据。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一数据集概况&#34;&gt;一、数据集概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据来源:  中华人民共和国国家统计局 
          https://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2023/

下载地址: ``https://github.com/adyliu/china_area`` 

数据量(2023年): 665552 

数据格式: csv.gz 或 sql.gz

级别:
   1级：省、直辖市、自治区
   2级：地级市
   3级：市辖区、县（旗）、县级市、自治县（自治旗）、特区、林区
   4级：镇、乡、民族乡、县辖区、街道
   5级：村、居委会
   
城乡分类 (1开头是城镇，2开头是乡村)
   111表示主城区；
   112表示城乡接合区；
   121表示镇中心区；
   122表示镇乡接合区；
   123表示特殊区域；
   210表示乡中心区；
   220表示村庄
   
   
code: 共12位(省2位，市2位，县2位，镇3位，村3位)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;按截图操作即可获取数据集&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-cover.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分省份2010-2024数据变化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/2010-2024.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;说明&#34;&gt;说明&lt;/h3&gt;
&lt;p&gt;科研用途展示， 如有问题， 加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;二读取数据&#34;&gt;二、读取数据&lt;/h2&gt;
&lt;p&gt;以 &lt;em&gt;&lt;strong&gt;area_code_2024.csv.gz&lt;/strong&gt;&lt;/em&gt; 为例， 解压后得到 &lt;em&gt;&lt;strong&gt;area_code_2024.csv&lt;/strong&gt;&lt;/em&gt;，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;area_code_2024.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#, names=[&amp;#39;name&amp;#39;, &amp;#39;level&amp;#39;, &amp;#39;code&amp;#39;, &amp;#39;class&amp;#39;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;pcode&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;665552
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;三查看区划等级&#34;&gt;三、查看区划等级&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;区划级别&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt; 1级：省、直辖市、自治区
 2级：地级市
 3级：市辖区、县（旗）、县级市、自治县（自治旗）、特区、林区
 4级：镇、乡、民族乡、县辖区、街道
 5级：村、居委会
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;br&gt;
&lt;h3 id=&#34;31-省&#34;&gt;3.1 省&lt;/h3&gt;
&lt;p&gt;查看所有省名字&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;array([&amp;#39;北京市&amp;#39;, &amp;#39;天津市&amp;#39;, &amp;#39;河北省&amp;#39;, &amp;#39;山西省&amp;#39;, &amp;#39;内蒙古自治区&amp;#39;, &amp;#39;辽宁省&amp;#39;, &amp;#39;吉林省&amp;#39;, &amp;#39;黑龙江省&amp;#39;, &amp;#39;上海市&amp;#39;,
       &amp;#39;江苏省&amp;#39;, &amp;#39;浙江省&amp;#39;, &amp;#39;安徽省&amp;#39;, &amp;#39;福建省&amp;#39;, &amp;#39;江西省&amp;#39;, &amp;#39;山东省&amp;#39;, &amp;#39;河南省&amp;#39;, &amp;#39;湖北省&amp;#39;, &amp;#39;湖南省&amp;#39;,
       &amp;#39;广东省&amp;#39;, &amp;#39;广西壮族自治区&amp;#39;, &amp;#39;海南省&amp;#39;, &amp;#39;重庆市&amp;#39;, &amp;#39;四川省&amp;#39;, &amp;#39;贵州省&amp;#39;, &amp;#39;云南省&amp;#39;, &amp;#39;西藏自治区&amp;#39;,
       &amp;#39;陕西省&amp;#39;, &amp;#39;甘肃省&amp;#39;, &amp;#39;青海省&amp;#39;, &amp;#39;宁夏回族自治区&amp;#39;, &amp;#39;新疆维吾尔自治区&amp;#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有省的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;array([&amp;#39;11&amp;#39;, &amp;#39;12&amp;#39;, &amp;#39;13&amp;#39;, &amp;#39;14&amp;#39;, &amp;#39;15&amp;#39;, &amp;#39;21&amp;#39;, &amp;#39;22&amp;#39;, &amp;#39;23&amp;#39;, &amp;#39;31&amp;#39;, &amp;#39;32&amp;#39;, &amp;#39;33&amp;#39;,
       &amp;#39;34&amp;#39;, &amp;#39;35&amp;#39;, &amp;#39;36&amp;#39;, &amp;#39;37&amp;#39;, &amp;#39;41&amp;#39;, &amp;#39;42&amp;#39;, &amp;#39;43&amp;#39;, &amp;#39;44&amp;#39;, &amp;#39;45&amp;#39;, &amp;#39;46&amp;#39;, &amp;#39;50&amp;#39;,
       &amp;#39;51&amp;#39;, &amp;#39;52&amp;#39;, &amp;#39;53&amp;#39;, &amp;#39;54&amp;#39;, &amp;#39;61&amp;#39;, &amp;#39;62&amp;#39;, &amp;#39;63&amp;#39;, &amp;#39;64&amp;#39;, &amp;#39;65&amp;#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;省份名和区划代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;province_code_df = pd.DataFrame(
    {&amp;#39;province&amp;#39;: df[df[&amp;#39;level&amp;#39;]==1][&amp;#39;name&amp;#39;].values,
    &amp;#39;code&amp;#39;:df[df[&amp;#39;level&amp;#39;]==1][&amp;#39;code&amp;#39;].astype(str).str[:2].values}
)

province_code_df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;32-市&#34;&gt;3.2 市&lt;/h3&gt;
&lt;p&gt;code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有市的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;city_code_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
     &lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;city_code_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/04-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;33-县&#34;&gt;3.3 县&lt;/h3&gt;
&lt;p&gt;code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有县的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;county_code_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;county&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
     &lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;county_code_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/05-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;34-镇&#34;&gt;3.4 镇&lt;/h3&gt;
&lt;p&gt;code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有镇的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;zhen_code_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;zhen&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
     &lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;zhen_code_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/06-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;35-村&#34;&gt;3.5 村&lt;/h3&gt;
&lt;p&gt;code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有镇的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;village_code_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;village&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
     &lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;level&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;village_code_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/07-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四-城乡分类&#34;&gt;四、 城乡分类&lt;/h2&gt;
&lt;p&gt;城乡分类 (1开头是城镇，2开头是乡村)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;111表示主城区；&lt;/li&gt;
&lt;li&gt;112表示城乡接合区；&lt;/li&gt;
&lt;li&gt;121表示镇中心区；&lt;/li&gt;
&lt;li&gt;122表示镇乡接合区；&lt;/li&gt;
&lt;li&gt;123表示特殊区域；&lt;/li&gt;
&lt;li&gt;210表示乡中心区；&lt;/li&gt;
&lt;li&gt;220表示村庄&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;查看所有的城镇&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#category以1为开头，即城镇&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;startswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/08-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;查看所有的镇中心区&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;121&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/09-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;相关内容&#34;&gt;相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-29-china-area-division-change/&#34;&gt;&lt;strong&gt;中国行政区划代码历史沿革数据库&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/10-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;b&gt;
&lt;b&gt;
</description>
      <content:encoded><![CDATA[<p>最近分享的数据集一般都含有地址信息，这就很有必要寻找中国区划数据集， 来帮助我们更好的清洗地址数据。</p>
<p><br><br></p>
<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源:  中华人民共和国国家统计局 
          https://www.stats.gov.cn/sj/tjbz/tjyqhdmhcxhfdm/2023/

下载地址: ``https://github.com/adyliu/china_area`` 

数据量(2023年): 665552 

数据格式: csv.gz 或 sql.gz

级别:
   1级：省、直辖市、自治区
   2级：地级市
   3级：市辖区、县（旗）、县级市、自治县（自治旗）、特区、林区
   4级：镇、乡、民族乡、县辖区、街道
   5级：村、居委会
   
城乡分类 (1开头是城镇，2开头是乡村)
   111表示主城区；
   112表示城乡接合区；
   121表示镇中心区；
   122表示镇乡接合区；
   123表示特殊区域；
   210表示乡中心区；
   220表示村庄
   
   
code: 共12位(省2位，市2位，县2位，镇3位，村3位)
</code></pre></div><br>
<p>按截图操作即可获取数据集</p>
<p><img loading="lazy" src="img/01-cover.png" alt=""  />
</p>
<p><strong>分省份2010-2024数据变化</strong></p>
<p><img loading="lazy" src="img/2010-2024.png" alt=""  />
</p>
<br>
<h3 id="说明">说明</h3>
<p>科研用途展示， 如有问题， 加微信372335839，备注「姓名-学校-专业」</p>
<br>
<h2 id="二读取数据">二、读取数据</h2>
<p>以 <em><strong>area_code_2024.csv.gz</strong></em> 为例， 解压后得到 <em><strong>area_code_2024.csv</strong></em>，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;area_code_2024.csv&#39;</span><span class="p">,</span> <span class="n">header</span><span class="o">=</span><span class="kc">None</span><span class="p">)</span><span class="c1">#, names=[&#39;name&#39;, &#39;level&#39;, &#39;code&#39;, &#39;class&#39;]</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">,</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;level&#39;</span><span class="p">,</span> <span class="s1">&#39;pcode&#39;</span><span class="p">,</span> <span class="s1">&#39;category&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">665552
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<h2 id="三查看区划等级">三、查看区划等级</h2>
<p><strong>区划级别</strong>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> 1级：省、直辖市、自治区
 2级：地级市
 3级：市辖区、县（旗）、县级市、自治县（自治旗）、特区、林区
 4级：镇、乡、民族乡、县辖区、街道
 5级：村、居委会
</code></pre></div>  <br>
<h3 id="31-省">3.1 省</h3>
<p>查看所有省名字</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([&#39;北京市&#39;, &#39;天津市&#39;, &#39;河北省&#39;, &#39;山西省&#39;, &#39;内蒙古自治区&#39;, &#39;辽宁省&#39;, &#39;吉林省&#39;, &#39;黑龙江省&#39;, &#39;上海市&#39;,
       &#39;江苏省&#39;, &#39;浙江省&#39;, &#39;安徽省&#39;, &#39;福建省&#39;, &#39;江西省&#39;, &#39;山东省&#39;, &#39;河南省&#39;, &#39;湖北省&#39;, &#39;湖南省&#39;,
       &#39;广东省&#39;, &#39;广西壮族自治区&#39;, &#39;海南省&#39;, &#39;重庆市&#39;, &#39;四川省&#39;, &#39;贵州省&#39;, &#39;云南省&#39;, &#39;西藏自治区&#39;,
       &#39;陕西省&#39;, &#39;甘肃省&#39;, &#39;青海省&#39;, &#39;宁夏回族自治区&#39;, &#39;新疆维吾尔自治区&#39;], dtype=object)
</code></pre></div><p>code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有省的代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">][</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="n">values</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([&#39;11&#39;, &#39;12&#39;, &#39;13&#39;, &#39;14&#39;, &#39;15&#39;, &#39;21&#39;, &#39;22&#39;, &#39;23&#39;, &#39;31&#39;, &#39;32&#39;, &#39;33&#39;,
       &#39;34&#39;, &#39;35&#39;, &#39;36&#39;, &#39;37&#39;, &#39;41&#39;, &#39;42&#39;, &#39;43&#39;, &#39;44&#39;, &#39;45&#39;, &#39;46&#39;, &#39;50&#39;,
       &#39;51&#39;, &#39;52&#39;, &#39;53&#39;, &#39;54&#39;, &#39;61&#39;, &#39;62&#39;, &#39;63&#39;, &#39;64&#39;, &#39;65&#39;], dtype=object)
</code></pre></div><br>
<p>省份名和区划代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">province_code_df = pd.DataFrame(
    {&#39;province&#39;: df[df[&#39;level&#39;]==1][&#39;name&#39;].values,
    &#39;code&#39;:df[df[&#39;level&#39;]==1][&#39;code&#39;].astype(str).str[:2].values}
)

province_code_df
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="32-市">3.2 市</h3>
<p>code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有市的代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">city_code_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>
    <span class="p">{</span><span class="s1">&#39;city&#39;</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">2</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
     <span class="s1">&#39;code&#39;</span><span class="p">:</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">2</span><span class="p">][</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">}</span>
<span class="p">)</span>

<span class="n">city_code_df</span>
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<br>
<h3 id="33-县">3.3 县</h3>
<p>code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有县的代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">county_code_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>
    <span class="p">{</span><span class="s1">&#39;county&#39;</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">3</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
     <span class="s1">&#39;code&#39;</span><span class="p">:</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">3</span><span class="p">][</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="p">[:</span><span class="mi">6</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">}</span>
<span class="p">)</span>

<span class="n">county_code_df</span>
</code></pre></div><p><img loading="lazy" src="img/05-df.png" alt=""  />
</p>
<br>
<h3 id="34-镇">3.4 镇</h3>
<p>code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有镇的代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">zhen_code_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>
    <span class="p">{</span><span class="s1">&#39;zhen&#39;</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">4</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
     <span class="s1">&#39;code&#39;</span><span class="p">:</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">4</span><span class="p">][</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="p">[:</span><span class="mi">9</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">}</span>
<span class="p">)</span>

<span class="n">zhen_code_df</span>
</code></pre></div><p><img loading="lazy" src="img/06-df.png" alt=""  />
</p>
<br>
<h3 id="35-村">3.5 村</h3>
<p>code: 共12位(省2位，市2位，县2位，镇3位，村3位), 查看所有镇的代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">village_code_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span>
    <span class="p">{</span><span class="s1">&#39;village&#39;</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">5</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">,</span>
     <span class="s1">&#39;code&#39;</span><span class="p">:</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;level&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">5</span><span class="p">][</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="p">[:</span><span class="mi">12</span><span class="p">]</span><span class="o">.</span><span class="n">values</span><span class="p">}</span>
<span class="p">)</span>

<span class="n">village_code_df</span>
</code></pre></div><p><img loading="lazy" src="img/07-df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四-城乡分类">四、 城乡分类</h2>
<p>城乡分类 (1开头是城镇，2开头是乡村)</p>
<ul>
<li>111表示主城区；</li>
<li>112表示城乡接合区；</li>
<li>121表示镇中心区；</li>
<li>122表示镇乡接合区；</li>
<li>123表示特殊区域；</li>
<li>210表示乡中心区；</li>
<li>220表示村庄</li>
</ul>
<p>查看所有的城镇</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#category以1为开头，即城镇</span>
<span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;category&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;1&#39;</span><span class="p">)]</span>
</code></pre></div><p><img loading="lazy" src="img/08-df.png" alt=""  />
</p>
<br>
<p>查看所有的镇中心区</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;category&#39;</span><span class="p">]</span><span class="o">==</span><span class="mi">121</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/09-df.png" alt=""  />
</p>
<br>
<br>
<h2 id="相关内容">相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-29-china-area-division-change/"><strong>中国行政区划代码历史沿革数据库</strong></a></li>
</ul>
<p><br><br></p>
<p><img loading="lazy" src="img/10-df.png" alt=""  />
</p>
<b>
<b>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 行政区划代码历史沿革数据集</title>
      <link>https://textdata.cn/blog/2023-12-29-china-area-division-change/</link>
      <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-29-china-area-division-change/</guid>
      <description>&lt;p&gt;前一期分享了 [数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）]((&lt;a href=&#34;https://textdata.cn/blog/2023-12-29-china-area-dataset/&#34;&gt;https://textdata.cn/blog/2023-12-29-china-area-dataset/&lt;/a&gt;) ，今天再分享一个行政区划数据库。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一概况&#34;&gt;一、概况&lt;/h2&gt;
&lt;p&gt;整理行政区划的历史沿革，包括拆分合并、名称变化、隶属变化、级别变化等变更情况。&lt;/p&gt;
&lt;p&gt;可根据身份证号前 6 位查询持证人所在地：出生或初次申领时的所在地，以及与之对应的当今的所在地。因我国1984年开始制发居民身份证、身份证号中的行政区划代码精确到县，故目前只整理到县级及以上、1984 年及以后。&lt;/p&gt;
&lt;p&gt;数据现已更新到 2022 年底。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;按截图操作即可获取数据集&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-cover.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二实验代码&#34;&gt;二、实验代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#代码文件放在 division-changes文件夹内&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;translate&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 正向查询（起始年份 &amp;lt; 目标年份）&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;512323&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1984&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 返回 [&amp;#34;500119&amp;#34;]&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 1984年的四川省涪陵地区南川县&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 对应于2018年的重庆市南川区&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;430404&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 返回 [&amp;#34;430407&amp;#34;, &amp;#34;430408&amp;#34;]&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 2000年的湖南省衡阳市城北区&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 对应于2018年的湖南省衡阳市石鼓区、蒸湘区&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 反向查询（起始年份 &amp;gt; 目标年份）&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;translate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;110102&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2010&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 返回 [&amp;#39;110102&amp;#39;, &amp;#39;110104&amp;#39;]&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 2010年的北京市西城区&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 对应于2000年的北京市西城区、宣武区&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;三相关内容&#34;&gt;三、相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）]((&lt;a href=&#34;https://textdata.cn/blog/2023-12-29-china-area-dataset/&#34;&gt;https://textdata.cn/blog/2023-12-29-china-area-dataset/&lt;/a&gt;)
&lt;b&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;b&gt;
</description>
      <content:encoded><![CDATA[<p>前一期分享了 [数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）]((<a href="https://textdata.cn/blog/2023-12-29-china-area-dataset/">https://textdata.cn/blog/2023-12-29-china-area-dataset/</a>) ，今天再分享一个行政区划数据库。</p>
<p><br><br></p>
<h2 id="一概况">一、概况</h2>
<p>整理行政区划的历史沿革，包括拆分合并、名称变化、隶属变化、级别变化等变更情况。</p>
<p>可根据身份证号前 6 位查询持证人所在地：出生或初次申领时的所在地，以及与之对应的当今的所在地。因我国1984年开始制发居民身份证、身份证号中的行政区划代码精确到县，故目前只整理到县级及以上、1984 年及以后。</p>
<p>数据现已更新到 2022 年底。</p>
<br>
<p>按截图操作即可获取数据集</p>
<p><img loading="lazy" src="img/01-cover.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二实验代码">二、实验代码</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#代码文件放在 division-changes文件夹内</span>

<span class="kn">from</span> <span class="nn">translate</span> <span class="kn">import</span> <span class="n">translate</span>


<span class="c1"># 正向查询（起始年份 &lt; 目标年份）</span>

<span class="n">translate</span><span class="p">(</span><span class="s2">&#34;512323&#34;</span><span class="p">,</span> <span class="mi">1984</span><span class="p">,</span> <span class="mi">2018</span><span class="p">)</span> <span class="c1"># 返回 [&#34;500119&#34;]</span>
    <span class="c1"># 1984年的四川省涪陵地区南川县</span>
    <span class="c1"># 对应于2018年的重庆市南川区</span>

<span class="n">translate</span><span class="p">(</span><span class="s2">&#34;430404&#34;</span><span class="p">,</span> <span class="mi">2000</span><span class="p">,</span> <span class="mi">2018</span><span class="p">)</span> <span class="c1"># 返回 [&#34;430407&#34;, &#34;430408&#34;]</span>
    <span class="c1"># 2000年的湖南省衡阳市城北区</span>
    <span class="c1"># 对应于2018年的湖南省衡阳市石鼓区、蒸湘区</span>

<span class="c1"># 反向查询（起始年份 &gt; 目标年份）</span>

<span class="n">translate</span><span class="p">(</span><span class="s2">&#34;110102&#34;</span><span class="p">,</span> <span class="mi">2010</span><span class="p">,</span> <span class="mi">2000</span><span class="p">)</span> <span class="c1"># 返回 [&#39;110102&#39;, &#39;110104&#39;]</span>
    <span class="c1"># 2010年的北京市西城区</span>
    <span class="c1"># 对应于2000年的北京市西城区、宣武区</span>
</code></pre></div><br>
<br>
<h2 id="三相关内容">三、相关内容</h2>
<ul>
<li>[数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）]((<a href="https://textdata.cn/blog/2023-12-29-china-area-dataset/">https://textdata.cn/blog/2023-12-29-china-area-dataset/</a>)
<b></li>
</ul>
<b>
]]></content:encoded>
    </item>
    
    <item>
      <title>可视化 | 人民日报语料反映七十年文化演变</title>
      <link>https://textdata.cn/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/</link>
      <pubDate>Thu, 28 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-28-visualize-the-culture-change-using-people-daily-dataset/</guid>
      <description>使用人民日报1946-2023年之间的新闻数据，通过语义距离刻画文化的变迁。</description>
      <content:encoded><![CDATA[<h2 id="一引言">一、引言</h2>
<p>社会文化是一个不断演变的复杂系统，受到历史、科技、经济和社会变革等多种因素的影响。随着时代的推移，人们的语言使用和文化认知也经历着变迁，反映着社会的发展脉络。在这个背景下，使用Word2Vec等词嵌入技术来研究社会文化变迁和刻板印象的重要性日益凸显。</p>
<p>Word2Vec作为一种词向量表示方法，通过将词汇映射到高维空间中的向量，有效地捕捉了词语之间的语义关系。这使得我们能够以全新的方式理解语言的演变和文化认知的转变。通过对比不同时期的Word2Vec模型，我们可以深入挖掘语言的时代特征，捕捉到文化观念、价值观念以及社会角色的演变。</p>
<p>研究社会文化变迁和刻板印象，不仅有助于解构历史时刻下的社会结构和文化动态，还能为我们提供深刻的洞察力，揭示出社会变迁中潜在的驱动力和趋势。这种研究有助于建构更为全面、客观的历史记忆，帮助我们更好地理解人类行为背后的深层次原因。</p>
<p><br><br></p>
<h2 id="二训练模型">二、训练模型</h2>
<h3 id="21-获取数据">2.1 获取数据</h3>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">新闻数据集 | 含 人民日报/经济日报/光明日报 等数十家媒体(2024.05)</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">文本分析库cntext2.x获取方式&amp;使用手册</a></li>
</ul>
<br>
<h3 id="22--构造语料">2.2  构造语料</h3>
<p>本使用的 <em><strong>rmrb.csv.gz</strong></em> 对该数据集感兴趣的同学，可点击查看  <a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">新闻数据集 | 含 人民日报/经济日报/光明日报 等数十家媒体(2024.05)</a>  。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#读取人民日报rmrb.csv.gz，含1946-2024.05.24全部新闻文本</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;人民日报/人民日报.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>

<span class="c1">#每5年构造一个语料txt文件</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">freq_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;5Y&#39;</span><span class="p">)):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">date</span><span class="p">)</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;corpus/</span><span class="si">{</span><span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="si">}</span><span class="s1">.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">text_series</span> <span class="o">=</span> <span class="n">freq_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span>
        <span class="n">text_series</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">text_series</span><span class="o">.</span><span class="n">tolist</span><span class="p">()))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1946-12-31 00:00:00
1951-12-31 00:00:00
1956-12-31 00:00:00
1961-12-31 00:00:00
1966-12-31 00:00:00
1971-12-31 00:00:00
1976-12-31 00:00:00
1981-12-31 00:00:00
1986-12-31 00:00:00
1991-12-31 00:00:00
1996-12-31 00:00:00
2001-12-31 00:00:00
2006-12-31 00:00:00
2011-12-31 00:00:00
2016-12-31 00:00:00
2021-12-31 00:00:00
2026-12-31 00:00:00
</code></pre></div><p><img loading="lazy" src="img/01-corpus.png" alt=""  />
</p>
<p>语料txt命名规则， 实际上每个 <em><strong>year.txt</strong></em> 是存储了 <em><strong>year-5</strong></em>  ~  <em><strong>year</strong></em> 期间的新闻数据。</p>
<p>1946.txt内实际上只存储了1946.5.15 ~ 1946.12.31之间半年多的数据， 由于数据量太小，后续训练出的word2vec模型，其语义大概率不准。</p>
<p>2006.txt存储了 <strong>2002.1.1. ~ 2006.12.31</strong> 之间所有的数据</p>
<p>而2026.txt则存储了 <strong>2022.1.1 ~ 2026.12.31</strong> 之间所有的数据</p>
<br>
<h3 id="23-训练word2vec">2.3 训练word2vec</h3>
<h3 id="231-配置环境">2.3.1 配置环境</h3>
<p>使用 <strong>cntext2.1.2</strong>，未公开，需微信大邓 372335839 购买获取。 安装方法，将 <strong>cntext-2.1.2-py3-none-any.whl</strong> 放置于桌面， 打开命令行 <em><strong>cmd</strong></em> （mac是terminal), 依次执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop
pip3 install cntext-2.1.2-py3-none-any.whl
</code></pre></div><blockquote>
<p><strong>cntext2.1.0</strong>    100元，已购买cntext2.0.0可免费更新。</p>
</blockquote>
<br>
<h3 id="232-开始训练">2.3.2 开始训练</h3>
<p>训练代码比较简单，已经封装到 <strong>cntext2.1.2</strong>， 只需几行代码即可。</p>
<p>训练环境win11， 内存126G，大家回去可以试试16G、32G，应该也能跑通。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">glob</span>

<span class="c1">#获取corpus文件夹内的所有语料txt文件的文件路径</span>
<span class="n">corpus_files</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;corpus/*.txt&#39;</span><span class="p">))</span>
<span class="k">for</span> <span class="n">corpus_file</span> <span class="ow">in</span> <span class="n">corpus_files</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">corpus_file</span><span class="p">)</span>
    <span class="n">w2v_model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2VModel</span><span class="p">(</span><span class="n">corpus_file</span><span class="o">=</span><span class="n">corpus_file</span><span class="p">,</span> 
                            <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
    <span class="n">w2v_model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">window_size</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> 
                    <span class="n">vector_size</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">corpus/1946.txt

Start Preprocessing Corpus...
Start Training! This may take a while. Please be patient...

Training word2vec model took 201 seconds

Note: The Word2Vec model has been saved to output/Word2Vec


......
......

corpus/2026.txt

Start Preprocessing Corpus...
Start Training! This may take a while. Please be patient...

Training word2vec model took 525 seconds

Note: The Word2Vec model has been saved to output/Word2Vec

</code></pre></div><p><img loading="lazy" src="img/02-word2vec.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三检查模型">三、检查模型</h2>
<p>现在我们要检查模型， 为了方便，我就随机抽查 1946/1981/2001/2026， 查看这四个模型关于【工业】的近义词，看模型语义捕捉的准不准。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">mfiles</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;output/Word2Vec/1946.200.6.bin&#39;</span><span class="p">,</span>
          <span class="s1">&#39;output/Word2Vec/1981.200.6.bin&#39;</span><span class="p">,</span>
          <span class="s1">&#39;output/Word2Vec/2001.200.6.bin&#39;</span><span class="p">,</span>
          <span class="s1">&#39;output/Word2Vec/2026.200.6.bin&#39;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">mfile</span> <span class="ow">in</span> <span class="n">mfiles</span><span class="p">:</span>
    <span class="n">w2v_model</span>  <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="n">mfile</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">mfile</span><span class="p">)</span>
    <span class="n">word_scores</span> <span class="o">=</span> <span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar</span><span class="p">([</span><span class="s1">&#39;工业&#39;</span><span class="p">],</span> <span class="n">topn</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">word</span><span class="p">,</span> <span class="n">score</span> <span class="ow">in</span> <span class="n">word_scores</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">word</span><span class="p">,</span> <span class="n">score</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">output/Word2Vec/1946.200.6.bin
[(&#39;物价&#39;, 0.9494231343269348),
 (&#39;市场&#39;, 0.9431201815605164),
 (&#39;对法&#39;, 0.937946081161499),
 (&#39;商业&#39;, 0.931341290473938),
 (&#39;投资&#39;, 0.9277867674827576),
 (&#39;目前&#39;, 0.9103350043296814),
 (&#39;农业&#39;, 0.9047650694847107),
 (&#39;预算&#39;, 0.8974550366401672),
 (&#39;计划&#39;, 0.8954270482063293),
 (&#39;贸易&#39;, 0.8907712697982788),
 (&#39;工商业&#39;, 0.8907474279403687),
 (&#39;物资&#39;, 0.8891386389732361),
 (&#39;重工业&#39;, 0.8887518048286438),
 (&#39;估计&#39;, 0.8853818774223328),
 (&#39;企业&#39;, 0.8833411931991577),
 (&#39;规定&#39;, 0.8810412287712097),
 (&#39;新五年计划&#39;, 0.8747104406356812),
 (&#39;汽车厂&#39;, 0.8744568824768066),
 (&#39;赔款&#39;, 0.8743201494216919),
 (&#39;公司&#39;, 0.8725109100341797)]
 
 
 output/Word2Vec/1981.200.6.bin
 [(&#39;工业发展&#39;, 0.7668374180793762),
 (&#39;轻工业&#39;, 0.7516288161277771),
 (&#39;建筑业&#39;, 0.7424570918083191),
 (&#39;手工业&#39;, 0.7337162494659424),
 (&#39;重工业&#39;, 0.7331458330154419),
 (&#39;化学工业&#39;, 0.7137069702148438),
 (&#39;工业部门&#39;, 0.7033809423446655),
 (&#39;基础工业&#39;, 0.6979346871376038),
 (&#39;钢铁工业&#39;, 0.6970150470733643),
 (&#39;中小企业&#39;, 0.6947773098945618),
 (&#39;电子工业&#39;, 0.6943748593330383),
 (&#39;运输业&#39;, 0.6904694437980652),
 (&#39;造船&#39;, 0.6898190975189209),
 (&#39;加工工业&#39;, 0.6891008019447327),
 (&#39;工业生产&#39;, 0.6863811612129211),
 (&#39;大型企业&#39;, 0.6822050213813782),
 (&#39;行业&#39;, 0.6812164783477783),
 (&#39;新兴工业&#39;, 0.6808343529701233),
 (&#39;机械工业&#39;, 0.6797270178794861),
 (&#39;民用工业&#39;, 0.6783092021942139)]
 
 
 output/Word2Vec/2001.200.6.bin
 [(&#39;工业发展&#39;, 0.7881254553794861),
 (&#39;纺织&#39;, 0.749681830406189),
 (&#39;重工业&#39;, 0.7422634959220886),
 (&#39;制造业&#39;, 0.7263922095298767),
 (&#39;产业&#39;, 0.720117449760437),
 (&#39;汽车工业&#39;, 0.717221736907959),
 (&#39;军工&#39;, 0.7118045687675476),
 (&#39;工业部门&#39;, 0.7075888514518738),
 (&#39;钢铁汽车&#39;, 0.6994239091873169),
 (&#39;化工&#39;, 0.6939695477485657),
 (&#39;化学工业&#39;, 0.6878121495246887),
 (&#39;支柱产业&#39;, 0.6853876709938049),
 (&#39;传统工业&#39;, 0.6830911636352539),
 (&#39;纺织业&#39;, 0.6762925386428833),
 (&#39;轻工业&#39;, 0.6752256155014038),
 (&#39;传统产业&#39;, 0.6697835922241211),
 (&#39;冶金&#39;, 0.6670747995376587),
 (&#39;高科技产业&#39;, 0.666153073310852),
 (&#39;石油化工&#39;, 0.6655437350273132),
 (&#39;机械工业&#39;, 0.6599630117416382)]
 
 
 output/Word2Vec/2026.200.6.bin
 [(&#39;新材料&#39;, 0.7669156193733215),
 (&#39;冶金&#39;, 0.7581453323364258),
 (&#39;化工&#39;, 0.7405549883842468),
 (&#39;高端装备&#39;, 0.7401999235153198),
 (&#39;装备制造&#39;, 0.7394130229949951),
 (&#39;石化&#39;, 0.7376166582107544),
 (&#39;制造业&#39;, 0.711894154548645),
 (&#39;半导体&#39;, 0.7055253386497498),
 (&#39;制造&#39;, 0.7007594108581543),
 (&#39;能源&#39;, 0.6951915621757507),
 (&#39;智能制造&#39;, 0.6938720941543579),
 (&#39;生物技术&#39;, 0.6936888694763184),
 (&#39;矿业&#39;, 0.6906037330627441),
 (&#39;核技术应用&#39;, 0.6892902255058289),
 (&#39;新一代信息技术&#39;, 0.6885871887207031),
 (&#39;精细化工&#39;, 0.6876311898231506),
 (&#39;智能装备&#39;, 0.6843942999839783),
 (&#39;石油化工&#39;, 0.6837282776832581),
 (&#39;先进材料&#39;, 0.6828972101211548),
 (&#39;风能&#39;, 0.6827014684677124)]
</code></pre></div><p>1946因为数据量较少，语义捕捉的没有后面三个准，但也大差不差的。  后面的分析中，我们就都使用对齐算，对word2vec模型进行语义对齐。</p>
<p><br><br></p>
<h2 id="四对齐模型">四、对齐模型</h2>
<h3 id="41--为什么要进行对齐">4.1  为什么要进行对齐?</h3>
<p>Word2Vec是一种词嵌入（word embedding）算法，它将词语映射到高维空间中的向量，使得语义相近的词在该空间中距离较近。然而，不同年份的Word2Vec模型在训练时可能受到不同的语料库、训练参数等因素的影响，导致它们的向量空间之间存在一定的差异，所以不能直接拿不同年年份模型直接进行语义比较。</p>
<p><strong>Procrustes对齐算法目的是通过线性变换来使两个向量空间尽可能地对齐，以便进行比较</strong>。这个过程涉及到对两个向量空间进行旋转、缩放和平移等变换，使它们在某种意义上尽量一致。</p>
<p>具体原因包括：</p>
<ol>
<li><strong>词汇漂移（Lexical Drift）：</strong> 随着时间的推移，词汇的含义和使用可能发生变化，导致不同年份的语料库中的词语存在一定的漂移。Procrustes分析可以在一定程度上对齐这种漂移。</li>
<li><strong>训练参数不同：</strong> Word2Vec模型的训练参数，如窗口大小、迭代次数等，可能在不同年份有所不同，导致生成的向量空间差异较大。</li>
<li><strong>语料库的差异：</strong> 不同年份的语料库可能覆盖的主题、文体等存在差异，这也会影响词向量的学习结果。</li>
</ol>
<p>通过Procrustes对齐，可以在一定程度上解决这些问题，使得不同年份的Word2Vec模型在语义上更具可比性。这有助于在跨时间的语料库中进行一致的语义分析。</p>
<br>
<h3 id="42-对齐之后">4.2 对齐之后</h3>
<p>对齐后的Word2Vec模型进行的语义变迁研究：</p>
<ol>
<li><strong>词义演变：</strong> 比较不同年份相同词汇的词向量，观察其在向量空间中的位置变化，分析词义在语义空间中的演变趋势。</li>
<li><strong>语境变迁：</strong> 考察同一词语在不同年份的上下文中的变化，了解词语在不同语境下的语义演变情况。</li>
<li><strong>主题变迁：</strong> 通过对齐后的向量空间，分析不同年份语料库中词语的主题分布变化，探讨社会、文化因素对语言使用的影响。</li>
<li><strong>时代特征分析：</strong> 通过对比不同年份的模型，识别出每个时期在词向量空间中的独特特征，从而揭示时代背景对语义的影响。</li>
<li><strong>探索新兴词汇：</strong> 通过对比不同年份的模型，发现在语义空间中新兴词汇的出现和演变，了解新兴概念和文化趋势。</li>
</ol>
<p>总的来说，通过对齐Word2Vec模型，你可以更准确地比较不同年份的语料库，深入研究语义的演变和语言使用的变迁。这有助于揭示社会、文化、科技等方面的发展对语言表达的影响。</p>
<br>
<h3 id="43-对齐代码">4.3 对齐代码</h3>
<p>使用 <strong>cntext2.1.0</strong>，未公开，需微信大邓 372335839 购买获取。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="c1">#基准模型</span>
<span class="n">base_embed</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="s1">&#39;output/Word2Vec/2026.200.6.bin&#39;</span><span class="p">)</span>

<span class="c1">#将其他模型与基准模型对齐</span>
<span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">mfiles</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">other_embed</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">procrusted_w2v</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">procrustes_align</span><span class="p">(</span><span class="n">base_embed</span><span class="o">=</span><span class="n">base_embed</span><span class="p">,</span>
                                         <span class="n">other_embed</span><span class="o">=</span><span class="n">other_embed</span><span class="p">)</span>
    <span class="n">year</span><span class="o">=</span><span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">][:</span><span class="mi">4</span><span class="p">]</span>
    <span class="n">procrusted_w2v</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;output/Aligned_Word2Vec/</span><span class="si">{</span><span class="n">year</span><span class="si">}</span><span class="s1">.200.6.bin&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Loading word2vec model...
output/Word2Vec/1946.200.6.bin

Loading word2vec model...
16221 16221
16221 16221
output/Word2Vec/1951.200.6.bin

......
......
output/Word2Vec/2026.200.6.bin
Loading word2vec model...
14120 14120
14120 14120
</code></pre></div><p><img loading="lazy" src="img/03-align.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="五实验-文化变迁">五、实验-文化变迁</h2>
<p>这里我演示 两个对立词组分别与目标词组进行语义距离计算， 根据语义距离反应刻板印象态度偏见，其实这也反映了文化变迁。</p>
<h3 id="51-性别与成功">5.1 性别与成功</h3>
<p>男性、女性与成功之间的语义距离</p>
<p><strong>cntext2.1.2</strong> 内置了两种算法， 语义投影和语义距离，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">distance = distance(女, 成功) - distance(男, 成功)
</code></pre></div><p>如果distance趋近于0， 男女在成功概念上语义接近， 无明显刻板印象。</p>
<p>但是当distance明显大于0， 当人们聊到成功概念时，更容易联想到男性，而不是女性。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">glob</span>

<span class="n">gender_suceess_data</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;成功&#39;</span><span class="p">,</span> <span class="s1">&#39;成就&#39;</span><span class="p">,</span> <span class="s1">&#39;胜利&#39;</span><span class="p">]</span>
<span class="n">c_words1</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;女&#39;</span><span class="p">,</span> <span class="s1">&#39;女人&#39;</span><span class="p">,</span> <span class="s1">&#39;她&#39;</span><span class="p">,</span> <span class="s1">&#39;母亲&#39;</span><span class="p">,</span> <span class="s1">&#39;女儿&#39;</span><span class="p">,</span> <span class="s1">&#39;奶奶&#39;</span><span class="p">]</span>
<span class="n">c_words2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;男&#39;</span><span class="p">,</span> <span class="s1">&#39;男人&#39;</span><span class="p">,</span> <span class="s1">&#39;他&#39;</span><span class="p">,</span> <span class="s1">&#39;父亲&#39;</span><span class="p">,</span> <span class="s1">&#39;儿子&#39;</span><span class="p">,</span> <span class="s1">&#39;爷爷&#39;</span><span class="p">]</span>

<span class="n">mfiles</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;output/Aligned_Word2Vec/*.bin&#39;</span><span class="p">))</span>
<span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">mfiles</span><span class="p">:</span>
    <span class="n">w2v</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">mind</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">Text2Mind</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v</span><span class="o">.</span><span class="n">wv</span><span class="p">)</span>
    <span class="n">distance</span> <span class="o">=</span> <span class="n">mind</span><span class="o">.</span><span class="n">sematic_distance</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">words</span><span class="p">,</span> 
                                     <span class="n">c_words1</span><span class="o">=</span><span class="n">c_words1</span><span class="p">,</span> 
                                     <span class="n">c_words2</span><span class="o">=</span><span class="n">c_words2</span><span class="p">)</span>
    <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">][:</span><span class="mi">4</span><span class="p">]</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;distance&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">distance</span>
    <span class="n">gender_suceess_data</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
    

<span class="n">gender_success_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">gender_suceess_data</span><span class="p">)</span>
<span class="n">gender_success_df</span>
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>
<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>

<span class="n">gender_success_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">suptitle</span><span class="p">(</span><span class="s1">&#39;人民日报在「成就」概念的文化变迁&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;大于0表示社会更容易将成功与男性联系起来&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-gender.png" alt=""  />
</p>
<p>从图中可以看到， 新中国初期distance算法相对准确的刻画了那个时代的文化， 提到「成功概念」， 在「性别」联想区分度不大， 反映了那个时候宣传时候的中性， 立榜样考虑了性别的平衡。</p>
<p>即随着时间推移， 提到「成功概念」时，社会更容易将成功与「男性」联系起来。</p>
<p>从我的从小接受的教育， 在新中国初期， 宣传上很进步积极， <strong>妇女撑起半边天</strong> 是那个激情年代的口号，也因此时至今日中国也是世界上女性就业率最高的国家。</p>
<br>
<h3 id="52-性别与责任">5.2 性别与责任</h3>
<p>成就与男性有更高的关联， 背后是否意味着传统文化建构的社会要求男性承担远多于女性的责任。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">gender_responsibility_data</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">words</span> <span class="o">=</span>   <span class="p">[</span><span class="s1">&#39;责任&#39;</span><span class="p">,</span> <span class="s1">&#39;重担&#39;</span><span class="p">,</span> <span class="s1">&#39;担当&#39;</span><span class="p">]</span>
<span class="n">c_words1</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;女&#39;</span><span class="p">,</span> <span class="s1">&#39;女人&#39;</span><span class="p">,</span> <span class="s1">&#39;她&#39;</span><span class="p">,</span> <span class="s1">&#39;母亲&#39;</span><span class="p">,</span> <span class="s1">&#39;女儿&#39;</span><span class="p">,</span> <span class="s1">&#39;奶奶&#39;</span><span class="p">]</span>
<span class="n">c_words2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;男&#39;</span><span class="p">,</span> <span class="s1">&#39;男人&#39;</span><span class="p">,</span> <span class="s1">&#39;他&#39;</span><span class="p">,</span> <span class="s1">&#39;父亲&#39;</span><span class="p">,</span> <span class="s1">&#39;儿子&#39;</span><span class="p">,</span> <span class="s1">&#39;爷爷&#39;</span><span class="p">]</span>

<span class="n">mfiles</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;output/Aligned_Word2Vec/*.bin&#39;</span><span class="p">))</span>
<span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">mfiles</span><span class="p">:</span>
    <span class="n">w2v</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">mind</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">Text2Mind</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">w2v</span><span class="o">.</span><span class="n">wv</span><span class="p">)</span>
    <span class="n">projection</span> <span class="o">=</span> <span class="n">mind</span><span class="o">.</span><span class="n">sematic_projection</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">words</span><span class="p">,</span> 
                                         <span class="n">c_words1</span><span class="o">=</span><span class="n">c_words1</span><span class="p">,</span> 
                                         <span class="n">c_words2</span><span class="o">=</span><span class="n">c_words2</span><span class="p">)</span>
    <span class="n">distance</span> <span class="o">=</span> <span class="n">mind</span><span class="o">.</span><span class="n">sematic_distance</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="n">words</span><span class="p">,</span> 
                                     <span class="n">c_words1</span><span class="o">=</span><span class="n">c_words1</span><span class="p">,</span> 
                                     <span class="n">c_words2</span><span class="o">=</span><span class="n">c_words2</span><span class="p">)</span>
    <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">file</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">][:</span><span class="mi">4</span><span class="p">]</span>
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;distance&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">distance</span>
    <span class="n">gender_responsibility_data</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
    

<span class="n">gender_responsibility_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">gender_responsibility_data</span><span class="p">)</span>


<span class="n">gender_responsibility_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">suptitle</span><span class="p">(</span><span class="s1">&#39;人民日报在「责任」语义的文化变迁&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;大于0表示社会更容易将「责任」与男性联系起来&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-responsibility.png" alt=""  />
</p>
<p>从图中可以看出，在大多数年份， distance是大于0的，即 提到「责任」概念时，社会更容易联想到「男性」，而不是「女性」。</p>
<br>
<br>
<h2 id="五相关">五、相关</h2>
<h3 id="51-相关文献">5.1 相关文献</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J].南开管理评论:1-27.
[2]Hamilton, William L., Jure Leskovec, and Dan Jurafsky. &#34;Diachronic word embeddings reveal statistical laws of semantic change.&#34; arXiv preprint arXiv:1605.09096 (2016).
[3]Garg, Nikhil, Londa Schiebinger, Dan Jurafsky, and James Zou. &#34;Word embeddings quantify 100 years of gender and ethnic stereotypes.&#34; Proceedings of the National Academy of Sciences 115, no. 16 (2018): E3635-E3644.
[3]Aceves, Pedro, and James A. Evans. “Mobilizing conceptual spaces: How word embedding models can inform measurement and theory within organization science.” Organization Science (2023).
[4]Kozlowski, A.C., Taddy, M. and Evans, J.A., 2019. The geometry of culture: Analyzing the meanings of class through word embeddings. American Sociological Review, 84(5), pp.905-949.
</code></pre></div><br>
<h3 id="52-相关资料">5.2 相关资料</h3>
<ul>
<li><a href="https://textdata.cn/blog/2023-11-03-organization-science-with-word-embeddings/">OS2022 | 概念空间 | 词嵌入模型如何为组织科学中的测量和理论提供信息</a></li>
<li><a href="https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science/">词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总</a></li>
<li><a href="https://textdata.cn/blog/2022-04-09-literature-about-embeddings/">文献汇总 | 词嵌入 与 社会科学中的偏见(态度)</a></li>
<li><a href="https://textdata.cn/blog/2023-12-28-train-word2vec-using-renmin-gov-leader-board-dataset/">词向量  | 使用<strong>人民网领导留言板</strong>语料训练Word2Vec模型</a></li>
</ul>
<br>
<br>
<h2 id="六获取资料">六、获取资料</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">新闻数据集 | 含 人民日报/经济日报/光明日报 等120家媒体(2024.06)</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">文本分析库cntext2.x获取方式&amp;使用手册</a></li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>词向量  | 使用人民网领导留言板语料训练Word2Vec模型</title>
      <link>https://textdata.cn/blog/2023-12-28-train-word2vec-using-renmin-gov-leader-board-dataset/</link>
      <pubDate>Thu, 28 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-28-train-word2vec-using-renmin-gov-leader-board-dataset/</guid>
      <description>&lt;p&gt;本文使用 3.88G 语料训练得到词汇量近 150w 的 Word2Vec 模型，使用该模型，可以用于寻找近义词，扩展(构建)概念词典。 &lt;strong&gt;该Word2Vec模型文件可在文末免费下载&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一构建语料&#34;&gt;一、构建语料&lt;/h2&gt;
&lt;p&gt;使用 &lt;a href=&#34;https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/&#34;&gt;&lt;strong&gt;数据集 | 人民网地方领导留言板原始文本(2011-2023.12)&lt;/strong&gt;&lt;/a&gt; 来构建本文的语料。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2011-2019.csv.gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2020-2023.csv.gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;text_series1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;回复内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text_series1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text_series2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;回复内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text_series2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;renmin_board.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text_series1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tolist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text_series2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tolist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最终得到 3.88 G 的 &lt;strong&gt;renmin_board.txt&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二训练模型&#34;&gt;二、训练模型&lt;/h2&gt;
&lt;h3 id=&#34;21-配置cntext&#34;&gt;2.1 配置cntext&lt;/h3&gt;
&lt;p&gt;使用 cntext 2.0.0 或者 cntext 2.1.0 ， 已购买 cntext2.0.0 的同学可以找我更新至 2.1.0 ，微信372335839， 备注「姓名-学校-专业」。&lt;/p&gt;
&lt;p&gt;将 &lt;strong&gt;cntext-2.1.0-py3-none-any.whl&lt;/strong&gt; 放置于桌面， 打开 **命令行cmd **(苹果电脑terminal)，依次执行以下命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;desktop&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pip3&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cntext&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.1.0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;py3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;any&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;whl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22-训练word2vec&#34;&gt;2.2 训练Word2Vec&lt;/h3&gt;
&lt;p&gt;训练 word2vec 代码已封装 cntext2， 所以代码很简洁，只有三行代码。&lt;/p&gt;
&lt;p&gt;训练环境win11,  内存128G。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;W2vModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;corpus_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;renmin_board.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;chinese&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;train&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;renmin_board.txt

Start Preprocessing Corpus...
Start Training! This may take a while. Please be patient...

Training word2vec model took 12779 seconds

Note: The Word2Vec model has been saved to output/Word2Vec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 3.88G 的renmin_board.txt，训练了 12779 秒， 约 3.5 小时。在Python代码文件所在的文件夹内，出现了 output/Word2Vec 文件夹，打开可以看到训练好的模型， 可以看出模型文件的体量还是很大的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-word2vec.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三使用模型&#34;&gt;三、使用模型&lt;/h2&gt;
&lt;h3 id=&#34;31-读取模型&#34;&gt;3.1 读取模型&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_w2v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;output/Word2Vec/renmin_board.200.6.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Loading word2vec model...
&amp;lt;gensim.models.word2vec.Word2Vec at 0x2a11dfad0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;32-模型词汇量&#34;&gt;3.2 模型词汇量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#词汇量&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1499961
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;33-查看词表&#34;&gt;3.3 查看词表&lt;/h3&gt;
&lt;p&gt;因为词表有 1499961 个词， 为了方便，这里只显示前20个词&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;##词表带顺序的
list(w2v.wv.key_to_index.keys())[:20]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39; &amp;#39;,
 &amp;#39;\n&amp;#39;,
 &amp;#39;问题&amp;#39;,
 &amp;#39;进行&amp;#39;,
 &amp;#39;小区&amp;#39;,
 &amp;#39;工作&amp;#39;,
 &amp;#39;”&amp;#39;,
 &amp;#39;没有&amp;#39;,
 &amp;#39;情况&amp;#39;,
 &amp;#39;目前&amp;#39;,
 &amp;#39;反映&amp;#39;,
 &amp;#39;业主&amp;#39;,
 &amp;#39;项目&amp;#39;,
 &amp;#39;要求&amp;#39;,
 &amp;#39;“&amp;#39;,
 &amp;#39;公司&amp;#39;,
 &amp;#39;网友您好&amp;#39;,
 &amp;#39;现在&amp;#39;,
 &amp;#39;建设&amp;#39;,
 &amp;#39;反映问题&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;34-获取某词的向量&#34;&gt;3.4 获取某词的向量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#w2v.wv[&amp;#39;利民&amp;#39;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;利民&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;array([-0.72336054,  0.5448769 ,  0.02187554,  0.18723099,  0.10518928,
       -0.4829346 ,  1.2029709 ,  1.325142  ,  1.7153364 , -0.9134816 ,
        0.21033671, -0.05412149,  0.1750608 ,  0.36092624,  0.24550831,
        0.02644009,  0.95183885, -1.0317421 , -0.10972459, -2.5780423 ,
       -0.89232576, -1.043176  ,  0.72673726, -0.17512426, -0.24233247,
        0.2569658 , -1.0063888 ,  0.5180029 ,  0.83510065,  0.8907923 ,
       -0.24386375, -0.53083295, -1.5156878 , -0.9040948 ,  0.25330988,
       -0.79177266,  0.06866979,  0.6199285 ,  0.9562961 ,  3.6091647 ,
       -1.3558179 ,  1.4279033 , -0.6923549 ,  0.17637855,  0.6416902 ,
        0.8726301 , -0.8316238 ,  0.8974303 , -1.342718  ,  0.3960099 ,
        0.7404184 ,  0.41476634,  0.5397854 , -0.9964916 ,  0.72252625,
       -0.24338841, -1.1583921 , -0.8719721 , -0.1476895 ,  0.4893649 ,
        1.0152714 , -3.2469108 ,  0.61867106, -1.1033677 ,  0.7277995 ,
        0.68194056,  1.9562886 , -2.0847485 ,  1.5790684 ,  0.9881281 ,
       -1.6833613 ,  0.52788144,  0.81453127, -0.72605026,  0.67317885,
        0.4130878 ,  0.5682669 , -0.14777663,  0.6144105 , -0.6402672 ,
       -0.8752994 ,  1.6374044 , -0.66893923,  0.5865543 ,  0.6375472 ,
       -0.99829054, -1.0806116 ,  2.6740906 , -0.7968034 , -0.39872456,
       -2.0882657 ,  0.4091569 ,  0.44333985,  0.80311924, -0.02302606,
       -0.2762922 ,  0.172768  ,  2.2813802 , -0.39281502,  0.57268375,
        1.4626628 , -0.14473361,  0.5739576 ,  0.61773837, -0.18331125,
        1.2602748 ,  0.9424055 ,  1.5969577 ,  0.6106542 , -2.7610633 ,
       -1.1409078 , -1.7803516 , -0.3264908 ,  1.2968934 ,  0.7250817 ,
        0.0589628 ,  0.42458364, -0.3242822 , -2.6474693 ,  0.3660026 ,
        0.5749114 ,  0.1812738 ,  0.34291452, -0.20228535,  0.40417868,
        0.06284425,  0.7266579 ,  1.5118539 ,  2.0363107 , -1.1808697 ,
       -0.19834429, -1.105297  ,  0.7594476 , -0.90230256,  0.13537973,
        1.5452795 ,  1.3571783 ,  0.15807565, -1.0794616 ,  2.3592122 ,
        0.62628454, -0.61704504,  0.65674806, -0.91116625, -2.1521432 ,
       -0.08805666, -0.6956923 , -1.4443843 , -0.84095645,  0.64748996,
       -0.7432282 ,  1.7160741 ,  1.1697325 ,  1.0834908 , -1.0323627 ,
       -1.3480235 ,  1.004517  , -0.40515316,  0.38016117,  1.6717825 ,
       -0.40651798,  1.0373042 ,  0.24744533, -2.353417  ,  0.06758213,
        0.34440002,  0.8656946 ,  0.76431715, -1.7378451 ,  1.2329959 ,
       -1.4538856 ,  1.0956937 ,  0.6151345 ,  2.4905207 , -0.24415112,
       -0.23886327,  0.09834331,  0.00791643, -0.53527415,  0.7039957 ,
        0.83675224, -1.5712336 , -0.14135051,  0.34811664,  0.41304144,
        0.78504366, -0.13325912, -0.9898512 , -0.497319  , -0.32992417,
       -0.58120775,  0.29686695, -0.9618549 ,  0.39253774,  0.14620592,
       -0.45337242,  0.69179136,  0.1934781 , -2.0494404 ,  1.8545331 ],
      dtype=float32)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;需要注意，如果查询的词不存在于模型词表，则会出现报错。例如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;word = &amp;#39;这是一个不存在的词&amp;#39;
w2v.wv.get_vector(word)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
Cell In[130], line 2
      1 word = &amp;#39;这是一个不存在的词&amp;#39;
----&amp;gt; 2 w2v.wv.get_vector(word)

File /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/gensim/models/keyedvectors.py:446, in KeyedVectors.get_vector(self, key, norm)
    422 def get_vector(self, key, norm=False):
    423     &amp;#34;&amp;#34;&amp;#34;Get the key&amp;#39;s vector, as a 1D numpy array.
    424 
    425     Parameters
   (...)
    444 
    445     &amp;#34;&amp;#34;&amp;#34;
--&amp;gt; 446     index = self.get_index(key)
    447     if norm:
    448         self.fill_norms()

File /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/gensim/models/keyedvectors.py:420, in KeyedVectors.get_index(self, key, default)
    418     return default
    419 else:
--&amp;gt; 420     raise KeyError(f&amp;#34;Key &amp;#39;{key}&amp;#39; not present&amp;#34;)

KeyError: &amp;#34;Key &amp;#39;这是一个不存在的词&amp;#39; not present&amp;#34;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;35-查询近义词&#34;&gt;3.5 查询近义词&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;w2v.wv.most_similar(positive=None, topn=10)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;positive 待查的词语列表或者词向量&lt;/li&gt;
&lt;li&gt;topn 显示返回多少个近义词&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;351-使用词语列表查询&#34;&gt;3.5.1 使用词语列表查询&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;most_similar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;经济&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;建设&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;发展&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; 
                    &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[(&amp;#39;经济发展&amp;#39;, 0.7514141201972961),
 (&amp;#39;产业发展&amp;#39;, 0.6954267024993896),
 (&amp;#39;发展壮大&amp;#39;, 0.6707271337509155),
 (&amp;#39;社会发展&amp;#39;, 0.6637671589851379),
 (&amp;#39;发展重要&amp;#39;, 0.6603672504425049),
 (&amp;#39;城镇化发展&amp;#39;, 0.6574274301528931),
 (&amp;#39;城市发展&amp;#39;, 0.6558148264884949),
 (&amp;#39;高质量发展&amp;#39;, 0.6517276167869568),
 (&amp;#39;大力发展&amp;#39;, 0.6500106453895569),
 (&amp;#39;产业&amp;#39;, 0.6494895219802856),
 (&amp;#39;发展产业&amp;#39;, 0.6458864212036133),
 (&amp;#39;壮大&amp;#39;, 0.6379123330116272),
 (&amp;#39;发展带动&amp;#39;, 0.6357436776161194),
 (&amp;#39;未来发展&amp;#39;, 0.6351119875907898),
 (&amp;#39;第三产业&amp;#39;, 0.6345765590667725),
 (&amp;#39;经济增长&amp;#39;, 0.6329594850540161),
 (&amp;#39;改革开放&amp;#39;, 0.6297498345375061),
 (&amp;#39;融合发展&amp;#39;, 0.6290864944458008),
 (&amp;#39;长远发展&amp;#39;, 0.6279110908508301),
 (&amp;#39;经济繁荣&amp;#39;, 0.627375602722168)]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;352-使用词向量查询&#34;&gt;3.5.2 使用词向量查询&lt;/h3&gt;
&lt;p&gt;先构建一个函数concept_vector，该函数可以将多个词转化为一个向量。 遇到词语不在词表中的异常，也能正常运行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;concept_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;container&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zeros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;container&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;container&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  
  
&lt;span class=&#34;n&#34;&gt;word_vec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;concept_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;她&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;她们&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;母亲&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;奶奶&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;女性&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;女人&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#查找与word_vec近义词10个词&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;most_similar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word_vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                    &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[(&amp;#39;奶奶&amp;#39;, 0.9064152836799622),
 (&amp;#39;母亲&amp;#39;, 0.9003509879112244),
 (&amp;#39;爷爷&amp;#39;, 0.8559296131134033),
 (&amp;#39;婆婆&amp;#39;, 0.846263587474823),
 (&amp;#39;我妈&amp;#39;, 0.8314375877380371),
 (&amp;#39;老伴&amp;#39;, 0.8306034803390503),
 (&amp;#39;老父亲&amp;#39;, 0.8257972598075867),
 (&amp;#39;姥爷&amp;#39;, 0.8255906701087952),
 (&amp;#39;父亲&amp;#39;, 0.821728527545929),
 (&amp;#39;女孩&amp;#39;, 0.8210363984107971)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四-相关&#34;&gt;四、 相关&lt;/h2&gt;
&lt;h3 id=&#34;41-文献资料&#34;&gt;4.1 文献资料&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;郑石明, 兰雨潇, 黎枫. 网络公共舆论与政府回应的互动逻辑——基于新冠肺炎疫情期间“领导留言板”的数据分析[J]. 公共管理学报, 2021, 18 (03): 24-37+169.
王磊,易扬.公共卫生危机中的数字政府回应如何纾解网络负面舆情——基于人民网“领导留言板”回复情况的调查[J].公共管理学报,2022,19(04):65-78+169.
Lu, Liangdong, Jia Xu, and Jiuchang Wei. &amp;#34;Understanding the effects of the textual complexity on government communication: Insights from China’s online public service platform.&amp;#34; Telematics and Informatics 83 (2023): 102028.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;42-代码资料&#34;&gt;4.2 代码资料&lt;/h3&gt;
&lt;p&gt;想用 python 对 csv、xlsx 进行分析， 要学会尽量用 pandas 写代码。 以下是近期 pandas 的一些处理推文免费教程， 感兴趣的可以进去浏览浏览。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/&#34;&gt;&lt;strong&gt;代码 | 使用地方gov工作报告生成某类概念词频「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/&#34;&gt;&lt;strong&gt;代码 | 使用「新闻数据」构造概念词提及量「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/&#34;&gt;&lt;strong&gt;数据代码| 使用cctv新闻联播文稿构造「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2028-12-18-how-to-extract-data-from-patent-application-dataset/&#34;&gt;&lt;strong&gt;代码 | 使用3571w专利申请数据集构造「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/&#34;&gt;&lt;strong&gt;代码 | 使用「新闻数据」计算 「经济政策不确定性」指数&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science/&#34;&gt;词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-03-organization-science-with-word-embeddings/&#34;&gt;OS2022 | 概念空间 | 词嵌入模型如何为组织科学中的测量和理论提供信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/&#34;&gt;数据集 | 人民网地方领导留言板原始文本(2011-2023.12)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;声明&#34;&gt;声明&lt;/h2&gt;
&lt;p&gt;科研用途，仅供展示；如有任何问题，加微信372335839，备注「姓名-学校-专业」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p>本文使用 3.88G 语料训练得到词汇量近 150w 的 Word2Vec 模型，使用该模型，可以用于寻找近义词，扩展(构建)概念词典。 <strong>该Word2Vec模型文件可在文末免费下载</strong></p>
<p><br><br></p>
<h2 id="一构建语料">一、构建语料</h2>
<p>使用 <a href="https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/"><strong>数据集 | 人民网地方领导留言板原始文本(2011-2023.12)</strong></a> 来构建本文的语料。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;2011-2019.csv.gzip&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;2020-2023.csv.gzip&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>


<span class="n">text_series1</span> <span class="o">=</span> <span class="n">df1</span><span class="p">[</span><span class="s1">&#39;留言内容&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df1</span><span class="p">[</span><span class="s1">&#39;回复内容&#39;</span><span class="p">]</span>
<span class="n">text_series1</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">text_series2</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;留言内容&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;回复内容&#39;</span><span class="p">]</span>
<span class="n">text_series2</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;renmin_board.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">text_series1</span><span class="o">.</span><span class="n">tolist</span><span class="p">())</span> <span class="o">+</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">text_series2</span><span class="o">.</span><span class="n">tolist</span><span class="p">())</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><p>最终得到 3.88 G 的 <strong>renmin_board.txt</strong> 。</p>
<p><br><br></p>
<h2 id="二训练模型">二、训练模型</h2>
<h3 id="21-配置cntext">2.1 配置cntext</h3>
<p>使用 cntext 2.0.0 或者 cntext 2.1.0 ， 已购买 cntext2.0.0 的同学可以找我更新至 2.1.0 ，微信372335839， 备注「姓名-学校-专业」。</p>
<p>将 <strong>cntext-2.1.0-py3-none-any.whl</strong> 放置于桌面， 打开 **命令行cmd **(苹果电脑terminal)，依次执行以下命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">cd</span> <span class="n">desktop</span>
<span class="n">pip3</span> <span class="n">install</span> <span class="n">cntext</span><span class="o">-</span><span class="mf">2.1.0</span><span class="o">-</span><span class="n">py3</span><span class="o">-</span><span class="n">none</span><span class="o">-</span><span class="nb">any</span><span class="o">.</span><span class="n">whl</span>
</code></pre></div><br>
<h3 id="22-训练word2vec">2.2 训练Word2Vec</h3>
<p>训练 word2vec 代码已封装 cntext2， 所以代码很简洁，只有三行代码。</p>
<p>训练环境win11,  内存128G。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2vModel</span><span class="p">(</span><span class="n">corpus_file</span><span class="o">=</span><span class="s1">&#39;renmin_board.txt&#39;</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">window_size</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">vector_size</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">renmin_board.txt

Start Preprocessing Corpus...
Start Training! This may take a while. Please be patient...

Training word2vec model took 12779 seconds

Note: The Word2Vec model has been saved to output/Word2Vec
</code></pre></div><p>使用 3.88G 的renmin_board.txt，训练了 12779 秒， 约 3.5 小时。在Python代码文件所在的文件夹内，出现了 output/Word2Vec 文件夹，打开可以看到训练好的模型， 可以看出模型文件的体量还是很大的。</p>
<p><img loading="lazy" src="img/02-word2vec.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三使用模型">三、使用模型</h2>
<h3 id="31-读取模型">3.1 读取模型</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="n">ct</span>

<span class="n">w2v</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="s1">&#39;output/Word2Vec/renmin_board.200.6.bin&#39;</span><span class="p">)</span>
<span class="n">w2v</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Loading word2vec model...
&lt;gensim.models.word2vec.Word2Vec at 0x2a11dfad0&gt;
</code></pre></div><br>
<h3 id="32-模型词汇量">3.2 模型词汇量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#词汇量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">w2v</span><span class="o">.</span><span class="n">wv</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1499961
</code></pre></div><br>
<h3 id="33-查看词表">3.3 查看词表</h3>
<p>因为词表有 1499961 个词， 为了方便，这里只显示前20个词</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">##词表带顺序的
list(w2v.wv.key_to_index.keys())[:20]
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39; &#39;,
 &#39;\n&#39;,
 &#39;问题&#39;,
 &#39;进行&#39;,
 &#39;小区&#39;,
 &#39;工作&#39;,
 &#39;”&#39;,
 &#39;没有&#39;,
 &#39;情况&#39;,
 &#39;目前&#39;,
 &#39;反映&#39;,
 &#39;业主&#39;,
 &#39;项目&#39;,
 &#39;要求&#39;,
 &#39;“&#39;,
 &#39;公司&#39;,
 &#39;网友您好&#39;,
 &#39;现在&#39;,
 &#39;建设&#39;,
 &#39;反映问题&#39;]
</code></pre></div><br>
<h3 id="34-获取某词的向量">3.4 获取某词的向量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#w2v.wv[&#39;利民&#39;]</span>
<span class="n">w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;利民&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">array([-0.72336054,  0.5448769 ,  0.02187554,  0.18723099,  0.10518928,
       -0.4829346 ,  1.2029709 ,  1.325142  ,  1.7153364 , -0.9134816 ,
        0.21033671, -0.05412149,  0.1750608 ,  0.36092624,  0.24550831,
        0.02644009,  0.95183885, -1.0317421 , -0.10972459, -2.5780423 ,
       -0.89232576, -1.043176  ,  0.72673726, -0.17512426, -0.24233247,
        0.2569658 , -1.0063888 ,  0.5180029 ,  0.83510065,  0.8907923 ,
       -0.24386375, -0.53083295, -1.5156878 , -0.9040948 ,  0.25330988,
       -0.79177266,  0.06866979,  0.6199285 ,  0.9562961 ,  3.6091647 ,
       -1.3558179 ,  1.4279033 , -0.6923549 ,  0.17637855,  0.6416902 ,
        0.8726301 , -0.8316238 ,  0.8974303 , -1.342718  ,  0.3960099 ,
        0.7404184 ,  0.41476634,  0.5397854 , -0.9964916 ,  0.72252625,
       -0.24338841, -1.1583921 , -0.8719721 , -0.1476895 ,  0.4893649 ,
        1.0152714 , -3.2469108 ,  0.61867106, -1.1033677 ,  0.7277995 ,
        0.68194056,  1.9562886 , -2.0847485 ,  1.5790684 ,  0.9881281 ,
       -1.6833613 ,  0.52788144,  0.81453127, -0.72605026,  0.67317885,
        0.4130878 ,  0.5682669 , -0.14777663,  0.6144105 , -0.6402672 ,
       -0.8752994 ,  1.6374044 , -0.66893923,  0.5865543 ,  0.6375472 ,
       -0.99829054, -1.0806116 ,  2.6740906 , -0.7968034 , -0.39872456,
       -2.0882657 ,  0.4091569 ,  0.44333985,  0.80311924, -0.02302606,
       -0.2762922 ,  0.172768  ,  2.2813802 , -0.39281502,  0.57268375,
        1.4626628 , -0.14473361,  0.5739576 ,  0.61773837, -0.18331125,
        1.2602748 ,  0.9424055 ,  1.5969577 ,  0.6106542 , -2.7610633 ,
       -1.1409078 , -1.7803516 , -0.3264908 ,  1.2968934 ,  0.7250817 ,
        0.0589628 ,  0.42458364, -0.3242822 , -2.6474693 ,  0.3660026 ,
        0.5749114 ,  0.1812738 ,  0.34291452, -0.20228535,  0.40417868,
        0.06284425,  0.7266579 ,  1.5118539 ,  2.0363107 , -1.1808697 ,
       -0.19834429, -1.105297  ,  0.7594476 , -0.90230256,  0.13537973,
        1.5452795 ,  1.3571783 ,  0.15807565, -1.0794616 ,  2.3592122 ,
        0.62628454, -0.61704504,  0.65674806, -0.91116625, -2.1521432 ,
       -0.08805666, -0.6956923 , -1.4443843 , -0.84095645,  0.64748996,
       -0.7432282 ,  1.7160741 ,  1.1697325 ,  1.0834908 , -1.0323627 ,
       -1.3480235 ,  1.004517  , -0.40515316,  0.38016117,  1.6717825 ,
       -0.40651798,  1.0373042 ,  0.24744533, -2.353417  ,  0.06758213,
        0.34440002,  0.8656946 ,  0.76431715, -1.7378451 ,  1.2329959 ,
       -1.4538856 ,  1.0956937 ,  0.6151345 ,  2.4905207 , -0.24415112,
       -0.23886327,  0.09834331,  0.00791643, -0.53527415,  0.7039957 ,
        0.83675224, -1.5712336 , -0.14135051,  0.34811664,  0.41304144,
        0.78504366, -0.13325912, -0.9898512 , -0.497319  , -0.32992417,
       -0.58120775,  0.29686695, -0.9618549 ,  0.39253774,  0.14620592,
       -0.45337242,  0.69179136,  0.1934781 , -2.0494404 ,  1.8545331 ],
      dtype=float32)
</code></pre></div><br>
<p>需要注意，如果查询的词不存在于模型词表，则会出现报错。例如</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">word = &#39;这是一个不存在的词&#39;
w2v.wv.get_vector(word)
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
Cell In[130], line 2
      1 word = &#39;这是一个不存在的词&#39;
----&gt; 2 w2v.wv.get_vector(word)

File /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/gensim/models/keyedvectors.py:446, in KeyedVectors.get_vector(self, key, norm)
    422 def get_vector(self, key, norm=False):
    423     &#34;&#34;&#34;Get the key&#39;s vector, as a 1D numpy array.
    424 
    425     Parameters
   (...)
    444 
    445     &#34;&#34;&#34;
--&gt; 446     index = self.get_index(key)
    447     if norm:
    448         self.fill_norms()

File /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/gensim/models/keyedvectors.py:420, in KeyedVectors.get_index(self, key, default)
    418     return default
    419 else:
--&gt; 420     raise KeyError(f&#34;Key &#39;{key}&#39; not present&#34;)

KeyError: &#34;Key &#39;这是一个不存在的词&#39; not present&#34;

</code></pre></div><br>
<h3 id="35-查询近义词">3.5 查询近义词</h3>
<p><strong>w2v.wv.most_similar(positive=None, topn=10)</strong></p>
<ul>
<li>positive 待查的词语列表或者词向量</li>
<li>topn 显示返回多少个近义词</li>
</ul>
<h4 id="351-使用词语列表查询">3.5.1 使用词语列表查询</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar</span><span class="p">([</span><span class="s1">&#39;经济&#39;</span><span class="p">,</span> <span class="s1">&#39;建设&#39;</span><span class="p">,</span> <span class="s1">&#39;发展&#39;</span><span class="p">],</span> 
                    <span class="n">topn</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;经济发展&#39;, 0.7514141201972961),
 (&#39;产业发展&#39;, 0.6954267024993896),
 (&#39;发展壮大&#39;, 0.6707271337509155),
 (&#39;社会发展&#39;, 0.6637671589851379),
 (&#39;发展重要&#39;, 0.6603672504425049),
 (&#39;城镇化发展&#39;, 0.6574274301528931),
 (&#39;城市发展&#39;, 0.6558148264884949),
 (&#39;高质量发展&#39;, 0.6517276167869568),
 (&#39;大力发展&#39;, 0.6500106453895569),
 (&#39;产业&#39;, 0.6494895219802856),
 (&#39;发展产业&#39;, 0.6458864212036133),
 (&#39;壮大&#39;, 0.6379123330116272),
 (&#39;发展带动&#39;, 0.6357436776161194),
 (&#39;未来发展&#39;, 0.6351119875907898),
 (&#39;第三产业&#39;, 0.6345765590667725),
 (&#39;经济增长&#39;, 0.6329594850540161),
 (&#39;改革开放&#39;, 0.6297498345375061),
 (&#39;融合发展&#39;, 0.6290864944458008),
 (&#39;长远发展&#39;, 0.6279110908508301),
 (&#39;经济繁荣&#39;, 0.627375602722168)]

</code></pre></div><br>
<h3 id="352-使用词向量查询">3.5.2 使用词向量查询</h3>
<p>先构建一个函数concept_vector，该函数可以将多个词转化为一个向量。 遇到词语不在词表中的异常，也能正常运行。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>


<span class="k">def</span> <span class="nf">concept_vector</span><span class="p">(</span><span class="n">words</span><span class="p">):</span>
    <span class="n">container</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">container</span> <span class="o">=</span> <span class="n">container</span> <span class="o">+</span> <span class="n">w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">pass</span>
    <span class="k">return</span> <span class="n">container</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">words</span><span class="p">)</span>
  
  
<span class="n">word_vec</span> <span class="o">=</span> <span class="n">concept_vector</span><span class="p">(</span><span class="n">words</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;她&#39;</span><span class="p">,</span> <span class="s1">&#39;她们&#39;</span><span class="p">,</span> <span class="s1">&#39;母亲&#39;</span><span class="p">,</span> <span class="s1">&#39;奶奶&#39;</span><span class="p">,</span> <span class="s1">&#39;女性&#39;</span><span class="p">,</span> <span class="s1">&#39;女人&#39;</span><span class="p">])</span>
<span class="c1">#查找与word_vec近义词10个词</span>
<span class="n">w2v</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">most_similar</span><span class="p">(</span><span class="n">word_vec</span><span class="p">,</span> 
                    <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[(&#39;奶奶&#39;, 0.9064152836799622),
 (&#39;母亲&#39;, 0.9003509879112244),
 (&#39;爷爷&#39;, 0.8559296131134033),
 (&#39;婆婆&#39;, 0.846263587474823),
 (&#39;我妈&#39;, 0.8314375877380371),
 (&#39;老伴&#39;, 0.8306034803390503),
 (&#39;老父亲&#39;, 0.8257972598075867),
 (&#39;姥爷&#39;, 0.8255906701087952),
 (&#39;父亲&#39;, 0.821728527545929),
 (&#39;女孩&#39;, 0.8210363984107971)]
</code></pre></div><p><br><br></p>
<h2 id="四-相关">四、 相关</h2>
<h3 id="41-文献资料">4.1 文献资料</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">郑石明, 兰雨潇, 黎枫. 网络公共舆论与政府回应的互动逻辑——基于新冠肺炎疫情期间“领导留言板”的数据分析[J]. 公共管理学报, 2021, 18 (03): 24-37+169.
王磊,易扬.公共卫生危机中的数字政府回应如何纾解网络负面舆情——基于人民网“领导留言板”回复情况的调查[J].公共管理学报,2022,19(04):65-78+169.
Lu, Liangdong, Jia Xu, and Jiuchang Wei. &#34;Understanding the effects of the textual complexity on government communication: Insights from China’s online public service platform.&#34; Telematics and Informatics 83 (2023): 102028.
...
</code></pre></div><br>
<h3 id="42-代码资料">4.2 代码资料</h3>
<p>想用 python 对 csv、xlsx 进行分析， 要学会尽量用 pandas 写代码。 以下是近期 pandas 的一些处理推文免费教程， 感兴趣的可以进去浏览浏览。</p>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/"><strong>代码 | 使用地方gov工作报告生成某类概念词频「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/"><strong>数据代码| 使用cctv新闻联播文稿构造「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2028-12-18-how-to-extract-data-from-patent-application-dataset/"><strong>代码 | 使用3571w专利申请数据集构造「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/"><strong>代码 | 使用「新闻数据」计算 「经济政策不确定性」指数</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science/">词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总</a></li>
<li><a href="https://textdata.cn/blog/2023-11-03-organization-science-with-word-embeddings/">OS2022 | 概念空间 | 词嵌入模型如何为组织科学中的测量和理论提供信息</a></li>
<li><a href="https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/">数据集 | 人民网地方领导留言板原始文本(2011-2023.12)</a></li>
</ul>
<p><br><br></p>
<h2 id="声明">声明</h2>
<p>科研用途，仅供展示；如有任何问题，加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>代码 | 使用gov工作报告生成数字化词频「面板数据」</title>
      <link>https://textdata.cn/blog/2023-12-27-measure-gov-digitalization/</link>
      <pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-27-measure-gov-digitalization/</guid>
      <description>&lt;p&gt;使用 10 个城市的2003-2024年的政府工作报告，绘制出的「&lt;em&gt;&lt;strong&gt;数字化概念&lt;/strong&gt;&lt;/em&gt;」词频的趋势图。 直接上效果效果图&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;相关代码&#34;&gt;相关代码&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/&#34;&gt;代码 | 使用地方gov工作报告生成某类概念词词频「面板数据」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/&#34;&gt;数据集 | 国、省、市三级政府工作报告文本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一直接上代码&#34;&gt;一、直接上代码&lt;/h2&gt;
&lt;h3 id=&#34;11-代码文件结构&#34;&gt;1.1 代码文件结构&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;项目文件夹
   |---代码.ipynb
   |---GovReportData        #数据集 | 国、省、市三级政府工作报告文本
           |---city.csv     #市政府工作报告（2002-2024）
           |---province.csv #省政府工作报告（2002-2024）
           |---nation.csv   #国务院政府工作报告（2002-2024）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;12-读取数据&#34;&gt;1.2 读取数据&lt;/h3&gt;
&lt;p&gt;读取地级市报告数据文件 &lt;strong&gt;city.csv&lt;/strong&gt; ，&lt;a href=&#34;https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/&#34;&gt;点击链接，获取政府工作报告数据集&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GovReportData/city.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;13-设计面板数据生成函数&#34;&gt;1.3 设计面板数据生成函数&lt;/h3&gt;
&lt;p&gt;假设你使用的城市政府工作报告数据是大邓提供的，可以直接使用下面封装的函数，快速生成概念词典，指定城市指定年度区间的面板数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;generate_city_panel_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;concept_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_citys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_years&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    csvf: csv的文件路径
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    concept_words: 概念词词语列表
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    selected_citys: 筛选指定城市的数据进行计算，列表
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    selected_years: 筛选指定年度的数据进行计算，列表
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    结果返回dataframe， 每一行代表一个省，每一列代表一年。
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
    
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;
    
    &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pivot_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                       &lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#列-年份&lt;/span&gt;
                       &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;#行-城市  &lt;/span&gt;
                       &lt;span class=&#34;n&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;doc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;#单元格-文本&lt;/span&gt;
                       &lt;span class=&#34;n&#34;&gt;aggfunc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#让单元格填充文本&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_citys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;selected_citys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_years&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;selected_years&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_years&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;selected_years&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        

    &lt;span class=&#34;n&#34;&gt;word_count_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jieba&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lcut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;concept_word_count_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;table_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;concept_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;concept_word_ratio_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;concept_word_count_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word_count_df&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;concept_word_ratio_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;14-生成面板数据&#34;&gt;1.4 生成面板数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;%%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;#数字化关键词仅供参考&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;大数据|移动化|云端化|互联网化|智能化|云化|服务化|数字化|数智化|信息化|信息技术|电子政务|智能化|数字平台|移动应用|app|智慧化|网络化|智慧型||数字平台|信息平台|综合信息平台|管理软件|saas|数据赋能|云端|互联网应用|智慧互联|数据化|上云|互联化|移动办公|数据驱动|可视化|在线化|rfid技术|云架构|协同化|一体化平台|云办公|信息服务平台|综合信息服务|数据服务平台|软件应用|数字化转型|云上|融合媒体|智能管理系统|互联网平台|aiot|ai+|智能物联|宽带|全面云化&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;#所有城市，所有年度(2003-2024) 数字化&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;panel_data_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_city_panel_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GovReportData/city.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                                         &lt;span class=&#34;n&#34;&gt;concept_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;panel_data_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#如果需要保存&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;panel_data_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;282city-digitalization2003-2024.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#panel_data_df.to_excel(&amp;#39;282city-digitalization2003-2024.csv&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;panel_data_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二可视化&#34;&gt;二、可视化&lt;/h2&gt;
&lt;h3 id=&#34;21-plot_line&#34;&gt;2.1 plot_line&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plot_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;panel_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;warnings&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;warnings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;
    
    
    
    &lt;span class=&#34;n&#34;&gt;panel_df_T&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;panel_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;panel_df_T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 添加图例，并指定位置和偏移&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;loc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;upper right&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bbox_to_anchor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;


    &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xticks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;年份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;词频&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;22-十城数字化&#34;&gt;2.2 十城数字化&lt;/h3&gt;
&lt;p&gt;按照我自己对城市的感知， 1-5线城市&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;深圳市&lt;/li&gt;
&lt;li&gt;杭州市 成都市 合肥市&lt;/li&gt;
&lt;li&gt;青岛市 长沙市 西安市&lt;/li&gt;
&lt;li&gt;哈尔滨市 石家庄市&lt;/li&gt;
&lt;li&gt;衡水市&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;咱们看看不同级别城市的数字化词频是否有显著的差异&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;selected_citys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;深圳市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;s1&#34;&gt;&amp;#39;杭州市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;成都市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;合肥市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;s1&#34;&gt;&amp;#39;青岛市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;长沙市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;西安市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;s1&#34;&gt;&amp;#39;哈尔滨市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;石家庄市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;s1&#34;&gt;&amp;#39;衡水市&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#数字化关键词仅供参考&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;大数据|移动化|云端化|互联网化|智能化|云化|服务化|数字化|数智化|信息化|信息技术|电子政务|智能化|数字平台|移动应用|app|智慧化|网络化|智慧型||数字平台|信息平台|综合信息平台|管理软件|saas|数据赋能|云端|互联网应用|智慧互联|数据化|上云|互联化|移动办公|数据驱动|可视化|在线化|rfid技术|云架构|协同化|一体化平台|云办公|信息服务平台|综合信息服务|数据服务平台|软件应用|数字化转型|云上|融合媒体|智能管理系统|互联网平台|aiot|ai+|智能物联|宽带|全面云化&amp;#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;|&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;#生成面板数据&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;panel_data_df2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;generate_city_panel_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csvf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GovReportData/city.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                                          &lt;span class=&#34;n&#34;&gt;concept_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;digitalization_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                                          &lt;span class=&#34;n&#34;&gt;selected_citys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;selected_citys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#绘图&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plot_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;panel_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;panel_data_df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;城市数字化词频(程度)折线图(2003-2024)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;从图中可以看到&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;12年之前， 数字化词频变动较大。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;衡水市&lt;/strong&gt;数字化词频在2004、2007、2010是所有城市中最高的， 但是在这三个时间点之间又是局部最低点。&lt;/li&gt;
&lt;li&gt;12年之后各个城市呈现下降趋势。 可能的原因并不是政府不重视数字化建设， 恰恰是数字化问题得到解决，没那么迫切，也就不太提及。&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;p&gt;从政务数字化实现程度(从常识出发)， 杭州绝对是no1。  用数字化词频高低体现数字化重视程度， 衡水曾有几个年份是十个城市中的最高点，是最重视数字化的城市。 而杭州的政府工作报告中数字化词频并不比其他地市突出，这令我很失望啊。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三总结&#34;&gt;三、总结&lt;/h2&gt;
&lt;p&gt;之前看到一篇论文研究人民网留言板问答中的政府回复行为， 控制变量使用的是政府数字化程度。&lt;/p&gt;
&lt;p&gt;论文使用政府工作报告数字化词语提及次数， 用来测量政府的数字化程度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但从今天的实验看，用数字化词频测量政府数字化程度，不怎么准，  要慎重使用&lt;/strong&gt;。&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;四获取资料&#34;&gt;四、获取资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/&#34;&gt;数据集| 国、省、市三级政府工作报告文本&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击下载本文计算结果 &lt;a href=&#34;282city-digitalization2003-2024.zip&#34;&gt;&lt;strong&gt;282city-digitalization2003-2024.csv&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<p>使用 10 个城市的2003-2024年的政府工作报告，绘制出的「<em><strong>数字化概念</strong></em>」词频的趋势图。 直接上效果效果图</p>
<p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<br>
<h2 id="相关代码">相关代码</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/">代码 | 使用地方gov工作报告生成某类概念词词频「面板数据」</a></li>
<li><a href="https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/">数据集 | 国、省、市三级政府工作报告文本</a></li>
</ul>
<p><br><br></p>
<h2 id="一直接上代码">一、直接上代码</h2>
<h3 id="11-代码文件结构">1.1 代码文件结构</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">项目文件夹
   |---代码.ipynb
   |---GovReportData        #数据集 | 国、省、市三级政府工作报告文本
           |---city.csv     #市政府工作报告（2002-2024）
           |---province.csv #省政府工作报告（2002-2024）
           |---nation.csv   #国务院政府工作报告（2002-2024）
</code></pre></div><br>
<h3 id="12-读取数据">1.2 读取数据</h3>
<p>读取地级市报告数据文件 <strong>city.csv</strong> ，<a href="https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/">点击链接，获取政府工作报告数据集</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;GovReportData/city.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="13-设计面板数据生成函数">1.3 设计面板数据生成函数</h3>
<p>假设你使用的城市政府工作报告数据是大邓提供的，可以直接使用下面封装的函数，快速生成概念词典，指定城市指定年度区间的面板数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">generate_city_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">concept_words</span><span class="p">,</span> <span class="n">selected_citys</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">selected_years</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    csvf: csv的文件路径
</span><span class="s2">    concept_words: 概念词词语列表
</span><span class="s2">    selected_citys: 筛选指定城市的数据进行计算，列表
</span><span class="s2">    selected_years: 筛选指定年度的数据进行计算，列表
</span><span class="s2">    
</span><span class="s2">    结果返回dataframe， 每一行代表一个省，每一列代表一年。
</span><span class="s2">    &#34;&#34;&#34;</span>
    
    <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
    <span class="kn">import</span> <span class="nn">jieba</span>
    
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">csvf</span><span class="p">)</span>
    <span class="n">table_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">pivot_table</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> 
                       <span class="n">columns</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span>  <span class="c1">#列-年份</span>
                       <span class="n">index</span><span class="o">=</span><span class="s1">&#39;city&#39;</span><span class="p">,</span>    <span class="c1">#行-城市  </span>
                       <span class="n">values</span><span class="o">=</span><span class="s1">&#39;doc&#39;</span><span class="p">,</span>   <span class="c1">#单元格-文本</span>
                       <span class="n">aggfunc</span><span class="o">=</span><span class="k">lambda</span> <span class="n">cs</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">cs</span><span class="p">))</span> <span class="c1">#让单元格填充文本</span>

    <span class="k">if</span> <span class="n">selected_citys</span><span class="p">:</span>
        <span class="n">table_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="p">[</span><span class="n">table_df</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">isin</span><span class="p">(</span><span class="n">selected_citys</span><span class="p">)]</span>
    
    <span class="k">if</span> <span class="n">selected_years</span><span class="p">:</span>
        <span class="n">selected_years</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">selected_years</span><span class="p">]</span>
        <span class="n">table_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="p">[</span><span class="n">selected_years</span><span class="p">]</span>
        

    <span class="n">word_count_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">t</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">t</span><span class="p">))))</span>
    <span class="n">concept_word_count_df</span> <span class="o">=</span> <span class="n">table_df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">row</span><span class="p">:</span> <span class="n">row</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">concept_words</span><span class="p">)))</span>
    <span class="n">concept_word_ratio_df</span> <span class="o">=</span> <span class="n">concept_word_count_df</span><span class="o">/</span><span class="n">word_count_df</span>
    <span class="k">return</span> <span class="n">concept_word_ratio_df</span>
</code></pre></div><br>
<h3 id="14-生成面板数据">1.4 生成面板数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>


<span class="c1">#数字化关键词仅供参考</span>
<span class="n">digitalization_words</span> <span class="o">=</span> <span class="s1">&#39;大数据|移动化|云端化|互联网化|智能化|云化|服务化|数字化|数智化|信息化|信息技术|电子政务|智能化|数字平台|移动应用|app|智慧化|网络化|智慧型||数字平台|信息平台|综合信息平台|管理软件|saas|数据赋能|云端|互联网应用|智慧互联|数据化|上云|互联化|移动办公|数据驱动|可视化|在线化|rfid技术|云架构|协同化|一体化平台|云办公|信息服务平台|综合信息服务|数据服务平台|软件应用|数字化转型|云上|融合媒体|智能管理系统|互联网平台|aiot|ai+|智能物联|宽带|全面云化&#39;</span>
<span class="n">digitalization_words</span> <span class="o">=</span> <span class="n">digitalization_words</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span>


<span class="c1">#所有城市，所有年度(2003-2024) 数字化</span>
<span class="n">panel_data_df</span> <span class="o">=</span> <span class="n">generate_city_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/city.csv&#39;</span><span class="p">,</span> 
                                         <span class="n">concept_words</span> <span class="o">=</span> <span class="n">digitalization_words</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">panel_data_df</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>

<span class="c1">#如果需要保存</span>
<span class="n">panel_data_df</span><span class="o">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s1">&#39;282city-digitalization2003-2024.csv&#39;</span><span class="p">)</span>
<span class="c1">#panel_data_df.to_excel(&#39;282city-digitalization2003-2024.csv&#39;)</span>

<span class="n">panel_data_df</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<br>
<h2 id="二可视化">二、可视化</h2>
<h3 id="21-plot_line">2.1 plot_line</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">plot_line</span><span class="p">(</span><span class="n">panel_df</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
    <span class="kn">import</span> <span class="nn">matplotlib</span>
    <span class="kn">import</span> <span class="nn">scienceplots</span>
    <span class="kn">import</span> <span class="nn">platform</span>
    <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
    <span class="kn">import</span> <span class="nn">matplotlib_inline</span>
    <span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
    <span class="kn">import</span> <span class="nn">jieba</span>
    <span class="kn">import</span> <span class="nn">warnings</span>
    <span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>

    <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
    <span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

    <span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
    <span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
    <span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
    
    
    <span class="n">panel_df_T</span> <span class="o">=</span> <span class="n">panel_df</span><span class="o">.</span><span class="n">T</span>

    <span class="n">ax</span> <span class="o">=</span> <span class="n">panel_df_T</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
    <span class="c1"># 添加图例，并指定位置和偏移</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper right&#39;</span><span class="p">,</span> <span class="n">bbox_to_anchor</span><span class="o">=</span><span class="p">(</span><span class="mf">1.15</span><span class="p">,</span> <span class="mf">1.05</span><span class="p">))</span>


    <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;词频&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>

    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><br>
<h3 id="22-十城数字化">2.2 十城数字化</h3>
<p>按照我自己对城市的感知， 1-5线城市</p>
<ol>
<li>深圳市</li>
<li>杭州市 成都市 合肥市</li>
<li>青岛市 长沙市 西安市</li>
<li>哈尔滨市 石家庄市</li>
<li>衡水市</li>
</ol>
<p>咱们看看不同级别城市的数字化词频是否有显著的差异</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">selected_citys</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;深圳市&#39;</span><span class="p">,</span>
                  <span class="s1">&#39;杭州市&#39;</span><span class="p">,</span> <span class="s1">&#39;成都市&#39;</span><span class="p">,</span> <span class="s1">&#39;合肥市&#39;</span><span class="p">,</span> 
                  <span class="s1">&#39;青岛市&#39;</span><span class="p">,</span> <span class="s1">&#39;长沙市&#39;</span><span class="p">,</span> <span class="s1">&#39;西安市&#39;</span><span class="p">,</span> 
                  <span class="s1">&#39;哈尔滨市&#39;</span><span class="p">,</span> <span class="s1">&#39;石家庄市&#39;</span><span class="p">,</span> 
                  <span class="s1">&#39;衡水市&#39;</span><span class="p">]</span>

<span class="c1">#数字化关键词仅供参考</span>
<span class="n">digitalization_words</span> <span class="o">=</span> <span class="s1">&#39;大数据|移动化|云端化|互联网化|智能化|云化|服务化|数字化|数智化|信息化|信息技术|电子政务|智能化|数字平台|移动应用|app|智慧化|网络化|智慧型||数字平台|信息平台|综合信息平台|管理软件|saas|数据赋能|云端|互联网应用|智慧互联|数据化|上云|互联化|移动办公|数据驱动|可视化|在线化|rfid技术|云架构|协同化|一体化平台|云办公|信息服务平台|综合信息服务|数据服务平台|软件应用|数字化转型|云上|融合媒体|智能管理系统|互联网平台|aiot|ai+|智能物联|宽带|全面云化&#39;</span>
<span class="n">digitalization_words</span> <span class="o">=</span> <span class="n">digitalization_words</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span>


<span class="c1">#生成面板数据</span>
<span class="n">panel_data_df2</span> <span class="o">=</span> <span class="n">generate_city_panel_data</span><span class="p">(</span><span class="n">csvf</span><span class="o">=</span><span class="s1">&#39;GovReportData/city.csv&#39;</span><span class="p">,</span> 
                                          <span class="n">concept_words</span> <span class="o">=</span> <span class="n">digitalization_words</span><span class="p">,</span> 
                                          <span class="n">selected_citys</span> <span class="o">=</span> <span class="n">selected_citys</span><span class="p">)</span>

<span class="c1">#绘图</span>
<span class="n">plot_line</span><span class="p">(</span><span class="n">panel_df</span><span class="o">=</span><span class="n">panel_data_df2</span><span class="p">,</span> 
          <span class="n">title</span><span class="o">=</span><span class="s1">&#39;城市数字化词频(程度)折线图(2003-2024)&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<br>
<p>从图中可以看到</p>
<ol>
<li>12年之前， 数字化词频变动较大。</li>
<li><strong>衡水市</strong>数字化词频在2004、2007、2010是所有城市中最高的， 但是在这三个时间点之间又是局部最低点。</li>
<li>12年之后各个城市呈现下降趋势。 可能的原因并不是政府不重视数字化建设， 恰恰是数字化问题得到解决，没那么迫切，也就不太提及。</li>
</ol>
<br>
<p>从政务数字化实现程度(从常识出发)， 杭州绝对是no1。  用数字化词频高低体现数字化重视程度， 衡水曾有几个年份是十个城市中的最高点，是最重视数字化的城市。 而杭州的政府工作报告中数字化词频并不比其他地市突出，这令我很失望啊。</p>
<p><br><br></p>
<h2 id="三总结">三、总结</h2>
<p>之前看到一篇论文研究人民网留言板问答中的政府回复行为， 控制变量使用的是政府数字化程度。</p>
<p>论文使用政府工作报告数字化词语提及次数， 用来测量政府的数字化程度。</p>
<p><strong>但从今天的实验看，用数字化词频测量政府数字化程度，不怎么准，  要慎重使用</strong>。</p>
<br>
<br>
<h2 id="四获取资料">四、获取资料</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2023-12-17-gov-anual-report-dataset/">数据集| 国、省、市三级政府工作报告文本</a></p>
</li>
<li>
<p>点击下载本文计算结果 <a href="282city-digitalization2003-2024.zip"><strong>282city-digitalization2003-2024.csv</strong></a></p>
</li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 人民网地方领导留言板原始文本(2011-2023.12)</title>
      <link>https://textdata.cn/blog/2023-12-22-renmin-gov-leader-comment-board/</link>
      <pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-22-renmin-gov-leader-comment-board/</guid>
      <description>&lt;img src=&#34;img/04-dataset.png&#34; style=&#34;zoom:80%;&#34; /&gt;
&lt;br&gt;
&lt;h2 id=&#34;一数据集&#34;&gt;一、数据集&lt;/h2&gt;
&lt;h3 id=&#34;11-概况&#34;&gt;1.1 概况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据来源: 人民网地方领导留言板

覆盖时间: 2011-01-01 ~ 2023.12.06

记录条数: 3914385

文件格式: xlsx、csv
    
所含字段:
 -  留言领导
 -  留言标题
 -  省份
 -  市
 -  状态
 -  主题类别
 -  投诉种类
 -  留言人
 -  留言时间
 -  留言内容
 -  回复内容
 -  回复时间
 -  回复机构
 -  办理速度评分(该字段出现在2019之后)
 -  办理态度评分(该字段出现在2019之后)
 -  解决程度评分(该字段出现在2019之后)
 -  用户评价(该字段出现在2019之后)
 -  评价标签(该字段出现在2019之后)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;12-说明&#34;&gt;1.2 说明&lt;/h3&gt;
&lt;p&gt;科研用途展示； 如有问题， 加微信 372335839， 备注「姓名-学校-专业-留言板」。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;13-相关研究&#34;&gt;1.3 相关研究&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;
[1]郑石明, 兰雨潇, 黎枫. 网络公共舆论与政府回应的互动逻辑——基于新冠肺炎疫情期间“领导留言板”的数据分析[J]. 公共管理学报, 2021, 18 (03): 24-37+169.
王磊,易扬.公共卫生危机中的数字政府回应如何纾解网络负面舆情——基于人民网“领导留言板”回复情况的调查[J].公共管理学报,2022,19(04):65-78+169.

[2]Lu, Liangdong, Jia Xu, and Jiuchang Wei. &amp;#34;Understanding the effects of the textual complexity on government communication: Insights from China’s online public service platform.&amp;#34; Telematics and Informatics 83 (2023): 102028.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;img src=&#34;img/2023a.png&#34; style=&#34;zoom:80%;&#34; /&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/2023b.png&#34; style=&#34;zoom:80%;&#34; /&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二查看数据&#34;&gt;二、查看数据&lt;/h2&gt;
&lt;h3 id=&#34;21-读取数据&#34;&gt;2.1 读取数据&lt;/h3&gt;
&lt;p&gt;依次读取&lt;em&gt;&lt;strong&gt;2011-2019.csv.gz&lt;/strong&gt;&lt;/em&gt; 和  &lt;em&gt;&lt;strong&gt;2020-2023.csv.gz&lt;/strong&gt;&lt;/em&gt;  两个csv文件，    &lt;em&gt;&lt;strong&gt;.csv.gz&lt;/strong&gt;&lt;/em&gt; 解压得到  &lt;em&gt;&lt;strong&gt;.csv&lt;/strong&gt;&lt;/em&gt; 后再读取。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2011-2019.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df11_19 = pd.read_csv(&amp;#39;2011-2019.csv.gz&amp;#39;, compression=&amp;#39;gzip&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/02-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2020-2023.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df20_23 = pd.read_csv(&amp;#39;2020-2023.csv.gz&amp;#39;, compression=&amp;#39;gzip&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-字段&#34;&gt;2.2 字段&lt;/h3&gt;
&lt;p&gt;10多年的时间，网站会变动，写爬虫运行爬虫的人也会变动。为了让大家更丝滑的使用数据，大邓对所有的年份进行了字段矫正和统一， 最后字段只有两大类，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2011-2019&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;2020-2023&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;columns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2011-2019
Index([&amp;#39;留言领导&amp;#39;, &amp;#39;留言标题&amp;#39;, &amp;#39;省份&amp;#39;, &amp;#39;市&amp;#39;, &amp;#39;状态&amp;#39;, &amp;#39;主题类别&amp;#39;, &amp;#39;投诉种类&amp;#39;, &amp;#39;留言人&amp;#39;, &amp;#39;留言时间&amp;#39;, &amp;#39;留言内容&amp;#39;, &amp;#39;回复机构&amp;#39;, 
       &amp;#39;回复内容&amp;#39;, &amp;#39;回复时间&amp;#39;, &amp;#39;留言评价&amp;#39;, &amp;#39;评价时间&amp;#39;],
      dtype=&amp;#39;object&amp;#39;)


2020-2023
Index([&amp;#39;留言领导&amp;#39;, &amp;#39;留言标题&amp;#39;, &amp;#39;省份&amp;#39;, &amp;#39;市&amp;#39;, &amp;#39;状态&amp;#39;, &amp;#39;主题类别&amp;#39;, &amp;#39;投诉种类&amp;#39;, &amp;#39;留言人&amp;#39;, &amp;#39;留言时间&amp;#39;, &amp;#39;留言内容&amp;#39;,
       &amp;#39;回复内容&amp;#39;, &amp;#39;回复时间&amp;#39;, &amp;#39;回复机构&amp;#39;, &amp;#39;办理速度评分&amp;#39;, &amp;#39;办理态度评分&amp;#39;, &amp;#39;解决程度评分&amp;#39;, &amp;#39;用户评价&amp;#39;, &amp;#39;评价标签&amp;#39;],
      dtype=&amp;#39;object&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;23-记录数&#34;&gt;2.3 记录数&lt;/h3&gt;
&lt;p&gt;数据集总记录数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;总记录数: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;总记录数: 3914385
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;24-每年是否包含年末数据&#34;&gt;2.4 每年是否包含年末数据&lt;/h3&gt;
&lt;p&gt;由于人民网只 “&lt;strong&gt;可查询留言为上一年1月1日至今的所有留言&lt;/strong&gt;”, 有同学没看懂这句话含义，担心每年12月月末或1月月初是否会缺失数据。这里我们检查下数据集每年的年初是否为1.1， 年底是否为12.31&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    
    
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;mi&#34;&gt;2011&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2011&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2011&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2012&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2012&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2012&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2013&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2013&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2013&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2014&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2014&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2014&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2015&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2015&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2016&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2016&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2016&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2017&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2017&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2017&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2019&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2019&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2019&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2020&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2021&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2021&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2021&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2022&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2023&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2023&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;06&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因为数据集是 2023.12.6 运行的， 日期截止到 2023.12.6 。不过不用担心， 下次更新数据时候会覆盖到  2023.12.31 。&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;25-年度记录数&#34;&gt;2.5 年度记录数&lt;/h3&gt;
&lt;p&gt;两个 dataframe 中都有 &lt;em&gt;&lt;strong&gt;留言日期&lt;/strong&gt;&lt;/em&gt; ， 我们根据该字段查看每个年份的记录数。首先，要先将该字段转化为 datetime 日期类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)})&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df20_23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;volume&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)})&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;2011 23307
2012 20178
2013 42950
2014 97640
2015 131930
2016 201525
2017 202793
2018 243648
2019 464622
2020 517167
2021 783139
2022 648055
2023 537422
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;warnings&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;warnings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;
    
&lt;span class=&#34;n&#34;&gt;year_volume_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DataFrame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#year_volume_df[&amp;#39;year&amp;#39;] = pd.to_datetime(year_volume_df[&amp;#39;year&amp;#39;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;year_volume_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inplace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;year_volume_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;人民网留言板留言数量(2011 ~ 2023)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xticks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;年份&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言数量&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/plot.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;需要声明， 采集的数据量与真实数据量肯定会有出入的， 例如爬虫运行的时间点、IP被封、请求失败、文件编码(格式)问题等会遗失一定量的记录量。&lt;/p&gt;
&lt;p&gt;但是大家做Python定量文本分析， 不用担心这个问题。  Python为代表的大规模数据挖掘，只要满足  &lt;strong&gt;Earnings(规模带来的信息增益) &amp;raquo; Loss(数据质量产生的损失)&lt;/strong&gt; ，做文本分析就是可行的，有意义的。 而咱们的数据， 数据规模近 400 万条， 数据质量也是有保证的。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;26-value_counts&#34;&gt;2.6 value_counts&lt;/h3&gt;
&lt;p&gt;查看2011-2019年， 不同留 &lt;em&gt;&lt;strong&gt;主题类别&lt;/strong&gt;&lt;/em&gt;  的记录数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#2011-2019&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;主题类别&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value_counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;主题类别
城建    474413
交通    180195
其他    177262
三农    116151
环保     94344
教育     90603
政务     69910
治安     63752
就业     47854
医疗     37215
企业     36826
旅游     18675
文娱      9866
金融      6778
征集      4741
求助         3
咨询         2
建言         2
投诉         1
Name: count, dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;27-查看是否含某词&#34;&gt;2.7 查看是否含某词&lt;/h3&gt;
&lt;p&gt;查看字段 &lt;em&gt;&lt;strong&gt;留言内容&lt;/strong&gt;&lt;/em&gt;, 是否出现 &lt;em&gt;&lt;strong&gt;扰民|噪音&lt;/strong&gt;&lt;/em&gt; 等词语&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;扰民|噪音&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0          False
1          False
2          False
3          False
4          False
           ...  
1428614    False
1428615    False
1428616    False
1428617    False
1428618    False
Name: 留言内容, Length: 1428619, dtype: bool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;噪音的留言记录数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;扰民|噪音&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;57845
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;噪音的留言记录占总留言数的比例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;留言内容&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;扰民|噪音&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df11_19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;0.04049063350044309
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;有4%的留言是跟扰民、噪音相关的 。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三-相关研究&#34;&gt;三、 相关研究&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;郑石明, 兰雨潇, 黎枫. 网络公共舆论与政府回应的互动逻辑——基于新冠肺炎疫情期间“领导留言板”的数据分析[J]. 公共管理学报, 2021, 18 (03): 24-37+169.
王磊,易扬.公共卫生危机中的数字政府回应如何纾解网络负面舆情——基于人民网“领导留言板”回复情况的调查[J].公共管理学报,2022,19(04):65-78+169.
Lu, Liangdong, Jia Xu, and Jiuchang Wei. &amp;#34;Understanding the effects of the textual complexity on government communication: Insights from China’s online public service platform.&amp;#34; Telematics and Informatics 83 (2023): 102028.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;四相关代码&#34;&gt;四、相关代码&lt;/h2&gt;
&lt;p&gt;想用 python 对 csv、xlsx 进行分析， 要学会尽量用 pandas 写代码。 以下是近期 pandas 的一些处理推文免费教程， 感兴趣的可以进去浏览浏览。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2024-06-05-wenzheng-hunan-dataset/&#34;&gt;数据集(付费) | 30w条「问政湖南」领导留言回复记录(2010-2024)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-29-china-area-dataset/&#34;&gt;数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-28-train-word2vec-using-renmin-gov-leader-board-dataset/&#34;&gt;词向量  | 使用&lt;strong&gt;人民网领导留言板&lt;/strong&gt;语料训练Word2Vec模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/&#34;&gt;&lt;strong&gt;代码 | 使用地方gov工作报告生成某类概念词频「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/&#34;&gt;&lt;strong&gt;代码 | 使用「新闻数据」构造概念词提及量「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/&#34;&gt;&lt;strong&gt;数据代码| 使用cctv新闻联播文稿构造「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2028-12-18-how-to-extract-data-from-patent-application-dataset/&#34;&gt;&lt;strong&gt;代码 | 使用3571w专利申请数据集构造「面板数据」&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/&#34;&gt;&lt;strong&gt;代码 | 使用「新闻数据」计算 「经济政策不确定性」指数&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<img src="img/04-dataset.png" style="zoom:80%;" />
<br>
<h2 id="一数据集">一、数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: 人民网地方领导留言板

覆盖时间: 2011-01-01 ~ 2023.12.06

记录条数: 3914385

文件格式: xlsx、csv
    
所含字段:
 -  留言领导
 -  留言标题
 -  省份
 -  市
 -  状态
 -  主题类别
 -  投诉种类
 -  留言人
 -  留言时间
 -  留言内容
 -  回复内容
 -  回复时间
 -  回复机构
 -  办理速度评分(该字段出现在2019之后)
 -  办理态度评分(该字段出现在2019之后)
 -  解决程度评分(该字段出现在2019之后)
 -  用户评价(该字段出现在2019之后)
 -  评价标签(该字段出现在2019之后)
</code></pre></div><br>
<h3 id="12-说明">1.2 说明</h3>
<p>科研用途展示； 如有问题， 加微信 372335839， 备注「姓名-学校-专业-留言板」。</p>
<br>
<h3 id="13-相关研究">1.3 相关研究</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">
[1]郑石明, 兰雨潇, 黎枫. 网络公共舆论与政府回应的互动逻辑——基于新冠肺炎疫情期间“领导留言板”的数据分析[J]. 公共管理学报, 2021, 18 (03): 24-37+169.
王磊,易扬.公共卫生危机中的数字政府回应如何纾解网络负面舆情——基于人民网“领导留言板”回复情况的调查[J].公共管理学报,2022,19(04):65-78+169.

[2]Lu, Liangdong, Jia Xu, and Jiuchang Wei. &#34;Understanding the effects of the textual complexity on government communication: Insights from China’s online public service platform.&#34; Telematics and Informatics 83 (2023): 102028.
...
</code></pre></div><p><br><img src="img/2023a.png" style="zoom:80%;" /><br></p>
<p><img src="img/2023b.png" style="zoom:80%;" /><br><br></p>
<h2 id="二查看数据">二、查看数据</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>依次读取<em><strong>2011-2019.csv.gz</strong></em> 和  <em><strong>2020-2023.csv.gz</strong></em>  两个csv文件，    <em><strong>.csv.gz</strong></em> 解压得到  <em><strong>.csv</strong></em> 后再读取。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">df11_19</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;2011-2019.csv&#39;</span><span class="p">)</span>
<span class="c1">#df11_19 = pd.read_csv(&#39;2011-2019.csv.gz&#39;, compression=&#39;gzip&#39;)</span>

<span class="n">df11_19</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df20_23</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;2020-2023.csv&#39;</span><span class="p">)</span>
<span class="c1">#df20_23 = pd.read_csv(&#39;2020-2023.csv.gz&#39;, compression=&#39;gzip&#39;)</span>
<span class="n">df20_23</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<br>
<h3 id="22-字段">2.2 字段</h3>
<p>10多年的时间，网站会变动，写爬虫运行爬虫的人也会变动。为了让大家更丝滑的使用数据，大邓对所有的年份进行了字段矫正和统一， 最后字段只有两大类，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;2011-2019&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df11_19</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;2020-2023&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df20_23</span><span class="o">.</span><span class="n">columns</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2011-2019
Index([&#39;留言领导&#39;, &#39;留言标题&#39;, &#39;省份&#39;, &#39;市&#39;, &#39;状态&#39;, &#39;主题类别&#39;, &#39;投诉种类&#39;, &#39;留言人&#39;, &#39;留言时间&#39;, &#39;留言内容&#39;, &#39;回复机构&#39;, 
       &#39;回复内容&#39;, &#39;回复时间&#39;, &#39;留言评价&#39;, &#39;评价时间&#39;],
      dtype=&#39;object&#39;)


2020-2023
Index([&#39;留言领导&#39;, &#39;留言标题&#39;, &#39;省份&#39;, &#39;市&#39;, &#39;状态&#39;, &#39;主题类别&#39;, &#39;投诉种类&#39;, &#39;留言人&#39;, &#39;留言时间&#39;, &#39;留言内容&#39;,
       &#39;回复内容&#39;, &#39;回复时间&#39;, &#39;回复机构&#39;, &#39;办理速度评分&#39;, &#39;办理态度评分&#39;, &#39;解决程度评分&#39;, &#39;用户评价&#39;, &#39;评价标签&#39;],
      dtype=&#39;object&#39;)
</code></pre></div><br>
<h3 id="23-记录数">2.3 记录数</h3>
<p>数据集总记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;总记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df11_19</span><span class="p">)</span><span class="o">+</span><span class="nb">len</span><span class="p">(</span><span class="n">df20_23</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">总记录数: 3914385
</code></pre></div><br>
<h3 id="24-每年是否包含年末数据">2.4 每年是否包含年末数据</h3>
<p>由于人民网只 “<strong>可查询留言为上一年1月1日至今的所有留言</strong>”, 有同学没看懂这句话含义，担心每年12月月末或1月月初是否会缺失数据。这里我们检查下数据集每年的年初是否为1.1， 年底是否为12.31</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df11_19</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="n">year_df</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="n">year_df</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
    
    
<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df20_23</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df20_23</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="n">year_df</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">(),</span> <span class="n">year_df</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">()</span><span class="o">.</span><span class="n">date</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="mi">2011</span> <span class="mi">2011</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2011</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2012</span> <span class="mi">2012</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2012</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2013</span> <span class="mi">2013</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2013</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2014</span> <span class="mi">2014</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2014</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2015</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2015</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2016</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2017</span> <span class="mi">2017</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2017</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2018</span> <span class="mi">2018</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2018</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2019</span> <span class="mi">2019</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2019</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2020</span> <span class="mi">2020</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2020</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2021</span> <span class="mi">2021</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2021</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2022</span> <span class="mi">2022</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2022</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">31</span>
<span class="mi">2023</span> <span class="mi">2023</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="mi">01</span> <span class="mi">2023</span><span class="o">-</span><span class="mi">12</span><span class="o">-</span><span class="mi">06</span>
</code></pre></div><p>因为数据集是 2023.12.6 运行的， 日期截止到 2023.12.6 。不过不用担心， 下次更新数据时候会覆盖到  2023.12.31 。</p>
<br>
<h3 id="25-年度记录数">2.5 年度记录数</h3>
<p>两个 dataframe 中都有 <em><strong>留言日期</strong></em> ， 我们根据该字段查看每个年份的记录数。首先，要先将该字段转化为 datetime 日期类型。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">data</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">])</span>
<span class="n">df20_23</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df20_23</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">])</span>

<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df11_19</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="n">data</span><span class="o">.</span><span class="n">append</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="n">year</span><span class="p">,</span> <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">)})</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">))</span>

<span class="k">for</span> <span class="n">year</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df20_23</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df20_23</span><span class="p">[</span><span class="s1">&#39;留言时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">):</span>
    <span class="n">data</span><span class="o">.</span><span class="n">append</span><span class="p">({</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="n">year</span><span class="p">,</span> <span class="s1">&#39;volume&#39;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">)})</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">year_df</span><span class="p">))</span>
    

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2011 23307
2012 20178
2013 42950
2014 97640
2015 131930
2016 201525
2017 202793
2018 243648
2019 464622
2020 517167
2021 783139
2022 648055
2023 537422
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>
<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
<span class="n">year_volume_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="c1">#year_volume_df[&#39;year&#39;] = pd.to_datetime(year_volume_df[&#39;year&#39;])</span>
<span class="n">year_volume_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">year_volume_df</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;人民网留言板留言数量(2011 ~ 2023)&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;留言数量&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<p>需要声明， 采集的数据量与真实数据量肯定会有出入的， 例如爬虫运行的时间点、IP被封、请求失败、文件编码(格式)问题等会遗失一定量的记录量。</p>
<p>但是大家做Python定量文本分析， 不用担心这个问题。  Python为代表的大规模数据挖掘，只要满足  <strong>Earnings(规模带来的信息增益) &raquo; Loss(数据质量产生的损失)</strong> ，做文本分析就是可行的，有意义的。 而咱们的数据， 数据规模近 400 万条， 数据质量也是有保证的。</p>
<p><br><br></p>
<h3 id="26-value_counts">2.6 value_counts</h3>
<p>查看2011-2019年， 不同留 <em><strong>主题类别</strong></em>  的记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#2011-2019</span>
<span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;主题类别&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">主题类别
城建    474413
交通    180195
其他    177262
三农    116151
环保     94344
教育     90603
政务     69910
治安     63752
就业     47854
医疗     37215
企业     36826
旅游     18675
文娱      9866
金融      6778
征集      4741
求助         3
咨询         2
建言         2
投诉         1
Name: count, dtype: int64
</code></pre></div><br>
<h3 id="27-查看是否含某词">2.7 查看是否含某词</h3>
<p>查看字段 <em><strong>留言内容</strong></em>, 是否出现 <em><strong>扰民|噪音</strong></em> 等词语</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;留言内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;扰民|噪音&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0          False
1          False
2          False
3          False
4          False
           ...  
1428614    False
1428615    False
1428616    False
1428617    False
1428618    False
Name: 留言内容, Length: 1428619, dtype: bool
</code></pre></div><br>
<p>噪音的留言记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;留言内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;扰民|噪音&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">57845
</code></pre></div><br>
<p>噪音的留言记录占总留言数的比例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df11_19</span><span class="p">[</span><span class="s1">&#39;留言内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;扰民|噪音&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df11_19</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.04049063350044309
</code></pre></div><p>有4%的留言是跟扰民、噪音相关的 。</p>
<p><br><br></p>
<h2 id="三-相关研究">三、 相关研究</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">郑石明, 兰雨潇, 黎枫. 网络公共舆论与政府回应的互动逻辑——基于新冠肺炎疫情期间“领导留言板”的数据分析[J]. 公共管理学报, 2021, 18 (03): 24-37+169.
王磊,易扬.公共卫生危机中的数字政府回应如何纾解网络负面舆情——基于人民网“领导留言板”回复情况的调查[J].公共管理学报,2022,19(04):65-78+169.
Lu, Liangdong, Jia Xu, and Jiuchang Wei. &#34;Understanding the effects of the textual complexity on government communication: Insights from China’s online public service platform.&#34; Telematics and Informatics 83 (2023): 102028.
...
</code></pre></div><h2 id="四相关代码">四、相关代码</h2>
<p>想用 python 对 csv、xlsx 进行分析， 要学会尽量用 pandas 写代码。 以下是近期 pandas 的一些处理推文免费教程， 感兴趣的可以进去浏览浏览。</p>
<ul>
<li><a href="https://textdata.cn/blog/2024-06-05-wenzheng-hunan-dataset/">数据集(付费) | 30w条「问政湖南」领导留言回复记录(2010-2024)</a></li>
<li><a href="https://textdata.cn/blog/2023-12-29-china-area-dataset/">数据集 | 2024年中国全国5级行政区划（省、市、县、镇、村）</a></li>
<li><a href="https://textdata.cn/blog/2023-12-28-train-word2vec-using-renmin-gov-leader-board-dataset/">词向量  | 使用<strong>人民网领导留言板</strong>语料训练Word2Vec模型</a></li>
<li><a href="https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/"><strong>代码 | 使用地方gov工作报告生成某类概念词频「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/"><strong>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/"><strong>数据代码| 使用cctv新闻联播文稿构造「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2028-12-18-how-to-extract-data-from-patent-application-dataset/"><strong>代码 | 使用3571w专利申请数据集构造「面板数据」</strong></a></li>
<li><a href="https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/"><strong>代码 | 使用「新闻数据」计算 「经济政策不确定性」指数</strong></a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>代码 | 使用「新闻数据」构造概念词提及量「面板数据」</title>
      <link>https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/</link>
      <pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/</guid>
      <description>使用新闻联播、经济日报、人民日报，生成某「个体」关于「某概念词频」的「面板数据」</description>
      <content:encoded><![CDATA[<h2 id="一任务">一、任务</h2>
<p><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">新闻数据集 | 含 人民日报/经济日报/光明日报 等120家媒体(2024.05)</a></p>
<br>
<p>利用 经济日报和人民日报 这两套数据集，可以生成面板数据，字段有</p>
<ul>
<li><strong>Object</strong> 提及的概念词(Object)，可以是某类概念词(创新/三农) 或 行为主体(省、市、公司法人）。</li>
<li><strong>Date</strong> 日期， 粒度可以是年(月、周、日)</li>
<li><strong>MentionTimes</strong>  在Date期间，提及概念词(Object)的新闻条数</li>
<li><strong>MentionRatio</strong>  在Date期间，提及概念词(Object)的新闻条数/总新闻条数</li>
</ul>
<p>今天利用该数据集， 生成 <code>省份、日期(周/天）、提及该省新闻次数、提及该省新闻占比</code> 面板数据。</p>
<p><img loading="lazy" src="img/06-panel.png" alt=""  />
</p>
<p><img loading="lazy" src="img/07-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二数据操作">二、数据操作</h2>
<h3 id="21-原始数据格式">2.1 原始数据格式</h3>
<p>今天更新这两个数据集， 增加 <strong>经济日报csv.gz</strong> 和 <strong>人民日报.csv.gz</strong>。 已购买 <strong>经济日报csv.gz</strong> 和 <strong>人民日报.csv.gz</strong>的同学，可以微信 37233539 ，来获取这两个文件。</p>
<br>
<h3 id="22-读取数据">2.2 读取数据</h3>
<p>pandas可以直接读取 <em><strong>经济日报.csv.gz</strong></em> 和 <em><strong>人民日报.csv.gz</strong></em> 压缩文件，且这样读取的速度是比 经济日报.csv 和 人民日报.csv 要更快的。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">jjrb_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;经济日报.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">rmrb_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;人民日报.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>

<span class="n">jjrb_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">jjrb_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>
<span class="n">rmrb_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">rmrb_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>

<span class="n">rmrb_df</span>
</code></pre></div><p><img loading="lazy" src="img/01-rmrb_df.png" alt=""  />
</p>
<br>
<h3 id="23-记录存储形式">2.3 记录存储形式</h3>
<p>这两个新闻数据， 任意日期(日)内一般都会有多条新闻记录， 每条新闻记录是以一行单独存储。</p>
<p>以 <strong>rmrb_df</strong> 为例， 查看 <strong>2013-06-08</strong> 新闻记录，可以看到有多条记录。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#任意日期</span>
<span class="n">rmrb_df</span><span class="p">[</span><span class="n">rmrb_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;2013-06-08&#39;</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/03-filter-date.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三生成面板数据">三、生成面板数据</h2>
<p>因为 人民日报 和 经济日报 的数据格式基本一样，接下来以 人民日报 为例， 逐步生成 <code>省份、日期(年度）、提及该省新闻次数、提及该省新闻占比</code> 面板数据， 字段名定义为 <code>Object、Date、MentionTimes、MentionRatio</code>。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">provs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;浙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;山东省&#39;</span><span class="p">,</span> <span class="s1">&#39;新疆维吾尔族自治区&#39;</span><span class="p">,</span> <span class="s1">&#39;上海市&#39;</span><span class="p">,</span> <span class="s1">&#39;四川省&#39;</span><span class="p">,</span> <span class="s1">&#39;重庆市&#39;</span><span class="p">,</span> <span class="s1">&#39;海南省&#39;</span><span class="p">,</span> <span class="s1">&#39;河北省&#39;</span><span class="p">,</span>
       <span class="s1">&#39;广西壮族自治区&#39;</span><span class="p">,</span> <span class="s1">&#39;云南省&#39;</span><span class="p">,</span> <span class="s1">&#39;黑龙江省&#39;</span><span class="p">,</span> <span class="s1">&#39;河南省&#39;</span><span class="p">,</span> <span class="s1">&#39;内蒙古自治区&#39;</span><span class="p">,</span> <span class="s1">&#39;北京市&#39;</span><span class="p">,</span> <span class="s1">&#39;宁夏回族自治区&#39;</span><span class="p">,</span> <span class="s1">&#39;甘肃省&#39;</span><span class="p">,</span>
       <span class="s1">&#39;安徽省&#39;</span><span class="p">,</span> <span class="s1">&#39;吉林省&#39;</span><span class="p">,</span> <span class="s1">&#39;陕西省&#39;</span><span class="p">,</span> <span class="s1">&#39;湖北省&#39;</span><span class="p">,</span> <span class="s1">&#39;青海省&#39;</span><span class="p">,</span> <span class="s1">&#39;江西省&#39;</span><span class="p">,</span> <span class="s1">&#39;天津市&#39;</span><span class="p">,</span> <span class="s1">&#39;山西省&#39;</span><span class="p">,</span> <span class="s1">&#39;广东省&#39;</span><span class="p">,</span>
       <span class="s1">&#39;贵州省&#39;</span><span class="p">,</span> <span class="s1">&#39;福建省&#39;</span><span class="p">,</span> <span class="s1">&#39;西藏自治区&#39;</span><span class="p">,</span> <span class="s1">&#39;湖南省&#39;</span><span class="p">,</span> <span class="s1">&#39;江苏省&#39;</span><span class="p">,</span> <span class="s1">&#39;辽宁省&#39;</span><span class="p">]</span>


<span class="n">prov_date_counts</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">weekly_df</span> <span class="ow">in</span> <span class="n">人民日报_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;Y&#39;</span><span class="p">)):</span>
    <span class="k">for</span> <span class="n">prov</span> <span class="ow">in</span> <span class="n">provs</span><span class="p">:</span>
        <span class="n">mention_times</span> <span class="o">=</span> <span class="n">weekly_df</span><span class="p">[</span><span class="s1">&#39;content&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">prov</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
        <span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;Date&#39;</span><span class="p">:</span> <span class="n">date</span><span class="p">,</span> 
                <span class="s1">&#39;Object&#39;</span><span class="p">:</span> <span class="n">prov</span><span class="p">,</span> 
                <span class="s1">&#39;MentionTimes&#39;</span><span class="p">:</span> <span class="n">mention_times</span><span class="p">,</span>
                <span class="s1">&#39;MentionRatio&#39;</span><span class="p">:</span> <span class="n">mention_times</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">weekly_df</span><span class="p">)</span>
               <span class="p">}</span>
        <span class="n">prov_date_counts</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
        
<span class="n">panel_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">prov_date_counts</span><span class="p">)</span>
<span class="n">panel_df</span>
</code></pre></div><p><img loading="lazy" src="img/04-year-panel.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">panel_df</span><span class="p">[</span><span class="n">panel_df</span><span class="p">[</span><span class="s1">&#39;Object&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;浙江省&#39;</span><span class="p">]</span>
</code></pre></div><p><img loading="lazy" src="img/05-filter-prov.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四封装代码">四、封装代码</h2>
<p>我封装了代码， 大家可以拿来直接用。 支持csv/xls/xlsx新闻类文件数据， 字段可设定，周期(年Y月M周W日D时H)可设定。</p>
<br>
<h3 id="41-generate_panel_data">4.1 generate_panel_data</h3>
<p>generate_panel_data(file, objects, text_field=&lsquo;content&rsquo;, date_field=&lsquo;date&rsquo;, encoding=&lsquo;utf-8&rsquo;, freq=&lsquo;W&rsquo;)</p>
<ul>
<li><strong>file</strong> 数据文件路径， .csv 或 .csv.gzip、xlsx、xls</li>
<li><strong>objects</strong> 支持list和dict</li>
<li><strong>text_field</strong> 指定数据文件中「文本」字段名，默认为&rsquo;content'</li>
<li><strong>date_field</strong> 指定数据文件中「日期」字段名，默认为&rsquo;date'</li>
<li><strong>freq</strong> 生成面板数据日期的周期， 年Y、月M、周W、日D、时H</li>
<li><strong>encoding</strong> 数据文件编码格式， 默认utf-8编码， 可能有的csv文件需要调整该参数</li>
</ul>
<p>返回<strong>DataFrame</strong>，DataFrame字段含 <strong>Date</strong>、<strong>Object</strong>、<strong>MentionTimes</strong>、<strong>MentionRatio</strong></p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">generate_panel_data</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">objects</span><span class="p">,</span> <span class="n">text_field</span><span class="o">=</span><span class="s1">&#39;content&#39;</span><span class="p">,</span> <span class="n">date_field</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;W&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    - file 数据文件路径， .csv 或 .csv.gzip、xlsx、xls
</span><span class="s2">    - objects 支持list和dict
</span><span class="s2">    - text_field 指定数据文件中「文本」字段名，默认为&#39;content&#39;
</span><span class="s2">    - date_field 指定数据文件中「日期」字段名，默认为&#39;date&#39;
</span><span class="s2">    - freq 生成面板数据日期的周期， 年Y、月M、周W、日D、时H
</span><span class="s2">    - encoding 数据文件编码格式， 默认utf-8编码， 可能有的csv文件需要调整该参数
</span><span class="s2">
</span><span class="s2">    返回DataFrame，DataFrame字段含Date、Object、MentionTimes、MentionRatio
</span><span class="s2">    &#34;&#34;&#34;</span>
    
    <span class="c1">#读取数据文件</span>
    <span class="k">if</span> <span class="s1">&#39;csv&#39;</span> <span class="ow">in</span> <span class="n">file</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">encoding</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="n">encoding</span><span class="p">)</span>
    <span class="k">elif</span> <span class="s1">&#39;.xlsx&#39;</span> <span class="ow">in</span> <span class="n">file</span><span class="p">:</span>
        <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="k">elif</span> <span class="s1">&#39;.xsx&#39;</span> <span class="ow">in</span> <span class="n">file</span><span class="p">:</span>
        <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">&#34;目前只支持csv、xlsx、xlsx三种文件格式&#34;</span><span class="p">)</span> 

        
    <span class="c1">#更改日期格式</span>
    <span class="n">df</span><span class="p">[</span><span class="n">date_field</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">date_field</span><span class="p">])</span>
    <span class="n">prov_date_counts</span> <span class="o">=</span> <span class="p">[]</span>
    
    <span class="c1">#构造面板数据</span>
    <span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">freq_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="n">date_field</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="n">freq</span><span class="p">)):</span>
        
        <span class="c1">#objects为list的操作</span>
        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">objects</span><span class="p">,</span> <span class="nb">list</span><span class="p">):</span>
            <span class="k">for</span> <span class="n">obj</span> <span class="ow">in</span> <span class="n">objects</span><span class="p">:</span>
                <span class="c1">#统计出现obj新闻的次数</span>
                <span class="n">mention_times</span> <span class="o">=</span> <span class="n">freq_df</span><span class="p">[</span><span class="n">text_field</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
                <span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;Date&#39;</span><span class="p">:</span> <span class="n">date</span><span class="p">,</span> 
                        <span class="s1">&#39;Object&#39;</span><span class="p">:</span> <span class="n">obj</span><span class="p">,</span> 
                        <span class="s1">&#39;MentionTimes&#39;</span><span class="p">:</span> <span class="n">mention_times</span><span class="p">,</span>
                        <span class="s1">&#39;MentionRatio&#39;</span><span class="p">:</span> <span class="n">mention_times</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">freq_df</span><span class="p">)}</span>
                <span class="n">prov_date_counts</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
                
        <span class="c1">#objects为dict的操作</span>
        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">objects</span><span class="p">,</span> <span class="nb">dict</span><span class="p">):</span>
            <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">words</span> <span class="ow">in</span> <span class="n">objects</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
                <span class="c1">#统计某概念词words出现的新闻的条数，等同于object出现次数。</span>
                <span class="n">mention_words_times</span> <span class="o">=</span> <span class="n">freq_df</span><span class="p">[</span><span class="n">text_field</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">))</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span>
                <span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;Date&#39;</span><span class="p">:</span> <span class="n">date</span><span class="p">,</span> 
                        <span class="s1">&#39;Object&#39;</span><span class="p">:</span> <span class="n">key</span><span class="p">,</span> 
                        <span class="s1">&#39;MentionTimes&#39;</span><span class="p">:</span> <span class="n">mention_words_times</span><span class="p">,</span>
                        <span class="s1">&#39;MentionRatio&#39;</span><span class="p">:</span> <span class="n">mention_words_times</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">freq_df</span><span class="p">)}</span>
                <span class="n">prov_date_counts</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
                
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;传入的objects参数有问题， 该参数必须是列表或字典&#39;</span><span class="p">)</span>
            <span class="k">break</span>
    <span class="n">panel_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">prov_date_counts</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">panel_df</span>
</code></pre></div><br>
<h3 id="42-plot_figure">4.2 plot_figure</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">plot_figure</span><span class="p">(</span><span class="n">panel_df</span><span class="p">,</span> <span class="n">title</span><span class="p">,</span> <span class="n">object_field</span><span class="o">=</span><span class="s1">&#39;Object&#39;</span><span class="p">,</span> <span class="n">date_field</span><span class="o">=</span><span class="s1">&#39;Date&#39;</span><span class="p">,</span> <span class="n">value_filed</span><span class="o">=</span><span class="s1">&#39;MentionRatio&#39;</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    panel_df:  面板数据
</span><span class="s2">    title:  折线图标题
</span><span class="s2">    date_field: panel_df中的日期字段
</span><span class="s2">    value_filed: panel_df中的要绘图的值的字段名
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
    <span class="kn">import</span> <span class="nn">matplotlib</span>
    <span class="kn">import</span> <span class="nn">scienceplots</span>
    <span class="kn">import</span> <span class="nn">platform</span>
    <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
    <span class="kn">import</span> <span class="nn">matplotlib_inline</span>
    <span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
    <span class="kn">import</span> <span class="nn">jieba</span>
    <span class="kn">import</span> <span class="nn">warnings</span>
    <span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
    <span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>
    <span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
    <span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
    <span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    <span class="n">panel_df</span><span class="p">[</span><span class="n">date_field</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">panel_df</span><span class="p">[</span><span class="n">date_field</span><span class="p">])</span>
    
    <span class="n">new_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">pivot_table</span><span class="p">(</span><span class="n">panel_df</span><span class="p">,</span> 
                            <span class="n">index</span><span class="o">=</span><span class="n">date_field</span><span class="p">,</span>
                            <span class="n">columns</span><span class="o">=</span><span class="n">object_field</span><span class="p">,</span>
                            <span class="n">values</span><span class="o">=</span><span class="n">value_filed</span><span class="p">)</span>
    <span class="n">ax</span> <span class="o">=</span> <span class="n">new_df</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
    <span class="c1"># 添加图例，并指定位置和偏移</span>
    <span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper right&#39;</span><span class="p">,</span> <span class="n">bbox_to_anchor</span><span class="o">=</span><span class="p">(</span><span class="mf">1.15</span><span class="p">,</span> <span class="mf">1.05</span><span class="p">))</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;新闻提及次数&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><br>
<h3 id="43-objects为列表">4.3 objects为列表</h3>
<p>现在假设我拿到一个csv文件， 知道内部有date、text两个字段，现在我想得到提及 四省的新闻次数的面板数据，周期为月份</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">provs2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;山东省&#39;</span><span class="p">,</span> <span class="s1">&#39;河北省&#39;</span><span class="p">,</span> <span class="s1">&#39;湖南省&#39;</span><span class="p">,</span> <span class="s1">&#39;黑龙江省&#39;</span><span class="p">]</span>
<span class="n">panel_df2</span> <span class="o">=</span> <span class="n">generate_panel_data</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s1">&#39;人民日报.csv.gzip&#39;</span><span class="p">,</span> 
                                <span class="n">objects</span><span class="o">=</span><span class="n">provs2</span><span class="p">,</span> 
                                <span class="c1">#实验数据csv文件的日期字段为text</span>
                                <span class="n">text_field</span><span class="o">=</span><span class="s1">&#39;content&#39;</span><span class="p">,</span>  
                                 <span class="c1">#实验数据csv文件的日期字段为date</span>
                                <span class="n">date_field</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> 
                                <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;Y&#39;</span><span class="p">,</span>  <span class="c1">#年度</span>
                                <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="c1">#panel_df2.to_csv(&#39;人民日报新闻鲁冀湘黑四省(objects为列表)年度被提及占比.csv&#39;, index=False)</span>

<span class="n">panel_df2</span>
</code></pre></div><p><img loading="lazy" src="img/06-panel.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plot_figure</span><span class="p">(</span><span class="n">panel_df</span><span class="o">=</span><span class="n">panel_df2</span><span class="p">,</span> 
            <span class="n">title</span><span class="o">=</span><span class="s1">&#39;人民日报新闻鲁、冀、湘、黑四省年度被提及占比(1946-2023)&#39;</span><span class="p">,</span> 
            <span class="n">object_field</span><span class="o">=</span><span class="s1">&#39;Object&#39;</span><span class="p">,</span> 
            <span class="n">date_field</span><span class="o">=</span><span class="s1">&#39;Date&#39;</span><span class="p">,</span> 
            <span class="n">value_filed</span><span class="o">=</span><span class="s1">&#39;MentionRatio&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/07-plot.png" alt=""  />
</p>
<br>
<h3 id="44-objects为字典">4.4 objects为字典</h3>
<p>现在假设我拿到一个csv文件， 知道内部有date、text两个字段，现在我想得到提及 三类概念词 新闻次数的面板数据，周期为月份</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据整理比较粗糙，大家能get到我的意思即可</span>
<span class="n">provs3</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;经济发展&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;经济&#39;</span><span class="p">,</span> <span class="s1">&#39;发展&#39;</span><span class="p">,</span> <span class="s1">&#39;建设&#39;</span><span class="p">,</span> <span class="s1">&#39;经济发展&#39;</span><span class="p">],</span> 
          <span class="s1">&#39;环境保护&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;环境保护&#39;</span><span class="p">,</span> <span class="s1">&#39;保护环境&#39;</span><span class="p">,</span> <span class="s1">&#39;绿水青山&#39;</span><span class="p">],</span>
          <span class="s1">&#39;司法建设&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;法律&#39;</span><span class="p">,</span> <span class="s1">&#39;司法&#39;</span><span class="p">,</span> <span class="s1">&#39;司法建设&#39;</span><span class="p">],</span>
        <span class="p">}</span>


<span class="n">panel_df3</span> <span class="o">=</span> <span class="n">generate_panel_data</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s1">&#39;人民日报.csv.gzip&#39;</span><span class="p">,</span> 
                                <span class="n">objects</span><span class="o">=</span><span class="n">provs3</span><span class="p">,</span> 
                                <span class="c1">#实验数据csv文件的日期字段为text</span>
                                <span class="n">text_field</span><span class="o">=</span><span class="s1">&#39;content&#39;</span><span class="p">,</span>  
                                 <span class="c1">#实验数据csv文件的日期字段为date</span>
                                <span class="n">date_field</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> 
                                <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;Y&#39;</span><span class="p">,</span>  <span class="c1">#年度</span>
                                <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="c1">#panel_df3.to_csv(&#39;人民日报新闻三概念词(objects为字典)年度被提及占比.csv&#39;, index=False)</span>
<span class="n">panel_df3</span>
</code></pre></div><p><img loading="lazy" src="img/08-panel.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plot_figure</span><span class="p">(</span><span class="n">panel_df</span><span class="o">=</span><span class="n">panel_df3</span><span class="p">,</span> 
            <span class="n">title</span><span class="o">=</span><span class="s1">&#39;人民日报新闻经济、环境、司法三类概念词年度被提及占比(1946-2023)&#39;</span><span class="p">,</span> 
            <span class="n">object_field</span><span class="o">=</span><span class="s1">&#39;Object&#39;</span><span class="p">,</span> 
            <span class="n">date_field</span><span class="o">=</span><span class="s1">&#39;Date&#39;</span><span class="p">,</span> 
            <span class="n">value_filed</span><span class="o">=</span><span class="s1">&#39;MentionRatio&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/09-plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四获取数据集">四、获取数据集</h2>
<p><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">新闻数据集 | 含 人民日报/经济日报/光明日报 等 120 家媒体(更新至2024.06)</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">加微信 372335839， 备注「姓名-学校-专业」
</code></pre></div><br>
<p>更多数据集，可点击前往 <a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></p>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>代码 | 使用「新闻数据」测量 「经济政策不确定性EPU」指标</title>
      <link>https://textdata.cn/blog/2023-12-20-measure-china-economic-policy-uncertainty/</link>
      <pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-20-measure-china-economic-policy-uncertainty/</guid>
      <description>使用新闻联播、经济日报、人民日报，计算经济政策不确定性指数</description>
      <content:encoded><![CDATA[<h2 id="一经济政策不确定性指标">一、经济政策不确定性指标</h2>
<p>经济政策不确定性(Economic Policy Uncertainty, EPU) 通常是用来衡量经济中政策不确定性水平的一种度量方式。 本文参考</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
</code></pre></div><br>
<h3 id="11-新闻数据库">1.1 新闻数据库</h3>
<p><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">新闻数据集 | 含 人民日报/经济日报/光明日报 等 60+ 家媒体(2024.05.24)</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">人民日报rmrb:       1946-05-15 ~ 2024-05-24
光明日报gmrb:       1985-01-01 ~ 2024-05-24
人民政协报rmzxb:     2008-01-02 ~ 2024-05-24
经济日报jjrb:       2008-01-27 ~ 2024-05-24
中国青年报zqb:     2005-01-01 ~ 2024-05-24
南方周末nfzm:       2008-01-02 ~ 2023-5-31
</code></pre></div><br>
<h3 id="12-算法">1.2 算法</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Step-1. 选择了114家中国大陆的报纸，其中包括北京、上海、广州和天津等主要城市的报纸。
Step-2. 对于每家报纸，搜索包含以下三个关键词之一的文章：经济、不确定性和政策。这些关键词的中文和英文对照可以在论文的表格1中找到。
Step-3. 将每个月的文章数量按照满足第一个关键词的文章数量进行缩放。
Step-4. 将时间序列标准化，使其在2000年1月至2011年12月期间的标准差为1。 保证所有媒体计算得到的epu是可比的。
Step-5. 对十家报纸的月度序列进行简单平均，并将指标归一化，使其在2000年1月至2011年12月期间的平均值为100。
</code></pre></div><p>文献中算法内容长， 结构化不足， 理解起来需要一些脑力。 大邓换种描述方式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">EPU_t = m/n

- m  时期 t 同时含经济Economic、政策Policy、不确定Uncertainty三类词的新闻条数m
- n  时期 t 总的新闻条数n
</code></pre></div><p>本推文是利用一个媒体进行 <em><strong>EPU</strong></em> 指标的构建， 只需用到算法中的前 3 个步骤。</p>
<p><br><br></p>
<h2 id="二准备工作">二、准备工作</h2>
<p>EPU 算法代码已封装到 cntext2.1.1 中， 计算这个指数， 就变得容易多了。</p>
<h3 id="21-安装cntext">2.1 安装cntext</h3>
<p>我使用的自己 <strong>未公开</strong> 的cntext 2.1.1 版本， Bug频出，等调整好了再公开。</p>
<p>将 <em><strong>cntext-2.1.1-py3-none-any.whl</strong></em> 放置于桌面，打开 <em><strong>cmd</strong></em>  (苹果电脑打开terminal)， 输入cd desktop</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop
</code></pre></div><br>
<p>之后在 <em><strong>cmd</strong></em>  (苹果电脑打开terminal) 中使用 <em><strong>pip3</strong></em> 安装</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install pdfdocx
pip3 install distinctiveness
pip3 install pandarallel
pip3 install cntext-2.1.2-py3-none-any.whl
</code></pre></div><br>
<p>文末有 <em><strong>cntext-2.1.1-py3-none-any.whl</strong></em>  获取方式</p>
<br>
<h3 id="22-查看内置词典">2.2 查看内置词典</h3>
<p>EPU词典已内置于 cntext2.1.1 中</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">__version__</span><span class="p">)</span>
<span class="n">ct</span><span class="o">.</span><span class="n">get_dict_list</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2.1.1

[&#39;zh_common_NTUSD.yaml&#39;,
 &#39;zh_common_DUTIR.yaml&#39;,
 &#39;enzh_common_StopWords.yaml&#39;,
 &#39;en_valence_Concreteness.yaml&#39;,
 &#39;en_common_LoughranMcDonald.yaml&#39;,
 &#39;zh_common_FinanceSenti.yaml&#39;,
 &#39;zh_common_TsinghuaPraiseDegrade.yaml&#39;,
 &#39;zh_common_FEPU.yaml&#39;,    
 &#39;en_common_ANEW.yaml&#39;,
 &#39;en_common_NRC.yaml&#39;,
 &#39;zh_valence_ChineseEmoBank.yaml&#39;,
 &#39;zh_valence_SixSemanticDimensionDatabase.yaml&#39;,
 &#39;zh_common_FinacialFormalUnformal.yaml&#39;,
 &#39;zh_common_LoughranMcDonald.yaml&#39;,
 &#39;enzh_common_AdvConj.yaml&#39;,
 &#39;en_common_SentiWS.yaml&#39;,
 &#39;zh_common_Digitalization.yaml&#39;,
 &#39;en_common_LSD2015.yaml&#39;,
 &#39;zh_common_HowNet.yaml&#39;,
 &#39;zh_common_EPU.yaml&#39;]      #Huang, Yun, and Paul Luk（2020）
</code></pre></div><br>
<h3 id="23-导入词典">2.3 导入词典</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="n">EPU_infos</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">read_yaml_dict</span><span class="p">(</span><span class="s1">&#39;zh_common_EPU.yaml&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">EPU_infos</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;Name&#39;: &#39;中文经济政策不确定性词典EPU&#39;, 

&#39;Desc&#39;: &#39;中文经济政策不确定性词典EPU, 含经济Economic、政策Policy、不确定性Uncertainty三个词表&#39;, &#39;Refer&#39;: &#39;Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367&#39;, 

&#39;Category&#39;: [&#39;经济&#39;, &#39;政策&#39;, &#39;不确定&#39;], 

&#39;Dictionary&#39;: 
   {
      &#39;经济&#39;: [&#39;经济&#39;, &#39;金融&#39;], 
      &#39;政策&#39;: [&#39;政策&#39;, &#39;制度&#39;, &#39;体制&#39;, &#39;战略&#39;, &#39;措施&#39;, &#39;规章&#39;, &#39;规例&#39;, &#39;条例&#39;, &#39;政治&#39;, &#39;执政&#39;, &#39;政府&#39;, &#39;政委&#39;, &#39;国务院&#39;, &#39;人大&#39;, &#39;人民代表大会&#39;, &#39;中央&#39;, &#39;国家主席&#39;, &#39;总书记&#39;, &#39;国家领导人&#39;, &#39;总理&#39;, &#39;改革&#39;, &#39;整改&#39;, &#39;整治&#39;, &#39;规管&#39;, &#39;监管&#39;, &#39;财政&#39;, &#39;税&#39;, &#39;人民银行&#39;, &#39;央行&#39;, &#39;赤字&#39;, &#39;利率&#39;], 
      &#39;不确定&#39;: [&#39;不确定&#39;, &#39;不明确&#39;, &#39;波动&#39;, &#39;震荡&#39;, &#39;动荡&#39;, &#39;不稳&#39;, &#39;未明&#39;, &#39;不明朗&#39;, &#39;不清晰&#39;, &#39;未清晰&#39;, &#39;难料&#39;, &#39;难以预料&#39;, &#39;难以预测&#39;, &#39;难以预计&#39;, &#39;难以估计&#39;, &#39;无法预料&#39;, &#39;无法预测&#39;, &#39;无法预计&#39;, &#39;无法估计&#39;, &#39;不可预料&#39;, &#39;不可预测&#39;, &#39;不可预计&#39;, &#39;不可估计&#39;]
   }
}
</code></pre></div><br>
<h3 id="24-ctepu">2.4 ct.epu</h3>
<p>cntext2.1.1内置函数</p>
<p><em><strong>ct.epu(df,  freq=&lsquo;Y&rsquo;,e_pattern='', p_pattern='', u_pattern='')</strong></em></p>
<ul>
<li><em><strong>df</strong></em>  新闻DataFrame；  DataFrame必须含date和text两个字段；每行一条记录，含所有时期所有的新闻。</li>
<li><em><strong>freq</strong></em> 字符串；决定EPU的时间粒度， 年Y、月M、天D， 默认freq=&lsquo;Y&rsquo;</li>
<li><em><strong>e_pattern</strong></em>  字符串；经济类词典，用<code>|</code>间隔词语，形如 <strong>e_pattern = &lsquo;经济|金融&rsquo;</strong></li>
<li><em><strong>p_pattern</strong></em>  字符串；政策词典，用<code>|</code>间隔词语，形如 <strong>p_pattern = &lsquo;政策|治理|行政&rsquo;</strong></li>
<li><em><strong>u_pattern</strong></em> 字符串；不确定性词典，用<code>|</code>间隔词语，形如 <strong>u_pattern = &lsquo;风险|危机|难以预测&rsquo;</strong></li>
</ul>
<p>返回epu时间序列数据，格式为DataFrame</p>
<br>
<br>
<h2 id="三测量epu">三、测量EPU</h2>
<h3 id="31-读取数据">3.1 读取数据</h3>
<p>大邓的 <a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/"><strong>新闻数据集 | 含 人民日报/经济日报/光明日报 等 60+ 家媒体(2024.05.24)</strong></a>中的所有媒体， 均有csv格式， 内含 date 和 text 两个字段， csv中的每行是一条新闻。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">rmrb_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;人民日报.csv.gzip&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">rmrb_df</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;content&#39;</span><span class="p">:</span> <span class="s1">&#39;text&#39;</span><span class="p">},</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">rmrb_df</span> <span class="o">=</span> <span class="n">rmrb_df</span><span class="p">[[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">]]</span>
<span class="n">rmrb_df</span>
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="32-批量运算">3.2 批量运算</h3>
<p><em><strong>ct.epu(df,  freq=&lsquo;Y&rsquo;,  e_pattern='', p_pattern='', u_pattern='')</strong></em></p>
<ul>
<li><em><strong>df</strong></em>  新闻DataFrame；  DataFrame必须含date和text两个字段；每行一条记录，含所有时期所有的新闻。</li>
<li><em><strong>freq</strong></em> 字符串；决定EPU的时间粒度， 年Y、月M、天D， 默认freq=&lsquo;Y&rsquo;</li>
<li><em><strong>e_pattern</strong></em>  字符串；经济类词典，用<code>|</code>间隔词语，形如 <strong>e_pattern = &lsquo;经济|金融&rsquo;</strong></li>
<li><em><strong>p_pattern</strong></em>  字符串；政策词典，用<code>|</code>间隔词语，形如 <strong>p_pattern = &lsquo;政策|治理|行政&rsquo;</strong></li>
<li><em><strong>u_pattern</strong></em> 字符串；不确定性词典，用<code>|</code>间隔词语，形如 <strong>u_pattern = &lsquo;风险|危机|难以预测&rsquo;</strong></li>
</ul>
<p>返回epu时间序列数据，格式为DataFrame</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="n">ct</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">rmrb_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;人民日报.csv.gzip&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">rmrb_df</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;content&#39;</span><span class="p">:</span> <span class="s1">&#39;text&#39;</span><span class="p">},</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">rmrb_df</span> <span class="o">=</span> <span class="n">rmrb_df</span><span class="p">[[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">]]</span>

<span class="c1">#默认使用内置的zh_common_EPU.yaml，所以不设置参数e_pattern、p_pattern、u_pattern</span>
<span class="c1">#EPU的时间粒度是月度M</span>
<span class="n">rmrb_EPU_df</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">epu</span><span class="p">(</span><span class="n">df</span><span class="o">=</span><span class="n">rmrb_df</span><span class="p">,</span>
                <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">,</span>
                <span class="p">)</span>

<span class="n">rmrb_EPU_df</span>
</code></pre></div><p><img loading="lazy" src="img/02-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="n">ct</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">gmrb_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;gmrb.csv.gzip&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="n">gmrb_df</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;content&#39;</span><span class="p">:</span> <span class="s1">&#39;text&#39;</span><span class="p">},</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">gmrb_df</span> <span class="o">=</span> <span class="n">gmrb_df</span><span class="p">[[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">]]</span>

<span class="c1">#默认使用内置的zh_common_EPU.yaml，所以不设置参数e_pattern、p_pattern、u_pattern</span>
<span class="c1">#EPU的时间粒度是月度M</span>
<span class="n">gmrb_EPU_df</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">epu</span><span class="p">(</span><span class="n">df</span><span class="o">=</span><span class="n">gmrb_df</span><span class="p">,</span>
                <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">,</span>
                <span class="p">)</span>

<span class="n">gmrb_EPU_df</span>
</code></pre></div><p><img loading="lazy" src="img/03-df.png" alt=""  />
</p>
<p><br><br></p>
<h3 id="33-注意">3.3 注意</h3>
<p>需要注意， 以上结果都是对一个媒体进行计算，所以没有进行标准化和归一化。</p>
<p>所以媒体1、媒体2计算得到的两个 <em><strong>epu1</strong></em>、<em><strong>epu2</strong></em> 进行数值大小的比较是没有意义的。 如果你有多个媒体，计算得到多个 <em><strong>epu1</strong></em> 、<em><strong>epu2</strong></em>、 <em><strong>epu3</strong></em>， 想计算 <em><strong>mean_epu</strong></em> , 那么记得实现论文算法里的 <em><strong>step4</strong></em>， 再执行 <em><strong>step5</strong></em> 求均值。</p>
<p><br><br></p>
<h2 id="四可视化">四、可视化</h2>
<h3 id="41-dfplot">4.1 df.plot</h3>
<p>df.plot使用的前提是要将日期字段调整为index, 满足下面形态的数据可以使用.plot绘图</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">rmrb_EPU_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/04-df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">rmrb_EPU_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="n">title</span><span class="o">=</span><span class="s1">&#39;EPU Index </span><span class="se">\n</span><span class="s1">source: China Renmin Daily News&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/05-fig.png" alt=""  />
</p>
<br>
<h3 id="42-支持中文">4.2 支持中文</h3>
<p>支持中文的代码，无脑copy</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>
<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>



<span class="n">rmrb_EPU_df</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;经济政策不确定性EPU </span><span class="se">\n</span><span class="s1">source: 人民日报&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;EPU值&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/06-fig.png" alt=""  />
</p>
<br>
<h3 id="43-比较两个媒体的走势">4.3 比较两个媒体的走势</h3>
<p>两个新闻媒体覆盖的时间段不同，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">人民日报rmrb:       1946-05-15 ~ 2023-12-18
光明日报gmrb:       1985-01-01 ~ 2023-12-18
</code></pre></div><p>截取1985-01-01之后的数据，进行比较。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">rmrb_EPU_df2</span> <span class="o">=</span> <span class="n">rmrb_EPU_df</span><span class="p">[</span><span class="n">rmrb_EPU_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">&gt;</span><span class="s1">&#39;1985-01-01&#39;</span><span class="p">]</span>
<span class="n">gmrb_EPU_df2</span> <span class="o">=</span> <span class="n">gmrb_EPU_df</span><span class="p">[</span><span class="n">gmrb_EPU_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">&gt;</span><span class="s1">&#39;1985-01-01&#39;</span><span class="p">]</span>


<span class="n">rmrb_EPU_df2</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;月度经济政策不确定性EPU </span><span class="se">\n</span><span class="s1">source: 人民日报&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;EPU值&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/07-fig.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">gmrb_EPU_df2</span><span class="o">.</span><span class="n">set_index</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;月度经济政策不确定性EPU </span><span class="se">\n</span><span class="s1">source: 光明日报&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;EPU值&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">13</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/08-fig.png" alt=""  />
</p>
<p>光明日报数据中缺失了1989年了，所以图中有空挡。但是从两个图中可以看到 epu 的走势大致一致。</p>
<p>作为事后诸葛的大邓， 从人民日报和光明日报计算出的EPU可以看到， 23年不应该投资，应该保守点。</p>
<p>嗯嗯， 同时作为投资小白，人群中的反向指标人，今年本人收益率-20%，大家开心不~</p>
<p><br><br></p>
<h2 id="五相关内容">五、相关内容</h2>
<p>用到以上操作的代码，通过本文以及这4个推文，巩固 pandas 操作知识点。</p>
<ul>
<li><a href="https://textdata.cn/blog/2023-12-17-how-to-generate-panel-data-from-gov-report-dataset/">代码 | 使用 <strong>地方gov工作报告</strong> 生成某类概念词频「<strong>面板数据</strong>」</a></li>
<li><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/">代码 | 使用「<strong>新闻数据</strong>」构造概念词提及量「<strong>面板数据</strong>」</a></li>
<li><a href="https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/">数据代码| 使用 <strong>cctv新闻联播文稿</strong> 构造「<strong>面板数据</strong>」</a></li>
<li><a href="https://textdata.cn/blog/2028-12-18-how-to-extract-data-from-patent-application-dataset/">代码 | 使用 <strong>3571w专利申请数据</strong> 构造「<strong>面板数据</strong>」</a></li>
<li><a href="https://textdata.cn/blog/2024-04-25-firm-economic-policy-uncertainty/">代码 | 使用 <strong>MD&amp;A文本</strong> 测量「<strong>企业不确定性感知FEPU指标</strong>」</a></li>
</ul>
<br>
<p>相关文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[2]Caldara, Dario, Matteo Iacoviello, Patrick Molligo, Andrea Prestipino, and Andrea Raffo. &#34;The economic effects of trade policy uncertainty.&#34; Journal of Monetary Economics 109 (2020): 38-59.
</code></pre></div><p><br><br></p>
<h2 id="六获取资料">六、获取资料</h2>
<ul>
<li>
<p>免费领取<a href="rmrb_epu.csv">rmrb_epu.csv</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset/">按需购买 <strong>新闻数据集 | 含 人民日报/经济日报/光明日报 等 120 家媒体(2025.06)</strong></a></p>
</li>
<li>
<p>100元 <em><strong>cntext-2.1.2-py3-none-any.whl</strong></em>  加微信372335839，备注「姓名-学校-专业」</p>
</li>
</ul>
<p><br><br></p>
<h2 id="精选内容">精选内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集汇总</a></li>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)数据挖掘文献资料汇总</a></li>
<li><a href="https://textdata.cn/blog/2024-04-27-cntext2x-usage-tutorial/">推荐 | 文本分析库cntext2.x使用手册</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a>
<br>
<br></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据(付费) | 使用cctv新闻联播文稿构造面板数据</title>
      <link>https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/</link>
      <pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-26-cctv1-xwlb-news-text-dataset/</guid>
      <description>cctv新闻联播文稿数据集，可使用Python对其进行挖掘，借助文本挖掘技术研究鸿观经济政策、社会学、传播学等领域。</description>
      <content:encoded><![CDATA[<h2 id="一新闻联播">一、新闻联播</h2>
<h3 id="11-数据集概况">1.1 数据集概况</h3>
<p>全网最全的数据集， 记录缺失率最低的<strong>xwlb数据集</strong>，  <strong>新</strong>(fan)<strong>闻</strong>(rong)<strong>联</strong>(chang)<strong>播</strong>(sheng) 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: 央视网https://tv.cctv.com/lm/xwlb/ 
覆盖日期: 2006-09-01 ~ 2023-12-15
日记录数: 6315天
字段: date、 text
</code></pre></div><br>
<h3 id="12-研究用途">1.2 研究用途</h3>
<p>可从中提取丰富的指标，包括但不限于经济政策不确定性指数EPU 、 媒体关注度、媒体情绪、文本相似度。此外， 可训练词向量，开发新的概念词典，构建新的指标指数。数据带时间， 参照前面指标， 依主体、日期、指标进行计算， 可构造面板数据，因此在经济学、管理学、新闻传播学、公共管理等领域均有较高的研究价值。</p>
<p>相关参考文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]洪永淼,刘俸奇,薛涧坡.政府与市场心理因素的经济影响及其测度[J].管理世界,2023,39(03):30-51.
[2]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[3]张一帆,林建浩,樊嘉诚.新闻文本大数据与消费增速实时预测——基于叙事经济学的视角[J].金融研究,2023,(05):152-169.
[4]Huang, Yun, and Paul Luk. &#34;Measuring economic policy uncertainty in China.&#34; China Economic Review 59 (2020): 101367
[5]欧阳资生,陈世丽,杨希特,刘凤根,周学伟.经济政策不确定性、网络舆情与金融机构系统性风险[J].管理科学学报,2023,26(04):62-86.
[6]逯东,宋昕倍.媒体报道、上市公司年报可读性与融资约束[J].管理科学学报,2021,24(12):45-61.
[7]彭涛,黄福广,孙凌霞.经济政策不确定性与风险承担:基于风险投资的证据[J].管理科学学报,2021,24(03):98-114.
[8]庞锐.采纳与内化：多重制度压力如何影响河长制创新扩散——基于省级政府的定向配对事件史分析[J].公共管理学报,2023,20(02):25-37+165-166.
</code></pre></div><br>
<h3 id="13-获取数据">1.3 获取数据</h3>
<p>【新闻联播xwlb】按年度，每年50元。 全量购买200元。</p>
<p><strong>加微信 372335839， 备注「姓名-学校-专业」</strong>。</p>
<p>更多新闻类数据  <a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset">数据集 | 人民日报/经济日报/光明日报 等 7 家新闻类文本数据集</a></p>
<p><br><br></p>
<h2 id="二数据检查">二、数据检查</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#6315天</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;cctv_xwlb.csv&#39;</span><span class="p">)</span>

<span class="c1">#变更日期格式，可进行日期计算</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">6315
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<h3 id="22-日期涵盖">2.2 日期涵盖</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#执行过 df[&#39;date&#39;] = pd.to_datetime(df[&#39;date&#39;])
#才能进行日期计算

print(df[&#39;date&#39;].min().date())
print(df[&#39;date&#39;].max().date())
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2006-09-01
2023-12-15
</code></pre></div><br>
<h3 id="33-缺失率">3.3 缺失率</h3>
<p>查看是否存在某些日期对应的文本是空</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0
</code></pre></div><br>
<p>生成2006-09-01-2023-12-15之间所有的日期datelist， 查看datelist哪些日期不在数据集中，以判断是否遗漏某些日期。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">datetime</span> <span class="k">as</span> <span class="nn">dt</span>  <span class="c1">#import datetime, timedelta  </span>
  
<span class="n">start_date</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2006</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>  
<span class="n">end_date</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2023</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">15</span><span class="p">)</span>  
<span class="n">delta</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>  
  
<span class="n">date_list</span> <span class="o">=</span> <span class="p">[]</span>  
<span class="n">current_date</span> <span class="o">=</span> <span class="n">start_date</span>  
<span class="k">while</span> <span class="n">current_date</span> <span class="o">&lt;=</span> <span class="n">end_date</span><span class="p">:</span>  
    <span class="n">date_list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">current_date</span><span class="p">)</span>  
    <span class="n">current_date</span> <span class="o">+=</span> <span class="n">delta</span>  
  
<span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">date_list</span><span class="p">)</span><span class="o">.</span><span class="n">isin</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">])</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">date_list</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1.0
</code></pre></div><p>2006-09-01~2023-12-15之间所有的日期， 均存在于新闻数据集中，也就是说数据集没有遗漏这期间任何一天的新闻。</p>
<p><br><br></p>
<h2 id="三实验">三、实验</h2>
<p>按月份(也可调整为周、年)计算一下正负面情绪词在新闻中出现次数， 然后转化为情感分值， 绘制成折线图。</p>
<ol>
<li>导入词典</li>
<li>设计算法, 如统计新闻总词数、正面词数、负面词数。</li>
<li>转化为情感分值</li>
<li>按月份汇总</li>
<li>绘制折线图</li>
</ol>
<h3 id="31-导入词典">3.1 导入词典</h3>
<p>使用cntext2.0.0内置的中文经济金融场景的情感词典，该词典比较适合xwlb这种题材，我们查看一下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="c1">#未开源cntext2.0.0</span>

<span class="n">diction</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">read_yaml_dict</span><span class="p">(</span><span class="s1">&#39;zh_common_FinanceSenti.yaml&#39;</span><span class="p">)[</span><span class="s1">&#39;Dictionary&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;pos词数&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">diction</span><span class="p">[</span><span class="s1">&#39;pos&#39;</span><span class="p">]))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;neg词数&#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">diction</span><span class="p">[</span><span class="s1">&#39;neg&#39;</span><span class="p">]))</span>


<span class="c1">#词典整理自论文， 大家也可自行整理</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">read_yaml_dict</span><span class="p">(</span><span class="s1">&#39;zh_common_FinanceSenti.yaml&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pos词数 3338
neg词数 5890


{&#39;Refer&#39;: &#39;Fuwei Jiang, Joshua Lee, Xiumin Martin, and Guofu Zhou.“Manager Sentiment and Stock Returns” Journal of Financial Economics 132(1), 2019,126-149&#39;,
 
 &#39;Desc&#39;: &#39;Chinese Financial Sentiment Dictionary&#39;,
 &#39;Category&#39;: [&#39;pos&#39;, &#39;neg&#39;],
 
 &#39;Name&#39;: &#39;Chinese Financial Sentiment Dictionary&#39;,
 
 &#39;Dictionary&#39;: {&#39;pos&#39;: [&#39;安定&#39;, &#39;安康&#39;, &#39;帮助&#39;, &#39;榜样&#39;, &#39;饱满&#39;, ...  &#39;最合适&#39;, &#39;最小&#39;, &#39;最新进展&#39;, &#39;最早&#39;, &#39;遵法&#39;],
  
                &#39;neg&#39;: [&#39;败坏名声&#39;, &#39;被没收的&#39;, &#39;变节&#39;, &#39;不便&#39;, &#39;不适当&#39;, &#39;妨碍&#39;,  &#39;腐败&#39;,...&#39;唉声叹气&#39;, &#39;哀怨&#39;, &#39;哀叹&#39;, &#39;哀伤&#39;, &#39;哀悼&#39;]
}
</code></pre></div><br>
<p><strong>配置cntext-2.0.0-py3-none-any.whl的方法</strong></p>
<ol>
<li>
<p>将whl文件放置于电脑桌面。</p>
</li>
<li>
<p>打开cmd(mac打开terminal)， 输入 <code>cd desktop</code>,  按Enter回车键</p>
</li>
<li>
<p>继续在cmd(mac打开terminal)中，输入 <code>pip3 install cntext-2.0.0-py3-none-any.whl</code>,  按Enter回车键</p>
</li>
</ol>
<br>
<h3 id="32-统计词频">3.2 统计词频</h3>
<p>这里</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>  
<span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">diction</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">read_yaml_dict</span><span class="p">(</span><span class="s1">&#39;zh_common_FinanceSenti.yaml&#39;</span><span class="p">)[</span><span class="s1">&#39;Dictionary&#39;</span><span class="p">]</span>
<span class="n">pos_patern</span> <span class="o">=</span> <span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">diction</span><span class="p">[</span><span class="s1">&#39;pos&#39;</span><span class="p">])</span>
<span class="n">neg_patern</span> <span class="o">=</span> <span class="s1">&#39;|&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">diction</span><span class="p">[</span><span class="s1">&#39;neg&#39;</span><span class="p">])</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;word_num&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">text</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)))</span>

<span class="c1">#正面词数</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;pos_num&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">pos_patern</span><span class="p">)</span>

<span class="c1">#负面词数</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;neg_num&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">fillna</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">neg_patern</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<h3 id="33-计算情感值">3.3 计算情感值</h3>
<p>使用 <code>score = pos-neg/(pos+neg)</code>， 可以将数值范围调整到 <code>-1 ~ 1</code>之间。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;senti_score&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pos_num&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;neg_num&#39;</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;pos_num&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;neg_num&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;最小值&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;senti_score&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;均值&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;senti_score&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;中位数&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;senti_score&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">median</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;最大&#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;senti_score&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">最小值 -0.36633663366336633
均值 0.5448464974146746
中位数 0.5657256687535572
最大 1.0
</code></pre></div><br>
<h3 id="34-按月份">3.4 按月份</h3>
<p>这里用到df.groupby方法， 可以按某种分组方法，得到不同组的dataframe集合。</p>
<p>dataframe集合可以通过for循环逐个迭代，分别计算对应年度的信息。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">month_datas</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">date</span><span class="p">,</span> <span class="n">year_df</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">Grouper</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s1">&#39;M&#39;</span><span class="p">)):</span>
    <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">date</span>
    
    <span class="n">data</span><span class="p">[</span><span class="s1">&#39;senti_score&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">year_df</span><span class="p">[</span><span class="s1">&#39;senti_score&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
    <span class="n">month_datas</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
    
<span class="n">month_info_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">month_datas</span><span class="p">)</span>
<span class="n">month_info_df</span>
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<h3 id="35-绘制月情感折线图">3.5 绘制月情感折线图</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">import matplotlib.pyplot as plt
import matplotlib
import matplotlib_inline
matplotlib_inline.backend_inline.set_matplotlib_formats(&#39;png&#39;, &#39;svg&#39;)
import scienceplots
import platform
import pandas as pd
import numpy as np


plt.style.use([&#39;science&#39;, &#39;no-latex&#39;, &#39;cjk-sc-font&#39;])
system = platform.system()  # 获取操作系统类型

if system == &#39;Windows&#39;:
    font = {&#39;family&#39;: &#39;SimHei&#39;}
elif system == &#39;Darwin&#39;:
    font = {&#39;family&#39;: &#39;Arial Unicode MS&#39;}
else:
    font = {&#39;family&#39;: &#39;sans-serif&#39;}
matplotlib.rc(&#39;font&#39;, **font)  # 设置全局字体


plt.figure(figsize=(12, 5))
plt.plot(month_info_df[&#39;date&#39;], month_info_df[&#39;senti_score&#39;])
plt.title(&#39;XWLB月度情感值折线图(2006-2023)&#39;)
plt.show()
</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四相关内容">四、相关内容</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2023-12-27-measure-gov-digitalization/">代码 | 使用gov工作报告生成数字化词频「面板数据」</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-18-how-to-generate-panel-data-from-daily-news-dataset/">代码 | 使用「新闻数据」构造概念词提及量「面板数据」</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-02-26-cctv1-xwlb-news-text-dataset/">数据(付费) | 使用cctv新闻联播文稿构造面板数据</a></p>
</li>
</ul>
<p><br><br></p>
<h2 id="五获取数据">五、获取数据</h2>
<p>【新闻联播xwlb】按年度，每年50元。 全量购买100元。</p>
<p><strong>加微信 372335839， 备注「姓名-学校-专业」</strong>。</p>
<p>更多新闻类数据  <a href="https://textdata.cn/blog/2023-12-14-daily-news-dataset">数据集 | 人民日报/经济日报/光明日报 等 7 家新闻类文本数据集</a></p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 上市公司 208 万条专利数据集 (1991-2022)</title>
      <link>https://textdata.cn/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/</link>
      <pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/</guid>
      <description>上市公司专利申请数据集</description>
      <content:encoded><![CDATA[<h2 id="一上市公司专利数据集">一、上市公司专利数据集</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">上市公司数:  4393
专利记录数:  2083784
专利申请日:  1991-01-30 ~ 2022-12-31
原始来源:   国家知识产权局
</code></pre></div><br>
<h3 id="声明">声明</h3>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<br>
<br>
<h2 id="二数据探索">二、数据探索</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#df = pd.read_csv(&#39;上市公司-专利明细数据1991-2022.csv&#39;)</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;上市公司-专利明细数据1991-2022.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>

<span class="c1">#剔除重复的</span>
<span class="n">df</span><span class="o">.</span><span class="n">drop_duplicates</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<h3 id="22-上市公司数--记录数">2.2 上市公司数 &amp; 记录数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;上市公司数: </span><span class="si">{</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">nunique</span><span class="p">()</span> <span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;专利申请数: </span><span class="si">{</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span> <span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">上市公司数: 4393
专利申请数: 2083784
</code></pre></div><br>
<h3 id="23-字段缺失率">2.3 字段缺失率</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;字段缺失率统计&#39;</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="o">.</span><span class="n">columns</span><span class="p">:</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="nb">round</span><span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">df</span><span class="p">[</span><span class="n">col</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
    <span class="c1">#print(f&#34;{col}: {ratio}%&#34;)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">col</span><span class="si">:</span><span class="s2">&lt;</span><span class="si">{</span><span class="mi">10</span><span class="si">}}</span><span class="s2">: </span><span class="si">{</span><span class="n">ratio</span><span class="si">}</span><span class="s2">%&#34;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">字段缺失率统计

股票代码      : 0.0%
原始企业名称    : 0.0%
专利申请主体    : 0.0%
专利名称      : 0.0%
发明人       : 0.0%
地址        : 0.04%
专利类型      : 0.04%
专利申请号     : 0.04%
申请公布号     : 58.61%
授权公布号     : 41.43%
专利申请日     : 0.0%
公开公告日     : 58.61%
授权公告日     : 41.43%
专利申请年份    : 0.0%
原始来源      : 0.0%
统计截至日期    : 0.0%
更新时间      : 0.0%
</code></pre></div><br>
<h3 id="24-记录的日期范围">2.4 记录的日期范围</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请日&#39;</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;公开公告日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公开公告日&#39;</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;授权公告日&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;授权公告日&#39;</span><span class="p">],</span> <span class="n">errors</span><span class="o">=</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>


<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;专利申请日范围: </span><span class="si">{start}</span><span class="s2"> ~ </span><span class="si">{end}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())[:</span><span class="mi">10</span><span class="p">],</span>
                                           <span class="n">end</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())[:</span><span class="mi">10</span><span class="p">]))</span>
      
      
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;公开公告日范围: </span><span class="si">{start}</span><span class="s2"> ~ </span><span class="si">{end}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公开公告日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())[:</span><span class="mi">10</span><span class="p">],</span>
                                            <span class="n">end</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公开公告日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())[:</span><span class="mi">10</span><span class="p">]))</span>
      
      
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;授权公布日范围: </span><span class="si">{start}</span><span class="s2"> ~ </span><span class="si">{end}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">start</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;授权公告日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())[:</span><span class="mi">10</span><span class="p">],</span>
                                            <span class="n">end</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;授权公告日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())[:</span><span class="mi">10</span><span class="p">]))</span>

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">专利申请日范围: 1991-01-30 ~ 2022-12-31
公开公告日范围: 1994-08-31 ~ 2023-08-25
授权公布日范围: 1993-12-01 ~ 2023-08-25
</code></pre></div><p>日期的三种字段， <em><strong>专利申请日</strong></em> 缺失率为0， 而 <em><strong>公开公告日</strong></em> 、 <em><strong>授权公告日</strong></em> 都分别高达 58.61%、 41.43%。 个人认为数据集涵盖的日期范围，使用<em><strong>专利申请日</strong></em>  更合适一些。</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>


<span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请日&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;上市公司专利数量(1991 ~ 2022)&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;专利数量&#39;</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/plot.png" alt=""  />
</p>
<br>
<h3 id="25-多个申请主体">2.5 多个申请主体</h3>
<p>申请主体可以是多个人，只要在 <em><strong>专利申请主体</strong></em> 中出现了 <code>;</code> , 则表示申请主体是对方的。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="c1">#专利申请人主体可以是单个人(组织)，也可以是多人(组织)</span>
<span class="n">df</span><span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请主体&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">),</span> <span class="kc">True</span><span class="p">,</span> <span class="kc">False</span><span class="p">)][</span><span class="s1">&#39;专利申请主体&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">4          浙江南都电源动力股份有限公司; 杭州南都能源科技有限公司; 杭州南都电池有限公司
8                         中国海洋石油总公司;  中海油能源发展股份有限公司
9                       格力电器(武汉)有限公司;  珠海格力电器股份有限公司
10                        广东美的制冷设备有限公司;  美的集团股份有限公司
13             中国石油化工股份有限公司;  中国石油化工股份有限公司石油化工科学研究院
                             ...                   
2085560                 新疆大全新能源股份有限公司; 内蒙古大全新能源有限公司
2085562         大族激光科技产业集团股份有限公司; 深圳市大族鼎盛智能装备科技有限公司
2085572     中国石油化工股份有限公司;  中国石油化工股份有限公司胜利油田分公司物探研究院
2085573                    广东工业大学;  中船海洋与防务装备股份有限公司
2085574            平高集团有限公司;  河南平高电气股份有限公司;  国家电网公司
Name: 专利申请主体, Length: 516473, dtype: object
</code></pre></div><br>
<p>申请主体超过10个的记录，为了展示方便，这里只显示 <code>['股票代码', '专利申请主体', '专利名称', '专利申请日']</code>这四个字段。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[df[&#39;专利申请主体&#39;].str.count(&#39;;&#39;)&gt;9][[&#39;股票代码&#39;, &#39;专利申请主体&#39;, &#39;专利名称&#39;, &#39;专利申请日&#39;]]
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<p><strong>申请主体数</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df[&#39;专利申请主体&#39;].str.count(&#39;;&#39;)+1
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0          1.0
1          1.0
2          1.0
3          1.0
4          3.0
          ... 
2085572    2.0
2085573    2.0
2085574    3.0
2085575    1.0
2085576    1.0
Name: 专利申请主体, Length: 2083784, dtype: float64
</code></pre></div><br>
<p>申请主体数的汇总</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请主体&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">专利申请主体
1.0     1567311
2.0      428833
3.0       67820
4.0       13130
5.0        4364
6.0        1894
7.0         282
8.0          59
10.0         27
9.0          23
11.0         14
16.0          9
12.0          7
19.0          4
13.0          2
14.0          2
Name: count, dtype: int64
</code></pre></div><br>
<p>均值和方差</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">mainbody_mean = (df[&#39;专利申请主体&#39;].str.count(&#39;;&#39;)+1).mean()
mainbody_std = (df[&#39;专利申请主体&#39;].str.count(&#39;;&#39;)+1).std()

print(&#39;申请主体数均值:&#39;, mainbody_mean)
print(&#39;申请主体数标准差:&#39;,mainbody_std)
</code></pre></div><br>
<p>中学学过正态分布， 在一个正负标准差范围内， 能落下大部分的记录数。咱们看看 <strong>均值加减一个标准差</strong> 占总体的比例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">mask1</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请主体&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">mainbody_mean</span><span class="o">-</span><span class="n">mainbody_std</span><span class="p">)</span>
<span class="n">mask2</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;专利申请主体&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">&lt;</span> <span class="p">(</span><span class="n">mainbody_mean</span><span class="o">+</span><span class="n">mainbody_std</span><span class="p">)</span>

<span class="c1">#落在 均值加减一个标准差范围内的数据占比75%</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">mask1</span> <span class="o">&amp;</span> <span class="n">mask2</span><span class="p">])</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.7521465756527548
</code></pre></div><p><br><br></p>
<h2 id="三相关文献">三、相关文献</h2>
<p>使用专利数据的相关文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Bellstam, Gustaf, Sanjai Bhagat, and J. Anthony Cookson. &#34;A text-based analysis of corporate innovation.&#34; _Management Science_ 67, no. 7 (2021): 4004-4031.
[2]Arts, Sam, Bruno Cassiman, and Jianan Hou. &#34;Position and Differentiation of Firms in Technology Space.&#34; Management Science (2023).
</code></pre></div><p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2.49亿条中国工商注册企业信息(23.9更新)</title>
      <link>https://textdata.cn/blog/2023-12-03-china-mainland-corporate-registration-information/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-03-china-mainland-corporate-registration-information/</guid>
      <description>341个地市， 2亿条工商注册信息， 网盘压缩文件夹体积17.6G</description>
      <content:encoded><![CDATA[<h2 id="一工商数据集">一、工商数据集</h2>
<h3 id="11-概况">1.1 概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: 国家企业信用信息公示系统
记录条数: 2.49亿条
文件体积: 160G(解压后)
涵盖日期: 1949.10.1~2023.9.19

数据集已脱敏处理， 没有手机号、邮箱等联系信息，无商业营销价值。
科研用途，仅供展示。如有问题，加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p><img loading="lazy" src="img/dataset-screen.png" alt=""  />
</p>
<br>
<h3 id="12-字段">1.2 字段</h3>
<p>任意csv文件的字段包括</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 企业名称
- 英文名称
- 统一社会信用代码
- 企业类型
- 经营状态
- 成立日期
- 核准日期
- 法定代表人
- 注册咨本
- 实缴资本
- 参保人数
- 公司规模
- 经营范围
- 注册地址
- 营业期限
- 纳税人识别号
- 工商注册号
- 组织机构代码
- 纳税人资质
- 曾用名
- 所属省份
- 所属城市
- 所属区县
- 网站链接
- 所属行业
- 登记机关
- 经度
- 纬度
</code></pre></div><br>
<h3 id="13--查看文件">1.3  查看文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> [
 &#39;北京.csv.gz&#39;,
 &#39;上海.csv.gz&#39;,
 &#39;南京.csv.gz&#39;,
 ...
 &#39;重庆.csv.gz&#39;,
  ]
</code></pre></div><p><br><br></p>
<h2 id="二实验代码">二、实验代码</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>不考虑电脑内存容量限制， 读取 石家庄市、长沙市、杭州市。如果电脑内存很小，请先阅读  <a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/">推荐 | 如何处理远超电脑内存的csv文件</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">sjz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;石家庄.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">cs_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;长沙.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">hz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;杭州.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>

<span class="c1">#随机显示2条记录</span>
<span class="n">sjz_df</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<h3 id="22-记录数">2.2 记录数</h3>
<p>石家庄.csv 企业记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2010163
</code></pre></div><br>
<h3 id="23-所含字段">2.3 所含字段</h3>
<p>含有的字段有</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">sjz_df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    Index([&#39;企业组织机构代码&#39;, &#39;企业名称&#39;, &#39;注册资本&#39;, &#39;实缴资本&#39;, &#39;纳税人识别号&#39;, &#39;法定代表人&#39;, &#39;企业状态&#39;, &#39;所属行业&#39;,
           &#39;企业名称&#39;, &#39;英文名称&#39;, &#39;统一社会信用代码&#39;, &#39;企业类型&#39;, &#39;经营状态&#39;, &#39;成立日期&#39;, &#39;核准日期&#39;, &#39;法定代表人&#39;,
           &#39;注册咨本&#39;, &#39;实缴资本&#39;, &#39;参保人数&#39;, &#39;公司规模&#39;, &#39;经营范围&#39;, &#39;注册地址&#39;, &#39;营业期限&#39;, &#39;纳税人识别号&#39;, &#39;工商注册号&#39;, &#39;组织机构代码&#39;, &#39;联系电话&#39;, &#39;邮箱&#39;, &#39;纳税人资质&#39;, &#39;曾用名&#39;, &#39;所属省份&#39;, &#39;所属城市&#39;, &#39;所属区县&#39;, &#39;网站链接&#39;, &#39;所属行业&#39;, &#39;登记机关&#39;, &#39;经度&#39;, &#39;纬度&#39;],
          dtype=&#39;object&#39;)
</code></pre></div><br>
<h3 id="24-日期转换">2.4 日期转换</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">])</span>

<span class="c1">#石家庄数据集日期范围</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1917-01-30 00:00:00
2023-09-19 00:00:00
</code></pre></div><br>
<p>查看成立日期为1917-01-30的信息</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">datetime</span>

<span class="n">sjz_df</span><span class="p">[</span><span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">==</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="mi">1917</span><span class="p">,</span> <span class="n">month</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">day</span><span class="o">=</span><span class="mi">30</span><span class="p">)]</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;企业组织机构代码&#39;: {913555: &#39;81130000MC0611518K&#39;},
 &#39;企业名称&#39;: {913555: &#39;中国铁路工会石家庄站委员会&#39;},
 &#39;注册资本&#39;: {913555: &#39;276.5万元人民币&#39;},
 &#39;实缴资本&#39;: {913555: &#39;-&#39;},
 &#39;纳税人识别号&#39;: {913555: &#39;81130000MC0611518K&#39;},
 &#39;法定代表人&#39;: {913555: &#39;韩海峰&#39;},
 &#39;企业状态&#39;: {913555: &#39;暂无&#39;},
 &#39;所属行业&#39;: {913555: &#39;公共管理、社会保障和社会组织&#39;},
 &#39;统一社会信用代码&#39;: {913555: &#39;81130000MC0611518K&#39;},
 &#39;工商注册号&#39;: {913555: nan},
 &#39;组织机构代码&#39;: {913555: &#39;-&#39;},
 &#39;登记机关&#39;: {913555: &#39;河北省总工会&#39;},
 &#39;成立日期&#39;: {913555: Timestamp(&#39;1917-01-30 00:00:00&#39;)},
 &#39;核准日期&#39;: {913555: &#39;1949-10-01&#39;},
 &#39;企业类型&#39;: {913555: &#39;-&#39;},
 &#39;经营期限&#39;: {913555: &#39;2019-04-01 至 2022-02-09&#39;},
 &#39;注册所在地&#39;: {913555: nan},
 &#39;地区编码&#39;: {913555: &#39;130105&#39;},
 &#39;详细地址&#39;: {913555: &#39;石家庄市新华区大桥路2号&#39;},
 &#39;经营范围&#39;: {913555: &#39;-&#39;},
 &#39;参保人数&#39;: {913555: 478.0},
 &#39;企业电话&#39;: {913555: nan},
 &#39;企业座机&#39;: {913555: nan},
 &#39;企业邮箱&#39;: {913555: nan}}
</code></pre></div><p><br><br></p>
<h2 id="三可视化">三、可视化</h2>
<p>绘制一个1992-2023年的注册量折线图</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">years</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1992</span><span class="p">,</span> <span class="mi">2023</span><span class="p">)]</span>

<span class="n">sjz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;石家庄&#39;</span><span class="p">)</span>
<span class="n">cs_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;长沙&#39;</span><span class="p">)</span>
<span class="n">hz_df</span><span class="p">[</span><span class="s1">&#39;成立日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)[</span><span class="n">years</span><span class="p">]</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s1">&#39;杭州&#39;</span><span class="p">)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;工商企业注册量1992-2019年&#39;</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">16</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;black&#39;</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s1">&#39;center&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;年份&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;注册量&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="s1">&#39;upper right&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>    
</code></pre></div><p><img loading="lazy" src="img/output_8_0.png" alt="svg"  />
</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>中国管理科学 | 使用业绩说明会文本数据测量上市公司前瞻性信息</title>
      <link>https://textdata.cn/blog/2023-09-08-earnings-communication-conference-forward-looking-statements-information/</link>
      <pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-09-08-earnings-communication-conference-forward-looking-statements-information/</guid>
      <description>业绩说明会， 是我国上市公司和中小投资 者沟通交流的重要载体。 在年报披露后， 能够 帮助投资者快速、准确地抓取信息披露重点， 全面了解企业发展状况， 增进对企业价值及经 营理念的认同。上市公司的业绩说明会是金融领域中的重要事件，它为投资者、分析师和其他利益相关者提供了一个与公司管理层直接交流的平台。这种数据集的学术价值多方面体现。</description>
      <content:encoded><![CDATA[<p>最近几个月没怎么分享长技术文，正好昨天分享的付费数据集涉及到一篇论文，感觉用到了很多Python的地方，就想着做一期。这篇论文的Python实现，技术要点有两个部分</p>
<ol>
<li><strong>「构建词典」</strong>； 训练word2vec预训练语言模型，并使用该模型扩展出<strong>前瞻性词典集</strong></li>
<li><strong>「算前瞻性指标</strong>」； 根据<strong>前瞻性词典集</strong>,统计每个企业业绩说明会内的前瞻性词在总词数中的比例</li>
</ol>
<p>这两部分，分别对应本文 <strong>「二、实验-构建词典」</strong>、<strong>「三、计算前瞻性」</strong>。</p>
<p><strong>内容较长， 可能对初学小白不友好。 学完大邓课程「<a href="https://textdata.cn/blog/management_python_course/">Python实证指标构建与文本分析</a>」的同学，阅读起来会轻松一些</strong>。</p>
<p><br><br></p>
<p><strong>许帅,邵帅,何贤杰.业绩说明会前瞻性信息对分析师盈余预测准确性的影响——信口雌黄还是言而有征[J].中国管理科学:1-15.</strong></p>
<blockquote>
<p>摘要:本文以2007—2020年上市公司业绩说明会为背景，研究前瞻性信息披露对分析师预测的影响，发现业绩说明会中的前瞻性信息可以显著提升分析师盈余预测准确性。公司的信息不对称程度越高，前瞻性信息对分析师预测准确性提升越多。分析师专长工作经验越丰富，具备更强的信息捕捉能力，可以更好地吸收与理解业绩说明会中的前瞻性信息，做出更准确的预测。进一步，本文对前瞻性信息影响分析师预测的路径进行了讨论，认为前瞻性信息可能通过吸引分析师和机构投资者调研，增进分析师对上市公司经营状况的了解，进而提升盈余预测准确性。此外，本文发现，前瞻性信息中业绩相关类信息因具有更高的可信度，且与盈余因子直接相关，能够显著提升分析师盈余预测准确性。本研究为管理层披露与分析师的互动研究提供了增量证据，研究结果支持了业绩说明会有效性，对未来监管部门制定相关信息披露政策提供依据和建议。</p>
</blockquote>
<p><a href="https://ir.p5w.net/roadshow/"><img loading="lazy" src="img/p5w.png" alt=""  />
</a></p>
<p><br><br></p>
<h2 id="一前瞻性指标衡量">一、前瞻性指标衡量</h2>
<p>本文关注业绩说明会中前瞻性信息披露的比重， 借鉴Li [5] 、Muslu等 [6] 和马黎珺等 [14] 对前瞻性信息的定义， 采用 “ 词袋法 ” 构建前瞻性 指标， <strong>运用Python软件中jieba中文分词技术统计在问答阶段前瞻性词汇词频占业绩说明会文本总词频（去除停用词）的比例</strong>。 同时， 手工剔除了诸如“请关注后续公告”、“详见以后公告”等不具备实质性前瞻性信息的词频。</p>
<p>在词典的选取上， 本文前瞻性词典集借鉴胡楠和薛付婧 [15] 的种子词汇， 为了保证词汇的全面性， 还将所有种子词导入到开源分析工具 word2vec中， 并在业绩说明会语料库中寻找与种子词内容接近程度最高的词汇，其中包含（1） 管理团队的预测，譬如“计划/预计/预测”等表 述；（2）出现未来时点的表述， 譬如“未来/以 后/明年/下半年”等表述；（3）暗示企业即将发 生的动作， 譬如“有望/后续”等表述， 共计 174个前瞻性词汇（详见附录2）。前瞻性指标比重越大，表明公司的前瞻性信息披露越多。</p>
<p><img loading="lazy" src="img/formular.png" alt=""  />
</p>
<p><img loading="lazy" src="img/dict1.png" alt=""  />
</p>
<br>
<h2 id="二实验-构建词典">二、实验-构建词典</h2>
<h3 id="21-整理数据">2.1 整理数据</h3>
<p>把 <a href="https://textdata.cn/blog/2023-09-08-china-a-share-market-listed-company-earnings-communication-conference/"><strong>数据集 | 84w条业绩说明会问答数据(2005-2023)</strong></a>汇总到一个txt文件内。为了保证问答上下文一致， 问答要放在相邻处。 可能需要安装</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install openpyxl
pip3 install pandas
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;业绩说明会问答05-23.xlsx&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;提问内容&#39;</span><span class="p">]</span><span class="o">+</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;回答内容&#39;</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">subset</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">],</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;业绩说明会05-23.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="c1">#为了保证问答上下文一致， 问答要放在相邻处</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">to_list</span><span class="p">())</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="22-训练word2vec">2.2 训练word2vec</h3>
<p>一般都是使用gensim库，对  <strong>「业绩说明会05-23.txt」</strong> 数据集进行训练，我已经封装到的cntext库内。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install cntext==1.8.6
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">os</span>


<span class="c1">#Init W2VModels. Support English and Chinese</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2VModels</span><span class="p">(</span><span class="n">cwd</span><span class="o">=</span><span class="n">os</span><span class="o">.</span><span class="n">getcwd</span><span class="p">(),</span> 
                     <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>  <span class="c1">#corpus data w2v_corpus.txt</span>


<span class="c1">#训练结束后，「业绩说明会05-23.100.6.bin」会出现在「output/Word2Vec」文件夹内 </span>
<span class="n">model</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">input_txt_file</span><span class="o">=</span><span class="s1">&#39;业绩说明会05-23.txt&#39;</span><span class="p">,</span> 
            <span class="n">model_name</span><span class="o">=</span><span class="s1">&#39;业绩说明会05-23.100.6.bin&#39;</span><span class="p">)</span>
</code></pre></div><br>
<p>需要注意， output/word2vec文件夹内会同时含有</p>
<ul>
<li><strong>业绩说明会05-23.100.6.bin</strong></li>
<li><strong>业绩说明会05-23.100.6.bin.vectors.npy</strong></li>
</ul>
<p>两个文件都不要删除， 这些是预训练词向量文件。</p>
<br>
<h3 id="23-扩展词典">2.3 扩展词典</h3>
<p>根据前瞻性研究需要，整理了一些种子词</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">seedwords</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;计划&#39;</span><span class="p">,</span> <span class="s1">&#39;预计&#39;</span><span class="p">,</span> <span class="s1">&#39;未来&#39;</span><span class="p">,</span> <span class="s1">&#39;目标&#39;</span><span class="p">,</span> <span class="s1">&#39;可能&#39;</span><span class="p">,</span> <span class="s1">&#39;如果&#39;</span><span class="p">,</span> <span class="s1">&#39;机遇&#39;</span><span class="p">,</span> <span class="s1">&#39;预期&#39;</span><span class="p">,</span> <span class="s1">&#39;挑战&#39;</span><span class="p">,</span> <span class="s1">&#39;预测&#39;</span><span class="p">,</span> <span class="s1">&#39;今后&#39;</span><span class="p">,</span> <span class="s1">&#39;目的&#39;</span><span class="p">,</span> <span class="s1">&#39;契机&#39;</span><span class="p">,</span> <span class="s1">&#39;前景&#39;</span><span class="p">,</span> <span class="s1">&#39;希望&#39;</span><span class="p">,</span> <span class="s1">&#39;展望&#39;</span><span class="p">,</span> <span class="s1">&#39;相信&#39;</span><span class="p">,</span> <span class="s1">&#39;愿景&#39;</span><span class="p">,</span> <span class="s1">&#39;期待&#39;</span><span class="p">,</span> <span class="s1">&#39;明年&#39;</span><span class="p">,</span> <span class="s1">&#39;期望&#39;</span><span class="p">]</span>
</code></pre></div><ol>
<li>导入word2vec预训练语言模型文件 <strong>业绩说明会05-23.100.6.bin</strong></li>
<li>寻找与种子词语义最相似的n个词。</li>
<li>经过人工检查，剔除n个词中与 <strong>前瞻性</strong> 无关的词语，最终得到 <strong>前瞻性词典</strong>(论文中是174个词)。</li>
</ol>
<p>但是，经过大邓测试发现业绩说明会训练得到的业绩说明会word2vec(05-23.100.6.bin)模型表现很差。</p>
<p>之前大邓用01-21年管理层讨论与分析训练过一个word2vec(<strong>mda01-21.200.6.bin</strong>)，</p>
<blockquote>
<p><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">预训练模型 | 金融会计类word2vec， 可扩展或构建领域内概念情感词典</a></p>
</blockquote>
<p>在这次前瞻性扩展词任务中，mda01-21.200.6.bin表现要远好于05-23.100.6.bin。</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="k">def</span> <span class="nf">load_w2v</span><span class="p">(</span><span class="n">w2v_path</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    Load word2vec model
</span><span class="s2">
</span><span class="s2">    Args:
</span><span class="s2">        w2v_path (str): path of word2vec model
</span><span class="s2">
</span><span class="s2">    Returns:
</span><span class="s2">        model: word2vec model
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Loading word2vec model...&#39;</span><span class="p">)</span>
    <span class="n">model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">w2v_path</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">model</span>


<span class="n">wv</span> <span class="o">=</span> <span class="n">load_w2v</span><span class="p">(</span><span class="s1">&#39;Embeddings/业绩说明会05-23.100.6.bin&#39;</span><span class="p">)</span>
<span class="n">wv2</span> <span class="o">=</span> <span class="n">load_w2v</span><span class="p">(</span><span class="s1">&#39;Embeddings/mda01-21.200.6.bin&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Loading word2vec model...
Loading word2vec model...
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#词汇量</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">wv</span><span class="o">.</span><span class="n">index_to_key</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">wv2</span><span class="o">.</span><span class="n">index_to_key</span><span class="p">))</span>
</code></pre></div><pre><code>198776
789539
</code></pre>
<p>​ <br>
<br></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#查询某词的词向量</span>
<span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;创新&#39;</span><span class="p">)</span>

<span class="c1">#查询多个词的词向量</span>
<span class="c1">#wv.get_mean_vector([&#39;创新&#39;, &#39;研发&#39;])</span>
</code></pre></div><pre><code>array([ 0.43675017,  0.74739504,  3.3765798 , -0.29287583,  0.40125442,
    0.9364979 ,  0.62465197,  0.06480039,  0.12256158, -2.0735328 ,
   -0.256066  , -1.7680115 , -0.8514873 , -0.756108  ,  1.3441261 ,
   -0.18098126,  2.7290103 , -4.6596766 ,  0.4046495 , -4.0644083 ,
    0.6022293 ,  1.3569978 ,  1.0036035 ,  0.06123297, -2.0733726 ,
    2.2704456 , -1.2935334 , -0.2855776 ,  1.588003  ,  1.5027634 ,
    2.0897112 , -0.8861778 ,  0.4014722 , -0.41474393, -1.5390201 ,
    0.23899865, -0.9823706 , -2.986944  , -2.6887195 , -2.2386284 ,
    0.04810223,  1.3241886 , -0.71262985, -0.8015585 ,  1.5249555 ,
   -3.611584  , -1.4187033 , -1.6014036 ,  0.816903  ,  3.1821172 ,
   -1.7302881 , -0.8280679 , -1.2833163 ,  0.65565586, -0.8857021 ,
    2.098562  ,  1.4773984 ,  1.0931807 , -0.02242889,  1.1279039 ,
   -2.2318523 ,  0.24540211,  0.17126203,  2.5631666 , -1.7135285 ,
    0.60896975, -0.2654438 ,  0.5718087 , -1.4996717 ,  1.0189433 ,
    1.0205768 ,  3.7439635 , -0.3575424 , -3.189775  ,  0.6117708 ,
   -0.60615975,  2.940066  , -0.89338064, -0.626806  , -1.4389508 ,
   -1.1291629 , -2.2354846 , -0.6873424 ,  1.9574465 , -1.2231802 ,
    1.2850708 , -0.7581777 ,  0.8184319 ,  1.542834  , -0.8685869 ,
    1.1841776 , -0.4524089 , -0.8068617 ,  0.01519055, -0.23408687,
   -0.51564324,  0.20584114,  0.14295417,  0.5481142 ,  2.523313  ],
  dtype=float32)
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="p">,</span> <span class="n">seedwords</span><span class="p">,</span> <span class="n">topn</span><span class="o">=</span><span class="mi">100</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    According to the seed word file, select the top n words with the most similar semantics and save them in the directory save_dir.
</span><span class="s2">    
</span><span class="s2">    Args:
</span><span class="s2">        wv (Word2VecKeyedVectors): the word embedding model
</span><span class="s2">        seedwords (list): 种子词
</span><span class="s2">        topn (int, optional): Set the number of most similar words to retrieve to topn. Defaults to 100.
</span><span class="s2">        save_dir (str, optional): the directory to save the candidate words. Defaults to &#39;Word2Vec&#39;.
</span><span class="s2">    
</span><span class="s2">    Returns:
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="n">simidx_scores</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="n">similars_candidate_idxs</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1">#the candidate words of seedwords</span>
    <span class="n">dictionary</span> <span class="o">=</span> <span class="n">wv</span><span class="o">.</span><span class="n">key_to_index</span>
    <span class="n">seedidxs</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1">#transform word to index</span>
    <span class="k">for</span> <span class="n">seed</span> <span class="ow">in</span> <span class="n">seedwords</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">seed</span> <span class="ow">in</span> <span class="n">dictionary</span><span class="p">:</span>
            <span class="n">seedidx</span> <span class="o">=</span> <span class="n">dictionary</span><span class="p">[</span><span class="n">seed</span><span class="p">]</span>
            <span class="n">seedidxs</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">seedidx</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">seedidx</span> <span class="ow">in</span> <span class="n">seedidxs</span><span class="p">:</span>
        <span class="c1"># sims_words such as [(&#39;by&#39;, 0.99984), (&#39;or&#39;, 0.99982), (&#39;an&#39;, 0.99981), (&#39;up&#39;, 0.99980)]</span>
        <span class="n">sims_words</span> <span class="o">=</span> <span class="n">wv</span><span class="o">.</span><span class="n">similar_by_word</span><span class="p">(</span><span class="n">seedidx</span><span class="p">,</span> <span class="n">topn</span><span class="o">=</span><span class="n">topn</span><span class="p">)</span>
        <span class="c1">#Convert words to index and store them</span>
        <span class="n">similars_candidate_idxs</span><span class="o">.</span><span class="n">extend</span><span class="p">([</span><span class="n">dictionary</span><span class="p">[</span><span class="n">sim</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="k">for</span> <span class="n">sim</span> <span class="ow">in</span> <span class="n">sims_words</span><span class="p">])</span>
    <span class="n">similars_candidate_idxs</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">similars_candidate_idxs</span><span class="p">)</span>
    
    <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="n">similars_candidate_idxs</span><span class="p">:</span>
        <span class="n">score</span> <span class="o">=</span> <span class="n">wv</span><span class="o">.</span><span class="n">n_similarity</span><span class="p">([</span><span class="n">idx</span><span class="p">],</span> <span class="n">seedidxs</span><span class="p">)</span>
        <span class="n">simidx_scores</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">idx</span><span class="p">,</span> <span class="n">score</span><span class="p">))</span>
    <span class="n">simidxs</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">simidx_scores</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">k</span><span class="p">:</span><span class="n">k</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)]</span>

    <span class="n">simwords</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">wv</span><span class="o">.</span><span class="n">index_to_key</span><span class="p">[</span><span class="n">idx</span><span class="p">])</span> <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="n">simidxs</span><span class="p">][:</span><span class="n">topn</span><span class="p">]</span>

    <span class="n">resultwords</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">resultwords</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">seedwords</span><span class="p">)</span>
    <span class="n">resultwords</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">simwords</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">resultwords</span>


<span class="c1">#为了节省板面，这里设置为50</span>
<span class="c1">#论文中经过筛选留下174个词，实际上topn应该远大于174，</span>
<span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="c1">#前瞻性种子词</span>
                  <span class="n">seedwords</span><span class="o">=</span> <span class="p">[</span><span class="s1">&#39;计划&#39;</span><span class="p">,</span> <span class="s1">&#39;预计&#39;</span><span class="p">,</span> <span class="s1">&#39;未来&#39;</span><span class="p">,</span> <span class="s1">&#39;目标&#39;</span><span class="p">,</span> <span class="s1">&#39;可能&#39;</span><span class="p">,</span> <span class="s1">&#39;如果&#39;</span><span class="p">,</span> <span class="s1">&#39;机遇&#39;</span><span class="p">,</span> <span class="s1">&#39;预期&#39;</span><span class="p">,</span> <span class="s1">&#39;挑战&#39;</span><span class="p">,</span> <span class="s1">&#39;预测&#39;</span><span class="p">,</span> <span class="s1">&#39;今后&#39;</span><span class="p">,</span> <span class="s1">&#39;目的&#39;</span><span class="p">,</span> <span class="s1">&#39;契机&#39;</span><span class="p">,</span> <span class="s1">&#39;前景&#39;</span><span class="p">,</span> <span class="s1">&#39;希望&#39;</span><span class="p">,</span> <span class="s1">&#39;展望&#39;</span><span class="p">,</span> <span class="s1">&#39;相信&#39;</span><span class="p">,</span> <span class="s1">&#39;愿景&#39;</span><span class="p">,</span> <span class="s1">&#39;期待&#39;</span><span class="p">,</span> <span class="s1">&#39;明年&#39;</span><span class="p">,</span> <span class="s1">&#39;期望&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;计划&#39;,
 &#39;预计&#39;,
 ......
 &#39;几年&#39;,
 &#39;积极影响&#39;,
 &#39;有何&#39;,
 &#39;谢谢您提问&#39;,
 &#39;今后&#39;,
 &#39;这块&#39;,
 &#39;近几年&#39;,
 &#39;近两年&#39;,
 &#39;请问李&#39;,
 &#39;裁员&#39;,
 &#39;亮点&#39;,
 &#39;准备采取&#39;,
 &#39;将会&#39;,
 &#39;接下来&#39;,
 &#39;有何规划&#39;,
 &#39;前景&#39;,
 &#39;管理层是否&#39;,
 &#39;未来几年&#39;,
 &#39;有没有新&#39;,
 &#39;发展状况&#39;,
 &#39;一块&#39;,
 &#39;当前&#39;,
 &#39;很大&#39;,
 &#39;这块业务&#39;,
 &#39;LNG船&#39;,
 &#39;具体措施您好&#39;,
 &#39;当下&#39;,
 &#39;是否能够&#39;,
 &#39;明后&#39;,
 &#39;一个台阶&#39;,
 &#39;是否符合&#39;,
 &#39;巨大&#39;,
 &#39;预判&#39;,
 &#39;对此&#39;,
 &#39;未来三年&#39;,
 &#39;资本开支&#39;,
 &#39;不少&#39;,
 &#39;未来是否&#39;,
 &#39;这方面&#39;,
 &#39;看法&#39;,
 &#39;今年以来&#39;,
 &#39;疫情结束&#39;,
 &#39;想知道&#39;,
 &#39;取得不错&#39;,
 &#39;谈谈&#39;,
 &#39;一步&#39;,
 &#39;今年是否&#39;,
 &#39;发展前景&#39;,
 &#39;东宝&#39;,
 &#39;现状&#39;]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv2</span><span class="p">,</span> 
                  <span class="c1">#前瞻性种子词</span>
                  <span class="n">seedwords</span><span class="o">=</span> <span class="p">[</span><span class="s1">&#39;计划&#39;</span><span class="p">,</span> <span class="s1">&#39;预计&#39;</span><span class="p">,</span> <span class="s1">&#39;未来&#39;</span><span class="p">,</span> <span class="s1">&#39;目标&#39;</span><span class="p">,</span> <span class="s1">&#39;可能&#39;</span><span class="p">,</span> <span class="s1">&#39;如果&#39;</span><span class="p">,</span> <span class="s1">&#39;机遇&#39;</span><span class="p">,</span> <span class="s1">&#39;预期&#39;</span><span class="p">,</span> <span class="s1">&#39;挑战&#39;</span><span class="p">,</span> <span class="s1">&#39;预测&#39;</span><span class="p">,</span> <span class="s1">&#39;今后&#39;</span><span class="p">,</span> <span class="s1">&#39;目的&#39;</span><span class="p">,</span> <span class="s1">&#39;契机&#39;</span><span class="p">,</span> <span class="s1">&#39;前景&#39;</span><span class="p">,</span> <span class="s1">&#39;希望&#39;</span><span class="p">,</span> <span class="s1">&#39;展望&#39;</span><span class="p">,</span> <span class="s1">&#39;相信&#39;</span><span class="p">,</span> <span class="s1">&#39;愿景&#39;</span><span class="p">,</span> <span class="s1">&#39;期待&#39;</span><span class="p">,</span> <span class="s1">&#39;明年&#39;</span><span class="p">,</span> <span class="s1">&#39;期望&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;计划&#39;,
 &#39;预计&#39;,
  ......
 &#39;相信&#39;,
 &#39;将会&#39;,
 &#39;未来&#39;,
 &#39;希望&#39;,
 &#39;预见&#39;,
 &#39;预期&#39;,
 &#39;可能&#39;,
 &#39;必将&#39;,
 &#39;应该&#39;,
 &#39;未来几年&#39;,
 &#39;今后&#39;,
 &#39;有望&#39;,
 &#39;目标&#39;,
 &#39;这一&#39;,
 &#39;当前&#39;,
 &#39;当下&#39;,
 &#39;无疑&#39;,
 &#39;期望&#39;,
 &#39;接下来&#39;,
 &#39;意味着&#39;,
 &#39;背景&#39;,
 &#39;期待&#39;,
 &#39;近期&#39;,
 &#39;下一阶段&#39;,
 &#39;机会&#39;,
 &#39;看到&#39;,
 &#39;预示&#39;,
 &#39;能够&#39;,
 &#39;短期内&#39;,
 &#39;未来一段时间&#39;,
 &#39;将来&#39;,
 &#39;展望未来&#39;,
 &#39;必须&#39;,
 &#39;真正&#39;,
 &#39;眼光&#39;,
 &#39;必然&#39;,
 &#39;还会&#39;,
 &#39;预计&#39;,
 &#39;未来十年&#39;,
 &#39;机遇&#39;,
 &#39;可能性&#39;,
 &#39;后续&#39;,
 &#39;潜在&#39;,
 &#39;决心&#39;,
 &#39;信心&#39;,
 &#39;仍然&#39;,
 &#39;非常&#39;,
 &#39;这为&#39;,
 &#39;未来五年&#39;,
 &#39;短时间&#39;]
</code></pre></div><p><strong>大邓假装经过很多检查，剔除不相关词语，最终跟论文一样，都得到了174个前瞻性词语。  需要说明，大邓已经将174个词内置到了cntext库(1.8.6中)</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">import cntext as ct

#cntext已内置了论文中的174个前瞻性词集
fls_words = ct.load_pkl_dict(&#39;Chinese_FLS.pkl&#39;)[&#39;Chinese_FLS&#39;]
fls_words
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;计划&#39;,
 &#39;预计&#39;,
 &#39;未来&#39;,
 &#39;目标&#39;,
 ......
 &#39;企业宗旨&#39;,
 &#39;宗旨&#39;,
 &#39;该愿景&#39;,
 &#39;愿望&#39;,
 &#39;心愿&#39;,
 &#39;盼望&#39;,
 &#39;祝愿&#39;,
 &#39;今年年底&#39;,
 &#39;今年底&#39;,
 &#39;明年初&#39;,
 &#39;第二季度&#39;,
 &#39;上半年&#39;,
 &#39;下半年&#39;,
 &#39;本月底&#39;,
 &#39;下周&#39;,
 &#39;马上&#39;,
 &#39;厚望&#39;,
 &#39;期盼&#39;,
 &#39;鞭策&#39;,
 &#39;梦想&#39;,
 &#39;愿&#39;]
</code></pre></div><p><br><br></p>
<h2 id="三计算前瞻性">三、计算前瞻性</h2>
<ol>
<li>汇总记录； 将同一年同一家上市公司的所有问答合并为一条记录，存储于df2中。</li>
<li>设计前瞻性计算函数 <strong>compute_fls</strong></li>
<li>对df2[&lsquo;text&rsquo;]使用前瞻性计算函数<strong>compute_fls</strong>，计算结果保存到字段<strong>Forward</strong></li>
</ol>
<h3 id="31-汇总记录">3.1 汇总记录</h3>
<p>将同一年同一家上市公司的所有问答合并为一条记录，存储于新df的text中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">])[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">)</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>
<span class="n">df2</span><span class="o">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">subset</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">],</span> <span class="n">inplace</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="n">df2</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<h3 id="32--设计前瞻性计算函数compute_fls">3.2  设计前瞻性计算函数compute_fls</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">jieba</span>


<span class="n">fls_words</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;Chinese_FLS.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;Chinese_FLS&#39;</span><span class="p">]</span>
<span class="n">stopwords</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;STOPWORDS.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;STOPWORDS&#39;</span><span class="p">][</span><span class="s1">&#39;chinese&#39;</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">compute_fls</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">words</span> <span class="o">=</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">words</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">stopwords</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">fls_words</span><span class="p">:</span>
            <span class="n">num</span><span class="o">+=</span><span class="mi">1</span>
    <span class="c1">#+1是为了防止分母为0的情况</span>
    <span class="k">return</span> <span class="n">num</span><span class="o">/</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">words</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="33-批量计算df2text">3.3 批量计算df2[&lsquo;text&rsquo;]</h3>
<p>对df2[&lsquo;text&rsquo;]批量使用前瞻性计算函数<strong>compute_fls</strong>，计算结果保存到字段<strong>Forward</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df2[&#39;Forward&#39;] = df2[&#39;text&#39;].apply(compute_fls)

df2.head()
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<p>下图是论文中的Forward描述性统计，</p>
<p><img loading="lazy" src="img/stats.png" alt=""  />
</p>
<p>我们试着看看分析结果 <strong>df2[&lsquo;Forward&rsquo;]</strong> 的</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Forward最小值: &#39;</span><span class="p">,</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Forward&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Forward中位数: &#39;</span><span class="p">,</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Forward&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">median</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Forward均值: &#39;</span><span class="p">,</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Forward&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Forward最大值: &#39;</span><span class="p">,</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Forward&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Forward标准层: &#39;</span><span class="p">,</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;Forward&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">std</span><span class="p">())</span>
</code></pre></div><p>可以发现描述性统计信息与论文的存在较大差异，可能的原因包括但不限于</p>
<pre><code>  1. 数据集存在差异。**论文中选取2007-2020年中小板和创业板上市公司作为研究对象。**而本实验使用的A股2005年-2023年所有的上市公司作为实验对象。
  2. 可能筛选记录，文本太短的会议剔除。
  3. 使用的停用词表不同
  4. jieba导入自定义词典
</code></pre>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 84w条业绩说明会问答数据(2005-2023)</title>
      <link>https://textdata.cn/blog/2023-09-08-china-a-share-market-listed-company-earnings-communication-conference/</link>
      <pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-09-08-china-a-share-market-listed-company-earnings-communication-conference/</guid>
      <description>业绩说明会， 是我国上市公司和中小投资 者沟通交流的重要载体。 在年报披露后， 能够 帮助投资者快速、准确地抓取信息披露重点， 全面了解企业发展状况， 增进对企业价值及经 营理念的认同。上市公司的业绩说明会是金融领域中的重要事件，它为投资者、分析师和其他利益相关者提供了一个与公司管理层直接交流的平台。这种数据集的学术价值多方面体现。</description>
      <content:encoded><![CDATA[<p>业绩说明会， 是我国上市公司和中小投资 者沟通交流的重要载体。 在年报披露后， 能够 帮助投资者快速、准确地抓取信息披露重点， 全面了解企业发展状况， 增进对企业价值及经 营理念的认同。上市公司的业绩说明会是金融领域中的重要事件，它为投资者、分析师和其他利益相关者提供了一个与公司管理层直接交流的平台。这种数据集的学术价值多方面体现。</p>
<ul>
<li>公司沟通策略的研究：业绩说明会的数据可以帮助研究者深入了解公司如何与公众沟通其财务状况、业务策略和未来展望。这对于传播学、公关和企业战略研究领域都是宝贵的。</li>
<li>情感分析与市场反应：通过对业绩说明会中的语言和情感进行分析，研究者可以探索市场对公司信息披露的反应。这对于金融经济学和计量经济学的研究尤为重要。</li>
<li>公司治理与透明度：业绩说明会的频率、内容和与投资者的互动可以为研究者提供关于公司治理质量和透明度的线索。</li>
<li>预测模型的建立：这种数据集可以用于建立预测模型，预测公司的未来业绩、股价走势或其他相关指标。</li>
<li>行为金融学的研究：业绩说明会中的问题和答案可以为研究者提供关于投资者和分析师行为和心理的深入了解，从而深化我们对市场非理性行为的理解。</li>
<li>宏观经济指标的研究：通过对多家公司的业绩说明会数据进行汇总和分析，研究者可以获得宏观经济趋势和行业动态的宝贵见解。</li>
</ul>
<p>总之，上市公司业绩说明会数据集为学术界提供了一个独特的、多维度的研究视角，有助于深化我们对金融市场、公司策略和投资者行为的理解。</p>
<p><br><br></p>
<h2 id="数据集介绍">数据集介绍</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">上市公司业绩说明会问答数据

【年度】
 2005-2023年

【字段】
 - 股票代码
 - 会计年度
 - 问题序号
 - 提问内容
 - 提问时间
 - 回答人
 - 回答时间
 - 回答内容
 
 【数据量】
  841876
  
  科研用途，仅供展示；如有任何问题， 请加微信372335839， 备注「姓名-学校-专业-业绩说明会」
</code></pre></div><p><br><br></p>
<h2 id="导入数据">导入数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;业绩说明会问答05-23.xlsx&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s1">&#39;数据集覆盖的年度: </span><span class="si">{start}</span><span class="s1">~</span><span class="si">{end}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">start</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">(),</span> 
                                 <span class="n">end</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><pre><code>'数据集覆盖的年度: 2005~2023'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><pre><code>841876
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#字段包括</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><pre><code>Index(['股票代码', '会计年度', '问题序号', '提问内容', '提问时间', '回答人', '回答时间', '回答内容'], dtype='object')
</code></pre>
<br>
<p>设置matplotlib</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="c1">#pip3 install scienceplots</span>
<span class="kn">import</span> <span class="nn">scienceplots</span> 
<span class="kn">import</span> <span class="nn">platform</span>
<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>
    
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#年份变化(业绩说明会数量)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span>
</code></pre></div><pre><code>会计年度
2005     4042
2006    10051
2007    18906
2008    31782
2009    35802
2010    47141
2011    69439
2012    73231
2013    80456
2014    80690
2015    62764
2016    61820
2017    52543
2018    44279
2019    42009
2020    37026
2021    53898
2022    35917
2023       80
Name: count, dtype: int64
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">kind</span><span class="o">=</span><span class="s1">&#39;bar&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;会计年度&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;业绩说明会数量&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;业绩说明会数量年份变化&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/output_5_0.svg" alt="svg"  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s1">&#39;会计年度&#39;</span><span class="p">,</span> <span class="s1">&#39;股票代码&#39;</span><span class="p">])[</span><span class="s1">&#39;问题序号&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">count</span><span class="p">()</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;会计年度&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">plot</span><span class="p">()</span>

<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;会计年度&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;年度问答次数&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;业绩说明会平均问答次数年份变化&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/output_6_0.svg" alt="svg"  />
</p>
<p><br><br></p>
<h2 id="相关文献">相关文献</h2>
<p>许帅,邵帅,何贤杰.业绩说明会前瞻性信息对分析师盈余预测准确性的影响——信口雌黄还是言而有征[J].中国管理科学:1-15.</p>
<blockquote>
<p>摘要:本文以2007—2020年上市公司业绩说明会为背景，研究前瞻性信息披露对分析师预测的影响，发现业绩说明会中的前瞻性信息可以显著提升分析师盈余预测准确性。公司的信息不对称程度越高，前瞻性信息对分析师预测准确性提升越多。分析师专长工作经验越丰富，具备更强的信息捕捉能力，可以更好地吸收与理解业绩说明会中的前瞻性信息，做出更准确的预测。进一步，本文对前瞻性信息影响分析师预测的路径进行了讨论，认为前瞻性信息可能通过吸引分析师和机构投资者调研，增进分析师对上市公司经营状况的了解，进而提升盈余预测准确性。此外，本文发现，前瞻性信息中业绩相关类信息因具有更高的可信度，且与盈余因子直接相关，能够显著提升分析师盈余预测准确性。本研究为管理层披露与分析师的互动研究提供了增量证据，研究结果支持了业绩说明会有效性，对未来监管部门制定相关信息披露政策提供依据和建议。</p>
</blockquote>
<br>
<p>卞世博,管之凡,阎志鹏.答非所问与市场反应:基于业绩说明会的研究[J].管理科学学报,2021,24(04):109-126.</p>
<blockquote>
<p>摘要:对上市公司业绩说明会中投资者与管理层问答互动中管理层答非所问的现象进行了研究.本文以中小板和创业板上市公司召开的业绩说明会作为研究样本,利用文本分析方法对业绩说明会中管理层在回答投资者提问时答非所问的程度进行度量,进而实证分析了管理层的答非所问与市场反应和公司未来业绩表现之间的可能关联.结果发现:在控制其它因素之后,管理层的答非所问与市场反应之间呈现显著的负相关关系,即公司管理层的答非所问程度越高,随后公司股票的市场表现则就会越差,并且对于那些低分析师关注的公司尤为明显;而在公司未来业绩表现方面,管理层答非所问的程度越高,则公司未来的业绩表现则会越差.</p>
</blockquote>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>可视化 | 微博用户群体情绪随时间变化趋势</title>
      <link>https://textdata.cn/blog/2023-05-18-weibo-sentiment-score-line-plot/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-05-18-weibo-sentiment-score-line-plot/</guid>
      <description>&lt;p&gt;DataFrame数据如何绘制按时间趋势的折线图，今天以weibo数据集为例，绘制微博文本内容折线图&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;微博文本内容「平均长度随时间变化」&lt;/li&gt;
&lt;li&gt;微博文本内容「平均情感分值随时间变化」&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/output_8_0.svg&#34; alt=&#34;svg&#34;  /&gt;

&lt;img loading=&#34;lazy&#34; src=&#34;img/output_12_0.svg&#34; alt=&#34;svg&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一准备工作&#34;&gt;一、准备工作&lt;/h2&gt;
&lt;h3 id=&#34;11-下载数据集&#34;&gt;1.1 下载数据集&lt;/h3&gt;
&lt;p&gt;数据集下载链接 &lt;a href=&#34;https://www.kaggle.com/datasets/dylanli/weibo-content-during-covid19-period&#34;&gt;https://www.kaggle.com/datasets/dylanli/weibo-content-during-covid19-period&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/download.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;含8个json文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;user1.json、user2.json、user3.json、user4.json&lt;/li&gt;
&lt;li&gt;weibo1.json、weibo2.json、weibo3.json、weibo4.json&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里仅尝试读取weibo1.json  &lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;listdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;weibo2.json&#39;,
 &#39;.DS_Store&#39;,
 &#39;weibo3.json&#39;,
 &#39;Untitled.ipynb&#39;,
 &#39;weibo4.json&#39;,
 &#39;user1.json&#39;,
 &#39;user2.json&#39;,
 &#39;说明.md&#39;,
 &#39;user3.json&#39;,
 &#39;.ipynb_checkpoints&#39;,
 &#39;user4.json&#39;,
 &#39;weibo1.json&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;12-导入数据&#34;&gt;1.2 导入数据&lt;/h3&gt;
&lt;p&gt;导入 7138微博用户数据后，查看&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据量&lt;/li&gt;
&lt;li&gt;字段的数据类型&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;weibo1.json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#记录数&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;560840
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#字段的数据类型&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtypes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;_id                        object
user_id                    object
screen_name                object
id                         object
bid                        object
text                       object
pics                       object
video_url                  object
location                   object
created_at         datetime64[ns]
source                     object
attitudes_count             int64
comments_count              int64
reposts_count               int64
topics                     object
at_users                   object
retweet                    object
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二数据分析&#34;&gt;二、数据分析&lt;/h2&gt;
&lt;p&gt;绘制微博内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;平均长度随时间变化&lt;/li&gt;
&lt;li&gt;平均情感分值随时间变化&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;21-平均长度随时间变化&#34;&gt;2.1 平均长度随时间变化&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;



&lt;span class=&#34;c1&#34;&gt;# 统计人均字符长度变化&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df[&amp;#39;text_length&amp;#39;] = weibo_df[&amp;#39;text&amp;#39;].apply(lambda x: len(x))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text_length&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df_avg_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text_length&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 绘制人均字符长度变化图&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_avg_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df_avg_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text_length&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;微博内容平均长度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;微博内容平均长度随时间变化&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xticks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/output_8_0.svg&#34; alt=&#34;svg&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-平均情感分值随时间变化&#34;&gt;2.2 平均情感分值随时间变化&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;设计情感计算函数senti_score&lt;/li&gt;
&lt;li&gt;测试一条文本的情感计算实验&lt;/li&gt;
&lt;li&gt;推广到所有weibo内容的情感计算&lt;/li&gt;
&lt;li&gt;参考「平均长度随时间变化」，会「平均情感分值随时间变化」&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;jieba&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#1.8.4版本cntext&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#使用知网Hownet情感词典&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pos_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pkl_dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HOWNET.pkl&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HOWNET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;pos&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;neg_words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pkl_dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HOWNET.pkl&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HOWNET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;neg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;senti_score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;neg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jieba&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lcut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;neg_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;neg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;neg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;#(pos-neg)/(pos+neg)即可，为防止分母为0，特加1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;neg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;neg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    
    
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;senti_score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;我很开心！&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;senti_score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;我很难过！&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;0.5
-0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weibo1_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;560840
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib_inline&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_inline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_matplotlib_formats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scienceplots&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#一共有560840条推特，这个部分代码运算量比较大，你所看到的情感变化图是按照1%随机抽样绘制的结果。&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#按照1%随机抽样绘制的结果, &lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#np.random.seed(666)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#weibo_df = weibo_df.sample(frac=0.01)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;science&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;no-latex&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cjk-sc-font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 获取操作系统类型&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Windows&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Darwin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial Unicode MS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;font&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;matplotlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 设置全局字体&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# 统计平均情感分值&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;senti&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;senti_score&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df_senti_avg_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weibo_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;senti&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 绘制平均情感分值随时间变化&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df_senti_avg_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df_senti_avg_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;senti&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylabel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;微博内容平均情感分值&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;微博内容平均情感分值随时间变化&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xticks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rotation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/output_12_0.svg&#34; alt=&#34;svg&#34;  /&gt;

​&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p>DataFrame数据如何绘制按时间趋势的折线图，今天以weibo数据集为例，绘制微博文本内容折线图</p>
<ol>
<li>微博文本内容「平均长度随时间变化」</li>
<li>微博文本内容「平均情感分值随时间变化」</li>
</ol>
<p><img loading="lazy" src="img/output_8_0.svg" alt="svg"  />

<img loading="lazy" src="img/output_12_0.svg" alt="svg"  />
</p>
<p><br><br></p>
<h2 id="一准备工作">一、准备工作</h2>
<h3 id="11-下载数据集">1.1 下载数据集</h3>
<p>数据集下载链接 <a href="https://www.kaggle.com/datasets/dylanli/weibo-content-during-covid19-period">https://www.kaggle.com/datasets/dylanli/weibo-content-during-covid19-period</a></p>
<p><img loading="lazy" src="img/download.png" alt=""  />
</p>
<br>
<p>含8个json文件</p>
<ul>
<li>user1.json、user2.json、user3.json、user4.json</li>
<li>weibo1.json、weibo2.json、weibo3.json、weibo4.json</li>
</ul>
<p>这里仅尝试读取weibo1.json  <br></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">()</span>
</code></pre></div><pre><code>['weibo2.json',
 '.DS_Store',
 'weibo3.json',
 'Untitled.ipynb',
 'weibo4.json',
 'user1.json',
 'user2.json',
 '说明.md',
 'user3.json',
 '.ipynb_checkpoints',
 'user4.json',
 'weibo1.json']
</code></pre>
<p><br><br></p>
<h3 id="12-导入数据">1.2 导入数据</h3>
<p>导入 7138微博用户数据后，查看</p>
<ol>
<li>数据量</li>
<li>字段的数据类型</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">weibo_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_json</span><span class="p">(</span><span class="s1">&#39;weibo1.json&#39;</span><span class="p">)</span>
<span class="n">weibo_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#记录数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">weibo_df</span><span class="p">)</span>
</code></pre></div><pre><code>560840
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#字段的数据类型</span>
<span class="n">weibo_df</span><span class="o">.</span><span class="n">dtypes</span>
</code></pre></div><pre><code>_id                        object
user_id                    object
screen_name                object
id                         object
bid                        object
text                       object
pics                       object
video_url                  object
location                   object
created_at         datetime64[ns]
source                     object
attitudes_count             int64
comments_count              int64
reposts_count               int64
topics                     object
at_users                   object
retweet                    object
dtype: object
</code></pre>
<p><br><br></p>
<h2 id="二数据分析">二、数据分析</h2>
<p>绘制微博内容</p>
<ol>
<li>平均长度随时间变化</li>
<li>平均情感分值随时间变化</li>
</ol>
<h3 id="21-平均长度随时间变化">2.1 平均长度随时间变化</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>



<span class="c1"># 统计人均字符长度变化</span>
<span class="c1">#df[&#39;text_length&#39;] = weibo_df[&#39;text&#39;].apply(lambda x: len(x))</span>
<span class="n">weibo_df</span><span class="p">[</span><span class="s1">&#39;text_length&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">weibo_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span>
<span class="n">df_avg_length</span> <span class="o">=</span> <span class="n">weibo_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;created_at&#39;</span><span class="p">)[</span><span class="s1">&#39;text_length&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>

<span class="c1"># 绘制人均字符长度变化图</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">df_avg_length</span><span class="p">[</span><span class="s1">&#39;created_at&#39;</span><span class="p">],</span> <span class="n">df_avg_length</span><span class="p">[</span><span class="s1">&#39;text_length&#39;</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;日期&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;微博内容平均长度&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;微博内容平均长度随时间变化&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/output_8_0.svg" alt="svg"  />
</p>
<br>
<h3 id="22-平均情感分值随时间变化">2.2 平均情感分值随时间变化</h3>
<ol>
<li>设计情感计算函数senti_score</li>
<li>测试一条文本的情感计算实验</li>
<li>推广到所有weibo内容的情感计算</li>
<li>参考「平均长度随时间变化」，会「平均情感分值随时间变化」</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="kn">import</span> <span class="nn">jieba</span>

<span class="c1">#1.8.4版本cntext</span>
<span class="c1">#使用知网Hownet情感词典</span>
<span class="n">pos_words</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;HOWNET.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;HOWNET&#39;</span><span class="p">][</span><span class="s1">&#39;pos&#39;</span><span class="p">]</span>
<span class="n">neg_words</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_pkl_dict</span><span class="p">(</span><span class="s1">&#39;HOWNET.pkl&#39;</span><span class="p">)[</span><span class="s1">&#39;HOWNET&#39;</span><span class="p">][</span><span class="s1">&#39;neg&#39;</span><span class="p">]</span>


<span class="k">def</span> <span class="nf">senti_score</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">pos</span><span class="p">,</span><span class="n">neg</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span>
    <span class="n">words</span> <span class="o">=</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">pos_words</span><span class="p">:</span>
            <span class="n">pos</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">neg_words</span><span class="p">:</span>
            <span class="n">neg</span> <span class="o">=</span> <span class="n">neg</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="c1">#(pos-neg)/(pos+neg)即可，为防止分母为0，特加1</span>
    <span class="k">return</span> <span class="p">(</span><span class="n">pos</span><span class="o">-</span><span class="n">neg</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">pos</span><span class="o">+</span><span class="n">neg</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    
    
<span class="nb">print</span><span class="p">(</span><span class="n">senti_score</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="s1">&#39;我很开心！&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">senti_score</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="s1">&#39;我很难过！&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>0.5
-0.5
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">weibo1_df</span><span class="p">)</span>
</code></pre></div><pre><code>560840
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="c1">#一共有560840条推特，这个部分代码运算量比较大，你所看到的情感变化图是按照1%随机抽样绘制的结果。</span>
<span class="c1">#按照1%随机抽样绘制的结果, </span>
<span class="c1">#np.random.seed(666)</span>
<span class="c1">#weibo_df = weibo_df.sample(frac=0.01)</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>


<span class="c1"># 统计平均情感分值</span>
<span class="n">weibo_df</span><span class="p">[</span><span class="s1">&#39;senti&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">weibo_df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">senti_score</span><span class="p">)</span>
<span class="n">df_senti_avg_length</span> <span class="o">=</span> <span class="n">weibo_df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="s1">&#39;created_at&#39;</span><span class="p">)[</span><span class="s1">&#39;senti&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span>

<span class="c1"># 绘制平均情感分值随时间变化</span>
<span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">df_senti_avg_length</span><span class="p">[</span><span class="s1">&#39;created_at&#39;</span><span class="p">],</span> <span class="n">df_senti_avg_length</span><span class="p">[</span><span class="s1">&#39;senti&#39;</span><span class="p">])</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s1">&#39;日期&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s1">&#39;微博内容平均情感分值&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;微博内容平均情感分值随时间变化&#39;</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">rotation</span><span class="o">=</span><span class="mi">45</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/output_12_0.svg" alt="svg"  />

​</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>实验数据 | 194城市楼市政策梳理(2010-2022)</title>
      <link>https://textdata.cn/blog/2023-05-17-china-200-city-real-estate-policy/</link>
      <pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-05-17-china-200-city-real-estate-policy/</guid>
      <description>&lt;br&gt;
&lt;h2 id=&#34;楼市数据集&#34;&gt;楼市数据集&lt;/h2&gt;
&lt;p&gt;有热心粉丝分享了她整理的楼市政策文本，含三个文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 194城市楼市政策梳理2010-2022.xlsx
- 2023年楼市政策(截止2.24).xlsx
- 2022年1-10月楼市政策梳理.xlsx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/2011-2022.png&#34; alt=&#34;&#34;  /&gt;

&lt;img loading=&#34;lazy&#34; src=&#34;img/2023%e5%85%a8%e5%9b%bd%e6%94%bf%e7%ad%96.png&#34; alt=&#34;&#34;  /&gt;

&lt;img loading=&#34;lazy&#34; src=&#34;img/2023%e5%9c%b0%e6%96%b9%e6%94%bf%e7%ad%96.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;用途&#34;&gt;用途&lt;/h2&gt;
&lt;p&gt;该实验数据集，可用于练习&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;词频统计&lt;/li&gt;
&lt;li&gt;词云图&lt;/li&gt;
&lt;li&gt;相似度计算等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;导入数据&#34;&gt;导入数据&lt;/h2&gt;
&lt;p&gt;因为每个xlsx文件中含有多个sheet， 可以根据sheet名读取不同的sheet表的数据。&lt;/p&gt;
&lt;p&gt;以 &lt;code&gt;194城市楼市政策梳理2010-2022.xlsx&lt;/code&gt; 为例， 导入表名为&lt;code&gt;宝鸡、保定、北海、北京、常州&lt;/code&gt;的数据。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/2011-2022.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;194城市房产政策梳理2010-2022.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sheet_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;宝鸡、保定、北海、北京、常州&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Unnamed: 0&lt;/th&gt;
      &lt;th&gt;城市名称&lt;/th&gt;
      &lt;th&gt;时间&lt;/th&gt;
      &lt;th&gt;标题&lt;/th&gt;
      &lt;th&gt;政策内容&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;宝鸡&lt;/td&gt;
      &lt;td&gt;2020.11.30&lt;/td&gt;
      &lt;td&gt;限贷政策&lt;/td&gt;
      &lt;td&gt;贷款年限30年，首套≤144㎡，贷款比例＞75%；首套＞144㎡，贷款比例70%；二套≤14...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;宝鸡&lt;/td&gt;
      &lt;td&gt;2022.5.18&lt;/td&gt;
      &lt;td&gt;关于印发推进陕西自由贸易试验区贸易投资便利化改革创新若干措施的通知（土地政策）&lt;/td&gt;
      &lt;td&gt;优先保障自贸试验区合理用地需求，按照土地要素跟着项目走的原则，施行对产业链环节等多宗土地整体...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;保定&lt;/td&gt;
      &lt;td&gt;2015.1.20&lt;/td&gt;
      &lt;td&gt;人才政策&lt;/td&gt;
      &lt;td&gt;户籍制度改革实施意见的提及放开人才落户限制。规定具有初级及以上专业技术职称、高级工（国家职业...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;保定&lt;/td&gt;
      &lt;td&gt;2016.4.17&lt;/td&gt;
      &lt;td&gt;土地政策&lt;/td&gt;
      &lt;td&gt;供地计划对土地供应总量、用途结构、空间布局、土地供应导向等做了详细规定，其中土地供应导向中强...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;保定&lt;/td&gt;
      &lt;td&gt;2016.4.20&lt;/td&gt;
      &lt;td&gt;土地政策&lt;/td&gt;
      &lt;td&gt;严格掌控土地供应，中心城区内经营性用地全部纳入政府储备。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;城市名称&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    array([&amp;#39;宝鸡&amp;#39;, &amp;#39;保定&amp;#39;, &amp;#39;北海&amp;#39;, &amp;#39;北京&amp;#39;, &amp;#39;常州&amp;#39;, &amp;#39;成都&amp;#39;], dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;时间&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    2010-04-30 00:00:00
    2022-08-04 00:00:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据集获取&#34;&gt;数据集获取&lt;/h2&gt;
&lt;p&gt;链接: &lt;a href=&#34;https://pan.baidu.com/s/13neTAQzuY3wkJzmc1FjwFg&#34;&gt;https://pan.baidu.com/s/13neTAQzuY3wkJzmc1FjwFg&lt;/a&gt; 提取码: w2ra&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<br>
<h2 id="楼市数据集">楼市数据集</h2>
<p>有热心粉丝分享了她整理的楼市政策文本，含三个文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 194城市楼市政策梳理2010-2022.xlsx
- 2023年楼市政策(截止2.24).xlsx
- 2022年1-10月楼市政策梳理.xlsx
</code></pre></div><p><img loading="lazy" src="img/2011-2022.png" alt=""  />

<img loading="lazy" src="img/2023%e5%85%a8%e5%9b%bd%e6%94%bf%e7%ad%96.png" alt=""  />

<img loading="lazy" src="img/2023%e5%9c%b0%e6%96%b9%e6%94%bf%e7%ad%96.png" alt=""  />
</p>
<br>
<br>
<h2 id="用途">用途</h2>
<p>该实验数据集，可用于练习</p>
<ul>
<li>词频统计</li>
<li>词云图</li>
<li>相似度计算等。</li>
</ul>
<p><br><br></p>
<h2 id="导入数据">导入数据</h2>
<p>因为每个xlsx文件中含有多个sheet， 可以根据sheet名读取不同的sheet表的数据。</p>
<p>以 <code>194城市楼市政策梳理2010-2022.xlsx</code> 为例， 导入表名为<code>宝鸡、保定、北海、北京、常州</code>的数据。</p>
<p><img loading="lazy" src="img/2011-2022.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;194城市房产政策梳理2010-2022.xlsx&#39;</span><span class="p">,</span> <span class="n">sheet_name</span><span class="o">=</span><span class="s1">&#39;宝鸡、保定、北海、北京、常州&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Unnamed: 0</th>
      <th>城市名称</th>
      <th>时间</th>
      <th>标题</th>
      <th>政策内容</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>NaN</td>
      <td>宝鸡</td>
      <td>2020.11.30</td>
      <td>限贷政策</td>
      <td>贷款年限30年，首套≤144㎡，贷款比例＞75%；首套＞144㎡，贷款比例70%；二套≤14...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>NaN</td>
      <td>宝鸡</td>
      <td>2022.5.18</td>
      <td>关于印发推进陕西自由贸易试验区贸易投资便利化改革创新若干措施的通知（土地政策）</td>
      <td>优先保障自贸试验区合理用地需求，按照土地要素跟着项目走的原则，施行对产业链环节等多宗土地整体...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>NaN</td>
      <td>保定</td>
      <td>2015.1.20</td>
      <td>人才政策</td>
      <td>户籍制度改革实施意见的提及放开人才落户限制。规定具有初级及以上专业技术职称、高级工（国家职业...</td>
    </tr>
    <tr>
      <th>3</th>
      <td>NaN</td>
      <td>保定</td>
      <td>2016.4.17</td>
      <td>土地政策</td>
      <td>供地计划对土地供应总量、用途结构、空间布局、土地供应导向等做了详细规定，其中土地供应导向中强...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NaN</td>
      <td>保定</td>
      <td>2016.4.20</td>
      <td>土地政策</td>
      <td>严格掌控土地供应，中心城区内经营性用地全部纳入政府储备。</td>
    </tr>
  </tbody>
</table>
</div>
<p><br><br></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;城市名称&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    array([&#39;宝鸡&#39;, &#39;保定&#39;, &#39;北海&#39;, &#39;北京&#39;, &#39;常州&#39;, &#39;成都&#39;], dtype=object)
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;时间&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;时间&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;时间&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    2010-04-30 00:00:00
    2022-08-04 00:00:00
</code></pre></div><p><br><br></p>
<h2 id="数据集获取">数据集获取</h2>
<p>链接: <a href="https://pan.baidu.com/s/13neTAQzuY3wkJzmc1FjwFg">https://pan.baidu.com/s/13neTAQzuY3wkJzmc1FjwFg</a> 提取码: w2ra</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 上市公司高管违规数据(2008-2022)</title>
      <link>https://textdata.cn/blog/2023-05-17-top-manager-violation/</link>
      <pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-05-17-top-manager-violation/</guid>
      <description>&lt;h2 id=&#34;一数据概况&#34;&gt;一、数据概况&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据集名: 上市公司高管违规-原始数据.xlsx
记录条数: 25365
覆盖日期: 1997-01-16 ~ 2022-12-28
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;为得到截图所示的&lt;code&gt;高管违规次数.xlsx&lt;/code&gt;，实现步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用pd.read_excel()函数读取&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高管违规数据集 &lt;code&gt;上市公司高管违规-原始数据.xlsx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;股票代码列表 &lt;code&gt;行业代码.xlsx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后我们使用pd.merge()函数将两个数据集按照股票代码和年度进行合并，使用全连接（how=&amp;lsquo;outer&amp;rsquo;）&lt;strong&gt;确保即使某些股票代码未出现在高管违规数据集中，也能保留在结果中&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接下来，我们使用groupby()函数按股票代码和年度进行分组，然后使用count()函数统计每个组的违规次数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查结果， 无误后导出xlsx。字段包括股票代码、年度和违规次数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二实现过程&#34;&gt;二、实现过程&lt;/h2&gt;
&lt;h3 id=&#34;21-导入数据&#34;&gt;2.1 导入数据&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;行业代码.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;converters&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;上市公司高管违规-原始数据.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;converters&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;会计年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;25365&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df3.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;22-合并&#34;&gt;2.2 合并&lt;/h3&gt;
&lt;p&gt;然后我们使用pd.merge()函数将两个数据集按照股票代码和年度进行合并，使用全连接（how=&amp;lsquo;outer&amp;rsquo;）确保即使某些股票代码未出现在高管违规数据集中，也能保留在结果中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;how&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;outer&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;会计年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df4.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;23-分组groupby&#34;&gt;2.3 分组Groupby&lt;/h3&gt;
&lt;p&gt;接下来，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用groupby()函数按 &lt;code&gt;股票代码&lt;/code&gt; 和 &lt;code&gt;会计年度&lt;/code&gt; 进行分组&lt;/li&gt;
&lt;li&gt;然后使用count()函数统计每组次数&lt;/li&gt;
&lt;li&gt;并将计算命名为 &lt;code&gt;违规次数&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;result_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;groupby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;会计年度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;违规行为&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;违规次数&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;result_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df5.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;24-检查保存&#34;&gt;2.4 检查&amp;amp;保存&lt;/h3&gt;
&lt;p&gt;检查结果， 无误后导出xlsx。字段包括股票代码、年度和违规次数。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/check.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;871753&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df6.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;股票代码&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;873527&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;公告日期&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;year&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2018&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df7.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;这里仅随机检查了两个记录(现实中要多检查几次)， 与result_df中是一致的， 现在保存结果供后续实证分析&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;result_df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_excel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;高管违规次数.xlsx&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三获取数据&#34;&gt;三、获取数据&lt;/h2&gt;
&lt;p&gt;链接: &lt;a href=&#34;https://pan.baidu.com/s/1Ff2G8jRZaTtJH7VcfQGX5Q?pwd=npyf&#34;&gt;https://pan.baidu.com/s/1Ff2G8jRZaTtJH7VcfQGX5Q?pwd=npyf&lt;/a&gt; 提取码: npyf&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="一数据概况">一、数据概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据集名: 上市公司高管违规-原始数据.xlsx
记录条数: 25365
覆盖日期: 1997-01-16 ~ 2022-12-28
</code></pre></div><p><br><br></p>
<p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<p>为得到截图所示的<code>高管违规次数.xlsx</code>，实现步骤:</p>
<ol>
<li>
<p>使用pd.read_excel()函数读取</p>
<ul>
<li>高管违规数据集 <code>上市公司高管违规-原始数据.xlsx</code></li>
<li>股票代码列表 <code>行业代码.xlsx</code></li>
</ul>
</li>
<li>
<p>然后我们使用pd.merge()函数将两个数据集按照股票代码和年度进行合并，使用全连接（how=&lsquo;outer&rsquo;）<strong>确保即使某些股票代码未出现在高管违规数据集中，也能保留在结果中</strong>。</p>
</li>
<li>
<p>接下来，我们使用groupby()函数按股票代码和年度进行分组，然后使用count()函数统计每个组的违规次数。</p>
</li>
<li>
<p>检查结果， 无误后导出xlsx。字段包括股票代码、年度和违规次数。</p>
</li>
</ol>
<p><br><br></p>
<h2 id="二实现过程">二、实现过程</h2>
<h3 id="21-导入数据">2.1 导入数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df1</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;行业代码.xlsx&#39;</span><span class="p">,</span>  <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df1</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;上市公司高管违规-原始数据.xlsx&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;股票代码&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">])</span>
<span class="n">df2</span><span class="p">[</span><span class="s1">&#39;会计年度&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df2</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df2</span><span class="p">))</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>25365</p>
<p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<h3 id="22-合并">2.2 合并</h3>
<p>然后我们使用pd.merge()函数将两个数据集按照股票代码和年度进行合并，使用全连接（how=&lsquo;outer&rsquo;）确保即使某些股票代码未出现在高管违规数据集中，也能保留在结果中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">df1</span><span class="p">,</span> <span class="n">df2</span><span class="p">,</span> <span class="n">how</span><span class="o">=</span><span class="s1">&#39;outer&#39;</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<h3 id="23-分组groupby">2.3 分组Groupby</h3>
<p>接下来，</p>
<ol>
<li>使用groupby()函数按 <code>股票代码</code> 和 <code>会计年度</code> 进行分组</li>
<li>然后使用count()函数统计每组次数</li>
<li>并将计算命名为 <code>违规次数</code></li>
</ol>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">result_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">([</span><span class="s1">&#39;股票代码&#39;</span><span class="p">,</span> <span class="s1">&#39;会计年度&#39;</span><span class="p">])[</span><span class="s1">&#39;违规行为&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">count</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;违规次数&#39;</span><span class="p">)</span>
<span class="n">result_df</span>
</code></pre></div><p><img loading="lazy" src="img/df5.png" alt=""  />
</p>
<br>
<h3 id="24-检查保存">2.4 检查&amp;保存</h3>
<p>检查结果， 无误后导出xlsx。字段包括股票代码、年度和违规次数。</p>
<p><img loading="lazy" src="img/check.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span><span class="p">[(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;871753&#39;</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="o">==</span><span class="mi">2022</span><span class="p">)]</span>
</code></pre></div><p><img loading="lazy" src="img/df6.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span><span class="p">[(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;873527&#39;</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">df2</span><span class="p">[</span><span class="s1">&#39;公告日期&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="o">==</span><span class="mi">2018</span><span class="p">)]</span>
</code></pre></div><p><img loading="lazy" src="img/df7.png" alt=""  />
</p>
<br>
<p>这里仅随机检查了两个记录(现实中要多检查几次)， 与result_df中是一致的， 现在保存结果供后续实证分析</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">result_df</span><span class="o">.</span><span class="n">to_excel</span><span class="p">(</span><span class="s1">&#39;高管违规次数.xlsx&#39;</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</code></pre></div><p><br><br></p>
<h2 id="三获取数据">三、获取数据</h2>
<p>链接: <a href="https://pan.baidu.com/s/1Ff2G8jRZaTtJH7VcfQGX5Q?pwd=npyf">https://pan.baidu.com/s/1Ff2G8jRZaTtJH7VcfQGX5Q?pwd=npyf</a> 提取码: npyf</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | B站/哔哩哔哩 1 亿用户脱敏数据</title>
      <link>https://textdata.cn/blog/2023-05-10-100m-bilibili-user-info-dataset/</link>
      <pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-05-10-100m-bilibili-user-info-dataset/</guid>
      <description>&lt;h1 id=&#34;相关内容&#34;&gt;相关内容&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-12-using-100m-bilibili-user-sign-data-to-training-word2vec/&#34;&gt;词向量 | 使用1亿B站用户签名训练word2vec词向量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一-数据集概括&#34;&gt;一、 数据集概括&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;数据来源: 哔哩哔哩
覆盖日期: 2022-06 ~ 2022-11
下载地址: https://www.kaggle.com/datasets/beats0/bilibili-user
记录条数: 1亿
本文声明: 科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;uid&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;用户ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;code&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;状态码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;level&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;用户等级 [0, 1, 2, 3, 4, 5, 6]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sex&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;性别 [&amp;lsquo;男&amp;rsquo;, &amp;lsquo;女&amp;rsquo;, &amp;lsquo;保密&amp;rsquo;]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;avatar&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;头像&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sign&lt;/td&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;用户签名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vip_type&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;会员类型（已过期不为0，0为从来不是会员）0：无 1：月度大会员 2：年度及以上大会员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vip_status&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;状态码 0：无 1：有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vip_role&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;会员类型 0：无 1：月度大会员 3：年度大会员 7：十年大会员 15：百年大会员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;archive&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;用户稿件数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fans&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;粉丝数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;friend&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;关注数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;like_num&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;获赞数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is_senior&lt;/td&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;是否为硬核会员 0：否 1：是&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二读取数据&#34;&gt;二、读取数据&lt;/h2&gt;
&lt;p&gt;User.csv 文件有 10.44 G， 对一般的电脑而言需要将其分割为多个小份文件， 教程详情请看&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-05-06-how-to-read-big-csv-file/&#34;&gt;&lt;strong&gt;单个csv文件体积大于电脑内存，怎么办&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大邓就假装各位电脑内存很大，至少16G起步。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;User.csv&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三其他操作&#34;&gt;三、其他操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;查看记录量&lt;/li&gt;
&lt;li&gt;字段数据类型&lt;/li&gt;
&lt;li&gt;粉丝量最多的10个用户&lt;/li&gt;
&lt;li&gt;性别分布&lt;/li&gt;
&lt;li&gt;签名中是否含Python&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;31-数据集记录量&#34;&gt;3.1 数据集记录量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    100000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;32-字段的数据类型&#34;&gt;3.2 字段的数据类型&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtypes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    uid            int64
    name          object
    avatar        object
    level          int64
    sex           object
    sign          object
    vip_type       int64
    vip_status     int64
    vip_role       int64
    archive        int64
    fans           int64
    friend         int64
    like_num       int64
    is_senior      int64
    dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;33-粉丝量最多的10个用户&#34;&gt;3.3 粉丝量最多的10个用户&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#粉丝量最多的10个用户&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nlargest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;fans&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;34-性别分布&#34;&gt;3.4 性别分布&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value_counts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    保密    88236345
    男      6488548
    女      5273634
    Name: sex, dtype: int64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;35-签名中是否含python&#34;&gt;3.5 签名中是否含Python&lt;/h3&gt;
&lt;p&gt;找找做Python的同行，返回的结果里没有大邓&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;new_df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sign&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isna&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;python_ups&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sign&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;python&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;python_ups&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/df3.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h1 id="相关内容">相关内容</h1>
<ul>
<li><a href="https://textdata.cn/blog/2023-11-12-using-100m-bilibili-user-sign-data-to-training-word2vec/">词向量 | 使用1亿B站用户签名训练word2vec词向量</a></li>
</ul>
<p><br><br></p>
<h2 id="一-数据集概括">一、 数据集概括</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: 哔哩哔哩
覆盖日期: 2022-06 ~ 2022-11
下载地址: https://www.kaggle.com/datasets/beats0/bilibili-user
记录条数: 1亿
本文声明: 科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><table>
<thead>
<tr>
<th>字段</th>
<th>数据类型</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>uid</td>
<td>Number</td>
<td>用户ID</td>
</tr>
<tr>
<td>code</td>
<td>Number</td>
<td>状态码</td>
</tr>
<tr>
<td>name</td>
<td>String</td>
<td>用户名</td>
</tr>
<tr>
<td>level</td>
<td>Number</td>
<td>用户等级 [0, 1, 2, 3, 4, 5, 6]</td>
</tr>
<tr>
<td>sex</td>
<td>String</td>
<td>性别 [&lsquo;男&rsquo;, &lsquo;女&rsquo;, &lsquo;保密&rsquo;]</td>
</tr>
<tr>
<td>avatar</td>
<td>String</td>
<td>头像</td>
</tr>
<tr>
<td>sign</td>
<td>String</td>
<td>用户签名</td>
</tr>
<tr>
<td>vip_type</td>
<td>Number</td>
<td>会员类型（已过期不为0，0为从来不是会员）0：无 1：月度大会员 2：年度及以上大会员</td>
</tr>
<tr>
<td>vip_status</td>
<td>Number</td>
<td>状态码 0：无 1：有</td>
</tr>
<tr>
<td>vip_role</td>
<td>Number</td>
<td>会员类型 0：无 1：月度大会员 3：年度大会员 7：十年大会员 15：百年大会员</td>
</tr>
<tr>
<td>archive</td>
<td>Number</td>
<td>用户稿件数</td>
</tr>
<tr>
<td>fans</td>
<td>Number</td>
<td>粉丝数</td>
</tr>
<tr>
<td>friend</td>
<td>Number</td>
<td>关注数</td>
</tr>
<tr>
<td>like_num</td>
<td>Number</td>
<td>获赞数</td>
</tr>
<tr>
<td>is_senior</td>
<td>Number</td>
<td>是否为硬核会员 0：否 1：是</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="二读取数据">二、读取数据</h2>
<p>User.csv 文件有 10.44 G， 对一般的电脑而言需要将其分割为多个小份文件， 教程详情请看</p>
<ul>
<li><a href="https://textdata.cn/blog/2023-05-06-how-to-read-big-csv-file/"><strong>单个csv文件体积大于电脑内存，怎么办</strong></a></li>
</ul>
<p>大邓就假装各位电脑内存很大，至少16G起步。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;User.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三其他操作">三、其他操作</h2>
<ul>
<li>查看记录量</li>
<li>字段数据类型</li>
<li>粉丝量最多的10个用户</li>
<li>性别分布</li>
<li>签名中是否含Python</li>
<li>&hellip;</li>
</ul>
<h3 id="31-数据集记录量">3.1 数据集记录量</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    100000000
</code></pre></div><br>
<h3 id="32-字段的数据类型">3.2 字段的数据类型</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">dtypes</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    uid            int64
    name          object
    avatar        object
    level          int64
    sex           object
    sign          object
    vip_type       int64
    vip_status     int64
    vip_role       int64
    archive        int64
    fans           int64
    friend         int64
    like_num       int64
    is_senior      int64
    dtype: object
</code></pre></div><br>
<h3 id="33-粉丝量最多的10个用户">3.3 粉丝量最多的10个用户</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#粉丝量最多的10个用户</span>
<span class="n">df</span><span class="o">.</span><span class="n">nlargest</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s1">&#39;fans&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<h3 id="34-性别分布">3.4 性别分布</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">sex</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    保密    88236345
    男      6488548
    女      5273634
    Name: sex, dtype: int64
</code></pre></div><br>
<h3 id="35-签名中是否含python">3.5 签名中是否含Python</h3>
<p>找找做Python的同行，返回的结果里没有大邓</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">new_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="o">-</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;sign&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()]</span>
<span class="n">python_ups</span> <span class="o">=</span> <span class="n">new_df</span><span class="p">[</span><span class="n">new_df</span><span class="p">[</span><span class="s1">&#39;sign&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;python&#39;</span><span class="p">)]</span>
<span class="n">python_ups</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 中国裁判文书网(2010-2021)</title>
      <link>https://textdata.cn/blog/2023-05-07-china-law-judgment-documents-datasets/</link>
      <pubDate>Sun, 07 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-05-07-china-law-judgment-documents-datasets/</guid>
      <description>中国裁判文书网数据集</description>
      <content:encoded><![CDATA[<h2 id="一中国裁判文书数据集">一、中国裁判文书数据集</h2>
<h3 id="11-数据集概括">1.1 数据集概括</h3>
<p>上亿条中国裁判文书， 公开案件主要覆盖 <strong>2010.1 ~ 2021.10</strong> 期间的记录， 数据集体量高达 93G 。</p>
<p><img loading="lazy" src="img/wenshu.png" alt=""  />

<img loading="lazy" src="img/years.png" alt=""  />
</p>
<br>
<h3 id="12-声明">1.2 声明</h3>
<p>科研用途； 如本文有任何问题， 可加微信372335839，备注「姓名-学校(公司)-专业(职务)」。</p>
<br>
<h3 id="13-字段含">1.3 字段含</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">-  标题
-  审理法院
-  案件类型
-  网页链接
-  案号
-  审理程序
-  裁判日期
-  发布日期
-  文书内容
-  当事人
-  案由
-  法律依据
-  裁判年份
-  裁判月份
-  来源
</code></pre></div><br>
<h3 id="14-可用价值">1.4 可用价值</h3>
<p>根据字段信息， 从该数据集中提取一些新的指标，可广泛适用于</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 法学
- 经济学
- 管理学
- 社会学
- 传播学
- 政治学
- 等
</code></pre></div><br>
<h3 id="14-广告">1.4 广告</h3>
<p>数据体量越大，越乱(非结构的文本数据字段越多)，门槛越高(处理难度越大)， 该数据的潜在的相对价值越大。</p>
<p>使用这类数据需要读取大数据、文本清洗、文本分析，可以考虑学习 <a href="https://textdata.cn/blog/management_python_course/"><strong>Python实证指标构建与文本分析</strong></a>，内容包括文本分析方方面面的技能点。</p>
<p><br><br></p>
<h2 id="二导入数据">二、导入数据</h2>
<p>本数据集适合电脑内存16G及以上的同学购买和练习使用。 以2021年为例，打开数据集，可以看到每个数据文件都是很大的。</p>
<p><img loading="lazy" src="img/one-year.png" alt=""  />
</p>
<p>内存8G以下的使用这些大体量数据需要参考这篇文章， 将大文件拆分成多个小文件，再分别读取分析。</p>
<p>这类数据集体量很大，几乎不可能用Excel等软件打开， 建议大家系统学习pandas库， 掌握该库后就能很方便的进行数值和文本类的数据分析。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;2021/2021-10.csv&#39;</span><span class="p">)</span>
<span class="c1">#随机抽5条显示</span>
<span class="n">df</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<p>裁判文书网， 2021年1月份数据量有</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">1158489
</code></pre></div><br>
<p>字段  <strong>「文书内容」</strong>  Nan数据占比</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;文书内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()])</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>  

</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.2687681971947943
</code></pre></div><br>
<p>显示第一条非Nan的**「文书内容」**</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="o">-</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;文书内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()]</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/not-nan.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="o">-</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;文书内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()]</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">to_dict</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;标题&#39;: {250: &#39;魏晓明与王力威借款合同纠纷案执行裁定书&#39;},
 &#39;审理法院&#39;: {250: &#39;黑龙江省诺敏河人民法院&#39;},
 &#39;案件类型&#39;: {250: &#39;执行案件&#39;},
 &#39;网页链接&#39;: {250: &#39;https://wenshu.court.gov.cn/website/wenshu/181107ANFZ0BXSK4/index.html?docId=789c47e53b1f421eaf18aca500f71309&#39;},
 &#39;案号&#39;: {250: &#39;（2021）黑7530执恢20号&#39;},
 &#39;审理程序&#39;: {250: &#39;执行实施&#39;},
 &#39;裁判日期&#39;: {250: &#39;2021-01-03&#39;},
 &#39;发布日期&#39;: {250: &#39;2021-01-03&#39;},
 &#39;文书内容&#39;: {250: &#39;黑龙江省诺敏河人民法院执 行 裁 定 书（2021）黑7530执恢20号申请执行人魏晓明，男，1964年1月1日出生，汉族，住沾河林业局。被执行人王力威，男，1977年8月18日出生，汉族，住沾河林业局。本院在执行魏晓明与王力威借款合同纠纷一案中，被执行人应履行债务80000元，执行回款50000元。未发现被执行人有其他财产可供执行。依照《最高人民法院关于适用〈中华人民共和国民事诉讼法〉的解释》第五百一十九条之规定，裁定如下：终结本次执行程序。申请执行人发现被执行人有可供执行财产的，可以再次申请执行。本裁定送达后立即生效。审判长\u3000\u3000谭国军审判员\u3000\u3000丁树桓审判员\u3000\u3000范颖杰二〇二一年一月三日书记员\u3000\u3000张晶洁&#39;},
 &#39;当事人&#39;: {250: &#39;魏晓明；王力威；魏晓明；王力威&#39;},
 &#39;案由&#39;: {250: &#39;借款合同纠纷&#39;},
 &#39;法律依据&#39;: {250: &#39;最高人民法院关于适用《中华人民共和国民事诉讼法》的解释:第五百一十九条第一款；最高人民法院关于适用《中华人民共和国民事诉讼法》的解释:第五百一十九条第二款&#39;},
 &#39;裁判年份&#39;: {250: 2021},
 &#39;裁判月份&#39;: {250: 1},
 &#39;来源&#39;: {250: &#39;公众号: 大邓和他的Python&#39;}}
</code></pre></div><p><br><br></p>
<h2 id="三小实验">三、小实验</h2>
<p>针对 2021-01.csv 数据，做下面三个小实验</p>
<ol>
<li>案件类型统计</li>
<li>前10类案由</li>
<li>涉及公司主体的案件占比</li>
<li>不同地域案件量的分布情况；</li>
</ol>
<h3 id="31-案件类型统计">3.1 案件类型统计</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;案件类型&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">False</span><span class="p">))</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<h3 id="32-前10类案由">3.2 前10类案由</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;案由&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="kc">False</span><span class="p">)[:</span><span class="mi">10</span><span class="p">])</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<h3 id="33-涉及公司主体的案件占比">3.3 涉及公司主体的案件占比</h3>
<p>根据「当事人」是否含「公司」字眼</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;当事人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;公司&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">()</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    0.43124190216739217
</code></pre></div><br>
<h3 id="34-不同地域案件量的分布">3.4 不同地域案件量的分布</h3>
<p>案号，命名地域+编号，应该可以通过案号计算出不同地域案件量的分布情况。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#slice是字符串切片操作，根据观察感觉是第7个字符是省份简称。</span>
<span class="n">provinces_ratio</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;案号&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">provinces_ratio</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br> 
<p>但经过实验，发现地域可以是省，也可以是地级市， 所以刚刚切片的实验鲁莽了。。。 不过以省份命名的案件量排名还是占据前列。</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">provinces_ratio</span><span class="p">)</span><span class="o">.</span><span class="n">index</span><span class="o">.</span><span class="n">tolist</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    [&#39;鲁&#39;, &#39;辽&#39;, &#39;豫&#39;, &#39;浙&#39;, &#39;苏&#39;, &#39;川&#39;, &#39;皖&#39;, &#39;粤&#39;, &#39;湘&#39;, &#39;沪&#39;, &#39;黔&#39;, &#39;鄂&#39;, &#39;京&#39;, &#39;陕&#39;, &#39;新&#39;, &#39;吉&#39;, &#39;渝&#39;, &#39;冀&#39;, &#39;赣&#39;, &#39;闽&#39;, &#39;黑&#39;, &#39;云&#39;, &#39;晋&#39;, &#39;津&#39;, &#39;桂&#39;, &#39;内&#39;, &#39;甘&#39;, &#39;宁&#39;, &#39;青&#39;, &#39;兵&#39;, &#39;藏&#39;, &#39;最&#39;, &#39;琼&#39;, &#39;0&#39;, &#39;1&#39;, &#39;初&#39;, &#39;）&#39;, &#39; &#39;, &#39;2&#39;, &#39;7&#39;, &#39;年&#39;, &#39;5&#39;, &#39;&#39;, &#39;4&#39;, &#39;凌&#39;, &#39;执&#39;, &#39;8&#39;, &#39;3&#39;, &#39;恢&#39;, &#39;特&#39;, &#39;9&#39;, &#39;温&#39;, &#39;刑&#39;, &#39;6&#39;, &#39;临&#39;, &#39;保&#39;, &#39;莱&#39;, &#39;峄&#39;, &#39;东&#39;, &#39;郯&#39;, &#39;神&#39;, &#39;缙&#39;, &#39;丽&#39;, &#39;泗&#39;, &#39;金&#39;, &#39;（&#39;, &#39;单&#39;, &#39;［&#39;, &#39;南&#39;, &#39;聊&#39;, &#39;问&#39;, &#39;鱼&#39;, &#39;﹝&#39;, &#39;长&#39;, &#39;乳&#39;, &#39;芝&#39;, &#39;嘉&#39;, &#39;应&#39;, &#39;立&#39;, &#39;齐&#39;, &#39;岚&#39;, &#39;湖&#39;, &#39;衢&#39;, &#39;台&#39;, &#39;射&#39;, &#39;浦&#39;, &#39;民&#39;, &#39;号&#39;, &#39;晥&#39;, &#39;伊&#39;, &#39;荣&#39;, &#39;柳&#39;, &#39;\u200c&#39;, &#39;市&#39;, &#39;善&#39;, &#39;盱&#39;, &#39;华&#39;, &#39;瑶&#39;, &#39;宿&#39;, &#39;柯&#39;, &#39;垦&#39;, &#39;河&#39;, &#39;？&#39;, &#39;溧&#39;, &#39;怀&#39;, &#39;中&#39;, &#39;右&#39;, &#39;司&#39;, &#39;西&#39;, &#39;微&#39;, &#39;异&#39;, &#39;行&#39;, &#39;集&#39;, &#39;乐&#39;, &#39;薛&#39;, &#39;北&#39;, &#39;上&#39;, &#39;沂&#39;, &#39;沭&#39;, &#39;烟&#39;, &#39;额&#39;, &#39;杭&#39;, &#39;甬&#39;, &#39;蓟&#39;, &#39;永&#39;, &#39;济&#39;, &#39;诸&#39;, &#39;受&#39;, &#39;×&#39;, &#39;开&#39;, &#39;财&#39;, &#39;诉&#39;, &#39;淅&#39;, &#39;枣&#39;, &#39;从&#39;, &#39;锡&#39;, &#39;呈&#39;, &#39;滕&#39;, &#39;阳&#39;, &#39;太&#39;, &#39;宜&#39;, &#39;峰&#39;, &#39;坊&#39;, &#39;滨&#39;, &#39;德&#39;, &#39;淮&#39;, &#39;正&#39;, &#39;牟&#39;, &#39;佛&#39;, &#39;运&#39;, &#39;威&#39;, &#39;兰&#39;, &#39;栖&#39;, &#39;古&#39;, &#39;包&#39;, &#39;人&#39;, &#39;依&#39;, &#39;康&#39;, &#39;启&#39;, &#39;昌&#39;, &#39;稷&#39;, &#39;穗&#39;, &#39;绍&#39;]
</code></pre></div><br>
<h2 id="四相关内容">四、相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/2024-01-03-listed-company-arbitration-dataset/">数据集 | 36330条上市公司仲裁数据(2000-2021)</a></li>
<li><a href="https://textdata.cn/blog/2023-11-17-how-handle-mega-csv-that-far-exceed-memory/"><strong>代码 | 如何处理远超电脑内存的csv文件</strong></a></li>
</ul>
<br>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>从3571w条专利数据集「匹配」上市公司的专利信息</title>
      <link>https://textdata.cn/blog/2023-04-26-matching-listed-corporate-with-patent-dataset/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-26-matching-listed-corporate-with-patent-dataset/</guid>
      <description>3571万专利申请全量数据(1985-2022年)数据</description>
      <content:encoded><![CDATA[<h2 id="一问题">一、问题</h2>
<p>之前分享过 <a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/">数据集(付费) | 3571万条专利申请数据集(1985-2022年)</a> ， 没有涉及匹配数据的问题。 <strong>有学员反映，该数据集是否支持匹配上市公司。或者上市公司的专利数量等信息能否从该数据集中抽取， 答案是可以的</strong>。 如果对数据集了解，可以直接看第二部分，不熟悉的建议看下数据集大致信息。</p>
<br>
<h3 id="11-专利申请数据集">1.1 专利申请数据集</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 数据集名称：省份版知识产权局专利
- 时间跨度：1985-2022，专利申请总量3571万
- 文件格式: csv
- 数据来源：『国家知识产权局』
- 数据整理: 『公众号:大邓和他的Python』
</code></pre></div><p><img loading="lazy" src="img/screen-datasets2.png" alt=""  />
</p>
<br>
<h3 id="12-字段">1.2 字段</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"> -  专利公开号
 -  专利名称
 -  专利类型
 -  专利摘要
 -  【申请人】
 -  专利申请号
 -  申请日
 -  申请公布日
 -  授权公布号
 -  授权公布日
 -  申请地址
 -  主权项
 -  发明人
 -  分类号
 -  主分类号
 -  代理机构
 -  分案原申请号
 -  优先权
 -  国际申请
 -  国际公布
 -  代理人
 -  省份或国家代码
 -  法律状态
 -  专利领域
 -  专利学科
 -  多次公布
</code></pre></div><br>
<h3 id="13-数据集大小">1.3 数据集大小</h3>
<p>把所有的 <em><strong>gz</strong></em> 压缩文件解压后， 数据集大概70G，</p>
<p><img loading="lazy" src="img/screen-datasets.png" alt=""  />
</p>
<br>
<h3 id="13-分省统计">1.3 分省统计</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">| 省份(区域)       |  专利数  |
| :---------------| :------ |
| 广东省           | 5728705 |
| 江苏省           | 4879171 |
| 浙江省           | 3706820 |
| 山东省           | 2064446 |
| 北京市           | 2069913 |
| 四川省           | 1159551 |
| 天津市           | 712932  |
| 上海市           | 1548278 |
| 贵州省           | 265512  |
| 陕西省           | 655837  |
| 吉林省           | 232264  |
| 辽宁省           | 637853  |
| 湖北省           | 966384  |
| 山西省           | 233418  |
| 宁夏回族自治区    | 66919   |
| 西藏自治区        | 9911    |
| 广西壮族自治区    | 377658  |
| 江西省           | 519584  |
| 湖南省           | 743828  |
| 黑龙江省         | 357881  |
| 海南省           | 59202   |
| 福建省           | 1046473 |
| 安徽省           | 1342364 |
| 河北省           | 645420  |
| 重庆市           | 592382  |
| 内蒙古自治区      | 133277  |
| 云南省           | 252407  |
| 甘肃省           | 164274  |
| 新疆维吾尔自治区   | 124734  |
| 河南省           | 966477  |
| 青海省           | 34127   |
| 台湾省           | 401555  |
| 香港特别行政区    | 61636   |
| 澳门特别行政区    | 2010    |
| 其他国家         | 2948557 |
</code></pre></div><p><br><br></p>
<h2 id="二读取数据">二、读取数据</h2>
<p>数据集中的个别csv文件较大，例如 <em><strong>广东省.csv</strong></em> 体积10G。 我们就以建议分析的时候， 电脑内存大于等于16G的， 每次分析时不要开其他软件。</p>
<p>为了演示， 我选择用较小的 黑龙江省.csv 为例。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;黑龙江省.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="c1">#解压后，读取csv的方法</span>
<span class="c1">#df = pd.read_csv(&#39;黑龙江省.csv&#39;, encoding=&#39;utf-8&#39;, low_memory=False)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;黑龙江省专利数量: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">河北省: 357881
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据集中的字段含</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;专利公开号&#39;, &#39;专利名称&#39;, &#39;专利类型&#39;, &#39;专利摘要&#39;, 
&#39;申请人&#39;, &#39;专利申请号&#39;, &#39;申请日&#39;, &#39;申请公布日&#39;, 
&#39;授权公布号&#39;, &#39;授权公布日&#39;, &#39;申请地址&#39;, &#39;主权项&#39;, &#39;发明人&#39;,
&#39;分类号&#39;, &#39;主分类号&#39;, &#39;代理机构&#39;, &#39;分案原申请号&#39;, &#39;优先权&#39;, 
&#39;国际申请&#39;, &#39;国际公布&#39;, &#39;代理人&#39;, &#39;省份或国家代码&#39;,
&#39;法律状态&#39;, &#39;专利领域&#39;, &#39;专利学科&#39;, &#39;多次公布&#39;],
dtype=&#39;object&#39;)
</code></pre></div><p><br><br></p>
<p>大邓现在在大东北，知道黑龙江的上市公司有哈药集团和北大荒。 我们就查一下 「黑龙江省.csv」 专利申请的数据中是否有北大荒和哈药集团。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;北大荒专利数: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;北大荒集团&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">())</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;哈药集团专利数: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sum</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">北大荒专利数:  4
哈药集团专利数:  712
</code></pre></div><p>还真有!!! so， 这个  <a href="">数据集 | 3571万条专利申请数据集(1985-2022年)</a> 是真的可以匹配上市公司，做一些有价值的变量。 感叹完毕， 继续写点没营养的代码。</p>
<br>
<h2 id="三匹配公司">三、匹配公司</h2>
<p>从上面可以看出哈药集团专利数很多，咱们继续检查哈药集团的专利数据。那么如何筛选出某公司的所有专利申请记录数据呢？这里会用到DataFrame的布尔条件筛选，把值为True的筛选出来。</p>
<ol>
<li>宽松条件  <code>「申请人」含「哈药集团」字眼的</code></li>
<li>严格条件 <code>「申请人」所含字眼就是「哈药集团」四个字</code></li>
</ol>
<br>
<h3 id="31-宽松条件">3.1 宽松条件</h3>
<p>把「申请人」含「哈药集团」字眼的记录筛选出来</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df2</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">contains</span><span class="p">(</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">)</span><span class="o">==</span><span class="kc">True</span><span class="p">]</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df2</span><span class="p">))</span>
<span class="n">df2</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<p>返回结果可以看到，申请人主体是有很多个不同的主体，都是「哈药集团」附属的子公司或分厂。</p>
<br>
<h3 id="31-严格条件">3.1 严格条件</h3>
<p>「申请人」所含字眼就是「哈药集团」四个字</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">]</span>

<span class="n">df3</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<p>严格条件筛选后，符合的记录数量为0 。 「哈药集团」这四个字是上市公司名称的缩写简写，所以直接这样做筛选，一般得到的结果都是0。  实际上，一个完整的公司名一般是 「属地+公司名+股份有限公司」。例如，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df4</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;哈药集团三精制药四厂有限公司&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df4</span><span class="p">))</span>
<span class="n">df4</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">28
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<br>
<h2 id="四其他操作">四、其他操作</h2>
<h3 id="41-类型字段">4.1 类型字段</h3>
<p>想了解「哈药集团」相关公司「专利领域」的分布情况</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df3</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;申请人&#39;</span><span class="p">]</span><span class="o">==</span><span class="s1">&#39;哈药集团&#39;</span><span class="p">]</span>

<span class="n">df3</span><span class="p">[</span><span class="s1">&#39;专利领域&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">工程科技Ⅱ辑            265
医药卫生科技            250
工程科技Ⅰ辑            157
基础科学               34
农业科技                5
工程科技Ⅰ辑; 工程科技Ⅱ辑      1
Name: 专利领域, dtype: int64
</code></pre></div><p>可以看到 「哈药集团」 在医药相关的领域布局较多，农业科技只有5个，从中可以看出 「哈药集团」还是一个技术很专注的企业。</p>
<br>
<h3 id="42-如何剔除nan">4.2 如何剔除Nan</h3>
<p>如果对某个字段感兴趣， 比如「国际申请」</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;国际申请&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0         NaN
1         NaN
2         NaN
3         NaN
4         NaN
         ... 
357876    NaN
357877    NaN
357878    NaN
357879    NaN
357880    NaN
Name: 国际申请, Length: 357881, dtype: object
</code></pre></div><p>但肉眼所见全是Nan， <strong>如何剔除掉Nan， 显露出非Nan的记录呢？</strong></p>
<p>解决办法依然是使用DataFrame的逻辑布尔筛选数据。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="o">~</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;国际申请&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">isna</span><span class="p">()]</span>
</code></pre></div><p><img loading="lazy" src="img/df5.png" alt=""  />

<br></p>
<br>
<h2 id="五获取3751w专利数据集">五、获取3751w专利数据集</h2>
<p>该数据集为付费数据集， 如需数据，点击该链接 <a href="https://textdata.cn/blog/2023-04-13-3571w-patent-dataset-in-china-mainland/">数据集(付费) | 3571万条专利申请数据集(1985-2022年)</a> 进行购买。</p>
<p><br><br></p>
<h2 id="相关资料">相关资料</h2>
<ul>
<li>
<p><a href="https://textdata.cn/blog/2023-12-22-patent-transform-exchange-dataset/">数据集 | 专利转让数据集(1985-2021)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-12-07-patent-application-dataset-of-listed-company-in-china-a-market/">数据集 | 上市公司 208 万条专利数据集 (1991-2022)</a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2028-12-18-how-to-extract-data-from-patent-application-dataset/"><strong>代码 | 使用3571w专利申请数据集构造「面板数据」</strong></a></p>
</li>
<li>
<p><a href="https://textdata.cn/blog/2023-04-26-matching-listed-corporate-with-patent-dataset/">从3571w条专利数据集「匹配」上市公司的专利信息</a></p>
</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>实验 | 互联网黑话与MD&amp;A</title>
      <link>https://textdata.cn/blog/2023-04-26-chinese-it-industry-slangs-words/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-26-chinese-it-industry-slangs-words/</guid>
      <description>&lt;p&gt;最近大邓意外发现，使用mda预训练语言模型扩展互联网黑近义词，模型返回的有鼻子有眼的，这意味着上市公司高管在md&amp;amp;a中可能频繁使用了互联网黑话。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一互联网黑话&#34;&gt;一、互联网黑话&lt;/h2&gt;
&lt;h3 id=&#34;二字动词&#34;&gt;二字动词&lt;/h3&gt;
&lt;p&gt;复盘，赋能，沉淀，倒逼，落地，串联，协同，反晡，兼容，包装，重组，履约，晌应，量化，发力，布局，联动，细分，梳理，输出，加速，共建，支撑，融合，聚合，集成，对齐，对标，对焦，拆解，拉通，抽象，摸索，提炼，打通，打透，吃透，迁移，分发，分层，分装，穿梭，辐射，围绕，复用，渗透，扩展，开拓。&lt;/p&gt;
&lt;h3 id=&#34;二字名词&#34;&gt;二字名词&lt;/h3&gt;
&lt;p&gt;漏斗，中台，闭环，打法，拉通，纽带，矩阵，刺激，规模，场景，聚焦，维度，格局，形态，生态，话术，体系，抓手，赛道，认知，玩法，体感，感知，调性，心智，战役，合力，心力。&lt;/p&gt;
&lt;h3 id=&#34;三字名词&#34;&gt;三字名词&lt;/h3&gt;
&lt;p&gt;颗粒度，感知度，方法论，组合拳，引爆点，点线面，精细化，差异化，平台化，结构化，影响力，耦合性，易用性，一致性，端到端，短平快。&lt;/p&gt;
&lt;h3 id=&#34;四字名词&#34;&gt;四字名词&lt;/h3&gt;
&lt;p&gt;生命周期，价值转化，强化认知，资源倾斜，完善逻辑，抽离透传，复用打法，商业模式，快速响应，定性定量，关键路径，去中心化，结果导向，垂直领域，如何收口，归因分析，体验度量，信息屏障。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;二模型近义词&#34;&gt;二、模型近义词&lt;/h2&gt;
&lt;p&gt;之前分享过一个中文金融领域的word2vec预训练语言模型，这里就不详细介绍模型参数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/&#34;&gt;使用中文MD&amp;amp;A数据集训练word2vec预训练模型， 可扩展或新建会计金融等领域的情感词典&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;文本分析最常用的方法是词典法(例如，LIWC)，而词向量模型可以帮助我们扩展或者构建概念情感词典。&lt;/p&gt;
&lt;p&gt;现在给大家演示只给一个词，返回topn个语义最相关的词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 与 seedwords 最相关的前topn个词&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# wv是预训练语言模型&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;复盘&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;复盘&amp;#39;,
 &amp;#39;检视&amp;#39;,
 &amp;#39;检讨&amp;#39;,
 &amp;#39;KPI&amp;#39;,
 &amp;#39;考核评估&amp;#39;,
 &amp;#39;量化考核&amp;#39;,
 &amp;#39;跟踪考核&amp;#39;,
 &amp;#39;纠偏&amp;#39;,
 &amp;#39;过程跟踪&amp;#39;,
 &amp;#39;分析总结&amp;#39;,
 &amp;#39;KPI指标&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;赋能&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;赋能&amp;#39;,
 &amp;#39;技术赋能&amp;#39;,
 &amp;#39;全面赋能&amp;#39;,
 &amp;#39;平台赋能&amp;#39;,
 &amp;#39;科技赋能&amp;#39;,
 &amp;#39;助力&amp;#39;,
 &amp;#39;数字化赋能&amp;#39;,
 &amp;#39;数据赋能&amp;#39;,
 &amp;#39;数智化&amp;#39;,
 &amp;#39;数据驱动&amp;#39;,
 &amp;#39;生态构建&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;感知度&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;感知度&amp;#39;,
 &amp;#39;体验度&amp;#39;,
 &amp;#39;产品认知度&amp;#39;,
 &amp;#39;知晓度&amp;#39;,
 &amp;#39;购买率&amp;#39;,
 &amp;#39;品牌黏性&amp;#39;,
 &amp;#39;满意度忠诚度&amp;#39;,
 &amp;#39;忠诚度美誉度&amp;#39;,
 &amp;#39;消费者满意度&amp;#39;,
 &amp;#39;体验满意度&amp;#39;,
 &amp;#39;好感度&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;倒逼&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;倒逼&amp;#39;, 
&amp;#39;倒逼企业&amp;#39;, 
&amp;#39;势在必行&amp;#39;, 
&amp;#39;迫使&amp;#39;, 
&amp;#39;大势所趋&amp;#39;, 
&amp;#39;促使&amp;#39;, 
&amp;#39;优胜劣汰&amp;#39;, 
&amp;#39;加速淘汰&amp;#39;, 
&amp;#39;势必&amp;#39;, 
&amp;#39;趋严&amp;#39;, 
&amp;#39;成为常态&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;闭环&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;闭环&amp;#39;,
&amp;#39;完整闭环&amp;#39;, 
&amp;#39;全链路&amp;#39;, 
&amp;#39;全链条&amp;#39;, 
&amp;#39;全流程&amp;#39;, 
&amp;#39;闭环式&amp;#39;, 
&amp;#39;端端&amp;#39;, 
&amp;#39;端到端&amp;#39;, 
&amp;#39;服务闭环&amp;#39;, 
&amp;#39;全周期&amp;#39;, 
&amp;#39;闭环管理&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                  &lt;span class=&#34;n&#34;&gt;seedwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;端到端&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[&amp;#39;端到端&amp;#39;,
 &amp;#39;端端&amp;#39;,
 &amp;#39;端到端的&amp;#39;,
 &amp;#39;全链路&amp;#39;,
 &amp;#39;端端的&amp;#39;,
 &amp;#39;数字化运营&amp;#39;,
 &amp;#39;全业务流程&amp;#39;,
 &amp;#39;场景全&amp;#39;,
 &amp;#39;全链条&amp;#39;,
 &amp;#39;敏捷&amp;#39;,
 &amp;#39;全价值链&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到， 返回的近义词都是挺互联网范儿的。 只有较为频繁使用， 语言模型才有可能捕捉到这种语义关系。这从侧面反映了近年来互联网高级黑话影响力之大。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;三获取模型&#34;&gt;三、获取模型&lt;/h2&gt;
&lt;p&gt;模型训练不易， 为付费资源，如需使用请 &lt;a href=&#34;https://mp.weixin.qq.com/s/zle9-BR-ei1V8Nmul19_7w&#34;&gt;&lt;strong&gt;点击进入跳转购买链接&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;期待合作&#34;&gt;期待合作&lt;/h2&gt;
&lt;p&gt;cntext目前仍在技术迭代，版本2.0.0综合了训练语言模型&amp;amp;多语言模型对齐， 有较大的应用价值，期待有独特文本数据集交流合作。&lt;/p&gt;
&lt;p&gt;通过cntext2.0.0，理论上可以对文本所涉社会主体进行计算，适合企业文化、品牌印象、旅游目的地形象、国家形象等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同主体不同时间段， 文本中蕴含的文化态度认知变迁，&lt;/li&gt;
&lt;li&gt;或同时间段，不同主体的大样本文本蕴含的差异性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p>最近大邓意外发现，使用mda预训练语言模型扩展互联网黑近义词，模型返回的有鼻子有眼的，这意味着上市公司高管在md&amp;a中可能频繁使用了互联网黑话。</p>
<p><br><br></p>
<h2 id="一互联网黑话">一、互联网黑话</h2>
<h3 id="二字动词">二字动词</h3>
<p>复盘，赋能，沉淀，倒逼，落地，串联，协同，反晡，兼容，包装，重组，履约，晌应，量化，发力，布局，联动，细分，梳理，输出，加速，共建，支撑，融合，聚合，集成，对齐，对标，对焦，拆解，拉通，抽象，摸索，提炼，打通，打透，吃透，迁移，分发，分层，分装，穿梭，辐射，围绕，复用，渗透，扩展，开拓。</p>
<h3 id="二字名词">二字名词</h3>
<p>漏斗，中台，闭环，打法，拉通，纽带，矩阵，刺激，规模，场景，聚焦，维度，格局，形态，生态，话术，体系，抓手，赛道，认知，玩法，体感，感知，调性，心智，战役，合力，心力。</p>
<h3 id="三字名词">三字名词</h3>
<p>颗粒度，感知度，方法论，组合拳，引爆点，点线面，精细化，差异化，平台化，结构化，影响力，耦合性，易用性，一致性，端到端，短平快。</p>
<h3 id="四字名词">四字名词</h3>
<p>生命周期，价值转化，强化认知，资源倾斜，完善逻辑，抽离透传，复用打法，商业模式，快速响应，定性定量，关键路径，去中心化，结果导向，垂直领域，如何收口，归因分析，体验度量，信息屏障。</p>
<p><br><br></p>
<h2 id="二模型近义词">二、模型近义词</h2>
<p>之前分享过一个中文金融领域的word2vec预训练语言模型，这里就不详细介绍模型参数。</p>
<p><a href="https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/">使用中文MD&amp;A数据集训练word2vec预训练模型， 可扩展或新建会计金融等领域的情感词典</a></p>
<br>
<p>文本分析最常用的方法是词典法(例如，LIWC)，而词向量模型可以帮助我们扩展或者构建概念情感词典。</p>
<p>现在给大家演示只给一个词，返回topn个语义最相关的词。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 与 seedwords 最相关的前topn个词</span>
<span class="c1"># wv是预训练语言模型</span>
<span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;复盘&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;复盘&#39;,
 &#39;检视&#39;,
 &#39;检讨&#39;,
 &#39;KPI&#39;,
 &#39;考核评估&#39;,
 &#39;量化考核&#39;,
 &#39;跟踪考核&#39;,
 &#39;纠偏&#39;,
 &#39;过程跟踪&#39;,
 &#39;分析总结&#39;,
 &#39;KPI指标&#39;]
</code></pre></div> <br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;赋能&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;赋能&#39;,
 &#39;技术赋能&#39;,
 &#39;全面赋能&#39;,
 &#39;平台赋能&#39;,
 &#39;科技赋能&#39;,
 &#39;助力&#39;,
 &#39;数字化赋能&#39;,
 &#39;数据赋能&#39;,
 &#39;数智化&#39;,
 &#39;数据驱动&#39;,
 &#39;生态构建&#39;]
</code></pre></div> <br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;感知度&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;感知度&#39;,
 &#39;体验度&#39;,
 &#39;产品认知度&#39;,
 &#39;知晓度&#39;,
 &#39;购买率&#39;,
 &#39;品牌黏性&#39;,
 &#39;满意度忠诚度&#39;,
 &#39;忠诚度美誉度&#39;,
 &#39;消费者满意度&#39;,
 &#39;体验满意度&#39;,
 &#39;好感度&#39;]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;倒逼&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;倒逼&#39;, 
&#39;倒逼企业&#39;, 
&#39;势在必行&#39;, 
&#39;迫使&#39;, 
&#39;大势所趋&#39;, 
&#39;促使&#39;, 
&#39;优胜劣汰&#39;, 
&#39;加速淘汰&#39;, 
&#39;势必&#39;, 
&#39;趋严&#39;, 
&#39;成为常态&#39;]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;闭环&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;闭环&#39;,
&#39;完整闭环&#39;, 
&#39;全链路&#39;, 
&#39;全链条&#39;, 
&#39;全流程&#39;, 
&#39;闭环式&#39;, 
&#39;端端&#39;, 
&#39;端到端&#39;, 
&#39;服务闭环&#39;, 
&#39;全周期&#39;, 
&#39;闭环管理&#39;]
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span><span class="o">=</span><span class="n">wv</span><span class="p">,</span> 
                  <span class="n">seedwords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;端到端&#39;</span><span class="p">],</span>
                  <span class="n">topn</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[&#39;端到端&#39;,
 &#39;端端&#39;,
 &#39;端到端的&#39;,
 &#39;全链路&#39;,
 &#39;端端的&#39;,
 &#39;数字化运营&#39;,
 &#39;全业务流程&#39;,
 &#39;场景全&#39;,
 &#39;全链条&#39;,
 &#39;敏捷&#39;,
 &#39;全价值链&#39;]
</code></pre></div><p>可以看到， 返回的近义词都是挺互联网范儿的。 只有较为频繁使用， 语言模型才有可能捕捉到这种语义关系。这从侧面反映了近年来互联网高级黑话影响力之大。</p>
<p><br><br></p>
<h2 id="三获取模型">三、获取模型</h2>
<p>模型训练不易， 为付费资源，如需使用请 <a href="https://mp.weixin.qq.com/s/zle9-BR-ei1V8Nmul19_7w"><strong>点击进入跳转购买链接</strong></a></p>
<p><br><br></p>
<h2 id="期待合作">期待合作</h2>
<p>cntext目前仍在技术迭代，版本2.0.0综合了训练语言模型&amp;多语言模型对齐， 有较大的应用价值，期待有独特文本数据集交流合作。</p>
<p>通过cntext2.0.0，理论上可以对文本所涉社会主体进行计算，适合企业文化、品牌印象、旅游目的地形象、国家形象等</p>
<ul>
<li>同主体不同时间段， 文本中蕴含的文化态度认知变迁，</li>
<li>或同时间段，不同主体的大样本文本蕴含的差异性</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 07-21年上市公司「委托贷款公告」</title>
      <link>https://textdata.cn/blog/2023-04-26-entrusted-loan-dataset/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-26-entrusted-loan-dataset/</guid>
      <description>沪深A股非金融类上市公司披露的委托贷款公告</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源：沪深A股非金融类上市公司披露的委托贷款公告
时间跨度：2007—2022年
所需指标
   - 贷款提供方和接收方名称
   - 借贷双方股权关联关系
   - 委托贷款金额
   - 利率
   - 贷款期限等借贷条款信息
  
下载链接: 链接: https://pan.baidu.com/s/1lqI-RuPmsYBAQ8tS2rB34Q?pwd=wir4 提取码: wir4
本文声明: 科研用途； 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><p>数据集不大，只有2297条记录。</p>
<p><img loading="lazy" src="img/01-screen.png" alt=""  />

<img loading="lazy" src="img/02-raw-data.png" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">os</span>

<span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<pre><code>['raw_data',
 '委托贷款.csv',
 'img',
 '委托贷款(含有hash_id,跟pdf文件名一致).csv',
 '委托贷款.ipynb',
 '数据说明.txt']
</code></pre>
<p><br><br></p>
<h2 id="二导入数据">二、导入数据</h2>
<ol>
<li>委托贷款.csv</li>
<li>委托贷款(含有hash_id,跟pdf文件名一致).csv 比1多了hash_id</li>
</ol>
<p>两个csv均整理自raw_data, 把很多pdf汇总到csv中。 这两个csv数据差异不大，这里只读取 「委托贷款(含有hash_id,跟pdf文件名一致).csv」。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;委托贷款(含有hash_id,跟pdf文件名一致).csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#记录数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2297
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#不同「公告分类」的记录数</span>
<span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告分类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">())</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#「公告年份」的记录数</span>
<span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告年份&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">sort_index</span><span class="p">())</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#公告的文本长度</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;公告内容&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    0        466.0
    1       1026.0
    2       2938.0
    3       3035.0
    4        921.0
             ...  
    2292     456.0
    2293    1116.0
    2294     477.0
    2295    1900.0
    2296    2950.0
    Name: 公告内容, Length: 2297, dtype: float64
</code></pre></div><br>
<br>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 3.3万 Instagram Influencer的 1018万条推文数据</title>
      <link>https://textdata.cn/blog/2023-12-24-instagram-influencer-dataset/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-12-24-instagram-influencer-dataset/</guid>
      <description>3.3万 Instagram Influencer的 1018万条推文数据</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<p><a href="https://sites.google.com/site/sbkimcv/dataset/instagram-influencer-dataset">https://sites.google.com/site/sbkimcv/dataset/instagram-influencer-dataset</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 33,935 位 Instagram 影响者（分为 9 个类别）
- 10,180,500 个 Instagram 帖子
- 发布元数据（JSON 文件）：~37 GB
- 图像（JPEG 文件）：~189 GB
</code></pre></div><p>作者很nice的，点击 上方链接 给作者留下你的信息，两三天就收到数据集下载链接(谷歌网盘)。</p>
<br> 
<p>作为 <a href="https://sites.google.com/site/sbkimcv/research"><strong>AI for Influencer Marketing</strong></a> 的一部分，我从 Instagram 收集了数据并出于研究目的进行分享。该数据集包含 33,935 位影响者及其 10,180,500 个 Instagram 帖子（每个影响者 300 个帖子）。该数据集包括两种类型的文件： <em><strong>帖子元数据</strong></em> 和 <em><strong>图像文件</strong></em> 。</p>
<p>帖子元数据文件采用 JSON 格式，包含以下信息：<em><strong>标题、用户标签、主题标签、时间戳、赞助、点赞、评论</strong></em>等。图像文件采用 JPEG 格式，数据集包含 12,933,406 个图像文件，因为一篇帖子可以有多个图像文件图像文件。如果一篇文章只有一个图像文件，则 JSON 文件和相应的图像文件具有相同的名称。但是，如果一篇文章包含多个图像，则 JSON 文件和相应的图像文件具有不同的名称。因此，我们还提供了一个 JSON-Image_mapping 文件，该文件显示与帖子元数据对应的图像文件列表。</p>
<p>影响者分为以下九类：</p>
<ol>
<li>Beauty</li>
<li>Family</li>
<li>Fashion</li>
<li>Fitness</li>
<li>Food</li>
<li>Interior</li>
<li>Pet</li>
<li>Travel</li>
<li>Other</li>
</ol>
<p><img loading="lazy" src="img/01-category.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二引用说明">二、引用说明</h2>
<p>使用  <a href="https://sites.google.com/site/sbkimcv/dataset/instagram-influencer-dataset"><strong>Instagram Influencer Dataset</strong> </a>,  需声明数据来源，</p>
<p>&ldquo;Multimodal Post Attentive Profiling for Influencer Marketing,&rdquo; Seungbae Kim, Jyun-Yu Jiang, Masaki Nakada, Jinyoung Han and Wei Wang. In Proceedings of The Web Conference (WWW &lsquo;20), ACM, 2020.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">@inproceedings{kim2020multimodal,
  title={Multimodal Post Attentive Profiling for Influencer Marketing},
  author={Kim, Seungbae and Jiang, Jyun-Yu and Nakada, Masaki and Han, Jinyoung and Wang, Wei},
  booktitle={Proceedings of The Web Conference 2020},
  pages={2878--2884},
  year={2020}
}
</code></pre></div><p><br><br></p>
<h2 id="三其他营销数据">三、其他营销数据</h2>
<ul>
<li><a href="https://textdata.cn/blog/2023-11-22-1000w-github-developer-dataset/">数据集 | 1000万 Github 用户数据</a></li>
<li><a href="https://textdata.cn/blog/2023-11-22-open-dataset-gharchive-org/">2T数据集 | 使用GH Archive获取Github社区用户数据</a></li>
<li><a href="https://textdata.cn/blog/2023-12-24-instagram-influencer-dataset/">数据集 | 3.3万 Instagram Influencer的 1018万条推文数据</a></li>
<li><a href="https://textdata.cn/blog/yelpdataset_10g/">10G数据集 | YelpDaset酒店管理类数据集</a></li>
<li><a href="https://textdata.cn/blog/2022-12-08-indiegogo-dataset/">1.5G数据集 | 200万条Indiegogo众筹项目信息</a></li>
<li><a href="https://textdata.cn/blog/2022-12-04-kickstarters_dataset/">12G数据集 | 23w条Kickstarter项目信息</a></li>
<li><a href="https://textdata.cn/blog/2023-05-10-100m-bilibili-user-info-dataset/">数据集 | B站/哔哩哔哩 1 亿用户数据</a></li>
<li><a href="https://textdata.cn/blog/2023-03-06-zhihurec-dataset/">数据集 | 80w知乎用户问答数据</a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集| 2014年-2023年监管问询函</title>
      <link>https://textdata.cn/blog/2023-04-17-china-a-market-inquiry-letter-datasets/</link>
      <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-17-china-a-market-inquiry-letter-datasets/</guid>
      <description>本文只是分享Python代码，大家可以结合之前公众号内的分享，做情感分析、词频统计、情感分析等。</description>
      <content:encoded><![CDATA[<p><strong>问询函</strong>，是指上海证券交易所和深圳证券交易所在审核上市公司相关公告过程中如果发现未达到“直接监管标准”(一般表现为信息披露不准确或内容不全)的问题时，会针对财务报告、并购重组、关联交易、股票异常波动和媒体报道的社会热点等事件发出问询函，要求上市公司在规定时间内书面回函并公开披露。倘若上市公司仍存在信息披露不准确或不全的问题，交易所会再次问询。</p>
<p><br><br></p>
<h2 id="一数据集详情">一、数据集详情</h2>
<p><strong>问询数据集</strong>，有 <strong>14730</strong> 条问询记录， 时间范围  <strong>2014.12~2023.12</strong>, 该数据集xlsx文件有159M 。</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>code</strong></td>
<td>股票代码</td>
</tr>
<tr>
<td><strong>corp_name</strong></td>
<td>上市公司简称</td>
</tr>
<tr>
<td><strong>let_cat</strong></td>
<td><strong>监管机构</strong>发出的问询函所属类别</td>
</tr>
<tr>
<td><strong>inq_title</strong></td>
<td>问询函的标题</td>
</tr>
<tr>
<td><strong>inq_content</strong></td>
<td>问询函中询问的具体内容</td>
</tr>
<tr>
<td><strong>reply_content</strong></td>
<td>上市公司回复的详细内容</td>
</tr>
<tr>
<td><strong>inq_date</strong></td>
<td>监管机构发函日期</td>
</tr>
<tr>
<td><strong>ddl_date</strong></td>
<td>规定限期回复日期</td>
</tr>
<tr>
<td><strong>reply_date</strong></td>
<td>公司实际回复日期</td>
</tr>
</tbody>
</table>
<p>本文只是小作演示，大家可以结合之前公众号内的分享，做情感分析、词频统计、情感分析等。</p>
<br>
<h3 id="声明">声明</h3>
<p>科研用途，仅供展示； 如有任何问题，加微信372335839， 备注「姓名-学校-专业-问询函」</p>
<p><br><br></p>
<h2 id="二导入数据">二、导入数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;监管问询2014-2023.xlsx&#39;</span><span class="p">)</span>  
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#字段含</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;code&#39;, &#39;corp_name&#39;, &#39;let_cat&#39;, &#39;inq_title&#39;, &#39;inq_content&#39;,
       &#39;reply_content&#39;, &#39;inq_date&#39;, &#39;ddl_date&#39;, &#39;reply_date&#39;],
          dtype=&#39;object&#39;)
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">14731
</code></pre></div><p><br><br></p>
<h2 id="三数据分析">三、数据分析</h2>
<h3 id="31-更改日期格式">3.1 更改日期格式</h3>
<p>将日期字符串数据改为datetime类型数据，即可做日期间隔的计算。这里只演示公司回复日期与监管机构发函日期时间间隔。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="o">.</span><span class="n">code</span><span class="o">!=</span><span class="s1">&#39;股票代码&#39;</span><span class="p">]</span> <span class="c1">#剔除第一行(字段名)</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;ddl_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;ddl_date&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;reply_date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;reply_date&#39;</span><span class="p">])</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;duration1&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;reply_date&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">]</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据集的时间跨度</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2014-12-04 00:00:00
2023-12-30 00:00:00
</code></pre></div><br>
<h3 id="32-发函量年度变化">3.2 发函量年度变化</h3>
<p>随着我国金融市场发展，监管越来越到位，再加上上市公司会越来越多， 监管机构发函量年度变化应该是越来越多。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 

<span class="n">stats_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">&#39;inq_date&#39;</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">stats_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;volume&#39;</span><span class="p">]</span>
<span class="n">stats_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">stats_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">&#39;category&#39;</span><span class="p">)</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">stats_df</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;volume&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_col</span><span class="p">()</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;监管机构发函量(会计年度2014-2023)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;发函量&#39;</span><span class="p">)</span>
<span class="p">)</span>

</code></pre></div><p><img loading="lazy" src="img/4-plot.png" alt="svg"  />
</p>
<br>
<h3 id="33-问询回复间隔">3.3 问询回复间隔</h3>
<p>从监管机构发起问询与公司回复之间的时间差， 按道理</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;duration1&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;duration1&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">days</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">sz_mean</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A0&#39;</span><span class="p">)]</span><span class="o">.</span><span class="n">duration1</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">sh_mean</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A6&#39;</span><span class="p">)]</span><span class="o">.</span><span class="n">duration1</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;深市平均回复时间&#39;</span><span class="p">,</span> <span class="n">sz_mean</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;沪市平均回复时间&#39;</span><span class="p">,</span> <span class="n">sh_mean</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">深市平均回复时间 14.02757813805783
沪市平均回复时间 23.929029078363726
</code></pre></div><p>似乎沪市的上市公司回复的更慢</p>
<br>
<h3 id="34-公司回复速度">3.4 公司回复速度</h3>
<p>公司回复问询函的速度是越来越快还是越来越久？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">plotnine</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.font_manager</span> <span class="kn">import</span> <span class="n">FontProperties</span>

<span class="c1">#文泉驿微米黑.ttf位于代码同文件夹</span>
<span class="n">font_prop</span> <span class="o">=</span> <span class="n">FontProperties</span><span class="p">(</span><span class="n">fname</span><span class="o">=</span><span class="s1">&#39;文泉驿微米黑.ttf&#39;</span><span class="p">)</span> 


<span class="n">reply_stats_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">)[</span><span class="s1">&#39;duration1&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">&#39;inq_date&#39;</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">reply_stats_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;reply_speed&#39;</span><span class="p">]</span>
<span class="n">reply_stats_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">reply_stats_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">&#39;category&#39;</span><span class="p">)</span>

<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">reply_stats_df</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;reply_speed&#39;</span><span class="p">))</span>
    <span class="o">+</span><span class="n">geom_col</span><span class="p">()</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;公司监管机构问询函的平均速度(单位: 天)&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;时间间隔&#39;</span><span class="p">)</span>
<span class="p">)</span>

</code></pre></div><p><img loading="lazy" src="img/5-plot.png" alt="svg"  />
</p>
<br>
<h3 id="34-文本长度静态对比">3.4 文本长度静态对比</h3>
<p>不考虑时间，比较沪深问询函内容及回复内容文本长度</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_len&#39;</span><span class="p">]</span> <span class="o">=</span>  <span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_content&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span>
<span class="n">df</span><span class="p">[</span><span class="s1">&#39;reply_len&#39;</span><span class="p">]</span> <span class="o">=</span>  <span class="n">df</span><span class="p">[</span><span class="s1">&#39;reply_content&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">len</span><span class="p">()</span>


<span class="n">sz_inq_len_mean</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A0&#39;</span><span class="p">)]</span><span class="o">.</span><span class="n">inq_len</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">sh_inq_len_mean</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A6&#39;</span><span class="p">)]</span><span class="o">.</span><span class="n">inq_len</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;深市-监管机构平均问询函内容长度&#39;</span><span class="p">,</span> <span class="n">sz_inq_len_mean</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;沪市-监管机构平均问询函内容长度&#39;</span><span class="p">,</span> <span class="n">sh_inq_len_mean</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="o">*</span><span class="mi">40</span><span class="p">,</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>


<span class="n">sz_reply_len_mean</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A0&#39;</span><span class="p">)]</span><span class="o">.</span><span class="n">reply_len</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>
<span class="n">sh_reply_len_mean</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">str</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;A6&#39;</span><span class="p">)]</span><span class="o">.</span><span class="n">reply_len</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;深市公司平均回复长度&#39;</span><span class="p">,</span> <span class="n">sz_reply_len_mean</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;沪市公司平均回复时间&#39;</span><span class="p">,</span> <span class="n">sh_reply_len_mean</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">深市-监管机构平均问询函内容长度 1947.5390460109752
沪市-监管机构平均问询函内容长度 1998.5633954154728
---------------------------------------- 

深市公司平均回复长度 13677.95808477237
沪市公司平均回复时间 17027.80131208997
</code></pre></div><p>似乎监管机构对沪市公司发起的问询内容更长， 而沪市的上市公司对应回应问询的内容也更长。</p>
<br>
<h3 id="35-随时间文本长度变化">3.5 随时间文本长度变化</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">reply_len_stats_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;inq_date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">dt</span><span class="o">.</span><span class="n">year</span><span class="p">)[</span><span class="s1">&#39;inq_len&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">mean</span><span class="p">()</span><span class="o">.</span><span class="n">reset_index</span><span class="p">()</span><span class="o">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s1">&#39;inq_date&#39;</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">reply_len_stats_df</span><span class="o">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="s1">&#39;text_len&#39;</span><span class="p">]</span>
<span class="n">reply_len_stats_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">reply_len_stats_df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">&#39;category&#39;</span><span class="p">)</span>


<span class="p">(</span>
    <span class="n">ggplot</span><span class="p">(</span><span class="n">reply_len_stats_df</span><span class="p">,</span>  <span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s1">&#39;year&#39;</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s1">&#39;text_len&#39;</span><span class="p">))</span>
    <span class="c1">#+geom_point()</span>
    <span class="o">+</span><span class="n">geom_col</span><span class="p">()</span>
    <span class="o">+</span><span class="n">geom_line</span><span class="p">()</span>
    <span class="o">+</span><span class="n">theme</span><span class="p">(</span><span class="n">figure_size</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
           <span class="n">text</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">()),</span> 
           <span class="n">plot_title</span> <span class="o">=</span> <span class="n">element_text</span><span class="p">(</span><span class="n">family</span> <span class="o">=</span> <span class="n">font_prop</span><span class="o">.</span><span class="n">get_name</span><span class="p">(),</span> <span class="n">size</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
          <span class="p">)</span>
    <span class="o">+</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s1">&#39;监管机构问询函内容长度随时间的变化趋势&#39;</span><span class="p">,</span>
          <span class="n">x</span> <span class="o">=</span> <span class="s1">&#39;年度&#39;</span><span class="p">,</span> 
          <span class="n">y</span> <span class="o">=</span> <span class="s1">&#39;问询函长度&#39;</span><span class="p">)</span>
<span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/6-plot.png" alt="svg"  />

​</p>
<br>
 <br>
]]></content:encoded>
    </item>
    
    <item>
      <title>文本分析 | 词典法的两种代码实现</title>
      <link>https://textdata.cn/blog/2023-04-17-two-method-for-liwc/</link>
      <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-17-two-method-for-liwc/</guid>
      <description>但这周末，我使用1.4G的mda数据集， 5w条记录。尝试计算某类词的出现次数， 该词典含几百个词。在我的96G内存的macbook中，运行了十几个小时都没结果。于是同一个问题，本文分享了两种实现方法。一般情况下，使用「方法一」即可。当第一种方法运行不出结果，可以尝试「方法二」。</description>
      <content:encoded><![CDATA[<h2 id="一问题描述">一、问题描述</h2>
<p>对csv、xlsx等类型做词典法分析，经常用到apply方法，但是之前分享到案例数据量比较小， 词典都是几个词， 一般都能运行出结果。</p>
<blockquote>
<p><a href="https://textdata.cn/blog/liwc_python_text_mining/">liwc其实就是一种词典法</a></p>
</blockquote>
<p>但这周末，我使用1.4G的mda数据集， 5w条记录。尝试计算某类词的出现次数， 该词典含几百个词。在我的96G内存的macbook中，运行了十几个小时都没结果。</p>
<p>于是同一个问题，本文分享了两种实现方法。<strong>一般情况下，使用「方法一」即可。当第一种方法运行不出结果，可以尝试「方法二」。</strong></p>
<p><br><br></p>
<h2 id="二方法一">二、方法一</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>导入含5000条记录的mda数据 test_mda.csv ，这里声明格式，防止年份和股票代码被识别为数字。</p>
<blockquote>
<p>如果想要完整的mda数据，可以前往购买[]</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#导入1000条测试数据</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;test_mda.csv&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><pre><code>5000
</code></pre>
<br>
<h3 id="22-准备词典">2.2 准备词典</h3>
<p>为了节约时间，也构造了只有几个词语的词典。</p>
<blockquote>
<p>自己随机手写的词典，如果需要应用的自己的研究中, 请将这几个概念词典扩充的完备一些，词汇量尽可能多一些。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#创新</span>
<span class="n">inovation_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;科技&#39;</span><span class="p">,</span> <span class="s1">&#39;研发&#39;</span><span class="p">,</span> <span class="s1">&#39;高校&#39;</span><span class="p">,</span> <span class="s1">&#39;技术&#39;</span><span class="p">,</span> <span class="s1">&#39;科学&#39;</span><span class="p">,</span> <span class="s1">&#39;理论&#39;</span><span class="p">,</span> <span class="s1">&#39;专利&#39;</span><span class="p">,</span> <span class="s1">&#39;攻克&#39;</span><span class="p">,</span> <span class="s1">&#39;改良&#39;</span><span class="p">,</span> <span class="s1">&#39;工艺&#39;</span><span class="p">,</span> <span class="s1">&#39;前沿&#39;</span><span class="p">,</span> <span class="s1">&#39;尖端&#39;</span><span class="p">]</span>

<span class="c1">#环保</span>
<span class="n">green_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;绿色&#39;</span><span class="p">,</span> <span class="s1">&#39;节能&#39;</span><span class="p">,</span> <span class="s1">&#39;低碳&#39;</span><span class="p">,</span> <span class="s1">&#39;环保&#39;</span><span class="p">,</span> <span class="s1">&#39;环境友好&#39;</span><span class="p">,</span> <span class="s1">&#39;无污染&#39;</span><span class="p">]</span>

<span class="c1">#短视主义</span>
<span class="n">push_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;加快&#39;</span><span class="p">,</span> <span class="s1">&#39;尽快&#39;</span><span class="p">,</span> <span class="s1">&#39;抓紧&#39;</span><span class="p">,</span> <span class="s1">&#39;月底&#39;</span><span class="p">,</span> <span class="s1">&#39;年底&#39;</span><span class="p">,</span> <span class="s1">&#39;争取&#39;</span><span class="p">,</span> <span class="s1">&#39;马上&#39;</span><span class="p">,</span> <span class="s1">&#39;立刻&#39;</span><span class="p">,</span> <span class="s1">&#39;年内&#39;</span><span class="p">,</span> <span class="s1">&#39;数月&#39;</span><span class="p">,</span> <span class="s1">&#39;数年&#39;</span><span class="p">]</span>

<span class="c1">#模棱两可</span>

<span class="n">prob_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;可能&#39;</span><span class="p">,</span> <span class="s1">&#39;大概&#39;</span><span class="p">,</span> <span class="s1">&#39;左右&#39;</span><span class="p">,</span> <span class="s1">&#39;估计&#39;</span><span class="p">,</span> <span class="s1">&#39;大约&#39;</span><span class="p">]</span>
</code></pre></div><br>
<h3 id="23-设计函数">2.3 设计函数</h3>
<p>该函数能实现对 inovation_words 和  green_words两类词的词频统计;</p>
<p>返回的结果包括总词频、green词频、 inovation词频。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#创新</span>
<span class="n">inovation_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;科技&#39;</span><span class="p">,</span> <span class="s1">&#39;研发&#39;</span><span class="p">,</span> <span class="s1">&#39;高校&#39;</span><span class="p">,</span> <span class="s1">&#39;技术&#39;</span><span class="p">,</span> <span class="s1">&#39;科学&#39;</span><span class="p">,</span> <span class="s1">&#39;理论&#39;</span><span class="p">,</span> <span class="s1">&#39;专利&#39;</span><span class="p">,</span> <span class="s1">&#39;攻克&#39;</span><span class="p">,</span> <span class="s1">&#39;改良&#39;</span><span class="p">,</span> <span class="s1">&#39;工艺&#39;</span><span class="p">,</span> <span class="s1">&#39;前沿&#39;</span><span class="p">,</span> <span class="s1">&#39;尖端&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">]</span>
<span class="c1">#环保</span>
<span class="n">green_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;绿色&#39;</span><span class="p">,</span> <span class="s1">&#39;节能&#39;</span><span class="p">,</span> <span class="s1">&#39;低碳&#39;</span><span class="p">,</span> <span class="s1">&#39;环保&#39;</span><span class="p">,</span> <span class="s1">&#39;环境友好&#39;</span><span class="p">,</span> <span class="s1">&#39;无污染&#39;</span><span class="p">]</span>
<span class="c1">#短视主义</span>
<span class="n">push_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;加快&#39;</span><span class="p">,</span> <span class="s1">&#39;尽快&#39;</span><span class="p">,</span> <span class="s1">&#39;抓紧&#39;</span><span class="p">,</span> <span class="s1">&#39;月底&#39;</span><span class="p">,</span> <span class="s1">&#39;年底&#39;</span><span class="p">,</span> <span class="s1">&#39;争取&#39;</span><span class="p">,</span> <span class="s1">&#39;马上&#39;</span><span class="p">,</span> <span class="s1">&#39;立刻&#39;</span><span class="p">,</span> <span class="s1">&#39;年内&#39;</span><span class="p">,</span> <span class="s1">&#39;数月&#39;</span><span class="p">,</span> <span class="s1">&#39;数年&#39;</span><span class="p">]</span>
<span class="c1">#模棱两可</span>
<span class="n">prob_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;可能&#39;</span><span class="p">,</span> <span class="s1">&#39;大概&#39;</span><span class="p">,</span> <span class="s1">&#39;左右&#39;</span><span class="p">,</span> <span class="s1">&#39;估计&#39;</span><span class="p">,</span> <span class="s1">&#39;大约&#39;</span><span class="p">]</span>


<span class="k">def</span> <span class="nf">analysis_info</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">inovation_num</span><span class="p">,</span> <span class="n">green_num</span><span class="p">,</span> <span class="n">push_num</span><span class="p">,</span> <span class="n">prob_num</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>
    <span class="n">words</span> <span class="o">=</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="n">push_num</span> 
    
    <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">inovation_words</span><span class="p">:</span>
        <span class="n">inovation_num</span> <span class="o">=</span> <span class="n">inovation_num</span> <span class="o">+</span> <span class="n">words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>

    <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">green_words</span><span class="p">:</span>
        <span class="n">green_num</span> <span class="o">=</span> <span class="n">green_num</span> <span class="o">+</span> <span class="n">words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
        
    <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">push_words</span><span class="p">:</span>
        <span class="n">push_num</span> <span class="o">=</span> <span class="n">push_num</span> <span class="o">+</span> <span class="n">words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
        
    <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">prob_words</span><span class="p">:</span>
        <span class="n">prob_num</span> <span class="o">=</span> <span class="n">prob_num</span> <span class="o">+</span> <span class="n">words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">w</span><span class="p">)</span>
        
    <span class="n">res</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s1">&#39;words&#39;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">words</span><span class="p">),</span>
        <span class="s1">&#39;inovation&#39;</span><span class="p">:</span> <span class="n">inovation_num</span><span class="p">,</span>
        <span class="s1">&#39;green&#39;</span><span class="p">:</span> <span class="n">green_num</span><span class="p">,</span>
        <span class="s1">&#39;push&#39;</span><span class="p">:</span> <span class="n">push_num</span><span class="p">,</span>
        <span class="s1">&#39;prob&#39;</span><span class="p">:</span> <span class="n">prob_num</span>
    <span class="p">}</span>
    
    <span class="k">return</span> <span class="n">pd</span><span class="o">.</span><span class="n">Series</span><span class="p">(</span><span class="n">res</span><span class="p">)</span>

<span class="n">analysis_info</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="s1">&#39;2022年是公司规范运作，坚持科技创新，保持持续发展。&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>words        15
inovation     2
green         0
push          0
prob          0
dtype: int64
</code></pre>
<br>
<h3 id="24-批量计算">2.4 批量计算</h3>
<p>选中text列，对该列批量运行 analysis_info 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">time</span>

<span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

<span class="n">info_df</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="n">analysis_info</span><span class="p">)</span>
<span class="n">res_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">([</span><span class="n">df</span><span class="p">,</span> <span class="n">info_df</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">end</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;耗时 </span><span class="si">{}</span><span class="s1"> s&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="p">)))</span>

<span class="n">res_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>

</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">耗时 112 s
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="三方法二">三、方法二</h2>
<p>将中文分词后， 使用bag-of-words构造词语词频矩阵</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span> 
<span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <span class="n">CountVectorizer</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">jieba</span>

<span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

<span class="n">df</span><span class="p">[</span><span class="s1">&#39;new_text&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">text</span><span class="p">:</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">jieba</span><span class="o">.</span><span class="n">cut</span><span class="p">(</span><span class="n">text</span><span class="p">)))</span>

<span class="n">vectorize</span> <span class="o">=</span> <span class="n">CountVectorizer</span><span class="p">()</span>
<span class="n">dtm</span> <span class="o">=</span> <span class="n">vectorize</span><span class="o">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">df</span><span class="o">.</span><span class="n">new_text</span><span class="p">)</span>
<span class="n">bagofword_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">dtm</span><span class="o">.</span><span class="n">toarray</span><span class="p">(),</span> 
                            <span class="n">columns</span><span class="o">=</span><span class="n">vectorize</span><span class="o">.</span><span class="n">get_feature_names_out</span><span class="p">())</span> 


<span class="c1">#创新</span>
<span class="n">inovation_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;科技&#39;</span><span class="p">,</span> <span class="s1">&#39;研发&#39;</span><span class="p">,</span> <span class="s1">&#39;高校&#39;</span><span class="p">,</span> <span class="s1">&#39;技术&#39;</span><span class="p">,</span> <span class="s1">&#39;科学&#39;</span><span class="p">,</span> <span class="s1">&#39;理论&#39;</span><span class="p">,</span> <span class="s1">&#39;专利&#39;</span><span class="p">,</span> <span class="s1">&#39;攻克&#39;</span><span class="p">,</span> <span class="s1">&#39;改良&#39;</span><span class="p">,</span> <span class="s1">&#39;工艺&#39;</span><span class="p">,</span> <span class="s1">&#39;前沿&#39;</span><span class="p">,</span> <span class="s1">&#39;尖端&#39;</span><span class="p">]</span>
<span class="c1">#环保</span>
<span class="n">green_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;绿色&#39;</span><span class="p">,</span> <span class="s1">&#39;节能&#39;</span><span class="p">,</span> <span class="s1">&#39;低碳&#39;</span><span class="p">,</span> <span class="s1">&#39;环保&#39;</span><span class="p">,</span> <span class="s1">&#39;环境友好&#39;</span><span class="p">,</span> <span class="s1">&#39;无污染&#39;</span><span class="p">]</span>
<span class="c1">#短视主义</span>
<span class="n">push_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;加快&#39;</span><span class="p">,</span> <span class="s1">&#39;尽快&#39;</span><span class="p">,</span> <span class="s1">&#39;抓紧&#39;</span><span class="p">,</span> <span class="s1">&#39;月底&#39;</span><span class="p">,</span> <span class="s1">&#39;年底&#39;</span><span class="p">,</span> <span class="s1">&#39;争取&#39;</span><span class="p">,</span> <span class="s1">&#39;马上&#39;</span><span class="p">,</span> <span class="s1">&#39;立刻&#39;</span><span class="p">,</span> <span class="s1">&#39;年内&#39;</span><span class="p">,</span> <span class="s1">&#39;数月&#39;</span><span class="p">,</span> <span class="s1">&#39;数年&#39;</span><span class="p">]</span>
<span class="c1">#模棱两可</span>
<span class="n">prob_words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;可能&#39;</span><span class="p">,</span> <span class="s1">&#39;大概&#39;</span><span class="p">,</span> <span class="s1">&#39;左右&#39;</span><span class="p">,</span> <span class="s1">&#39;估计&#39;</span><span class="p">,</span> <span class="s1">&#39;大约&#39;</span><span class="p">]</span>

<span class="n">INOVATION_WORDS</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">inovation_words</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">bagofword_df</span><span class="o">.</span><span class="n">columns</span><span class="p">]</span>
<span class="n">GREEN_WORDS</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">green_words</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">bagofword_df</span><span class="o">.</span><span class="n">columns</span><span class="p">]</span>
<span class="n">PUSH_WORDS</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">push_words</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">bagofword_df</span><span class="o">.</span><span class="n">columns</span><span class="p">]</span>
<span class="n">PROB_WORDS</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">prob_words</span> <span class="k">if</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">bagofword_df</span><span class="o">.</span><span class="n">columns</span><span class="p">]</span>

<span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;year&#39;</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;year&#39;</span><span class="p">],</span>
        <span class="s1">&#39;code&#39;</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;code&#39;</span><span class="p">],</span>
        <span class="s1">&#39;text&#39;</span><span class="p">:</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">],</span>
        
        <span class="s1">&#39;inovation&#39;</span><span class="p">:</span> <span class="n">bagofword_df</span><span class="p">[</span><span class="n">INOVATION_WORDS</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
        <span class="s1">&#39;green&#39;</span><span class="p">:</span> <span class="n">bagofword_df</span><span class="p">[</span><span class="n">GREEN_WORDS</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
        <span class="s1">&#39;push&#39;</span><span class="p">:</span> <span class="n">bagofword_df</span><span class="p">[</span><span class="n">PUSH_WORDS</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
        <span class="s1">&#39;prob&#39;</span><span class="p">:</span> <span class="n">bagofword_df</span><span class="p">[</span><span class="n">PROB_WORDS</span><span class="p">]</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span>
        <span class="s1">&#39;words&#39;</span><span class="p">:</span> <span class="n">bagofword_df</span><span class="o">.</span><span class="n">apply</span><span class="p">(</span><span class="nb">sum</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
        <span class="p">}</span>


<span class="n">res_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="n">end</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;耗时 </span><span class="si">{}</span><span class="s1"> s&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">end</span><span class="o">-</span><span class="n">start</span><span class="p">)))</span>

<span class="n">res_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>

</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">耗时 164 s
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="四讨论">四、讨论</h2>
<p>analysis_info(text) 函数内含有4个for循环，for循环是效率很低的操作。 随着所要计算的词典数n的增加， 方法一时间会随着n的增长而线性增长。</p>
<p>而方法二， 最费时间的瓶颈是将文本转化为数字(比较费时间)，后续的计算均为向量化(矩阵化)的数值计算，随着词典数n的增加， 所消耗的时间会越来越短。</p>
<p><strong>一般情况下，使用「方法一」即可。当第一种方法运行不出结果，可以尝试「方法二」。</strong></p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>不要当真 | 词云图看婚姻的本质是什么</title>
      <link>https://textdata.cn/blog/2023-04-14-what-is-the-nature-of-marriage/</link>
      <pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-14-what-is-the-nature-of-marriage/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;今天在知乎刷到「婚姻的本质是什么?」。&lt;/p&gt;
&lt;p&gt;绝大多数回答都是跟私有产权、生产关系相关，直到有一个回答&lt;strong&gt;整个婚姻法里也没有关于爱情的只言片语，从头到尾就一个字，钱，所以婚姻本质上就是契约&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;一下子想到用词频统计试一下， 看看民法典婚姻家庭部分和非婚姻家庭部分两部分内容的侧重点分别是什么。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;数据准备&#34;&gt;数据准备&lt;/h2&gt;
&lt;p&gt;民法典章节目录如下， 把「第五编　婚姻家庭」单独拿出来做「&lt;a href=&#34;marital-relationship.txt&#34;&gt;婚姻家庭内容&lt;/a&gt;」， 剩下的内容做「&lt;a href=&#34;non-marital-relationship.txt&#34;&gt;非婚姻家庭内容&lt;/a&gt;」。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 第一编　总则
  - 第一章　基本规定
  - 第二章　自然人
  - 第三章　法人
  - 第四章　非法人组织
  - 第五章　民事权利
  - 第六章　民事法律行为
  - 第七章　代理
  - 第八章　民事责任
  - 第九章　诉讼时效
  - 第十章　期间计算
  
- 第二编　物权
  - 第一分编　通则
     - 第一章　一般规定
     - 第二章　物权的设立、变更、转让和消灭
     - 第三章　物权的保护
  - 第二分编　所有权
  - 第三分编　用益物权
  - 第四分编　担保物权
  - 第五分编　占有

- 第三编　合同
  - 第一分编　通则 
  - 第二分编　典型合同
  - 第三分编　准合同

- 第四编　人格权
    - 第一章　一般规定
    - 第二章　生命权、身体权和健康权
    - 第三章　姓名权和名称权
    - 第四章　肖像权
    - 第五章　名誉权和荣誉权
    - 第六章　隐私权和个人信息保护

- 第五编　婚姻家庭
   - 第一章　一般规定
   - 第二章　结婚
   - 第三章　家庭关系
       - 第一节　夫妻关系
       - 第二节　父母子女关系和其他近亲属关系
   - 第四章　离婚
   - 第五章　收养
      - 第一节　收养关系的成立
      - 第二节　收养的效力
      - 第三节　收养关系的解除
      
- 第六编　继承
   - 第一章　一般规定
   - 第二章　法定继承
   - 第三章　遗嘱继承和遗赠
   - 第四章　遗产的处理

- 第七编　侵权责任
   - 第一章　一般规定
   - 第二章　损害赔偿
   - 第三章　责任主体的特殊规定
   - 第四章　产品责任
   - 第五章　机动车交通事故责任
   - 第六章　医疗损害责任
   - 第七章　环境污染和生态破坏责任
   - 第八章　高度危险责任
   - 第九章　饲养动物损害责任
   - 第十章　建筑物和物件损害责任
- 附则
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;读取数据&#34;&gt;读取数据&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#第五编　婚姻家庭&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;marital_relationship_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;marital-relationship.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#不含【第五编　婚姻家庭】其余部分&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;non_marital_relationship_text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;non-marital-relationship.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;marital_relationship_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;第五编\u3000婚姻家庭\n第一章\u3000一般规定\n第一千零四十条\u3000本编调整因婚姻家庭产生的民事关系。\n第一千零四十一条\u3000婚姻家庭受国家保护。\n实行婚姻自由、一夫一妻、男女平等的婚姻制度。\n保护妇女、未成年人、老年人、残疾人的合法权益。\n第一千零四十二条\u3000禁止包办、买卖婚姻和其他干涉婚姻自由的行为。禁止借婚姻索取财物。\n禁止重婚。禁止有配偶者与他人同居。\n禁止家庭暴力。禁止家庭成员间的虐待和遗弃。\n第一千零四十三条\u3000家庭应当树立优良家风，弘扬家庭美德，重视家庭文明建设。\n夫妻应当互相忠实，互相尊重，互相关爱；家庭成员应当敬老爱幼，互相帮助，维护平等、和睦、文明的婚姻家庭关系。\n第一千零四十四条\u3000收养应当遵循最有利于被收养人的原则，保障被收养人和收养人的合法权益。\n禁止借收养名义买卖未成年人。\n第一千零四十五条\u3000亲属包括配偶、血亲和姻亲。\n配偶、父母、子女、兄弟姐妹、祖父母、外祖父母、孙子女、外孙子女为近亲属。\n配偶、父母、子女和其他共同生活的近亲属为家庭成员。\n第二章\u3000结婚\n第一千零四十六条\u3000结婚应当男女双方完全自愿，禁止任何一方对另一方加以强迫，禁止任何组织或者个人加以干涉。\n第一千零四十七条\u3000结婚&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__version__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#词频统计&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;civil_code_word_count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;term_freq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;civil_code_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;marital_relationship_word_count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;term_freq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;marital_relationship_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;non_marital_relationship_word_count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;term_freq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;non_marital_relationship_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;词云图&#34;&gt;词云图&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pyecharts.options&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;opts&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pyecharts.charts&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordCloud&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plot_wordcloud&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordcounts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;wordcounts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordcounts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordCloud&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;wc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;series_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data_pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordcounts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word_size_range&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;wc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_global_opts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;title_opts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TitleOpts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title_textstyle_opts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TextStyleOpts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                                 &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tooltip_opts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TooltipOpts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_show&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;render_notebook&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;plot_wordcloud&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordcounts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;marital_relationship_word_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
               &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;民法典-婚姻家庭部分&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/marriage.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;plot_wordcloud&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordcounts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;non_marital_relationship_word_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
               &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;民法典-非婚姻部分的&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/non-marriage.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;不可当真的实验&#34;&gt;不可当真的实验&lt;/h2&gt;
&lt;p&gt;这里仅仅仅是一个实验，结果不可当真。毕竟使用性质的不同数据做分析，得出的结论可能会完全相反。&lt;/p&gt;
&lt;br&gt;
</description>
      <content:encoded><![CDATA[<h2 id="背景">背景</h2>
<p>今天在知乎刷到「婚姻的本质是什么?」。</p>
<p>绝大多数回答都是跟私有产权、生产关系相关，直到有一个回答<strong>整个婚姻法里也没有关于爱情的只言片语，从头到尾就一个字，钱，所以婚姻本质上就是契约</strong>。</p>
<p>一下子想到用词频统计试一下， 看看民法典婚姻家庭部分和非婚姻家庭部分两部分内容的侧重点分别是什么。</p>
<br>
<h2 id="数据准备">数据准备</h2>
<p>民法典章节目录如下， 把「第五编　婚姻家庭」单独拿出来做「<a href="marital-relationship.txt">婚姻家庭内容</a>」， 剩下的内容做「<a href="non-marital-relationship.txt">非婚姻家庭内容</a>」。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 第一编　总则
  - 第一章　基本规定
  - 第二章　自然人
  - 第三章　法人
  - 第四章　非法人组织
  - 第五章　民事权利
  - 第六章　民事法律行为
  - 第七章　代理
  - 第八章　民事责任
  - 第九章　诉讼时效
  - 第十章　期间计算
  
- 第二编　物权
  - 第一分编　通则
     - 第一章　一般规定
     - 第二章　物权的设立、变更、转让和消灭
     - 第三章　物权的保护
  - 第二分编　所有权
  - 第三分编　用益物权
  - 第四分编　担保物权
  - 第五分编　占有

- 第三编　合同
  - 第一分编　通则 
  - 第二分编　典型合同
  - 第三分编　准合同

- 第四编　人格权
    - 第一章　一般规定
    - 第二章　生命权、身体权和健康权
    - 第三章　姓名权和名称权
    - 第四章　肖像权
    - 第五章　名誉权和荣誉权
    - 第六章　隐私权和个人信息保护

- 第五编　婚姻家庭
   - 第一章　一般规定
   - 第二章　结婚
   - 第三章　家庭关系
       - 第一节　夫妻关系
       - 第二节　父母子女关系和其他近亲属关系
   - 第四章　离婚
   - 第五章　收养
      - 第一节　收养关系的成立
      - 第二节　收养的效力
      - 第三节　收养关系的解除
      
- 第六编　继承
   - 第一章　一般规定
   - 第二章　法定继承
   - 第三章　遗嘱继承和遗赠
   - 第四章　遗产的处理

- 第七编　侵权责任
   - 第一章　一般规定
   - 第二章　损害赔偿
   - 第三章　责任主体的特殊规定
   - 第四章　产品责任
   - 第五章　机动车交通事故责任
   - 第六章　医疗损害责任
   - 第七章　环境污染和生态破坏责任
   - 第八章　高度危险责任
   - 第九章　饲养动物损害责任
   - 第十章　建筑物和物件损害责任
- 附则
</code></pre></div><br>
<h2 id="读取数据">读取数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#第五编　婚姻家庭</span>
<span class="n">marital_relationship_text</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;marital-relationship.txt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
<span class="c1">#不含【第五编　婚姻家庭】其余部分</span>
<span class="n">non_marital_relationship_text</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;non-marital-relationship.txt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

<span class="n">marital_relationship_text</span><span class="p">[:</span><span class="mi">500</span><span class="p">]</span>
</code></pre></div><pre><code>'第五编\u3000婚姻家庭\n第一章\u3000一般规定\n第一千零四十条\u3000本编调整因婚姻家庭产生的民事关系。\n第一千零四十一条\u3000婚姻家庭受国家保护。\n实行婚姻自由、一夫一妻、男女平等的婚姻制度。\n保护妇女、未成年人、老年人、残疾人的合法权益。\n第一千零四十二条\u3000禁止包办、买卖婚姻和其他干涉婚姻自由的行为。禁止借婚姻索取财物。\n禁止重婚。禁止有配偶者与他人同居。\n禁止家庭暴力。禁止家庭成员间的虐待和遗弃。\n第一千零四十三条\u3000家庭应当树立优良家风，弘扬家庭美德，重视家庭文明建设。\n夫妻应当互相忠实，互相尊重，互相关爱；家庭成员应当敬老爱幼，互相帮助，维护平等、和睦、文明的婚姻家庭关系。\n第一千零四十四条\u3000收养应当遵循最有利于被收养人的原则，保障被收养人和收养人的合法权益。\n禁止借收养名义买卖未成年人。\n第一千零四十五条\u3000亲属包括配偶、血亲和姻亲。\n配偶、父母、子女、兄弟姐妹、祖父母、外祖父母、孙子女、外孙子女为近亲属。\n配偶、父母、子女和其他共同生活的近亲属为家庭成员。\n第二章\u3000结婚\n第一千零四十六条\u3000结婚应当男女双方完全自愿，禁止任何一方对另一方加以强迫，禁止任何组织或者个人加以干涉。\n第一千零四十七条\u3000结婚'
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">__version__</span><span class="p">)</span>

<span class="c1">#词频统计</span>
<span class="n">civil_code_word_count</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">term_freq</span><span class="p">(</span><span class="n">civil_code_text</span><span class="p">)</span>
<span class="n">marital_relationship_word_count</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">term_freq</span><span class="p">(</span><span class="n">marital_relationship_text</span><span class="p">)</span>
<span class="n">non_marital_relationship_word_count</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">term_freq</span><span class="p">(</span><span class="n">non_marital_relationship_text</span><span class="p">)</span>
</code></pre></div><br>
<h2 id="词云图">词云图</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pyecharts.options</span> <span class="k">as</span> <span class="nn">opts</span>
<span class="kn">from</span> <span class="nn">pyecharts.charts</span> <span class="kn">import</span> <span class="n">WordCloud</span>
<span class="kn">import</span> <span class="nn">random</span>


<span class="k">def</span> <span class="nf">plot_wordcloud</span><span class="p">(</span><span class="n">wordcounts</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>
    <span class="n">wordcounts</span> <span class="o">=</span> <span class="p">[(</span><span class="n">w</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">f</span><span class="p">))</span> <span class="k">for</span> <span class="n">w</span><span class="p">,</span><span class="n">f</span> <span class="ow">in</span> <span class="n">wordcounts</span><span class="o">.</span><span class="n">items</span><span class="p">()]</span>
    <span class="n">wc</span> <span class="o">=</span> <span class="n">WordCloud</span><span class="p">()</span>
    <span class="n">wc</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">series_name</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="n">data_pair</span><span class="o">=</span><span class="n">wordcounts</span><span class="p">,</span> <span class="n">word_size_range</span><span class="o">=</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1000</span><span class="p">])</span>
    <span class="n">wc</span><span class="o">.</span><span class="n">set_global_opts</span><span class="p">(</span>
        <span class="n">title_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TitleOpts</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="n">title</span><span class="p">,</span> <span class="n">title_textstyle_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TextStyleOpts</span><span class="p">(</span><span class="n">font_size</span><span class="o">=</span><span class="mi">23</span><span class="p">)</span>
                                 <span class="p">),</span>
        <span class="n">tooltip_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TooltipOpts</span><span class="p">(</span><span class="n">is_show</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">wc</span><span class="o">.</span><span class="n">render_notebook</span><span class="p">()</span>


<span class="n">plot_wordcloud</span><span class="p">(</span><span class="n">wordcounts</span><span class="o">=</span><span class="n">marital_relationship_word_count</span><span class="p">,</span> 
               <span class="n">title</span><span class="o">=</span><span class="s1">&#39;民法典-婚姻家庭部分&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/marriage.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plot_wordcloud</span><span class="p">(</span><span class="n">wordcounts</span><span class="o">=</span><span class="n">non_marital_relationship_word_count</span><span class="p">,</span> 
               <span class="n">title</span><span class="o">=</span><span class="s1">&#39;民法典-非婚姻部分的&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/non-marriage.png" alt=""  />
</p>
<br>
<h2 id="不可当真的实验">不可当真的实验</h2>
<p>这里仅仅仅是一个实验，结果不可当真。毕竟使用性质的不同数据做分析，得出的结论可能会完全相反。</p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 3.9G 全国POI地点兴趣点数据集</title>
      <link>https://textdata.cn/blog/2023-04-12-china-poi-datasets/</link>
      <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-12-china-poi-datasets/</guid>
      <description>POI是英文&amp;#34;Point of Interest&amp;#34;的缩写，中文翻译为&amp;#34;兴趣点&amp;#34;或&amp;#34;兴趣地点&amp;#34;。在地理信息系统（GIS）和位置服务领域中，POI通常指代一些在地图上显示的特定地点或地理位置，例如商店、餐厅、公园、景点等。</description>
      <content:encoded><![CDATA[<p>POI是英文&quot;Point of Interest&quot;的缩写，中文翻译为&quot;兴趣点&quot;或&quot;兴趣地点&quot;。在地理信息系统（GIS）和位置服务领域中，POI通常指代一些在地图上显示的特定地点或地理位置，例如商店、餐厅、公园、景点等。</p>
<p>与之前分享的 <a href="https://textdata.cn/blog/2023-04-12-china-mainland-corporate-registration-information/"><strong>数据集 | 2亿条中国大陆工商企业注册信息</strong></a> ，可以结合起来使用。</p>
<p><br><br></p>
<h2 id="声明">声明</h2>
<p>科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
<p><br><br></p>
<h2 id="一数据集概况">一、数据集概况</h2>
<p>370个地市， 截止2022年12月份的POI数据集。压缩文件夹体积800M，解压3.9G。</p>
<p><img loading="lazy" src="img/size.png" alt=""  />
</p>
<p><img loading="lazy" src="img/code.png" alt=""  />
</p>
<p>解压后， 在「<strong>全国POI数据(2022年12月)</strong>」文件夹内新建一个 「<strong>代码.ipynb</strong>」，运行如下代码查看文件夹内的文件列表</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">glob</span>

<span class="c1"># 查询</span>
<span class="n">files</span> <span class="o">=</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*/*.csv&#39;</span><span class="p">)</span>
<span class="n">files</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    [
    &#39;北京POI数据/北京市POI数据.csv&#39;,
    &#39;浙江省POI数据/杭州市POI数据.csv&#39;, 
     &#39;吉林省POI数据/长春市POI数据.csv&#39;,
     &#39;陕西省POI数据/西安市POI数据.csv&#39;,
     &#39;江苏省POI数据/南京市POI数据.csv&#39;,
     &#39;山东省POI数据/青岛市POI数据.csv&#39;,
     &#39;湖南省POI数据/长沙市POI数据.csv&#39;,
     &#39;辽宁省POI数据/大连市POI数据.csv&#39;,
     ...
     &#39;河北省POI数据/衡水市POI数据.csv&#39;,
    ]
</code></pre></div><br>
<p>地级市csv文件个数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">files</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">370
</code></pre></div><br>
<h2 id="二读取poi数据">二、读取POI数据</h2>
<p>读取北京、天津、青岛、上海、广州、杭州、长沙这几个城市poi数据(大家可以根据自己的兴趣更改城市)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">bj_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;北京POI数据/北京市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">qd_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;山东省POI数据/青岛市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">tj_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;天津市POI数据/天津市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>


<span class="n">sh_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;上海POI数据/上海市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">gz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;广东省POI数据/广州市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">hz_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;浙江省POI数据/杭州市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">cs_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;湖南省POI数据/长沙市POI数据.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>


<span class="n">hz_df</span><span class="o">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#该文件poi记录数</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;北京poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">bj_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;天津poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">tj_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;青岛poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">qd_df</span><span class="p">))</span>

<span class="nb">print</span><span class="p">()</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;上海poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">sh_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;广州poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">gz_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;杭州poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">hz_df</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;长沙poi记录数: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">cs_df</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    北京poi记录数:  679413
    天津poi记录数:  409020
    青岛poi记录数:  426314
    
    上海poi记录数:  780347
    广州poi记录数:  793056
    杭州poi记录数:  534595
    长沙poi记录数:  406489
</code></pre></div><p><br><br></p>
<h2 id="三简单分析">三、简单分析</h2>
<p>对比北京、天津、青岛、上海、广州、杭州、长沙这几个城市poi大类占比情况，探索性分析， 大家可以根据自己的兴趣更改城市</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>
<span class="n">matplotlib_inline</span><span class="o">.</span><span class="n">backend_inline</span><span class="o">.</span><span class="n">set_matplotlib_formats</span><span class="p">(</span><span class="s1">&#39;png&#39;</span><span class="p">,</span> <span class="s1">&#39;svg&#39;</span><span class="p">)</span>
<span class="kn">import</span> <span class="nn">scienceplots</span>
<span class="kn">import</span> <span class="nn">platform</span>

<span class="n">plt</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">use</span><span class="p">([</span><span class="s1">&#39;science&#39;</span><span class="p">,</span> <span class="s1">&#39;no-latex&#39;</span><span class="p">,</span> <span class="s1">&#39;cjk-sc-font&#39;</span><span class="p">])</span>
<span class="n">system</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">system</span><span class="p">()</span>  <span class="c1"># 获取操作系统类型</span>

<span class="k">if</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Windows&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;SimHei&#39;</span><span class="p">}</span>
<span class="k">elif</span> <span class="n">system</span> <span class="o">==</span> <span class="s1">&#39;Darwin&#39;</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;Arial Unicode MS&#39;</span><span class="p">}</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">font</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;family&#39;</span><span class="p">:</span> <span class="s1">&#39;sans-serif&#39;</span><span class="p">}</span>
<span class="n">matplotlib</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">&#39;font&#39;</span><span class="p">,</span> <span class="o">**</span><span class="n">font</span><span class="p">)</span>  <span class="c1"># 设置全局字体</span>




<span class="c1"># 统计各城市的大类POI数量</span>
<span class="n">bj_poi_count</span> <span class="o">=</span> <span class="n">bj_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">tj_poi_count</span> <span class="o">=</span> <span class="n">tj_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">qd_poi_count</span> <span class="o">=</span> <span class="n">qd_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="n">sh_poi_count</span> <span class="o">=</span> <span class="n">sh_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">hz_poi_count</span> <span class="o">=</span> <span class="n">hz_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">gz_poi_count</span> <span class="o">=</span> <span class="n">gz_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
<span class="n">cs_poi_count</span> <span class="o">=</span> <span class="n">cs_df</span><span class="p">[</span><span class="s1">&#39;大类&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">value_counts</span><span class="p">(</span><span class="n">normalize</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>



<span class="c1"># 创建一个包含所有城市的分组条形图</span>
<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="o">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>

<span class="c1"># 计算每个城市的条形图位置</span>
<span class="n">bar_width</span> <span class="o">=</span> <span class="mf">0.07</span>

<span class="n">bar_positions</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bj_poi_count</span><span class="p">))</span>

<span class="n">bj_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">(</span><span class="n">bar_positions</span><span class="p">,</span> 
                 <span class="n">bj_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;北京&#39;</span><span class="p">)</span>


<span class="n">tj_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">tj_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;天津&#39;</span><span class="p">)</span>


<span class="n">qd_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">2</span><span class="o">*</span><span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">dl_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;青岛&#39;</span><span class="p">)</span>


<span class="n">sh_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">3</span><span class="o">*</span><span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">sh_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;上海&#39;</span><span class="p">)</span>


<span class="n">hz_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">4</span> <span class="o">*</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">hz_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;杭州&#39;</span><span class="p">)</span>

<span class="n">gz_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">5</span> <span class="o">*</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">gz_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;广州&#39;</span><span class="p">)</span>


<span class="n">cs_bars</span> <span class="o">=</span> <span class="n">ax</span><span class="o">.</span><span class="n">bar</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="mi">6</span> <span class="o">*</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">],</span> 
                 <span class="n">cs_poi_count</span><span class="p">,</span> 
                 <span class="n">width</span><span class="o">=</span><span class="n">bar_width</span><span class="p">,</span> 
                 <span class="n">label</span><span class="o">=</span><span class="s1">&#39;长沙&#39;</span><span class="p">)</span>


<span class="n">ax</span><span class="o">.</span><span class="n">set_title</span><span class="p">(</span><span class="s1">&#39;POI地理兴趣点城市比较&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s1">&#39;POI大类&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s1">&#39;POI类别占比&#39;</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_xticks</span><span class="p">([</span><span class="n">p</span> <span class="o">+</span> <span class="n">bar_width</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">bar_positions</span><span class="p">])</span>
<span class="n">ax</span><span class="o">.</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">bj_poi_count</span><span class="o">.</span><span class="n">index</span><span class="p">)</span>
<span class="n">ax</span><span class="o">.</span><span class="n">legend</span><span class="p">()</span>  <span class="c1"># 添加图例</span>

<span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/output_8_0.svg" alt="svg"  />
</p>
<p>7个城市中，从poi大类占比来看，</p>
<ul>
<li>交通设施&amp;科教文化&amp;休闲娱乐&amp;运动健身&amp;金融机构&amp;旅游景点， 北京位列top1</li>
<li>购物消费， 长沙位列top1</li>
<li>餐饮美食， 广州位列top1</li>
<li>生活服务&amp;公司企业， 上海位列top1</li>
<li>酒店住宿， 杭州位列top1</li>
<li>汽车相关， 天津位列top1</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>中文心理词典，含具体性、可成象性等指标</title>
      <link>https://textdata.cn/blog/2023-04-05-chinese-concreteness-dictionary-from-behavior-research-method/</link>
      <pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-04-05-chinese-concreteness-dictionary-from-behavior-research-method/</guid>
      <description>该研究建立了一个**汉字书写的心理语言学数据库**。该数据库挑选出了1600个频率分布广泛的汉字，采用听写任务，总共203名被试来书写这些汉字，采集了被试的书写潜伏期、书写时长、书写正确率，并收集了1600汉字的14个词汇变量。研究结果发现，字频、习得年龄、语境是影响正字法通达、运动执行和书写正确率的共同因素；语音变量（是否为形声字、规则性、同音字密度）影响正字法通达，但不影响运动执行；语义变量（表象性和具体性）只影响书写正确率。研究结果对汉字书写产生机制有着重要启发。作为第一个大规模的汉字书写的心理语言学数据库，该数据库可以作为二次数据分析的资源以及书写实验材料制作的工具</description>
      <content:encoded><![CDATA[<p>之前分享过 <a href="https://textdata.cn/blog/jcr_concreteness_computation/"><strong>JCR的一篇语言具体性</strong></a>的研究应用，<strong>语言具体性Concreteness</strong>描述了一个词在多大程度上是指一个实际的、有形的或“真实的”实体，以一种更具体、更熟悉、更容易被眼睛或心灵感知的方式描述对象和行为。但是具体性词典是英文的。今天分享的这篇论文是1600个词，含具体性和表象性词典。</p>
<br>
<p>Wang, Ruiming, Shuting Huang, Yacong Zhou, and Zhenguang G. Cai. &ldquo;Chinese character handwriting: A large-scale behavioral study and a database.&rdquo; Behavior Research Methods 52 (2020): 82-96.</p>
<br>
<h2 id="摘要">摘要</h2>
<p>该研究建立了一个<strong>汉字书写的心理语言学数据库</strong>。该数据库挑选出了1600个频率分布广泛的汉字，采用听写任务，总共203名被试来书写这些汉字，采集了被试的书写潜伏期、书写时长、书写正确率，并收集了1600汉字的14个词汇变量。研究结果发现，字频、习得年龄、语境是影响正字法通达、运动执行和书写正确率的共同因素；语音变量（是否为形声字、规则性、同音字密度）影响正字法通达，但不影响运动执行；语义变量（表象性和具体性）只影响书写正确率。研究结果对汉字书写产生机制有着重要启发。作为第一个大规模的汉字书写的心理语言学数据库，该数据库可以作为二次数据分析的资源以及书写实验材料制作的工具。数据库免费公开，访问网址为：https://osf.io/7s9kq/。</p>
<br>
<h2 id="字段">字段</h2>
<p>字段有很多，我挑选最重要的翻译过来。</p>
<table>
<thead>
<tr>
<th style="text-align:right">Item</th>
<th style="text-align:left">Item number of characters</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">Character</td>
<td style="text-align:left">中文单字</td>
</tr>
<tr>
<td style="text-align:right">Word</td>
<td style="text-align:left">由该字组成的词语</td>
</tr>
<tr>
<td style="text-align:right">&hellip;</td>
<td style="text-align:left">&hellip;</td>
</tr>
<tr>
<td style="text-align:right"><strong>zImageability</strong></td>
<td style="text-align:left">可成像性（归一化评分）</td>
</tr>
<tr>
<td style="text-align:right"><strong>zConcreteness</strong></td>
<td style="text-align:left">具体性（归一化评分)</td>
</tr>
<tr>
<td style="text-align:right">&hellip;</td>
<td style="text-align:left">&hellip;</td>
</tr>
</tbody>
</table>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;Database.xlsx&#39;</span><span class="p">,</span> <span class="n">sheet_name</span><span class="o">=</span><span class="s1">&#39;Data&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<pre><code>Index(['Item', 'Character', 'Word', 'nOccurrence', 'nACC', 'nMisheard', 'nTOP',
       'nMisspelt', 'nMisremembered', 'ACC', 'Misheard', 'TOP', 'Misspelt',
       'Misremembered', 'Latency_Correct', 'Duration_Correct', 'Latency_z',
       'Duration_z', 'FreqCount', 'FreqContext', 'AoA', 'nMeaning',
       'zImageability', 'zConcreteness', 'Phonogram', 'SRO', 'zRegularity',
       'logHomoDen', 'nStroke', 'nRadical', 'Comp_LR', 'Comp_TD',
       'zwFamiliarity'],
      dtype='object')
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[[</span><span class="s1">&#39;Character&#39;</span><span class="p">,</span> <span class="s1">&#39;Word&#39;</span><span class="p">,</span> <span class="s1">&#39;zConcreteness&#39;</span><span class="p">,</span> <span class="s1">&#39;zImageability&#39;</span><span class="p">]]</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Character</th>
      <th>Word</th>
      <th>zConcreteness</th>
      <th>zImageability</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>哀</td>
      <td>悲哀</td>
      <td>-0.103212</td>
      <td>0.404177</td>
    </tr>
    <tr>
      <th>1</th>
      <td>癌</td>
      <td>癌症</td>
      <td>0.319844</td>
      <td>0.176291</td>
    </tr>
    <tr>
      <th>2</th>
      <td>疤</td>
      <td>伤疤</td>
      <td>1.180032</td>
      <td>0.919010</td>
    </tr>
    <tr>
      <th>3</th>
      <td>白</td>
      <td>明白</td>
      <td>0.691302</td>
      <td>0.527291</td>
    </tr>
    <tr>
      <th>4</th>
      <td>百</td>
      <td>一百</td>
      <td>-0.234004</td>
      <td>-0.039290</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>1595</th>
      <td>组</td>
      <td>小组</td>
      <td>-0.556125</td>
      <td>-0.326855</td>
    </tr>
    <tr>
      <th>1596</th>
      <td>钻</td>
      <td>钻石</td>
      <td>0.412641</td>
      <td>0.116090</td>
    </tr>
    <tr>
      <th>1597</th>
      <td>嘴</td>
      <td>住嘴</td>
      <td>1.447112</td>
      <td>0.846971</td>
    </tr>
    <tr>
      <th>1598</th>
      <td>醉</td>
      <td>麻醉</td>
      <td>0.297512</td>
      <td>0.596776</td>
    </tr>
    <tr>
      <th>1599</th>
      <td>作</td>
      <td>工作</td>
      <td>-0.817521</td>
      <td>-0.933269</td>
    </tr>
  </tbody>
</table>
<p>1600 rows × 4 columns</p>
</div>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>词向量 | 使用MD&amp;A2001-2023语料训练Word2Vec模型</title>
      <link>https://textdata.cn/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-24-load-w2v-and-expand-your-concpet-dicitonary/</guid>
      <description>&lt;h2 id=&#34;相关内容&#34;&gt;相关内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/the_text_analysis_list_about_ms/&#34;&gt;LIST | 社科(经管)文本挖掘文献汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/text_analysis_code_list_about_ms/&#34;&gt;LIST | 文本分析代码汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/datasets_available_for_management_science/&#34;&gt;LIST | 可供社科(经管)领域使用的数据集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/management_python_course/&#34;&gt;Python实证指标构建与文本分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-20-word2vec-by-year-by-province/&#34;&gt;使用3751w专利申请数据集按年份(按省份)训练词向量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/&#34;&gt;预训练模型 | 使用1000w专利摘要训练word2vec模型，可用于开发词典&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相关文献&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;[0]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[1]冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J].南开管理评论:1-27.
[3]胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.
[4]Kai Li, Feng Mai, Rui Shen, Xinyan Yan, Measuring Corporate Culture Using Machine Learning, *The Review of Financial Studies*,2020
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;一训练&#34;&gt;一、训练&lt;/h2&gt;
&lt;h3 id=&#34;11-导入mda数据&#34;&gt;1.1 导入mda数据&lt;/h3&gt;
&lt;p&gt;读取 &lt;a href=&#34;https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/&#34;&gt;&lt;strong&gt;数据集 | 2001-2023年A股上市公司年报&amp;amp;管理层讨论与分析&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pandas&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pd&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_csv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-23.csv.gz&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;compression&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;gzip&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#gz解压后读取csv&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#df = pd.read_csv(&amp;#39;mda01-23.csv&amp;#39;)&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;60079
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/01-df.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;12-构造语料&#34;&gt;1.2 构造语料&lt;/h3&gt;
&lt;p&gt;从 &lt;strong&gt;mda01-23.csv.gz&lt;/strong&gt; 数据中抽取出所有文本，写入到 &lt;strong&gt;mda01-23.txt&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-23.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;df&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;13-配置cntext环境&#34;&gt;1.3 配置cntext环境&lt;/h3&gt;
&lt;p&gt;使用 2.1.4 版本 cntext 库(该版本暂不开源，需付费购买)。 将得到的 &lt;strong&gt;cntext-2.1.4-py3-none-any.whl&lt;/strong&gt; 文件放置于电脑桌面，  win系统打开&lt;strong&gt;cmd&lt;/strong&gt;(Mac打开terminal)， 输入如下命令(将工作环境切换至桌面)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;cd desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;个别Win用户如无效，试试&lt;code&gt;cd Desktop&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;继续在cmd (terminal) 中执行如下命令安装cntext2.1.4&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;pip3 install distinctiveness
pip3 install cntext-2.1.4-py3-none-any.whl 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h3 id=&#34;14-训练word2vec&#34;&gt;1.4 训练word2vec&lt;/h3&gt;
&lt;p&gt;设置模型参数配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mda01-23 使用2001-2023年度mda数据训练&lt;/li&gt;
&lt;li&gt;200 嵌入的维度数，即每个词的向量长度是200&lt;/li&gt;
&lt;li&gt;6 词语上下文的窗口是6&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;o&#34;&gt;%%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;  
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;W2VModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;corpus_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mda01-23.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#最终模型存储于output/Word2Vec内&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;train&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;window_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;save_dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Word2Vec&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Building prefix dict from the default dictionary ...
Start Preprocessing Corpus...
Dumping model to file cache /var/folders/y0/4gqxky0s2t94x1c1qhlwr6100000gn/T/jieba.cache
Loading model cost 0.278 seconds.
Prefix dict has been built successfully.
Start Training! This may take a while. Please be patient...

Training word2vec model took 3532 seconds

Note: The Word2Vec model has been saved to output/Word2Vec

CPU times: user 1h 30min 45s, sys: 30.1 s, total: 1h 31min 15s
Wall time: 58min 57s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;经过不到两个小时时间， 训练出的中国A股市场词向量模型(如下截图)，词汇量 914058， 模型文件 1.49G。模型可广泛用于经济管理等领域概念(情感)词典的构建或扩展。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;mda01-23.200.6.bin&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mda01-23.200.6.bin.syn1neg.npy&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mda01-23.200.6.bin.wv.vectors.npy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/pretained-screen.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;为什么这样确定200和6，可以看这篇 &lt;a href=&#34;https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science&#34;&gt;词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h2 id=&#34;二导入模型&#34;&gt;二、导入模型&lt;/h2&gt;
&lt;p&gt;使用 &lt;em&gt;&lt;strong&gt;ct.load_w2v(w2v_path)&lt;/strong&gt;&lt;/em&gt;  来导入刚刚训练好的模型 &lt;em&gt;&lt;strong&gt;mda01-23.200.6.bin&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cntext&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ct&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__version__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#读取模型文件&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_w2v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;output/Word2Vec/mda01-23.200.6.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;2.1.4
Loading word2vec model...
&amp;lt;gensim.models.word2vec.Word2Vec at 0x310dd9990&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;h2 id=&#34;注意&#34;&gt;注意&lt;/h2&gt;
&lt;p&gt;之前购买过 &lt;em&gt;&lt;strong&gt;mda01-23.100.6.bin&lt;/strong&gt;&lt;/em&gt; 的可以留意下， &lt;em&gt;&lt;strong&gt;gensim.models.word2vec.Word2Vec&lt;/strong&gt;&lt;/em&gt; 和 &lt;em&gt;&lt;strong&gt;gensim.models.keyedvectors.KeyedVectors&lt;/strong&gt;&lt;/em&gt; 是有区别的。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&#34;三w2v_model的使用&#34;&gt;三、w2v_model的使用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查看词汇量&lt;/li&gt;
&lt;li&gt;查询某词向量&lt;/li&gt;
&lt;li&gt;查看多个词的均值向量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多内容，建议查看下gensim库的文档&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#词汇量&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index_to_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1268162
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#查询某词的词向量&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;创新&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;array([ 2.0061703e+00, -7.5624317e-01, -1.3996853e+00, -5.0943494e-01,
       -2.1192348e+00, -2.3715578e-01, -1.0469327e+00, -6.0825008e-01,
        1.0559827e+00, -2.6337335e+00, -8.3098280e-01, -2.0414412e+00,
        3.2647273e-01, -1.8864768e+00, -6.7964029e-01, -2.0208321e+00,
       -2.9305940e+00, -1.8448261e+00,  1.3341883e+00,  2.6361840e+00,
       -1.6522094e-03,  1.2229736e+00, -1.4544348e+00, -1.2363178e+00,
        2.4998419e-01,  6.2976193e-01,  2.0587335e+00,  7.7435631e-01,
        7.0847118e-01,  1.4740779e+00, -1.6444141e+00, -1.0431224e+00,
        1.3027675e+00,  2.7307439e+00, -2.3786457e+00, -1.3130645e+00,
        6.8786728e-01, -1.7063180e+00,  6.3857561e-01, -1.6260351e+00,
        8.4616345e-01, -2.3021619e+00, -1.4227337e-01,  7.8771824e-01,
       -9.7587711e-01,  1.6423947e+00,  1.7660189e+00, -5.6713527e-01,
       -2.2379627e+00, -2.7953179e+00,  7.5896448e-01, -4.7708002e-01,
        3.9780866e-02,  3.5529551e-01,  2.4715779e+00,  1.0366139e+00,
        3.2072404e-01,  1.1918426e+00,  2.0091324e+00,  2.0423689e+00,
       -3.2471576e-01,  7.5439996e-01, -8.1137431e-01, -3.1240535e+00,
       -1.4007915e+00,  1.7590660e+00,  1.1910127e+00, -3.1495863e-01,
       -1.8408637e+00, -9.7999334e-01, -7.2268695e-01, -1.5958573e-01,
       -8.0736899e-01, -2.0580786e-01,  5.2430385e-01, -1.8948300e+00,
        1.9425656e+00,  9.8981924e-02, -3.7227097e-01, -2.5197482e+00,
        1.8722156e-01,  1.2897950e+00, -2.1138141e+00, -4.1490741e+00,
        6.6944182e-01,  8.8841003e-01, -8.7705368e-01,  8.4536147e-01,
        2.9866987e-01,  7.1502768e-02,  1.5150173e-01, -1.2487265e-01,
       -8.4192830e-01, -1.3876933e+00, -1.6164522e+00, -2.1918070e+00,
        7.5049765e-02,  1.2682813e+00, -1.8965596e+00, -3.3448489e+00,
        1.8527710e+00, -9.5269477e-01,  1.1199359e+00,  3.9520876e+00,
       -1.5226443e+00, -8.9899087e-01,  3.8167386e+00,  1.9114494e+00,
       -1.6151057e-01, -1.3656460e+00, -1.2862095e+00,  7.7550404e-02,
        5.4423016e-01, -1.5958691e+00,  1.5186726e+00,  7.5659829e-01,
        1.6397550e+00, -1.0501801e+00,  2.0697882e+00,  3.4903901e+00,
       -6.6988021e-01, -1.5313666e+00,  7.4480243e-02, -5.1057938e-02,
        3.9610174e-01, -1.6156559e+00, -9.9163389e-01, -2.3379476e+00,
       -1.2561744e+00,  2.4532168e+00, -4.4737798e-01,  7.0193654e-01,
       -1.0229303e+00,  2.1379066e+00, -3.1052154e-01, -3.2027736e-01,
       -5.5717267e-02, -5.4335070e-01,  2.1057355e+00, -1.4081483e+00,
       -2.9625890e-01,  3.5636108e+00,  1.6618627e+00, -1.4326172e+00,
        3.7079006e-01, -9.4542742e-02, -1.2751147e+00,  9.9195182e-01,
       -3.0635363e-01,  5.6906539e-01,  2.0860300e+00,  6.3169920e-01,
       -4.7988534e-02, -7.8025639e-01,  1.2906117e+00, -2.3830981e+00,
        1.3253988e-01, -1.2864060e+00,  4.9821786e-03,  3.5779157e-01,
       -9.0931761e-01,  4.0924022e-01,  2.3946068e+00, -2.0449016e+00,
       -3.1895530e+00, -6.2343496e-01, -2.2672276e+00,  4.0120354e-01,
        6.6080755e-01,  2.1412694e+00,  1.6714897e+00, -2.7443561e-01,
        1.0102105e+00, -9.0470135e-01,  2.4389675e-01,  1.3083955e+00,
        6.2089604e-01,  1.1761054e+00,  3.2139707e+00,  2.1401331e+00,
        2.9888725e+00, -1.2490459e-01,  2.9847507e+00, -7.8840727e-01,
       -5.2520728e-01, -5.4571289e-01, -4.7277856e-01,  2.1406946e+00,
        3.3333063e+00,  2.8909416e+00,  2.0044851e+00,  2.3887587e-01,
       -1.0897971e+00,  7.6192236e-01, -8.1400484e-01,  6.9058740e-01,
        1.6329724e+00, -1.3318574e+00, -1.0891541e-01,  4.1473702e-01],
      dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#查询多个词的词向量&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_mean_vector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;创新&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;研发&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ruj&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;array([ 0.06965836,  0.00315241, -0.05779138, -0.04039053, -0.06981122,
       -0.00599566,  0.00519131,  0.00618964,  0.00922295, -0.09598336,
        0.00321158, -0.01436742, -0.00021783, -0.06856406, -0.00658061,
       -0.0455833 , -0.11682363, -0.08916132,  0.05608616,  0.07702765,
        0.03827055,  0.01977586, -0.03501461, -0.0921019 ,  0.08991239,
        0.00136941,  0.13192363,  0.0146284 ,  0.07642476,  0.0339537 ,
       -0.07868544, -0.03777661,  0.05991726,  0.0855544 , -0.06954425,
        0.00998873,  0.04286281, -0.09743309,  0.01956445, -0.06347939,
        0.01470151, -0.1092098 , -0.00790439,  0.02191022,  0.00776696,
        0.15425815,  0.0758743 ,  0.05703073, -0.09397265, -0.06609394,
        0.03145685,  0.01300637,  0.01394638,  0.02340477,  0.04559586,
        0.04102872,  0.03425206,  0.00024072,  0.09367524,  0.05709908,
       -0.02487722,  0.03930294, -0.01406444, -0.16937086, -0.13780443,
        0.08644196,  0.11982834, -0.01221577, -0.04754106, -0.04081532,
       -0.05585349, -0.01468118, -0.07774962, -0.01348679,  0.04189138,
       -0.06839944,  0.050496  ,  0.013173  ,  0.01711268, -0.07005601,
        0.09505412,  0.08152292, -0.06771114, -0.13916653,  0.06306884,
        0.04447467, -0.03872044, -0.04182331,  0.00963773, -0.0008154 ,
       -0.02648942,  0.02538633, -0.02428493, -0.0367038 , -0.02652043,
       -0.01066429, -0.0512585 ,  0.07111567, -0.07910167, -0.14075056,
        0.09447317, -0.06416138,  0.01625183,  0.11519565, -0.02005424,
       -0.06200746,  0.15829347,  0.02597752, -0.02700011,  0.00574114,
       -0.01110603,  0.02687638,  0.03469303, -0.05248028,  0.0870206 ,
        0.00077715,  0.05809092, -0.01383492,  0.09590432,  0.10648903,
        0.03396901, -0.03575124,  0.03355333, -0.01877551,  0.01351267,
       -0.08261327, -0.01916262, -0.10389806, -0.04084764,  0.0760856 ,
       -0.01533336,  0.02277224, -0.05204159,  0.05793417, -0.01381126,
       -0.02089536,  0.00811556,  0.03262435,  0.04531128, -0.03010069,
       -0.01171639,  0.11563395,  0.02414452, -0.07918232, -0.03051105,
        0.02917325, -0.07373993,  0.02146403, -0.00288346, -0.03545145,
        0.04871619, -0.00696709, -0.04127839, -0.03021095,  0.02486127,
       -0.09704249, -0.00212691, -0.07545952, -0.04577727,  0.03115453,
       -0.02307166,  0.01308232,  0.05850307, -0.11189032, -0.10513283,
       -0.02408416, -0.05981093,  0.03213454, -0.0140616 ,  0.01734342,
        0.07199937,  0.01248292,  0.05972538, -0.04061089,  0.01433882,
        0.08300181, -0.02776613,  0.08434992,  0.07857168,  0.04623952,
        0.06063098, -0.06632672,  0.13141835, -0.04028555, -0.02711887,
       -0.03171489, -0.00121487,  0.06289804,  0.14847729,  0.11676435,
        0.09777641,  0.01878174, -0.04769752,  0.02091297, -0.05527892,
        0.02009225,  0.00415907, -0.01899581, -0.02441722,  0.01018429],
      dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有了每个词或者概念的向量，可以结合cntext旧版本单语言模型内的态度偏见的度量。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;四扩展词典&#34;&gt;四、扩展词典&lt;/h2&gt;
&lt;p&gt;做词典法的文本分析，最重要的是有自己的领域词典。之前受限于技术难度，文科生的我也一直在用形容词的通用情感词典。现在依托word2vec技术， 可以加速人工构建的准确率和效率。&lt;/p&gt;
&lt;p&gt;下面是在 &lt;em&gt;&lt;strong&gt;mda01-23.200.6.bin&lt;/strong&gt;&lt;/em&gt; 上做的词典扩展测试，函数 &lt;em&gt;&lt;strong&gt;ct.expand_dictionary(wv, seeddict, topn=100, save_dir=&amp;lsquo;Word2Vec&amp;rsquo;)&lt;/strong&gt;&lt;/em&gt; 会根据种子词选取最准确的topn个词。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;wv&lt;/strong&gt;&lt;/em&gt;   预训练模型，数据类型为 gensim.models.keyedvectors.KeyedVectors。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;seeddict&lt;/strong&gt;&lt;/em&gt;   参数类似于种子词；格式为PYTHON字典；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;topn&lt;/strong&gt;&lt;/em&gt;   返回topn个语义最接近seeddict的词，默认100.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;save_dir&lt;/strong&gt;&lt;/em&gt;   模型存储到某个位置，默认&amp;rsquo;Word2Vec&#39;.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;假设现在有种子词seeddicts， 内含我构建的 &lt;em&gt;&lt;strong&gt;短视词&lt;/strong&gt;&lt;/em&gt;、 &lt;em&gt;&lt;strong&gt;创新词&lt;/strong&gt;&lt;/em&gt;、 &lt;em&gt;&lt;strong&gt;竞争词&lt;/strong&gt;&lt;/em&gt;， 我希望生成最终各含 30 个词的候选词表txt文件。&lt;/p&gt;
&lt;p&gt;可以使用 &lt;em&gt;&lt;strong&gt;ct.expand_dictionary&lt;/strong&gt;&lt;/em&gt; 进行如下操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;seeddicts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;短视词&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;抓紧&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;立刻&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;月底&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年底&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;年终&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;争取&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;力争&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;创新词&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;创新&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;科技&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;研发&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;技术&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;标准&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;竞争词&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;竞争&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;竞争力&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;ct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expand_dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w2v_model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                     &lt;span class=&#34;n&#34;&gt;seeddict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seeddicts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
                     &lt;span class=&#34;n&#34;&gt;topn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/03-expand.jpg&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;六获取模型&#34;&gt;六、获取模型&lt;/h2&gt;
&lt;p&gt;内容创作不易， 本文为付费内容，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;- 100元    cntext-2.1.4-py3-none-any.whl

- 100元   Word2Vec相关模型文件(mda01-23.200.6.bin)

- 200元   
    - cntext-2.1.4-py3-none-any.whl  
    - Word2Vec相关模型文件(mda01-23.200.6.bin)
    
    
声明： 仅供科研使用
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加微信 372335839， 备注「姓名-学校-专业-word2vec」&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="相关内容">相关内容</h2>
<ul>
<li><a href="https://textdata.cn/blog/the_text_analysis_list_about_ms/">LIST | 社科(经管)文本挖掘文献汇总</a></li>
<li><a href="https://textdata.cn/blog/text_analysis_code_list_about_ms/">LIST | 文本分析代码汇总</a></li>
<li><a href="https://textdata.cn/blog/datasets_available_for_management_science/">LIST | 可供社科(经管)领域使用的数据集</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">Python实证指标构建与文本分析</a></li>
<li><a href="https://textdata.cn/blog/2023-11-20-word2vec-by-year-by-province/">使用3751w专利申请数据集按年份(按省份)训练词向量</a></li>
<li><a href="https://textdata.cn/blog/2023-11-10-training-word2vec-model-using-china-3751w-patent-application-dataset/">预训练模型 | 使用1000w专利摘要训练word2vec模型，可用于开发词典</a></li>
</ul>
<p>相关文献</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[0]刘景江,郑畅然,洪永淼.机器学习如何赋能管理学研究？——国内外前沿综述和未来展望[J].管理世界,2023,39(09):191-216.
[1]冉雅璇,李志强,刘佳妮,张逸石.大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用[J].南开管理评论:1-27.
[3]胡楠,薛付婧,王昊楠.管理者短视主义影响企业长期投资吗？——基于文本分析和机器学习[J].管理世界,2021,37(05):139-156+11+19-21.
[4]Kai Li, Feng Mai, Rui Shen, Xinyan Yan, Measuring Corporate Culture Using Machine Learning, *The Review of Financial Studies*,2020
</code></pre></div><p><br><br></p>
<h2 id="一训练">一、训练</h2>
<h3 id="11-导入mda数据">1.1 导入mda数据</h3>
<p>读取 <a href="https://textdata.cn/blog/2023-03-23-china-a-share-market-dataset-mda-from-01-to-21/"><strong>数据集 | 2001-2023年A股上市公司年报&amp;管理层讨论与分析</strong></a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;mda01-23.csv.gz&#39;</span><span class="p">,</span> <span class="n">compression</span><span class="o">=</span><span class="s1">&#39;gzip&#39;</span><span class="p">)</span>
<span class="c1">#gz解压后读取csv</span>
<span class="c1">#df = pd.read_csv(&#39;mda01-23.csv&#39;)</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">))</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">60079
</code></pre></div><p><img loading="lazy" src="img/01-df.png" alt=""  />
</p>
<br>
<h3 id="12-构造语料">1.2 构造语料</h3>
<p>从 <strong>mda01-23.csv.gz</strong> 数据中抽取出所有文本，写入到 <strong>mda01-23.txt</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;mda01-23.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">])</span>
    <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="13-配置cntext环境">1.3 配置cntext环境</h3>
<p>使用 2.1.4 版本 cntext 库(该版本暂不开源，需付费购买)。 将得到的 <strong>cntext-2.1.4-py3-none-any.whl</strong> 文件放置于电脑桌面，  win系统打开<strong>cmd</strong>(Mac打开terminal)， 输入如下命令(将工作环境切换至桌面)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd desktop
</code></pre></div><p>个别Win用户如无效，试试<code>cd Desktop</code> 。</p>
<p>继续在cmd (terminal) 中执行如下命令安装cntext2.1.4</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install distinctiveness
pip3 install cntext-2.1.4-py3-none-any.whl 
</code></pre></div><br>
<h3 id="14-训练word2vec">1.4 训练word2vec</h3>
<p>设置模型参数配置</p>
<ul>
<li>mda01-23 使用2001-2023年度mda数据训练</li>
<li>200 嵌入的维度数，即每个词的向量长度是200</li>
<li>6 词语上下文的窗口是6</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="o">%%</span><span class="n">time</span>  
<span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>

<span class="n">w2v</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">W2VModel</span><span class="p">(</span><span class="n">corpus_file</span><span class="o">=</span><span class="s1">&#39;mda01-23.txt&#39;</span><span class="p">)</span>
<span class="c1">#最终模型存储于output/Word2Vec内</span>
<span class="n">w2v</span><span class="o">.</span><span class="n">train</span><span class="p">(</span><span class="n">vector_size</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span> <span class="n">window_size</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">min_count</span><span class="o">=</span><span class="mi">6</span><span class="p">,</span> <span class="n">save_dir</span><span class="o">=</span><span class="s1">&#39;Word2Vec&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Building prefix dict from the default dictionary ...
Start Preprocessing Corpus...
Dumping model to file cache /var/folders/y0/4gqxky0s2t94x1c1qhlwr6100000gn/T/jieba.cache
Loading model cost 0.278 seconds.
Prefix dict has been built successfully.
Start Training! This may take a while. Please be patient...

Training word2vec model took 3532 seconds

Note: The Word2Vec model has been saved to output/Word2Vec

CPU times: user 1h 30min 45s, sys: 30.1 s, total: 1h 31min 15s
Wall time: 58min 57s
</code></pre></div><p>经过不到两个小时时间， 训练出的中国A股市场词向量模型(如下截图)，词汇量 914058， 模型文件 1.49G。模型可广泛用于经济管理等领域概念(情感)词典的构建或扩展。</p>
<ul>
<li><strong>mda01-23.200.6.bin</strong></li>
<li><strong>mda01-23.200.6.bin.syn1neg.npy</strong></li>
<li><strong>mda01-23.200.6.bin.wv.vectors.npy</strong></li>
</ul>
<p><img loading="lazy" src="img/pretained-screen.png" alt=""  />
</p>
<p>为什么这样确定200和6，可以看这篇 <a href="https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science">词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总</a></p>
<br>
<br>
<h2 id="二导入模型">二、导入模型</h2>
<p>使用 <em><strong>ct.load_w2v(w2v_path)</strong></em>  来导入刚刚训练好的模型 <em><strong>mda01-23.200.6.bin</strong></em></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">cntext</span> <span class="k">as</span> <span class="nn">ct</span>
<span class="c1">#</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ct</span><span class="o">.</span><span class="n">__version__</span><span class="p">)</span>

<span class="c1">#读取模型文件</span>
<span class="n">w2v_model</span> <span class="o">=</span> <span class="n">ct</span><span class="o">.</span><span class="n">load_w2v</span><span class="p">(</span><span class="n">w2v_path</span><span class="o">=</span><span class="s1">&#39;output/Word2Vec/mda01-23.200.6.bin&#39;</span><span class="p">)</span>
<span class="n">w2v_model</span>
</code></pre></div><pre><code>2.1.4
Loading word2vec model...
&lt;gensim.models.word2vec.Word2Vec at 0x310dd9990&gt;
</code></pre>
<br>
<h2 id="注意">注意</h2>
<p>之前购买过 <em><strong>mda01-23.100.6.bin</strong></em> 的可以留意下， <em><strong>gensim.models.word2vec.Word2Vec</strong></em> 和 <em><strong>gensim.models.keyedvectors.KeyedVectors</strong></em> 是有区别的。</p>
<p><br><br></p>
<h3 id="三w2v_model的使用">三、w2v_model的使用</h3>
<ul>
<li>查看词汇量</li>
<li>查询某词向量</li>
<li>查看多个词的均值向量</li>
</ul>
<p>更多内容，建议查看下gensim库的文档</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#词汇量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">index_to_key</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>1268162
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#查询某词的词向量</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;创新&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>array([ 2.0061703e+00, -7.5624317e-01, -1.3996853e+00, -5.0943494e-01,
       -2.1192348e+00, -2.3715578e-01, -1.0469327e+00, -6.0825008e-01,
        1.0559827e+00, -2.6337335e+00, -8.3098280e-01, -2.0414412e+00,
        3.2647273e-01, -1.8864768e+00, -6.7964029e-01, -2.0208321e+00,
       -2.9305940e+00, -1.8448261e+00,  1.3341883e+00,  2.6361840e+00,
       -1.6522094e-03,  1.2229736e+00, -1.4544348e+00, -1.2363178e+00,
        2.4998419e-01,  6.2976193e-01,  2.0587335e+00,  7.7435631e-01,
        7.0847118e-01,  1.4740779e+00, -1.6444141e+00, -1.0431224e+00,
        1.3027675e+00,  2.7307439e+00, -2.3786457e+00, -1.3130645e+00,
        6.8786728e-01, -1.7063180e+00,  6.3857561e-01, -1.6260351e+00,
        8.4616345e-01, -2.3021619e+00, -1.4227337e-01,  7.8771824e-01,
       -9.7587711e-01,  1.6423947e+00,  1.7660189e+00, -5.6713527e-01,
       -2.2379627e+00, -2.7953179e+00,  7.5896448e-01, -4.7708002e-01,
        3.9780866e-02,  3.5529551e-01,  2.4715779e+00,  1.0366139e+00,
        3.2072404e-01,  1.1918426e+00,  2.0091324e+00,  2.0423689e+00,
       -3.2471576e-01,  7.5439996e-01, -8.1137431e-01, -3.1240535e+00,
       -1.4007915e+00,  1.7590660e+00,  1.1910127e+00, -3.1495863e-01,
       -1.8408637e+00, -9.7999334e-01, -7.2268695e-01, -1.5958573e-01,
       -8.0736899e-01, -2.0580786e-01,  5.2430385e-01, -1.8948300e+00,
        1.9425656e+00,  9.8981924e-02, -3.7227097e-01, -2.5197482e+00,
        1.8722156e-01,  1.2897950e+00, -2.1138141e+00, -4.1490741e+00,
        6.6944182e-01,  8.8841003e-01, -8.7705368e-01,  8.4536147e-01,
        2.9866987e-01,  7.1502768e-02,  1.5150173e-01, -1.2487265e-01,
       -8.4192830e-01, -1.3876933e+00, -1.6164522e+00, -2.1918070e+00,
        7.5049765e-02,  1.2682813e+00, -1.8965596e+00, -3.3448489e+00,
        1.8527710e+00, -9.5269477e-01,  1.1199359e+00,  3.9520876e+00,
       -1.5226443e+00, -8.9899087e-01,  3.8167386e+00,  1.9114494e+00,
       -1.6151057e-01, -1.3656460e+00, -1.2862095e+00,  7.7550404e-02,
        5.4423016e-01, -1.5958691e+00,  1.5186726e+00,  7.5659829e-01,
        1.6397550e+00, -1.0501801e+00,  2.0697882e+00,  3.4903901e+00,
       -6.6988021e-01, -1.5313666e+00,  7.4480243e-02, -5.1057938e-02,
        3.9610174e-01, -1.6156559e+00, -9.9163389e-01, -2.3379476e+00,
       -1.2561744e+00,  2.4532168e+00, -4.4737798e-01,  7.0193654e-01,
       -1.0229303e+00,  2.1379066e+00, -3.1052154e-01, -3.2027736e-01,
       -5.5717267e-02, -5.4335070e-01,  2.1057355e+00, -1.4081483e+00,
       -2.9625890e-01,  3.5636108e+00,  1.6618627e+00, -1.4326172e+00,
        3.7079006e-01, -9.4542742e-02, -1.2751147e+00,  9.9195182e-01,
       -3.0635363e-01,  5.6906539e-01,  2.0860300e+00,  6.3169920e-01,
       -4.7988534e-02, -7.8025639e-01,  1.2906117e+00, -2.3830981e+00,
        1.3253988e-01, -1.2864060e+00,  4.9821786e-03,  3.5779157e-01,
       -9.0931761e-01,  4.0924022e-01,  2.3946068e+00, -2.0449016e+00,
       -3.1895530e+00, -6.2343496e-01, -2.2672276e+00,  4.0120354e-01,
        6.6080755e-01,  2.1412694e+00,  1.6714897e+00, -2.7443561e-01,
        1.0102105e+00, -9.0470135e-01,  2.4389675e-01,  1.3083955e+00,
        6.2089604e-01,  1.1761054e+00,  3.2139707e+00,  2.1401331e+00,
        2.9888725e+00, -1.2490459e-01,  2.9847507e+00, -7.8840727e-01,
       -5.2520728e-01, -5.4571289e-01, -4.7277856e-01,  2.1406946e+00,
        3.3333063e+00,  2.8909416e+00,  2.0044851e+00,  2.3887587e-01,
       -1.0897971e+00,  7.6192236e-01, -8.1400484e-01,  6.9058740e-01,
        1.6329724e+00, -1.3318574e+00, -1.0891541e-01,  4.1473702e-01],
      dtype=float32)
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#查询多个词的词向量</span>
<span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="o">.</span><span class="n">get_mean_vector</span><span class="p">([</span><span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;研发&#39;</span><span class="p">])</span>
</code></pre></div><p>Ruj</p>
<pre><code>array([ 0.06965836,  0.00315241, -0.05779138, -0.04039053, -0.06981122,
       -0.00599566,  0.00519131,  0.00618964,  0.00922295, -0.09598336,
        0.00321158, -0.01436742, -0.00021783, -0.06856406, -0.00658061,
       -0.0455833 , -0.11682363, -0.08916132,  0.05608616,  0.07702765,
        0.03827055,  0.01977586, -0.03501461, -0.0921019 ,  0.08991239,
        0.00136941,  0.13192363,  0.0146284 ,  0.07642476,  0.0339537 ,
       -0.07868544, -0.03777661,  0.05991726,  0.0855544 , -0.06954425,
        0.00998873,  0.04286281, -0.09743309,  0.01956445, -0.06347939,
        0.01470151, -0.1092098 , -0.00790439,  0.02191022,  0.00776696,
        0.15425815,  0.0758743 ,  0.05703073, -0.09397265, -0.06609394,
        0.03145685,  0.01300637,  0.01394638,  0.02340477,  0.04559586,
        0.04102872,  0.03425206,  0.00024072,  0.09367524,  0.05709908,
       -0.02487722,  0.03930294, -0.01406444, -0.16937086, -0.13780443,
        0.08644196,  0.11982834, -0.01221577, -0.04754106, -0.04081532,
       -0.05585349, -0.01468118, -0.07774962, -0.01348679,  0.04189138,
       -0.06839944,  0.050496  ,  0.013173  ,  0.01711268, -0.07005601,
        0.09505412,  0.08152292, -0.06771114, -0.13916653,  0.06306884,
        0.04447467, -0.03872044, -0.04182331,  0.00963773, -0.0008154 ,
       -0.02648942,  0.02538633, -0.02428493, -0.0367038 , -0.02652043,
       -0.01066429, -0.0512585 ,  0.07111567, -0.07910167, -0.14075056,
        0.09447317, -0.06416138,  0.01625183,  0.11519565, -0.02005424,
       -0.06200746,  0.15829347,  0.02597752, -0.02700011,  0.00574114,
       -0.01110603,  0.02687638,  0.03469303, -0.05248028,  0.0870206 ,
        0.00077715,  0.05809092, -0.01383492,  0.09590432,  0.10648903,
        0.03396901, -0.03575124,  0.03355333, -0.01877551,  0.01351267,
       -0.08261327, -0.01916262, -0.10389806, -0.04084764,  0.0760856 ,
       -0.01533336,  0.02277224, -0.05204159,  0.05793417, -0.01381126,
       -0.02089536,  0.00811556,  0.03262435,  0.04531128, -0.03010069,
       -0.01171639,  0.11563395,  0.02414452, -0.07918232, -0.03051105,
        0.02917325, -0.07373993,  0.02146403, -0.00288346, -0.03545145,
        0.04871619, -0.00696709, -0.04127839, -0.03021095,  0.02486127,
       -0.09704249, -0.00212691, -0.07545952, -0.04577727,  0.03115453,
       -0.02307166,  0.01308232,  0.05850307, -0.11189032, -0.10513283,
       -0.02408416, -0.05981093,  0.03213454, -0.0140616 ,  0.01734342,
        0.07199937,  0.01248292,  0.05972538, -0.04061089,  0.01433882,
        0.08300181, -0.02776613,  0.08434992,  0.07857168,  0.04623952,
        0.06063098, -0.06632672,  0.13141835, -0.04028555, -0.02711887,
       -0.03171489, -0.00121487,  0.06289804,  0.14847729,  0.11676435,
        0.09777641,  0.01878174, -0.04769752,  0.02091297, -0.05527892,
        0.02009225,  0.00415907, -0.01899581, -0.02441722,  0.01018429],
      dtype=float32)
</code></pre>
<p>有了每个词或者概念的向量，可以结合cntext旧版本单语言模型内的态度偏见的度量。</p>
<p><br><br></p>
<h2 id="四扩展词典">四、扩展词典</h2>
<p>做词典法的文本分析，最重要的是有自己的领域词典。之前受限于技术难度，文科生的我也一直在用形容词的通用情感词典。现在依托word2vec技术， 可以加速人工构建的准确率和效率。</p>
<p>下面是在 <em><strong>mda01-23.200.6.bin</strong></em> 上做的词典扩展测试，函数 <em><strong>ct.expand_dictionary(wv, seeddict, topn=100, save_dir=&lsquo;Word2Vec&rsquo;)</strong></em> 会根据种子词选取最准确的topn个词。</p>
<ul>
<li><em><strong>wv</strong></em>   预训练模型，数据类型为 gensim.models.keyedvectors.KeyedVectors。</li>
<li><em><strong>seeddict</strong></em>   参数类似于种子词；格式为PYTHON字典；</li>
<li><em><strong>topn</strong></em>   返回topn个语义最接近seeddict的词，默认100.</li>
<li><em><strong>save_dir</strong></em>   模型存储到某个位置，默认&rsquo;Word2Vec'.</li>
</ul>
<br>
<p>假设现在有种子词seeddicts， 内含我构建的 <em><strong>短视词</strong></em>、 <em><strong>创新词</strong></em>、 <em><strong>竞争词</strong></em>， 我希望生成最终各含 30 个词的候选词表txt文件。</p>
<p>可以使用 <em><strong>ct.expand_dictionary</strong></em> 进行如下操作</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">seeddicts</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s1">&#39;短视词&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;抓紧&#39;</span><span class="p">,</span> <span class="s1">&#39;立刻&#39;</span><span class="p">,</span> <span class="s1">&#39;月底&#39;</span><span class="p">,</span> <span class="s1">&#39;年底&#39;</span><span class="p">,</span> <span class="s1">&#39;年终&#39;</span><span class="p">,</span> <span class="s1">&#39;争取&#39;</span><span class="p">,</span> <span class="s1">&#39;力争&#39;</span><span class="p">],</span>
    <span class="s1">&#39;创新词&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;创新&#39;</span><span class="p">,</span> <span class="s1">&#39;科技&#39;</span><span class="p">,</span>  <span class="s1">&#39;研发&#39;</span><span class="p">,</span>  <span class="s1">&#39;技术&#39;</span><span class="p">,</span> <span class="s1">&#39;标准&#39;</span><span class="p">],</span>
    <span class="s1">&#39;竞争词&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;竞争&#39;</span><span class="p">,</span> <span class="s1">&#39;竞争力&#39;</span><span class="p">],</span>
    <span class="p">}</span>

<span class="n">ct</span><span class="o">.</span><span class="n">expand_dictionary</span><span class="p">(</span><span class="n">wv</span> <span class="o">=</span> <span class="n">w2v_model</span><span class="o">.</span><span class="n">wv</span><span class="p">,</span> 
                     <span class="n">seeddict</span> <span class="o">=</span> <span class="n">seeddicts</span><span class="p">,</span> 
                     <span class="n">topn</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/03-expand.jpg" alt=""  />
</p>
<p><br><br></p>
<h2 id="六获取模型">六、获取模型</h2>
<p>内容创作不易， 本文为付费内容，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 100元    cntext-2.1.4-py3-none-any.whl

- 100元   Word2Vec相关模型文件(mda01-23.200.6.bin)

- 200元   
    - cntext-2.1.4-py3-none-any.whl  
    - Word2Vec相关模型文件(mda01-23.200.6.bin)
    
    
声明： 仅供科研使用
</code></pre></div><p>加微信 372335839， 备注「姓名-学校-专业-word2vec」</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>可视化 | 睡前消息的科学社会、科学技术、社会化抚养话题可视化</title>
      <link>https://textdata.cn/blog/2023-03-22-bedtime-topic_model_visualization/</link>
      <pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-22-bedtime-topic_model_visualization/</guid>
      <description>睡前消息是我最喜欢看的节目， 基本上隔两天不看睡不踏实。本次分享，不涉及观点之争，纯属技术玩乐。</description>
      <content:encoded><![CDATA[<p>我的信仰是科学的唯物史观，虽然一直觉得爷爷是伟人，但是没有系统钻研小本本，所以似懂非懂，好在有睡前消息这个节目，可以时不时的聆听到半个世纪前的伟人智慧。</p>
<p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<p><img loading="lazy" src="img/%e7%a7%91%e5%ad%a6%e7%a4%be%e4%bc%9a.png" alt=""  />
</p>
<br>
<h2 id="一读取数据">一、读取数据</h2>
<p>睡前消息是我最喜欢看的节目， 基本上隔两天不看睡不踏实。本次分享，不涉及观点之争，纯属技术玩乐。</p>
<p><a href="https://textdata.cn/blog/2023-03-06-bedtime-news-datasets/">数据集 | 马前卒工作室睡前消息文稿汇总</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">bed_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;bedtime_news.csv&#39;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;date&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">bed_df</span><span class="o">.</span><span class="n">date</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">bed_df</span><span class="o">.</span><span class="n">date</span><span class="p">)</span>
<span class="n">bed_df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<Br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据集起始日期</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">bed_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">min</span><span class="p">())[:</span><span class="mi">10</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">bed_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">max</span><span class="p">())[:</span><span class="mi">10</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">2019-07-12
2022-11-29
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#数据集含有的节目数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">bed_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">522
</code></pre></div><br>
<br>
<h2 id="二准备工作">二、准备工作</h2>
<h3 id="21-自定义词典">2.1 自定义词典</h3>
<ul>
<li>科学、技术</li>
<li>社会化抚养</li>
<li>债务、独山县</li>
<li>中医、以岭药业</li>
</ul>
<p>将感兴趣的词加入到jieba自定义词典中，防止被错分。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jieba</span>

<span class="n">diywords</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;科学&#39;</span><span class="p">,</span> <span class="s1">&#39;技术&#39;</span><span class="p">,</span> <span class="s1">&#39;社会化抚养&#39;</span><span class="p">,</span> <span class="s1">&#39;债务&#39;</span><span class="p">,</span> <span class="s1">&#39;独山县&#39;</span><span class="p">,</span> <span class="s1">&#39;毛选&#39;</span><span class="p">,</span> <span class="s1">&#39;唯物&#39;</span><span class="p">,</span> <span class="s1">&#39;社会实验&#39;</span><span class="p">]</span>
<span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">diywords</span><span class="p">:</span>
    <span class="n">jieba</span><span class="o">.</span><span class="n">add_word</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="22-word_in_context">2.2 word_in_context</h3>
<p>在这里定义了一个word_in_context函数，可以查看某些关键词上下文环境。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">from</span> <span class="nn">nltk.tokenize</span> <span class="kn">import</span> <span class="n">word_tokenize</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">warnings</span>


<span class="k">def</span> <span class="nf">word_in_context</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">keywords</span><span class="p">,</span> <span class="n">window</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">lang</span><span class="o">==</span><span class="s1">&#39;chinese&#39;</span><span class="p">:</span>
        <span class="n">words</span> <span class="o">=</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">())</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">words</span> <span class="o">=</span> <span class="n">word_tokenize</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">())</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">&#34;你应该安装nltk和对应的nltk_data, 请看B站https://www.bilibili.com/video/BV14A411i7DB&#34;</span><span class="p">)</span>
            <span class="n">words</span> <span class="o">=</span> <span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
    <span class="n">keywords</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">keywords</span><span class="p">]</span>
    <span class="n">kw_idxss</span> <span class="o">=</span> <span class="p">[[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">words</span><span class="p">)</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="n">keyword</span><span class="p">]</span> <span class="k">for</span> <span class="n">keyword</span> <span class="ow">in</span> <span class="n">keywords</span><span class="p">]</span>
    <span class="n">rows</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">keyword</span><span class="p">,</span> <span class="n">kw_idxs</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">keywords</span><span class="p">,</span> <span class="n">kw_idxss</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="n">kw_idxs</span><span class="p">:</span>
            <span class="n">half</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">window</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
            <span class="n">start</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">idx</span> <span class="o">-</span> <span class="n">half</span><span class="p">)</span>
            <span class="n">end</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">words</span><span class="p">),</span> <span class="n">idx</span> <span class="o">+</span> <span class="n">half</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
            <span class="n">row</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;keyword&#39;</span><span class="p">:</span> <span class="n">keyword</span><span class="p">,</span> 
                   <span class="s1">&#39;context&#39;</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">[</span><span class="n">start</span><span class="p">:</span> <span class="n">end</span><span class="p">])</span> <span class="k">if</span> <span class="n">lang</span><span class="o">==</span><span class="s1">&#39;chinese&#39;</span> <span class="k">else</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">[</span><span class="n">start</span><span class="p">:</span> <span class="n">end</span><span class="p">])</span>
                      <span class="p">}</span>
            <span class="n">rows</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">rows</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">df</span>


<span class="c1">#测试【打算】前后上下文5个单词</span>
<span class="n">word_in_context</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="s1">&#39;根本没打算过真抓到人，当然也不打算付钱。转发推送：还有一个话题&#39;</span><span class="p">,</span> 
                <span class="n">keywords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;打算&#39;</span><span class="p">],</span> 
                <span class="n">window</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> 
                <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><br>
<h3 id="23-词云图">2.3 词云图</h3>
<p>pip install pyecharts==2.0.1</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">plot_wordcloud</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>
    <span class="kn">import</span> <span class="nn">pyecharts.options</span> <span class="k">as</span> <span class="nn">opts</span>
    <span class="kn">from</span> <span class="nn">pyecharts.charts</span> <span class="kn">import</span> <span class="n">WordCloud</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s1">&#39;context&#39;</span><span class="p">])</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;[</span><span class="se">\u4e00</span><span class="s1">-</span><span class="se">\u9fa5</span><span class="s1">]+&#39;</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>
    <span class="n">words</span> <span class="o">=</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
    <span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">words</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">w</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">]</span>
    <span class="n">wordfreqs</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="nb">set</span><span class="p">(</span><span class="n">words</span><span class="p">):</span>
        <span class="n">freq</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">)</span>
        <span class="n">wordfreqs</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">word</span><span class="p">,</span> <span class="n">freq</span><span class="p">))</span>
    <span class="n">wordfreqs</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">wordfreqs</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">k</span><span class="p">:</span><span class="n">k</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">wordfreqs</span> <span class="o">=</span> <span class="p">[(</span><span class="n">w</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">f</span><span class="p">))</span> <span class="k">for</span> <span class="n">w</span><span class="p">,</span><span class="n">f</span> <span class="ow">in</span> <span class="n">wordfreqs</span><span class="p">]</span>
    <span class="n">cloud</span> <span class="o">=</span> <span class="n">WordCloud</span><span class="p">()</span>
    <span class="n">cloud</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">series_name</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="n">data_pair</span><span class="o">=</span><span class="n">wordfreqs</span><span class="p">,</span> <span class="n">word_size_range</span><span class="o">=</span><span class="p">[</span><span class="mi">20</span><span class="p">,</span> <span class="mi">100</span><span class="p">])</span>
    <span class="n">cloud</span><span class="o">.</span><span class="n">set_global_opts</span><span class="p">(</span><span class="n">title_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TitleOpts</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="n">title</span><span class="p">,</span> 
                                                    <span class="n">title_textstyle_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TextStyleOpts</span><span class="p">(</span><span class="n">font_size</span><span class="o">=</span><span class="mi">23</span><span class="p">)),</span>
                          <span class="n">tooltip_opts</span><span class="o">=</span><span class="n">opts</span><span class="o">.</span><span class="n">TooltipOpts</span><span class="p">(</span><span class="n">is_show</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>
    <span class="n">cloud</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="s1">&#39;</span><span class="si">{}</span><span class="s1">.html&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">title</span><span class="p">))</span>
    <span class="k">return</span> <span class="n">cloud</span><span class="o">.</span><span class="n">render_notebook</span><span class="p">()</span>
</code></pre></div><p><br><br></p>
<h2 id="三话题分析">三、话题分析</h2>
<p>相比LDA机器学习算法的晦涩难懂，其实可以用word_in_context对指定关键词进行定位和分析，数据处理的过程清晰透明。</p>
<h3 id="31-topic-社会化抚养">3.1 Topic-社会化抚养</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dfs</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">bed_df</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">word_in_context</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">row</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">],</span> 
                            <span class="n">keywords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;社会化抚养&#39;</span><span class="p">],</span> 
                            <span class="n">window</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
    <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span>
    <span class="n">dfs</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
    
<span class="n">topic_df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="n">dfs</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">topic_df</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#涉及该主题的节目数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">topic_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">65
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#占比</span>
<span class="nb">len</span><span class="p">(</span><span class="n">topic_df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">bed_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.12452107279693486
</code></pre></div><br>
<p>在咱们这个数据集中，睡前消息500多期节目中，有65期谈及社会化抚养的，比例12%。</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plot_wordcloud</span><span class="p">(</span><span class="n">df</span><span class="o">=</span><span class="n">topic_df</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="s1">&#39;社会化抚养&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/%e7%a4%be%e4%bc%9a%e5%8c%96%e6%8a%9a%e5%85%bb.png" alt=""  />
</p>
<br>
<h3 id="32-topic-科学技术">3.2 Topic-科学技术</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dfs2</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">bed_df</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">word_in_context</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">row</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">],</span> 
                            <span class="n">keywords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;科学&#39;</span><span class="p">,</span> <span class="s1">&#39;技术&#39;</span><span class="p">],</span> 
                            <span class="n">window</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
    <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span>
    <span class="n">dfs2</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
    
<span class="n">topic_df2</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="n">dfs2</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">topic_df2</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#涉及该主题的节目数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">topic_df2</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">411
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#占比</span>
<span class="nb">len</span><span class="p">(</span><span class="n">topic_df2</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">bed_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.7873563218390804
</code></pre></div><br>
<p>在咱们这个数据集中，睡前消息500多期节目中，有411期谈及社会化抚养的，比例79%。</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plot_wordcloud</span><span class="p">(</span><span class="n">df</span><span class="o">=</span><span class="n">topic_df</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="s1">&#39;科学技术&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/%e7%a7%91%e5%ad%a6%e6%8a%80%e6%9c%af.png" alt=""  />
</p>
<br>
<h2 id="33-科学社会">3.3 科学社会</h2>
<p>面对社会问题，睡前消息倡导科学社会实验， 也喜欢讲毛选语录， 两者所涉及的是唯物的观点，科学社会的观点。放在一起试试</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dfs3</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">bed_df</span><span class="o">.</span><span class="n">iterrows</span><span class="p">():</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">word_in_context</span><span class="p">(</span><span class="n">text</span><span class="o">=</span><span class="n">row</span><span class="p">[</span><span class="s1">&#39;text&#39;</span><span class="p">],</span> 
                            <span class="n">keywords</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;毛选&#39;</span><span class="p">,</span> <span class="s1">&#39;唯物&#39;</span><span class="p">,</span> <span class="s1">&#39;社会实验&#39;</span><span class="p">],</span> 
                            <span class="n">window</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
    <span class="n">df</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">row</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span>
    <span class="n">dfs3</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
    
<span class="n">topic_df3</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">concat</span><span class="p">(</span><span class="n">dfs3</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">topic_df3</span>
</code></pre></div><p><img loading="lazy" src="img/df4.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#涉及该主题的节目数</span>
<span class="nb">len</span><span class="p">(</span><span class="n">topic_df3</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">14
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">topic_df3</span><span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">unique</span><span class="p">())</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">bed_df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">0.02681992337164751
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">plot_wordcloud</span><span class="p">(</span><span class="n">df</span><span class="o">=</span><span class="n">topic_df3</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="s1">&#39;科学社会&#39;</span><span class="p">)</span>
</code></pre></div><p><img loading="lazy" src="img/%e7%a7%91%e5%ad%a6%e7%a4%be%e4%bc%9a.png" alt=""  />
</p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>Nature | 通用中英文六维语义情感词典</title>
      <link>https://textdata.cn/blog/2023-03-20-nature-six-semantic-dimension-database/</link>
      <pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-20-nature-six-semantic-dimension-database/</guid>
      <description>来自心理学和认知神经科学的证据表明，人类大脑的语义系统包含几个特定的子系统，每个子系统都代表语义信息的特定维度。对这些不同语义维度上的词语评分可以帮助研究语义维度对语言处理的行为和神经影响，并根据人类认知系统的语义空间建立语言含义的计算表示。现有的语义评分数据库提供了数百到数千个词语的评分，但这无法支持对自然文本或语音的全面语义分析。本文报告了一个大型数据库——六维语义数据库（SSDD， 后文「数据库」均用「词典」代替），其中包含对 17,940个常用汉语词语在六个主要语义维度上的主观评分：视觉、运动、社交、情感、时间和空间。此外，使用计算模型学习主观评分和词嵌入之间的映射关系，我们在SSDD中包括了1,427,992个汉语和1,515,633个英语词语的估计语义评分。SSDD将有助于自然语言处理、文本分析和大脑中的语义表示研究。</description>
      <content:encoded><![CDATA[<h2 id="应用价值">应用价值</h2>
<p>对于大量散落在网络中的文本数据， 可以度量用户在视觉、运动、社交、情感、时间和空间等维度上心理、认知、抽象层面的信息。</p>
<br>
<p>Wang, S., Zhang, Y., Shi, W. et al. A large dataset of semantic ratings and its computational extension. Sci Data 10, 106 (2023). <a href="https://doi.org/10.1038/s41597-023-01995-6">https://doi.org/10.1038/s41597-023-01995-6</a></p>
<p><img loading="lazy" src="img/cover.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="一摘要">一、摘要</h2>
<p>来自心理学和认知神经科学的证据表明，人类大脑的语义系统包含几个特定的子系统，每个子系统都代表语义信息的特定维度。对这些不同语义维度上的词语评分可以帮助研究语义维度对语言处理的行为和神经影响，并根据人类认知系统的语义空间建立语言含义的计算表示。现有的语义评分数据库提供了数百到数千个词语的评分，但这无法支持对自然文本或语音的全面语义分析。本文报告了一个大型数据库——<strong>六维语义数据库</strong>（SSDD， 后文「数据库」均用「词典」代替），其中包含对 <strong>17,940</strong> 个常用汉语词语在六个主要语义维度上的主观评分：<strong>视觉、运动、社交、情感、时间和空间</strong>。此外，使用计算模型学习主观评分和词嵌入之间的映射关系，我们在SSDD中包括了1,427,992个汉语和1,515,633个英语词语的估计语义评分。SSDD将有助于自然语言处理、文本分析和大脑中的语义表示研究。</p>
<p><br><br></p>
<h2 id="二背景">二、背景</h2>
<p>大量行为和神经证据表明，单词语义表示分布在不同的神经子系统中， 每个子系统代表着特定的语义信息维度。这些语义子系统和维度为人类语义系统的组织提供了重要线索。为了研究单词在人脑中的 <strong>意义表示</strong> 和 <strong>信息加工</strong>, 许多研究基于心理和神经生物学可行的语义维度，通过人员标准构建了单词的词典。与现有NLP领域的embeddings相比， 基于特定意义维度所构建的词典可以在经验语义纬度上提供量化的评分， 使得研究者可以调查语义维度对语言处理的行为和神经影响， 并建立语言含义的(表示)计算。</p>
<p>然而现有的词典只包含数百、数钱个词，不足以支持自然文本或语音的全面语义分析。该研究提供了一个大型的语义评分语义词典， 名为<strong>六维语义</strong>（Six Semantic Dimension Database，SSDD）词典， <strong>每个中英文词语含六个维度的得分(可以理解为效价valence),分别是视觉、运动、社交、情感、时间、空间</strong>。 其中视觉和运动维度反映了感觉运动体验对语义表示的影响。感觉和运动维度可能是最常研究的语义维度之一，它们对于对象和动作概念的重要性已经得到了很好的确认。在与语义表示相关的多个感官维度中，我们选择了视觉维度，因为视觉是主导的感觉模态。视觉和运动语义对认知处理的行为和神经影响已经被许多研究证实。社交和情感维度反映了社会情感体验对语义表示的影响。<strong>这些维度具有可分离的神经相关性，并且对于心理和抽象概念的表示尤其重要</strong>。Huth等人采用数据驱动方法研究了大脑中的语义表示组织，并发现社交情感和感官运动语义与最重要的数据驱动语义维度的两端相关联。因此，社交和情感维度可以作为视觉和运动维度的重要补充，以反映语义表示。时间和空间维度对于事件和情境的表示尤为重要。神经心理学和神经影像研究也表明这些维度具有可分离的神经相关性。Binder等人对经验语义属性进行了全面的综述，反映了六个维度的代表性。Binder等人总结了属于14个领域的65个语义维度，其中超过2/3的维度属于视觉、运动、社交、情感、时间和空间领域。SSDD将这六个领域作为粗粒度语义维度，并为每个维度提供了一般评分。</p>
<p><br><br></p>
<h2 id="三构建方法">三、构建方法</h2>
<h3 id="31-标准者被试人员">3.1 标准者(被试人员)</h3>
<p>该研究找了85位心理、神经都正常的本硕中国学生， 通过数据质量评估，最终保留了80位学生的数据标注结果。</p>
<br>
<h3 id="32-待标注的17940中文词">3.2 待标注的17940中文词</h3>
<p>待标注中文词，一共有17940个， 是由三种数据源筛选得来</p>
<ol>
<li>中文维基百科12814高频词</li>
<li>fMRI领域研究(发表&amp;未发表)的4915个中文词</li>
<li>最后一组项目是来自Binder等人和Tamir等人的语义评分实验中英文刺激词的211个汉语翻译。</li>
</ol>
<br>
<h3 id="33-标注过程">3.3 标注过程</h3>
<ul>
<li>该研究对17980个词进行了6个标注实验的， 每个实验聚焦于一个语义维度（视觉、运动、社交、情感、时间、空间）。</li>
<li>每个标注实验会分成18个session，每个session含1000个词(最后一个session有940个词)</li>
<li>标准过程使用问卷星</li>
<li>情绪维度标注的时候，使用13-point scale标准标注(-6表示非常负面， 0表示中性， 6表示非常积极)</li>
<li>剩下的5维（视觉、运动、社交、时间、空间）使用7-point scale标准标注(1表示非常低， 7表示非常高)</li>
<li>每次标注前， 标注者需要阅读标注指南，指南会含有一些语义例子。</li>
<li>为了控制标准数据质量， 保证每位标注者与所有标准者的相关性大于0.5，最终拒绝了28个session大概0.87%的数据量。</li>
</ul>
<br>
<h3 id="34-扩充词典">3.4 扩充词典</h3>
<p>标准的17940个中文词的六维度数据，可以认为是标准数据。用机器学习方法，想办法扩充词典。</p>
<p>该团队检验了语义上下文不敏感的词嵌入算法(word2vec/Glove)和 对上下文语义敏感的嵌入算法(GPT2, BERT ERNIE, and MacBERT) ，让这6类嵌入模型分别预测， 确定下表现效果较好的Word2vec和MacBERT算法。</p>
<p>使用Word2vec和MacBERT预测剩下所有的中文词，共扩展出1427992个中文词。</p>
<p>人类在视觉、运动、社交、情感、时间、空间六个维度上是共通的，结合语言嵌入模型可以在不同语言中进行语义空间对齐，该研究根据英文嵌入语言模型，也预测出了1,515,633个词。</p>
<br>
<br>
<h2 id="四ssdd">四、SSDD</h2>
<p>SSDD包含两个数据集：</p>
<ul>
<li>第一个是17,940个常用汉语词语在六个语义维度上的主观评分。</li>
<li>第二个是主观评分数据的计算扩展。我们将主观评分与计算模型相结合，然后估算出1,427,992个汉语和1,515,633个英语单词的语义评分。</li>
</ul>
<p>该研究标准、训练的源代码数据均已开源，https://osf.io/n5vke/</p>
<p><img loading="lazy" src="img/osf.png" alt=""  />
</p>
<p>由于数据量太大， 这里只给大家读取并显示17940个标注的6维语义数据, 其实对于经管社科研究， 标注的 <a href="Rated_semantic_dimensions.csv">17940个词</a> 已经是很大的情感词典了。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;Rated_semantic_dimensions.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df1.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#词汇量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">17940
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 计算相关性矩阵</span>
<span class="n">df</span><span class="o">.</span><span class="n">corr</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df2.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">corr_df</span> <span class="o">=</span> <span class="n">df</span><span class="o">.</span><span class="n">corr</span><span class="p">()</span>
<span class="n">mark</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">cell</span><span class="p">:</span> <span class="s1">&#39;background-color: </span><span class="si">%s</span><span class="s1">&#39;</span> <span class="o">%</span> <span class="s1">&#39;red&#39;</span> <span class="k">if</span> <span class="n">cell</span> <span class="o">&gt;</span> <span class="mf">0.4</span> <span class="k">else</span> <span class="s1">&#39;&#39;</span>
<span class="n">color_matrix</span> <span class="o">=</span> <span class="n">corr_df</span><span class="o">.</span><span class="n">style</span><span class="o">.</span><span class="n">applymap</span><span class="p">(</span><span class="n">mark</span><span class="p">)</span>
<span class="n">color_matrix</span>
</code></pre></div><p><img loading="lazy" src="img/df3.png" alt=""  />
</p>
<p>相关性最高的单元格是Motor与Vision， 6个维度相关性均小于0.5 ， 六维的选择是很合理。</p>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>word_in_context | 查看某类词的上下文，更好的理解文本数据</title>
      <link>https://textdata.cn/blog/2023-03-19-word-in-context/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-19-word-in-context/</guid>
      <description>通过一个单词所处的语境，我们可以了解该单词的含义。**该谚语源于英国语言学家 J.R. Firth 的理论，他认为单词的含义是由其周围的语境和与之相伴的其他单词所决定的，因此我们需要通过单词出现的上下文来理解其含义。这一理论在语言学、自然语言处理等领域有着广泛的应用。之前分享过 [ 使用正则表达式、文本向量化、线性回归算法从md&amp;amp;a数据中计算 「企业融资约束指标」 ]， 使用的是正则表达式识别融资约束文本。但是正则表达式设计十分复杂且有难度，在此之前，如果能够查看某些融资关键词附近上下文， 可帮助研究者更全面地了解数据集中关键词的使用情况和语境，更好的设计正则表达式，亦或许意外找出新的有价值的线索。</description>
      <content:encoded><![CDATA[<p>Firth（1957）有一句名言，理解一个词要从ta身边入手。</p>
<blockquote>
<p>You shall know a word by the company it keeps</p>
</blockquote>
<p>通过一个单词所处的语境，我们可以了解该单词的含义。<strong>该谚语源于英国语言学家 J.R. Firth 的理论，他认为单词的含义是由其周围的语境和与之相伴的其他单词所决定的，因此我们需要通过单词出现的上下文来理解其含义。这一理论在语言学、自然语言处理等领域有着广泛的应用</strong>。之前分享过</p>
<p><img loading="lazy" src="img/39faq-firth_words.png" alt=""  />
</p>
<p>之前分享过 <a href="https://textdata.cn/blog/2023-12-31-using-regex-to-compute-the-financial_constraints"> 使用正则表达式、文本向量化、线性回归算法从md&amp;a数据中计算 「企业融资约束指标」 </a>， 使用的是正则表达式识别融资约束文本。但是正则表达式设计十分复杂且有难度，在此之前，如果能够查看某些融资关键词附近上下文， 可帮助研究者更全面地了解数据集中关键词的使用情况和语境，更好的设计正则表达式，亦或许意外找出新的有价值的线索。</p>
<br>
<h2 id="代码">代码</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">jieba</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">from</span> <span class="nn">nltk.tokenize</span> <span class="kn">import</span> <span class="n">word_tokenize</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">warnings</span>

<span class="k">def</span> <span class="nf">word_in_context</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">keywords</span><span class="p">,</span> <span class="n">window</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    Given text and keywords, the task is to find the text where the keyword appears
</span><span class="s2">    Args:
</span><span class="s2">        text (str): input document, string format
</span><span class="s2">        keywords (list): keywords
</span><span class="s2">        window (int): return the text where the keyword appears, default is 3, meaning return 3 word.
</span><span class="s2">        lang (str, optional): setting the lang, only support chinese and english. Defaults to &#39;chinese&#39;.
</span><span class="s2">
</span><span class="s2">    Returns:
</span><span class="s2">        list contains multiple dictionaries, where each dictionary contains the sentence, keyword, and the sentence where the keyword appears
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="k">if</span> <span class="n">lang</span><span class="o">==</span><span class="s1">&#39;chinese&#39;</span><span class="p">:</span>
        <span class="n">words</span> <span class="o">=</span> <span class="n">jieba</span><span class="o">.</span><span class="n">lcut</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">())</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">words</span> <span class="o">=</span> <span class="n">word_tokenize</span><span class="p">(</span><span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">())</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">&#34;你应该安装nltk和对应的nltk_data, 请看B站https://www.bilibili.com/video/BV14A411i7DB&#34;</span><span class="p">)</span>
            <span class="n">words</span> <span class="o">=</span> <span class="n">text</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
    <span class="n">keywords</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">keywords</span><span class="p">]</span>
    <span class="n">kw_idxss</span> <span class="o">=</span> <span class="p">[[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">words</span><span class="p">)</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="n">keyword</span><span class="p">]</span> <span class="k">for</span> <span class="n">keyword</span> <span class="ow">in</span> <span class="n">keywords</span><span class="p">]</span>
    <span class="n">rows</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">keyword</span><span class="p">,</span> <span class="n">kw_idxs</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">keywords</span><span class="p">,</span> <span class="n">kw_idxss</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="n">kw_idxs</span><span class="p">:</span>
            <span class="n">half</span> <span class="o">=</span> <span class="nb">int</span><span class="p">((</span><span class="n">window</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
            <span class="n">start</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">idx</span> <span class="o">-</span> <span class="n">half</span><span class="p">)</span>
            <span class="n">end</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">words</span><span class="p">),</span> <span class="n">idx</span> <span class="o">+</span> <span class="n">half</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
            <span class="n">row</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;keyword&#39;</span><span class="p">:</span> <span class="n">keyword</span><span class="p">,</span> 
                   <span class="s1">&#39;context&#39;</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">[</span><span class="n">start</span><span class="p">:</span> <span class="n">end</span><span class="p">])</span> <span class="k">if</span> <span class="n">lang</span><span class="o">==</span><span class="s1">&#39;chinese&#39;</span> <span class="k">else</span> <span class="s1">&#39; &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">words</span><span class="p">[</span><span class="n">start</span><span class="p">:</span> <span class="n">end</span><span class="p">])</span>
                      <span class="p">}</span>
            <span class="n">rows</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">row</span><span class="p">)</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">rows</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">df</span>


</code></pre></div><p><br><br></p>
<h2 id="练习">练习</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#测试代码，假设zh_text是年报文本，从找找出丝网词相关词的上下文</span>
<span class="n">zh_text</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span><span class="s2">【插入一条自家广告】大邓自己家的家，
</span><span class="s2">安平县多隆丝网制品，生产销售不锈钢轧花网、
</span><span class="s2">电焊网、石笼网、刀片刺绳、冲孔网等丝网制品。
</span><span class="s2">联系人 邓颖静 0318-7686899
</span><span class="s2">
</span><span class="s2">人生苦短，我学Python
</span><span class="s2">在社科中，可以用Python做文本分析
</span><span class="s2">Python是一门功能强大的编程语言，广泛应用在经管社科领域。
</span><span class="s2">可以做网络爬虫、文本分析、LDA话题模型、相似度分析等。
</span><span class="s2">
</span><span class="s2">今年经济不景气，形势异常严峻。
</span><span class="s2">由于疫情不景气，静默管理， 产品积压， 公司经营困难。
</span><span class="s2">保就业促就业，任务十分艰巨。
</span><span class="s2">&#34;&#34;&#34;</span>

<span class="c1">#【产品词】上下文</span>
<span class="n">word_in_context</span><span class="p">(</span><span class="n">text</span> <span class="o">=</span> <span class="n">zh_text</span><span class="p">,</span> 
                <span class="n">keywords</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;石笼&#39;</span><span class="p">],</span> 
                <span class="n">window</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> 
                <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><table>
<thead>
<tr>
<th>keyword</th>
<th>context</th>
</tr>
</thead>
<tbody>
<tr>
<td>石笼</td>
<td>电焊网、石笼网、刀片刺绳</td>
</tr>
</tbody>
</table>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#【经营】上下文</span>
<span class="n">word_in_context</span><span class="p">(</span><span class="n">text</span> <span class="o">=</span> <span class="n">zh_text</span><span class="p">,</span> 
                <span class="n">keywords</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;经营&#39;</span><span class="p">],</span> 
                <span class="n">window</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> 
                <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><table>
<thead>
<tr>
<th>keyword</th>
<th>context</th>
</tr>
</thead>
<tbody>
<tr>
<td>经营</td>
<td>&gt;积压， 公司经营困难。\n保</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#【Python】上下文</span>
<span class="n">word_in_context</span><span class="p">(</span><span class="n">text</span> <span class="o">=</span> <span class="n">zh_text</span><span class="p">,</span> 
                <span class="n">keywords</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;python&#39;</span><span class="p">],</span> 
                <span class="n">window</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> 
                <span class="n">lang</span><span class="o">=</span><span class="s1">&#39;chinese&#39;</span><span class="p">)</span>
</code></pre></div><table>
<thead>
<tr>
<th>keyword</th>
<th>context</th>
</tr>
</thead>
<tbody>
<tr>
<td>python</td>
<td>人生苦短，我学python\n在社科中</td>
</tr>
<tr>
<td>python</td>
<td>中，可以用python做文本分析\n</td>
</tr>
<tr>
<td>python</td>
<td>做文本分析\npython是一门功能强大的</td>
</tr>
</tbody>
</table>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>采购合同数据集 | 政府采购何以牵动企业创新</title>
      <link>https://textdata.cn/blog/2023-03-15-gov-procurement-promote-enterpise-innovation/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-15-gov-procurement-promote-enterpise-innovation/</guid>
      <description>中国地方政府采购合同数据是中国政府采购网中国政府购买服务信息平台披露的政府采购合同信息，主要囊括了采购人（甲方）、采购人所属行政区、供应商（乙方）以及合同金额等关键信息。数据自 2008-06-12 ~ 2021-02-03， 共有 648538 条 。如果某个政府采购合同的以上三项信息中包含关键词库内任意一个关键词，那么该合同就被认定为政府创新采购合同。</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<p>中国地方政府采购合同数据是中国政府采购网中国政府购买服务信息平台披露的政府采购合同信息，主要囊括了采购人（甲方）、采购人所属行政区、供应商（乙方）以及合同金额等关键信息。数据自 2008-06-12 ~ 2021-02-03， 共有 648538 条 。</p>
<p>网址: <a href="http://www.cgpnews.cn/">http://www.cgpnews.cn/</a></p>
<br>
<table>
<thead>
<tr>
<th>字段</th>
<th>字段标题</th>
<th>字段说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>purchaser</td>
<td>采购人</td>
<td>采购人（甲方）</td>
</tr>
<tr>
<td>address</td>
<td>所属地域</td>
<td>采购人（甲方）所属地域</td>
</tr>
<tr>
<td>administrative_code</td>
<td>行政区代码</td>
<td>采购人（甲方）所属行政区代码（中华人民共和国 6 位行政区划代码，中华人民共和国民政部 2019 年 6 月版）</td>
</tr>
<tr>
<td>provincial_region</td>
<td>省级行政区</td>
<td>采购人（甲方）所属省级行政区（中华人民共和国的第 一级行政区，中国共计 34 个省级行政区，包括 23 个省、 5 个自治区、4 个直辖市、2 个特别行政区）</td>
</tr>
<tr>
<td>perfecture_division</td>
<td>地级行政区</td>
<td>采购人（甲方）所属地级行政区（中华人民共和国的第 二级行政区，中国大陆共计 333 个地级行政区，包括 293 个地级市、7 个地区、30 个自治州、3 个盟）</td>
</tr>
<tr>
<td>supplier</td>
<td>供应商名称</td>
<td>供应商（乙方）名称</td>
</tr>
<tr>
<td>industry</td>
<td>所属行业</td>
<td>供应商（乙方）名称所属行业</td>
</tr>
<tr>
<td>contract_number</td>
<td>合同编号</td>
<td>合同编号</td>
</tr>
<tr>
<td>contract_name</td>
<td>合同名称</td>
<td>合同名称</td>
</tr>
<tr>
<td>contract_amount</td>
<td>合同金额</td>
<td>合同金额（单位: 万元）</td>
</tr>
<tr>
<td>project_number</td>
<td>项目编号</td>
<td>项目编号</td>
</tr>
<tr>
<td>project_name</td>
<td>项目名称</td>
<td>项目名称</td>
</tr>
<tr>
<td>contract_date</td>
<td>签订日期</td>
<td>签订日期</td>
</tr>
<tr>
<td>announcement_date</td>
<td>公告日期</td>
<td>公告日期</td>
</tr>
<tr>
<td>agency</td>
<td>代理机构</td>
<td>代理机构</td>
</tr>
<tr>
<td>contract_id</td>
<td>合同标识</td>
<td>合同唯一标识符</td>
</tr>
<tr>
<td>if_joint</td>
<td>是否众包</td>
<td>一个采购合同是否对应多家供应商。是记为“1”，否记为 “0”</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="二读取数据集">二、读取数据集</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data/中国地方政府采购合同.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">low_memory</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">648538
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="p">[</span><span class="s1">&#39;contract_date&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    0        2020-12-02
    1        2020-06-14
    2        2020-05-28
    3        2020-05-14
    4        2020-05-13
                ...    
    648533   2018-11-07
    648534   2018-11-07
    648535   2018-11-07
    648536   2018-11-01
    648537   2018-10-30
    Name: contract_date, Length: 648538, dtype: datetime64[ns]
</code></pre></div><p><br><br></p>
<h2 id="三相关论文">三、相关论文</h2>
<p>孙薇,叶初升.政府采购何以牵动企业创新——兼论需求侧政策“拉力”与供给侧政策“推力”的协同[J].中国工业经济,2023,(01):1-19.</p>
<br>
<h3 id="31-方法">3.1 方法</h3>
<p>通过 <strong>Python爬虫技术</strong> 获取中国政府采购新闻网 2015—2020 年 64 余万条政府采购合同数据，采用 <strong>文本分析方法</strong> 识别出政府创新采购，进而利用政府创新采购合同与中国 A 股上市企业匹配数据，实证检验政府创 新采购的创新效应及其影响机制，并对需求侧的政府创新支持“拉力”和供给侧的政府创新支持“推力”进行异质性分析，进一步探讨了两侧创新支持政策实施中的协同性问题，从而为政府精准施策提供学术依据。</p>
<br>
<h3 id="32-创新">3.2 创新</h3>
<p>本文的边际贡献在于：</p>
<ul>
<li>①<strong>基于政府采购合同数据，使用文本分析方法，从总体的政府采购中识 别出政府创新采购，为准确评估政府采购政策的创新效应创造了前提条件</strong>；</li>
<li>②在一个理论框架内阐 明了政府创新采购影响企业创新的机制，并进行了相应的实证检验，从理论和实证两个方面丰富了 需求侧创新政策激励效应的研究；</li>
<li>③从政策组合的整体视角考察了两侧创新支持政策的协同性问 题，为新发展阶段全面提升中国创新激励政策的实施效果、更好发挥“有为政府”在创新驱动中的作 用提供了重要的政策启示。</li>
</ul>
<br>
<h3 id="33-算法">3.3 算法</h3>
<p><strong>本文将各级国家机关和事业单位对创新产品和服务的采购界定为政府创新采购，并应用文本分析方法从总体的政府采购中加以识别</strong>。</p>
<p>本文使用的政府采购查询系统，对于每一份合同，网站都披露了合同名称、签订日期、合同金额、供应商名称、采购人 名称、所属地区等信息。 由于从 2015 年开始可以查询到较为详细的采购合同信息，因此，本文选取 2015—2020 年作为实证研究的年份区间。</p>
<p>（1）基于文本分析的政府创新采购识别。 本文的文本分析基于 Python 的 jieba分词实现。 为提升分词结果的可靠性，本文构建了行业词库和停用词库，以形成对 Jieba 分词自带词库的有益补充。 基于以上词库，对《重大技术装备自主创新指导目录（2012）》和《战略性新兴产业分类（2018）》中的 “重点产品和服务目录”以及手工收集的各地区创新产品目录进行分词 ，并对分词结果进行精细化的人工筛选，最终得到包含“智能电网” “液相色谱仪” “智能医疗系统” “物联网网关” “旋翼无人机” “管道机器人” 等 3000 余个词汇的政府创新采购关键词库。 随后，对 2015—2020 年 64 余万条政 府采购合同的“合同名称”“ 主要标的名称”和“规格型号或服务要求”进行分词。 <strong>如果某个政府采购合同的以上三项信息中包含关键词库内任意一个关键词，那么该合同就被认定为政府创新采购合同</strong>。</p>
<p>（2）“政府创新采购合同-上市企业”匹配。 在对各企业供应商的名称初步清洗之后，采用 Python 的 levenshtein distance 算法，进行“政府创新采购合同—上市企业”匹配。 为提升匹配精度， 同时开展模糊匹配和精确匹配，并以人工校对的方式汇总匹配结果。  考虑到上市企业往往会有较多子公司参与政府采购的招投标，本文手工整理了分年度的上市企业母、子公司名称，据此匹配，并将匹配结果合并。 最终共有 873 家上市企业匹配到政府创新采购合同，在本文的总样本中，每家上市企业平均获得政府创新采购合同约 1.21 份。</p>
<h2 id="四python技术细节">四、Python技术细节</h2>
<ol>
<li>网络爬虫采集政府采购网数据</li>
<li>jieba分词</li>
</ol>
<ul>
<li>导入创新技术相关词，更新jieba自定义词库</li>
<li>分词</li>
</ul>
<ol start="3">
<li>使用if语句判断是否含某创新词</li>
<li>文本相似度进行采购合同上市公司匹配。levenshtein distance</li>
</ol>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>EDGAR | 25年数据的预训练词向量模型</title>
      <link>https://textdata.cn/blog/2023-03-08-edgar-w2v-and-corpus/</link>
      <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-08-edgar-w2v-and-corpus/</guid>
      <description>EDGAR 是美国证券交易委员会（SEC）的电子数据收集、分析和检索系统。EDGAR系统允许公众通过互联网访问公司提交给SEC的各种文件，例如注册声明、年度报告和其他披露文件。这些文件包括公司的财务信息、业务信息和其他关键信息，对于投资者和研究人员来说非常有用。金融等方向的同学，如果想用 **词嵌入** 技术开展研究， 可以考虑使用这个开源的数据集。EDGAR is an electronic data collection, analysis, and retrieval system of the US Securities and Exchange Commission (SEC). The EDGAR system allows the public to access various documents submitted to the SEC by companies through the internet, such as registration statements, annual reports, and other disclosure documents. These documents include financial information, business information, and other key information of the companies, which is very useful for investors and researchers. Students in finance and related fields who want to conduct research using word embedding techniques may consider using this open-source dataset.</description>
      <content:encoded><![CDATA[<p>EDGAR 是美国证券交易委员会（SEC）的电子数据收集、分析和检索系统。EDGAR系统允许公众通过互联网访问公司提交给SEC的各种文件，例如注册声明、年度报告和其他披露文件。这些文件包括公司的财务信息、业务信息和其他关键信息，对于投资者和研究人员来说非常有用。</p>
<p>金融等方向的同学，如果想用 <strong>词嵌入</strong> 技术开展研究， 可以考虑使用这个开源的数据集。</p>
<br>
<h2 id="一edgar-corpus">一、EDGAR-CORPUS</h2>
<p>在 EMNLP 2021同时举办的经济与自然语言处理研讨会（ECONLP）论文集中， 发布了EDGAR-CORPUS，这是一个新颖的语料库，包括美国所有上市公司超过25年的年报。</p>
<p>所有报告都已下载，拆分为相应的项目（部分），并以清洁、易于使用的JSON格式提供。</p>
<h3 id="11-下载数据">1.1 下载数据</h3>
<p><a href="https://zenodo.org/record/5528490">https://zenodo.org/record/5528490</a></p>
<p><img loading="lazy" src="img/edgar-corpus.png" alt=""  />
</p>
<br>
<h3 id="1-2-引用格式">1. 2 引用格式</h3>
<p>Lefteris Loukas, Manos Fergadiotis, Ion Androutsopoulos, &amp; Prodromos Malakasiotis. (2021). EDGAR-CORPUS [Data set]. Zenodo. <a href="https://doi.org/10.5281/zenodo.5528490">https://doi.org/10.5281/zenodo.5528490</a></p>
<p><br><br></p>
<h2 id="二edgar-w2v-embeddings">二、EDGAR-W2V Embeddings</h2>
<p>EDGAR-W2V 是在 EDGAR-CORPUS 上训练的词嵌入模型。 它是一个200维的模型，包含 10 万个金融词汇。EDGAR-W2V的相关信息可以在题为“EDGAR-CORPUS: Billions of Tokens Make The World Go Round”的论文中找到，该论文发表于2021年EMNLP会议上的经济学和自然语言处理研讨会（ECONLP）。</p>
<h3 id="11-下载模型">1.1 下载模型</h3>
<p><a href="https://zenodo.org/record/5524358">https://zenodo.org/record/5524358</a>
<img loading="lazy" src="img/edgar-w2v.png" alt=""  />
</p>
<br>
<h3 id="1-2-引用格式-1">1. 2 引用格式</h3>
<p>Lefteris Loukas, Manos Fergadiotis, Ion Androutsopoulos, &amp; Prodromos Malakasiotis. (2021). EDGAR-W2V Embeddings. Zenodo. <a href="https://doi.org/10.5281/zenodo.5524358">https://doi.org/10.5281/zenodo.5524358</a></p>
<br>
<h2 id="三代码">三、代码</h2>
<h3 id="31-导入词汇表">3.1 导入词汇表</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">vocab</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;edgar.word.w2v.200.vocab&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;词汇量: &#39;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">vocab</span><span class="p">))</span>

<span class="c1">#显示前100个</span>
<span class="nb">print</span><span class="p">(</span><span class="n">vocab</span><span class="p">[:</span><span class="mi">100</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">词汇量:  100000

[&#39;the&#39;,
 &#39;,&#39;,
 &#39;of&#39;,
 &#39;.&#39;,
 &#39;and&#39;,
 &#39;to&#39;,
 &#39;NEWLINETOKEN&#39;,
 &#39;in&#39;,
 &#39;a&#39;,
 &#39;for&#39;,
 ......
 &#39;including&#39;,
 &#39;accounting&#39;,
 &#39;operating&#39;,
 &#39;1&#39;,
 &#39;fair&#39;,
 &#39;also&#39;,
 &#39;credit&#39;,
 &#39;capital&#39;,
 &#39;notes&#39;,
 &#39;securities&#39;,
 &#39;rate&#39;]
</code></pre></div><br>
<h3 id="31-导入w2v模型文件">3.1 导入W2V模型文件</h3>
<p>edgar.word.w2v.200.bin只存储了</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models.keyedvectors</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="n">edgar_wv</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load_word2vec_format</span><span class="p">(</span><span class="s1">&#39;edgar.word.w2v.200.bin&#39;</span><span class="p">,</span> 
                                             <span class="n">binary</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> 
                                             <span class="n">unicode_errors</span><span class="o">=</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>
</code></pre></div><br>
<p>查看某个词的词向量, 返回长度200维的向量</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">edgar_wv</span><span class="p">[</span><span class="s1">&#39;stock&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<span class="n">edgar_wv</span><span class="p">[</span><span class="s1">&#39;stock&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">(200,)

array([ 0.19913645, -0.06109103, -0.20294489, -0.3233174 ,  0.33050874,
        0.4720499 ,  0.1584721 , -0.73845965, -0.320686  , -0.03934   ,
        0.24570467,  0.33919033, -0.42398626, -0.0519694 ,  0.5614962 ,
        0.06250261,  0.12337335,  0.4284085 , -0.18471783,  0.27163157,
       -0.25374356, -0.30515426, -0.53030056,  0.14488244,  0.23602249,
        0.17834061,  0.5282402 ,  0.35811898,  0.02480956, -0.27537134,
        0.46796346,  0.14656937, -0.24058165, -0.02558263,  0.2823333 ,
        0.13227813, -0.35262054, -0.3534915 , -0.08498703,  0.13652588,
        0.19062333, -0.59584695,  0.4724787 ,  0.0899151 , -0.30575767,
        0.0894967 , -0.42695883,  0.14332667,  0.32162446,  0.5205731 ,
       -0.34024504, -0.15563595,  0.09534936, -0.03550521, -0.24585967,
       -0.70967376,  0.23757844,  0.19296522, -0.14549816, -0.34093133,
        0.44992575, -0.31520963, -0.19251363, -0.2664489 ,  0.22087495,
       -0.0226051 ,  0.02213453, -0.31526777,  0.02245333,  0.01845511,
        0.4727852 ,  0.0823371 , -0.28313273, -0.96016574, -0.34687626,
        0.31235287, -0.2581088 , -0.7164211 ,  0.6806588 ,  0.31276935,
       -0.166056  , -0.5558513 ,  0.10650715, -0.34121472,  0.01264491,
        0.3823984 , -0.6213977 ,  0.532256  , -0.11913523,  0.22344823,
        0.3172406 , -0.08887295,  0.14381133,  0.23814514, -0.09513577,
        0.10691381,  0.13318019, -0.10131137,  0.51121044, -0.13446783,
       -0.34249052,  0.21858525, -0.66716367, -0.1002802 ,  0.1822924 ,
       -0.17896068,  0.36693272, -0.26906306,  0.16348957,  0.309529  ,
       -0.5283489 ,  0.38473064, -0.4563293 , -0.36093566,  0.02899153,
       -0.16942917, -0.24810787,  0.04769324,  0.07288674,  0.05372427,
       -0.21368156, -0.2308374 , -0.47956762,  0.26331866,  0.08796341,
        0.0316316 , -0.04519949,  0.03246075, -0.06966034,  0.08757813,
        0.16438614, -0.16775173, -0.10321777,  0.21712255,  0.1252789 ,
       -0.34793332,  0.01499637, -0.32516828,  0.15845637, -0.1023875 ,
       -0.05895114, -0.08138125,  0.08420486, -0.18958494, -0.22417304,
        0.5160968 ,  0.13966903,  0.17438166,  0.13805066, -0.1817818 ,
        0.09644702, -0.34120768,  0.36722133, -0.06767058, -0.3896219 ,
       -0.1555085 , -0.07321457, -0.24285823, -0.23933856,  0.26198393,
       -0.12067977,  0.4152437 , -0.5361226 ,  0.02143142, -0.47723222,
       -0.27638227, -0.272431  ,  0.27474684,  0.02058701,  0.398542  ,
        0.12495182, -0.43948382, -0.41649124, -0.10416509, -0.013862  ,
        0.2630676 ,  0.0534305 ,  0.26379627, -0.33174622,  0.30189517,
        0.13504176, -0.09992695,  0.6300687 , -0.14120325, -0.04877585,
        0.3973992 ,  0.50578755,  0.07440792, -0.10353652, -0.60702443,
       -0.09498709,  0.1284441 , -0.13405691, -0.19467972, -0.09931252,
       -0.28807166, -0.49167937,  0.501096  ,  0.41336802, -0.4281704 ],
      dtype=float32)
</code></pre></div><p><br><br></p>
<h2 id="四相关内容">四、相关内容</h2>
<p>如果想了解更多词嵌入(或词向量)信息，可以阅读:</p>
<ul>
<li><a href="https://textdata.cn/blog/wordembeddingsinsocialscience/">转载 | 大数据时代下社会科学研究方法的拓展——基于词嵌入技术的文本分析的应用</a></li>
<li><a href="https://textdata.cn/blog/from_sysbol_to_embeddings_in_computational_social_science/">转载 | 从符号到嵌入：计算社会科学的两种文本表示</a></li>
<li><a href="https://textdata.cn/blog/2023-03-15-39faq-about-word-embeddings-for-social-science/">词嵌入技术在社会科学领域进行数据挖掘常见39个FAQ汇总</a></li>
<li><a href="https://textdata.cn/blog/embeddingsandattitude/">词嵌入测量不同群体对某概念的态度(偏见)</a></li>
<li><a href="https://textdata.cn/blog/2022-09-07-management-science-disrupt-science-and-technology">Management Science | 使用网络算法识别创新的颠覆性与否</a></li>
<li><a href="https://textdata.cn/blog/2023-03-03-extracts-cognitive-information-and-visualization-with-embedings/">可视化 | 词嵌入模型用于计算社科领域刻板印象等信息（含代码）</a></li>
<li><a href="https://textdata.cn/blog//2022-11-14-pnas_naming_unrelated_words_predicts_creativity/">PNAS | 使用语义距离测量一个人的创新力(发散思维)得分</a></li>
<li><a href="https://textdata.cn/blog/douban_w2v/">豆瓣影评 | 探索词向量妙处</a></li>
<li><a href="https://textdata.cn/blog/whatlies_word2vec/">whatlies库 | 可视化词向量</a></li>
<li><a href="https://textdata.cn/blog/embeddings_resource_usage_method/">中文词向量资源汇总 &amp; 使用方法</a></li>
<li><a href="https://textdata.cn/blog/pretained_nlp_models/">NLP资源 | 汽车、金融等9大领域预训练词向量模型下载资源</a></li>
<li><a href="https://textdata.cn/blog/2022-10-16-aligned-word-vectors/">数据集 | 多语言对齐词向量预训练模型</a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 马前卒工作室睡前消息文稿汇总</title>
      <link>https://textdata.cn/blog/2023-03-06-bedtime-news-datasets/</link>
      <pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-06-bedtime-news-datasets/</guid>
      <description>一直有观看马前卒工作室睡前消息的习惯， 感觉他的内容很理性， 透露着马列科学社会风。 引爆全网的两个话题独山县债务问题、以岭药业连花清瘟胶囊事件。 **数据可以拿来练习词频统计、词云图制作、情感分析、lda话题建模。已整理为csv文件，留给需要的人**。</description>
      <content:encoded><![CDATA[<p>一直有观看马前卒工作室睡前消息的习惯， 感觉他的内容很理性， 透露着马列科学社会风。 引爆全网的两个话题独山县债务问题、以岭药业连花清瘟胶囊事件。 <strong>数据可以拿来练习词频统计、词云图制作、情感分析、lda话题建模。已整理为csv文件，留给需要的人</strong>。</p>
<p><img loading="lazy" src="img/yilingyaoye.jpg" alt=""  />
</p>
<p><img loading="lazy" src="img/dushanxian.jpeg" alt=""  />
</p>
<br>
<h2 id="一原始数据">一、原始数据</h2>
<p>『睡前消息』截止2023年3月6日，已经更新至559期. 文稿资源来自 <a href="https://archive.bedtime.news/zh/main">https://archive.bedtime.news/zh/main</a></p>
<p>原始数据集下载下来是这个样子</p>
<p><img loading="lazy" src="img/directory.png" alt=""  />
</p>
<p><img loading="lazy" src="img/sub_dir.png" alt=""  />
</p>
<p><img loading="lazy" src="img/filelists.png" alt=""  />
</p>
<br>
<p>数据集文件夹的目录树结构</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- 睡前消息文本 第1-100期
    |- 001-010期
       |- 2019 07 12 第一期.docx
       |- 2019 07 16 第二期.docx
       |- 2019 07 19 第三期.docx
       |- 2019 07 23 第四期.docx
       |- ...
    |- 011-020期
    |- 021-030期
    |-...
- 睡前消息文本 第101-200期
- 睡前消息文本 第201-300期
- 睡前消息文本 第301-400期
- 睡前消息文本 第401-500期
- 睡前消息文本 第501-最新
- bedtime_news.csv
- code.ipynb
</code></pre></div><br>
<h2 id="一整理数据">一、整理数据</h2>
<p>原始数据docx文件存储，数据集是2层文件夹结构。可以使用glob库提供文件路径识别功能</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-PYTHON" data-lang="PYTHON"><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">glob</span>
<span class="kn">import</span> <span class="nn">csv</span>
<span class="kn">from</span> <span class="nn">pdfdocx</span> <span class="kn">import</span> <span class="n">read_docx</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;bedtime_news.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">csvf</span><span class="p">:</span>
    <span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;text&#39;</span><span class="p">]</span>
    <span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span> <span class="o">=</span> <span class="n">fieldnames</span><span class="p">)</span>
    <span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>

    <span class="c1"># 使用glob模块查找所有的docx文件路径</span>
    <span class="n">docx_files</span> <span class="o">=</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s2">&#34;**/*.docx&#34;</span><span class="p">,</span> <span class="n">recursive</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">docx_files</span> <span class="o">=</span> <span class="p">[</span><span class="n">f</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">docx_files</span> <span class="k">if</span> <span class="s1">&#39;DS&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">f</span><span class="p">]</span>

    <span class="c1"># 输出所有docx文件路径</span>
    <span class="k">for</span> <span class="n">file_path</span> <span class="ow">in</span> <span class="n">docx_files</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
        <span class="n">file_name</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s1">&#39;\s&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">file_path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
        <span class="k">if</span> <span class="n">file_name</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;22&#39;</span><span class="p">):</span>
            <span class="n">file_name</span> <span class="o">=</span> <span class="s1">&#39;2022&#39;</span><span class="o">+</span> <span class="n">file_name</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span>
        <span class="n">date</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s1">&#39;\d</span><span class="si">{8}</span><span class="s1">&#39;</span><span class="p">,</span> <span class="n">file_name</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">episode</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s1">&#39;.docx&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="n">file_name</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">date</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">))</span>
        <span class="n">text</span> <span class="o">=</span> <span class="n">read_docx</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span>
        <span class="n">data</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;date&#34;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">date</span><span class="p">),</span> 
                <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="n">file_path</span><span class="p">,</span>
                <span class="s2">&#34;text&#34;</span><span class="p">:</span><span class="n">text</span><span class="p">}</span>
        <span class="n">writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</code></pre></div><br>
<h2 id="二导入csv">二、导入csv</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&#34;bedtime_news.csv&#34;</span><span class="p">,</span> <span class="n">converters</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;date&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">})</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">522
</code></pre></div><br>
<h2 id="获取方式">获取方式</h2>
<p>链接: <a href="https://pan.baidu.com/s/1Qor_FNBnGuTsq4NpF3vzVQ">https://pan.baidu.com/s/1Qor_FNBnGuTsq4NpF3vzVQ</a> 提取码: t8pq</p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>1850万条 | 世界地图POI兴趣点数据集</title>
      <link>https://textdata.cn/blog/2022-12-10-1850w-poi-dataset/</link>
      <pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-12-10-1850w-poi-dataset/</guid>
      <description>1850万条世界地图POI兴趣点数据集，可用于GIS、区域经济等领域的研究</description>
      <content:encoded><![CDATA[<h2 id="一世界地图poi兴趣点数据集">一、世界地图POI兴趣点数据集</h2>
<p>POI数据集包含全球超过 1850 万个 POI， 数据按国家或地区组织分别以 CSV 文存档中， 数据集每月更新一次。</p>
<p><br><br></p>
<h3 id="11-字段">1.1 字段</h3>
<p>POI数据集含 区域位置、商业地点、营业时间，运营主体，网站等信息， 可用于GIS、区域经济等领域的研究。
<strong>文末有数据集获取方式</strong> , 数据集中包含的字段有</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- ID OpenStreetMap ID
- NAME 地名、国际名称
- CATEGORY、SUBCATEGORY POI类目/子类目
- LAT、LON 经度、纬度
- SRID 基于OSM标签的POI分类（14类167子类）
- WKT   WGS84中的geometry (WKT)；
- IMAGE 链接到照片/图像；
- OPENING_HOURS  营业时间
- WIKIPEDIA 链接到维基百科文章；
- LAST_UPDATE 上次更新日期，
- OPERATOR 运营商
- ALTERNATIVE_NAME 备用名称
- INTERNATIONAL_NAME 国际名称（通常为英文或音译为拉丁字符）；
- STREET、HOUSENUMBER 地址（街道、门牌号）
- POSTCODE、CITY、COUNTRY   地址（邮编、城市、国家）；
- DESCRIPTION 完整描述（如果在 OSM 中列出）；
- PHONE、FAX、WEBSITE、EMAIL      联系人（电话号码、传真号码、网站、邮箱）；
- OTHER_TAGS 而其余标记值列在“OTHER_TAGS”列下。
</code></pre></div><br>
<h3 id="12-截图">1.2 截图</h3>
<p><img loading="lazy" src="img/world.png" alt=""  />
</p>
<p><img loading="lazy" src="img/asia.png" alt=""  />
</p>
<br>
<h3 id="13-数据质量对比">1.3 数据质量对比</h3>
<p>OpenStreetMap（简称OSM，中文是公开地图）是一个网上地图协作计划，目标是创造一个内容自由且能让所有人编辑的世界地图。OSM的数据有两种来源</p>
<ul>
<li>广大用户的贡献（众包），包括利用 GPS 设备自行测绘和根据卫星影像地图（Bing/Yahoo!/Landsat等）绘制两种，</li>
<li>少数政府部门的测绘机构及商业公司根据相应授权提供。</li>
</ul>
<p>而Google的数据则主要依靠专业测绘商采购（在中国主要是 AutoNavi/高德），以自己采集（街景）、政府部门提供（主要是NASA的Landsat影像）和用户贡献（Google Map Maker）作为补充。据此不难看出，OSM数据的优势主要体现在更新及时，而Google则胜在较强的专业性和准确性。至于数据的覆盖面，这要看OSM贡献者数量和Google财力与测绘商能力的对比。当OSM贡献者的数量和参与热情达到一定水平，其数据的数量和质量完全不逊于Google（请看OSM上德国地图）。维基百科战胜大英百科全书即是侧证。</p>
<p><br><br></p>
<h2 id="二实验">二、实验</h2>
<p>以中国数据为例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;china-pois.osm.csv&#39;</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s1">&#39;|&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#poi数据量</span>
<span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><pre><code>911246
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#poi数据集的字段</span>
<span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><pre><code>Index(['ID', 'NAME', 'CATEGORY', 'SUBCATEGORY', 'LON', 'LAT', 'SRID', 'WKT',
       'CITY', 'IMAGE', 'EMAIL', 'COUNTRY', 'OPENING_HOURS', 'WIKIPEDIA',
       'OPERATOR', 'DESCRIPTION', 'LAST_UPDATE', 'ALTERNATIVE_NAME',
       'POSTCODE', 'INTERNATIONAL_NAME', 'WEBSITE', 'PHONE', 'NAME_EN',
       'STREET', 'HOUSENUMBER', 'FAX', 'OTHER_TAGS'],
      dtype='object')
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#poi类型分布</span>
<span class="n">df</span><span class="o">.</span><span class="n">CATEGORY</span><span class="o">.</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div><pre><code>SETTLEMENTS      397769
TRANSPORT        198462
EDUCATION         56087
LANDUSE           50161
TOURISM           47618
SHOP              42939
EAT/DRINK         28386
PUBLICSERVICE     22905
AUTOMOTIVE        14809
ACCOMMODATION     13092
BUSINESS          12573
HEALTH            10747
RELIGIOUS          8039
SPORT              7659
Name: CATEGORY, dtype: int64
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#经纬度范围</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;经度(东)&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">LON</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;经度(西)&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">LON</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;纬度(北)&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">LAT</span><span class="o">.</span><span class="n">max</span><span class="p">())</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;纬度(南)&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">LAT</span><span class="o">.</span><span class="n">min</span><span class="p">())</span>
</code></pre></div><pre><code>经度(东) 135.08528800000002
经度(西) 72.2818637
纬度(北) 53.56513885988782
纬度(南) 15.1251016
</code></pre>
<br>
<br>
<h2 id="三下载地址">三、下载地址</h2>
<p>数据集下载地址</p>
<p><a href="http://download.slipo.eu/results/osm-to-csv/poi/">http://download.slipo.eu/results/osm-to-csv/poi/</a></p>
<p><br><br></p>
<h2 id="四参考资料">四、参考资料</h2>
<ul>
<li><a href="http://slipo.eu/?p=1551">http://slipo.eu/?p=1551</a></li>
<li>OpenStreetMap百度词条</li>
<li><a href="https://www.zhihu.com/question/19993564/answer/14428059">https://www.zhihu.com/question/19993564/answer/14428059</a></li>
<li><a href="http://download.slipo.eu/results/osm-to-csv/poi/">http://download.slipo.eu/results/osm-to-csv/poi/</a></li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 80w知乎用户问答数据(脱敏)</title>
      <link>https://textdata.cn/blog/2023-03-06-zhihurec-dataset/</link>
      <pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-06-zhihurec-dataset/</guid>
      <description>ZhihuRec数据集由清华大学信息检索组（THUIR）和知乎公司共同构建，仅供研究使用。ZhihuRec 数据集是从知识共享平台（知乎）收集的，该平台由 10 天内收集的约 100M 交互、798K 用户、165K 问题、554K 答案、240K 作者、70K 主题和超过 501K 用户查询日志组成。 还有用户、答案、问题、作者和主题的描述，这些都是匿名的。 据我们所知，这是用于个性化推荐的最大的真实世界交互数据集。由于ZhihuRec数据集包含约100M的用户回答印象日志，因此也称为ZhihuRec-100M。 还构建了从 ZhihuRec-100M 数据集随机采样的两个较小的数据集，分别称为 ZhihuRec-20M 和 ZhihuRec-1M，以满足各种应用需求。 它们包含大约 20M 和 1M 的用户回答印象日志，可以看作是一个中等大小的数据集和一个相对较小的数据集。</description>
      <content:encoded><![CDATA[<h2 id="一zhihurec介绍">一、ZhihuRec介绍</h2>
<p>ZhihuRec数据集由 <strong>清华大学信息检索组</strong>（THUIR）和  <strong>知乎公司</strong> 共同构建，仅供研究使用。ZhihuRec 数据集是从知识共享平台（知乎）收集的，该平台由 10 天内收集的约 一亿(100M) 次交互、798K 用户、165K 问题、554K 答案、240K 作者、70K 主题和超过 501K 用户查询日志组成。 还有用户、答案、问题、作者和主题的描述，这些都是匿名的。 据我们所知，这是用于个性化推荐的最大的真实世界交互数据集。由于ZhihuRec数据集包含约100M的用户回答印象日志，因此也称为ZhihuRec-100M。 还构建了从 ZhihuRec-100M 数据集随机采样的两个较小的数据集，分别称为 ZhihuRec-20M 和 ZhihuRec-1M，以满足各种应用需求。 它们包含大约 20M 和 1M 的用户回答印象日志，可以看作是一个中等大小的数据集和一个相对较小的数据集。</p>
<br>
<p><strong>ZhihuRec项目及下载地址</strong></p>
<ul>
<li><a href="https://github.com/THUIR/ZhihuRec-Dataset">https://github.com/THUIR/ZhihuRec-Dataset</a></li>
<li><a href="https://cloud.tsinghua.edu.cn/d/d6c045c55aa14bb39ebc/">https://cloud.tsinghua.edu.cn/d/d6c045c55aa14bb39ebc/</a></li>
</ul>
<p><br><br></p>
<h2 id="二数据集详情">二、数据集详情</h2>
<h3 id="21-数据集内的文件">2.1 数据集内的文件</h3>
<table>
<thead>
<tr>
<th style="text-align:left">Filename</th>
<th style="text-align:right">Size</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>inter_impression.csv</code></td>
<td style="text-align:right">2.6GB</td>
<td style="text-align:left">user clicks and impressions</td>
</tr>
<tr>
<td style="text-align:left"><code>inter_query.csv</code></td>
<td style="text-align:right">111MB</td>
<td style="text-align:left">user queries</td>
</tr>
<tr>
<td style="text-align:left"><code>info_user.csv</code></td>
<td style="text-align:right">135MB</td>
<td style="text-align:left">the features of the users occured in the dataset</td>
</tr>
<tr>
<td style="text-align:left"><code>info_answer.csv</code></td>
<td style="text-align:right">917MB</td>
<td style="text-align:left">the features of the answers occured in the dataset</td>
</tr>
<tr>
<td style="text-align:left"><code>info_question.csv</code></td>
<td style="text-align:right">14MB</td>
<td style="text-align:left">the features of the questions occured in the dataset</td>
</tr>
<tr>
<td style="text-align:left"><code>info_author.csv</code></td>
<td style="text-align:right">3.1MB</td>
<td style="text-align:left">the features of the authors occured in the dataset</td>
</tr>
<tr>
<td style="text-align:left"><code>info_topic.csv</code></td>
<td style="text-align:right">413KB</td>
<td style="text-align:left">the IDs of the topics occured in the dataset</td>
</tr>
<tr>
<td style="text-align:left"><code>info_token.csv</code></td>
<td style="text-align:right">409MB</td>
<td style="text-align:left">the features of the tokens occured in the dataset</td>
</tr>
</tbody>
</table>
<br>
<h3 id="22-数据集统计信息">2.2 数据集统计信息</h3>
<table>
<thead>
<tr>
<th style="text-align:left">Dataset</th>
<th style="text-align:right">ZhihuRec-100M</th>
<th style="text-align:right">ZhihuRec-20M</th>
<th style="text-align:right">ZhihuRec-1M</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">#impressions</td>
<td style="text-align:right">99,978,523</td>
<td style="text-align:right">19,999,857</td>
<td style="text-align:right">999,970</td>
</tr>
<tr>
<td style="text-align:left">#clicks</td>
<td style="text-align:right">26,981,583</td>
<td style="text-align:right">5,402,345</td>
<td style="text-align:right">268,656</td>
</tr>
<tr>
<td style="text-align:left">#clicks : #non-clicks</td>
<td style="text-align:right">1 : 2.71</td>
<td style="text-align:right">1 : 2.70</td>
<td style="text-align:right">1 : 2.72</td>
</tr>
<tr>
<td style="text-align:left">#queries</td>
<td style="text-align:right">3,899,553</td>
<td style="text-align:right">776,201</td>
<td style="text-align:right">38,422</td>
</tr>
<tr>
<td style="text-align:left">#users</td>
<td style="text-align:right">798,086</td>
<td style="text-align:right">159,642</td>
<td style="text-align:right">7,974</td>
</tr>
<tr>
<td style="text-align:left">avg #impressions per user</td>
<td style="text-align:right">125.27</td>
<td style="text-align:right">125.28</td>
<td style="text-align:right">125.40</td>
</tr>
<tr>
<td style="text-align:left">avg #clicks per user</td>
<td style="text-align:right">33.81</td>
<td style="text-align:right">33.84</td>
<td style="text-align:right">33.69</td>
</tr>
<tr>
<td style="text-align:left">#users with queries</td>
<td style="text-align:right">501,893</td>
<td style="text-align:right">100,271</td>
<td style="text-align:right">5,047</td>
</tr>
<tr>
<td style="text-align:left">avg #queries per user</td>
<td style="text-align:right">7.77</td>
<td style="text-align:right">7.74</td>
<td style="text-align:right">7.61</td>
</tr>
<tr>
<td style="text-align:left">#answers</td>
<td style="text-align:right">554,976</td>
<td style="text-align:right">343,103</td>
<td style="text-align:right">81,563</td>
</tr>
<tr>
<td style="text-align:left">#questions</td>
<td style="text-align:right">165,012</td>
<td style="text-align:right">104,130</td>
<td style="text-align:right">29,340</td>
</tr>
<tr>
<td style="text-align:left">#authors</td>
<td style="text-align:right">240,956</td>
<td style="text-align:right">167,796</td>
<td style="text-align:right">47,888</td>
</tr>
<tr>
<td style="text-align:left">#topics</td>
<td style="text-align:right">72,318</td>
<td style="text-align:right">54,785</td>
<td style="text-align:right">22,897</td>
</tr>
<tr>
<td style="text-align:left">#tokens</td>
<td style="text-align:right">556,546</td>
<td style="text-align:right">428,334</td>
<td style="text-align:right">249,586</td>
</tr>
</tbody>
</table>
<br>
<h3 id="23--数据集字段">2.3  数据集字段</h3>
<blockquote>
<p>Some fields in the data set are null, which are represented by empty strings in the file.</p>
</blockquote>
<h3 id="inter_impressioncsv"><code>inter_impression.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">user ID</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:center"></td>
<td style="text-align:left">answer ID</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:center"></td>
<td style="text-align:left">impression timestamp</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:center"></td>
<td style="text-align:left">click timestamp (0 for non-click)</td>
</tr>
</tbody>
</table>
<br>
<h3 id="inter_querycsv"><code>inter_query.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">user ID</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:center"></td>
<td style="text-align:left">token IDs in the query (separated by spaces)</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:center"></td>
<td style="text-align:left">query timestamp</td>
</tr>
</tbody>
</table>
<br>
<h3 id="info_usercsv"><code>info_user.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">user ID</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:center"></td>
<td style="text-align:left">register timestamp</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:center"></td>
<td style="text-align:left">gender</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:center"></td>
<td style="text-align:left">login frequency</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:center"></td>
<td style="text-align:left">#followers</td>
</tr>
<tr>
<td style="text-align:right">5</td>
<td style="text-align:center"></td>
<td style="text-align:left">#topics followed by this user</td>
</tr>
<tr>
<td style="text-align:right">6</td>
<td style="text-align:center"></td>
<td style="text-align:left">#questions followed by this user</td>
</tr>
<tr>
<td style="text-align:right">7</td>
<td style="text-align:center"></td>
<td style="text-align:left">#answers</td>
</tr>
<tr>
<td style="text-align:right">8</td>
<td style="text-align:center"></td>
<td style="text-align:left">#questions</td>
</tr>
<tr>
<td style="text-align:right">9</td>
<td style="text-align:center"></td>
<td style="text-align:left">#comments</td>
</tr>
<tr>
<td style="text-align:right">10</td>
<td style="text-align:center"></td>
<td style="text-align:left">#thanks received by this user</td>
</tr>
<tr>
<td style="text-align:right">11</td>
<td style="text-align:center"></td>
<td style="text-align:left">#comments received by this user</td>
</tr>
<tr>
<td style="text-align:right">12</td>
<td style="text-align:center"></td>
<td style="text-align:left">#likes received by this user</td>
</tr>
<tr>
<td style="text-align:right">13</td>
<td style="text-align:center"></td>
<td style="text-align:left">#dislikes received by this user</td>
</tr>
<tr>
<td style="text-align:right">14</td>
<td style="text-align:center"></td>
<td style="text-align:left">register type</td>
</tr>
<tr>
<td style="text-align:right">15</td>
<td style="text-align:center"></td>
<td style="text-align:left">register platform</td>
</tr>
<tr>
<td style="text-align:right">16</td>
<td style="text-align:center"></td>
<td style="text-align:left">from android or not</td>
</tr>
<tr>
<td style="text-align:right">17</td>
<td style="text-align:center"></td>
<td style="text-align:left">from iphone or not</td>
</tr>
<tr>
<td style="text-align:right">18</td>
<td style="text-align:center"></td>
<td style="text-align:left">from ipad or not</td>
</tr>
<tr>
<td style="text-align:right">19</td>
<td style="text-align:center"></td>
<td style="text-align:left">from pc or not</td>
</tr>
<tr>
<td style="text-align:right">20</td>
<td style="text-align:center"></td>
<td style="text-align:left">from mobile web or not</td>
</tr>
<tr>
<td style="text-align:right">21</td>
<td style="text-align:center"></td>
<td style="text-align:left">device model</td>
</tr>
<tr>
<td style="text-align:right">22</td>
<td style="text-align:center"></td>
<td style="text-align:left">device brand</td>
</tr>
<tr>
<td style="text-align:right">23</td>
<td style="text-align:center"></td>
<td style="text-align:left">platform</td>
</tr>
<tr>
<td style="text-align:right">24</td>
<td style="text-align:center"></td>
<td style="text-align:left">province</td>
</tr>
<tr>
<td style="text-align:right">25</td>
<td style="text-align:center"></td>
<td style="text-align:left">city</td>
</tr>
<tr>
<td style="text-align:right">26</td>
<td style="text-align:center">$\sqrt{}$</td>
<td style="text-align:left">topic IDs followed by this user (separated by spaces)</td>
</tr>
</tbody>
</table>
<br>
<h3 id="info_answercsv"><code>info_answer.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">answer ID</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:center">$\sqrt{}$</td>
<td style="text-align:left">question ID</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:center"></td>
<td style="text-align:left">anonymous or not</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:center">$\sqrt{}$</td>
<td style="text-align:left">author ID (null for anonymous)</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:center"></td>
<td style="text-align:left">labeled high-value answer or not</td>
</tr>
<tr>
<td style="text-align:right">5</td>
<td style="text-align:center"></td>
<td style="text-align:left">recommended by the editor or not</td>
</tr>
<tr>
<td style="text-align:right">6</td>
<td style="text-align:center"></td>
<td style="text-align:left">create timestamp</td>
</tr>
<tr>
<td style="text-align:right">7</td>
<td style="text-align:center"></td>
<td style="text-align:left">contain pictures or not</td>
</tr>
<tr>
<td style="text-align:right">8</td>
<td style="text-align:center"></td>
<td style="text-align:left">contain videos or not</td>
</tr>
<tr>
<td style="text-align:right">9</td>
<td style="text-align:center"></td>
<td style="text-align:left">#thanks</td>
</tr>
<tr>
<td style="text-align:right">10</td>
<td style="text-align:center"></td>
<td style="text-align:left">#likes</td>
</tr>
<tr>
<td style="text-align:right">11</td>
<td style="text-align:center"></td>
<td style="text-align:left">#comments</td>
</tr>
<tr>
<td style="text-align:right">12</td>
<td style="text-align:center"></td>
<td style="text-align:left">#collections</td>
</tr>
<tr>
<td style="text-align:right">13</td>
<td style="text-align:center"></td>
<td style="text-align:left">#dislikes</td>
</tr>
<tr>
<td style="text-align:right">14</td>
<td style="text-align:center"></td>
<td style="text-align:left">#reports</td>
</tr>
<tr>
<td style="text-align:right">15</td>
<td style="text-align:center"></td>
<td style="text-align:left">#helpless</td>
</tr>
<tr>
<td style="text-align:right">16</td>
<td style="text-align:center">$\sqrt{}$</td>
<td style="text-align:left">token IDs in the answer (separated by spaces)</td>
</tr>
<tr>
<td style="text-align:right">17</td>
<td style="text-align:center">$\sqrt{}$</td>
<td style="text-align:left">topic IDs of the answer (separated by spaces)</td>
</tr>
</tbody>
</table>
<br>
<h3 id="info_questioncsv"><code>info_question.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">question ID</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:center"></td>
<td style="text-align:left">create timestamp</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:center"></td>
<td style="text-align:left">#answers</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:center"></td>
<td style="text-align:left">#followers</td>
</tr>
<tr>
<td style="text-align:right">4</td>
<td style="text-align:center"></td>
<td style="text-align:left">#invitations</td>
</tr>
<tr>
<td style="text-align:right">5</td>
<td style="text-align:center"></td>
<td style="text-align:left">#comments</td>
</tr>
<tr>
<td style="text-align:right">6</td>
<td style="text-align:center">$\sqrt{}$</td>
<td style="text-align:left">token IDs in the question (separated by spaces)</td>
</tr>
<tr>
<td style="text-align:right">7</td>
<td style="text-align:center">$\sqrt{}$</td>
<td style="text-align:left">topic IDs of the queation (separated by spaces)</td>
</tr>
</tbody>
</table>
<br>
<h3 id="info_authorcsv"><code>info_author.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">author ID</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:center"></td>
<td style="text-align:left">is excellent author or not</td>
</tr>
<tr>
<td style="text-align:right">2</td>
<td style="text-align:center"></td>
<td style="text-align:left">#followers</td>
</tr>
<tr>
<td style="text-align:right">3</td>
<td style="text-align:center"></td>
<td style="text-align:left">is excellent answerer or not</td>
</tr>
</tbody>
</table>
<br>
<h3 id="info_topiccsv"><code>info_topic.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">topic ID</td>
</tr>
</tbody>
</table>
<br>
<h3 id="info_tokencsv"><code>info_token.csv</code></h3>
<table>
<thead>
<tr>
<th style="text-align:right">Index</th>
<th style="text-align:center">Nullable</th>
<th style="text-align:left">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">0</td>
<td style="text-align:center"></td>
<td style="text-align:left">token ID</td>
</tr>
<tr>
<td style="text-align:right">1</td>
<td style="text-align:center"></td>
<td style="text-align:left">word vector trained by word2vec (64 dimensions, separated by spaces)</td>
</tr>
</tbody>
</table>
<blockquote>
<p>ZhihuRec can&rsquo;t provide the corresponding text of tokens for privacy reasons. Researchers can use word vectors in the dataset or train word vectors from scratch.</p>
</blockquote>
<p><br><br></p>
<h2 id="引用说明">引用说明</h2>
<p>ZhihuRec dataset can be downloaded from <a href="https://cloud.tsinghua.edu.cn/d/d6c045c55aa14bb39ebc/">here</a>, and it is for the paper:</p>
<p><a href="https://arxiv.org/abs/2106.06467">Bin Hao, Min Zhang, Weizhi Ma, Shaoyun Shi, Xinxing Yu, Houzhi Shan, Yiqun Liu and Shaoping Ma, 2021, A Large-Scale Rich Context Query and Recommendation Dataset in Online Knowledge-Sharing. arXiv preprint arXiv:2106.06467.</a></p>
<p>please cite the paper if you use this dataset:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">@misc{hao2021largescale,
      title={A Large-Scale Rich Context Query and Recommendation Dataset in Online Knowledge-Sharing},
      author={Bin Hao and Min Zhang and Weizhi Ma and Shaoyun Shi and Xinxing Yu and Houzhi Shan and Yiqun Liu and Shaoping Ma},
      year={2021},
      eprint={2106.06467},
      archivePrefix={arXiv},
      primaryClass={cs.IR}
}
</code></pre></div><p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>12G数据集 |  23w条Kickstarter项目信息</title>
      <link>https://textdata.cn/blog/2022-12-04-kickstarters_dataset/</link>
      <pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-12-04-kickstarters_dataset/</guid>
      <description>2016年3月写好的kickstarter爬虫，每月执行一次。截止2022年11月， 所有压缩文件累积11.42G。文末有数据获取方式</description>
      <content:encoded><![CDATA[<h2 id="一kickstarter介绍">一、Kickstarter介绍</h2>
<p>Kickstarter于2009年4月在美国纽约成立，是一个专为具有创意方案的企业筹资的众筹网站平台。</p>
<p>kickstarter平台的运作方式相对来说比较简单而有效：该平台的用户一方是有创新意渴望进行创作和创造的人，另一方则是愿意为他们出资金的人，然后见证新发明新创作新产品的出现。kickstarter网站的创意性活动包括：<strong>音乐，网页设计，平面设计，动画，作家</strong>以及所有有能力创造以及影响他人的活动。</p>
<p><br><br></p>
<h3 id="11-数据集概况">1.1 数据集概况</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据来源: Kickstarter
下载数据: https://webrobots.io/kickstarter-datasets/
更新频率: 每月一更
数据格式: csv/json
本文声明: 科研用途; 如有问题， 请加微信372335839，备注「姓名-学校-专业」
</code></pre></div><br>
<p><strong>2016年3月</strong> 写好的kickstarter爬虫，每月执行一次。截止<strong>2022年11月</strong>， 所有压缩文件累积11.42G。<strong>文末有数据获取方式</strong></p>
<p><img loading="lazy" src="img/kickstarter_datasets_dir_screen.png" alt=""  />
</p>
<p><br><br></p>
<h3 id="12-参考论文">1.2 参考论文</h3>
<p>该数据集研究价值，可用于研究市场营销、创新创业、信息管理等， 部分使用kickstarter作为研究对象的论文。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]王伟,陈伟,祝效国,王洪伟. 众筹融资成功率与语言风格的说服性-基于Kickstarter的实证研究.*管理世界*.2016;5:81-98.
[2]Dai, Hengchen and Dennis J. Zhang. “Prosocial Goal Pursuit in Crowdfunding: Evidence from Kickstarter.” Journal of Marketing Research 56 (2019): 498 - 517.
[3]Gafni, H., Marom, D.M., Robb, A.M., &amp; Sade, O. (2020). Gender Dynamics in Crowdfunding (Kickstarter): Evidence on Entrepreneurs, Backers, and Taste-Based Discrimination*. Review of Finance.
[4]Jensen, Lasse Skovgaard and Ali Gürcan Özkil. “Identifying challenges in crowdfunded product development: a review of Kickstarter projects.” Design Science 4 (2018): n. pag.
</code></pre></div><br>
<br>
<h2 id="二实验代码">二、实验代码</h2>
<h3 id="21-读取数据">2.1 读取数据</h3>
<p>任意选择一个zip文件解压会得到json文件，注意 <strong>不同json文件不太一样，所以本文的代码可能要有调整。</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#读取任意一个zip解压得到的csv文件</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_json</span><span class="p">(</span><span class="s1">&#39;data/Kickstarter_2022-06-09T03_20_03_365Z.json&#39;</span><span class="p">,</span> <span class="n">lines</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<p>记录数</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">len</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">230346
</code></pre></div><br>
<h3 id="22-查看字段data列">2.2 查看字段data（列）</h3>
<p>查看字段 <em><strong>data</strong></em> 内的内容。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 选中projects字段</span>
<span class="n">projects</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">]</span>
<span class="n">projects</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    0         {&#39;id&#39;: 947118202, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/029...
    1         {&#39;id&#39;: 426094497, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/029...
    2         {&#39;id&#39;: 44835253, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/034/...
    3         {&#39;id&#39;: 1001767271, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/03...
    4         {&#39;id&#39;: 1880345176, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/03...
                                    ...                        
    230341    {&#39;id&#39;: 676753351, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/012...
    230342    {&#39;id&#39;: 1579378115, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/02...
    230343    {&#39;id&#39;: 1281094926, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/02...
    230344    {&#39;id&#39;: 783009016, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/012...
    230345    {&#39;id&#39;: 324368296, &#39;photo&#39;: {&#39;key&#39;: &#39;assets/012...
    Name: data, Length: 230346, dtype: object
</code></pre></div><br>
<p>查看第一行，data列</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">]</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    {&#39;id&#39;: 947118202,
     &#39;photo&#39;: {&#39;key&#39;: &#39;assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png&#39;,
      &#39;full&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=560&amp;h=315&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=26209d432871ad2e9cca642527c291d9&#39;,
      &#39;ed&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=352&amp;h=198&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=db82255e6639d5951506e0f2ed4d7d8b&#39;,
      &#39;med&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=272&amp;h=153&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=f7b43116136000c8efa892bdbdd2d956&#39;,
      &#39;little&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=208&amp;h=117&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=a52e3c34066a020e040c517c614a8b36&#39;,
      &#39;small&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=160&amp;h=90&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=6c5f1c254119ffe914b50250f8e2899f&#39;,
      &#39;thumb&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=48&amp;h=27&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=0222f379ed51059eb73adc7436f07b1e&#39;,
      &#39;1024x576&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=1024&amp;h=576&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=d01546c5e88f3f47e0dddc48b5dce9df&#39;,
      &#39;1536x864&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=1552&amp;h=873&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=f47505da909a374642906e6d418474e7&#39;},
     &#39;name&#39;: &#39;Paint Rogue&#39;,
     &#39;blurb&#39;: &#39;Roguelike | Platformer | Shooter&#39;,
     &#39;goal&#39;: 5000,
     &#39;pledged&#39;: 5268.22,
     &#39;state&#39;: &#39;successful&#39;,
     &#39;slug&#39;: &#39;paint-rogue&#39;,
     &#39;disable_communication&#39;: False,
     &#39;country&#39;: &#39;AU&#39;,
     &#39;country_displayable_name&#39;: &#39;Australia&#39;,
     &#39;currency&#39;: &#39;AUD&#39;,
     &#39;currency_symbol&#39;: &#39;$&#39;,
     &#39;currency_trailing_code&#39;: True,
     &#39;deadline&#39;: 1594247312,
     &#39;state_changed_at&#39;: 1594247312,
     &#39;created_at&#39;: 1591152439,
     &#39;launched_at&#39;: 1591655312,
     &#39;staff_pick&#39;: False,
     &#39;is_starrable&#39;: False,
     &#39;backers_count&#39;: 42,
     &#39;static_usd_rate&#39;: 0.69681992,
     &#39;usd_pledged&#39;: &#39;3671.0006389424&#39;,
     &#39;converted_pledged_amount&#39;: 3657,
     &#39;fx_rate&#39;: 0.7200616400000001,
     &#39;usd_exchange_rate&#39;: 0.69423473,
     &#39;current_currency&#39;: &#39;USD&#39;,
     &#39;usd_type&#39;: &#39;international&#39;,
     &#39;creator&#39;: {&#39;id&#39;: 1018782761,
      &#39;name&#39;: &#39;Andrew Von Stieglitz&#39;,
      &#39;is_registered&#39;: None,
      &#39;is_email_verified&#39;: None,
      &#39;chosen_currency&#39;: None,
      &#39;is_superbacker&#39;: None,
      &#39;avatar&#39;: {&#39;thumb&#39;: &#39;https://ksr-ugc.imgix.net/assets/024/628/691/39e3fdc8db723302f544f7161e32c4b7_original.png?ixlib=rb-4.0.2&amp;w=40&amp;h=40&amp;fit=crop&amp;v=1554207776&amp;auto=format&amp;frame=1&amp;q=92&amp;s=bf4ce960e83b57310b93c40dda68e213&#39;,
       &#39;small&#39;: &#39;https://ksr-ugc.imgix.net/assets/024/628/691/39e3fdc8db723302f544f7161e32c4b7_original.png?ixlib=rb-4.0.2&amp;w=80&amp;h=80&amp;fit=crop&amp;v=1554207776&amp;auto=format&amp;frame=1&amp;q=92&amp;s=a862ab30490c90cd08186f448884142d&#39;,
       &#39;medium&#39;: &#39;https://ksr-ugc.imgix.net/assets/024/628/691/39e3fdc8db723302f544f7161e32c4b7_original.png?ixlib=rb-4.0.2&amp;w=160&amp;h=160&amp;fit=crop&amp;v=1554207776&amp;auto=format&amp;frame=1&amp;q=92&amp;s=38923ac11699d68a7aae93ce126b97b6&#39;},
      &#39;urls&#39;: {&#39;web&#39;: {&#39;user&#39;: &#39;https://www.kickstarter.com/profile/1018782761&#39;},
       &#39;api&#39;: {&#39;user&#39;: &#39;https://api.kickstarter.com/v1/users/1018782761?signature=1654832212.14f9df54b2643f080ad98cacb07314f94757d9c1&#39;}}},
     &#39;location&#39;: {&#39;id&#39;: 1105779,
      &#39;name&#39;: &#39;Sydney&#39;,
      &#39;slug&#39;: &#39;sydney-au&#39;,
      &#39;short_name&#39;: &#39;Sydney, AU&#39;,
      &#39;displayable_name&#39;: &#39;Sydney, AU&#39;,
      &#39;localized_name&#39;: &#39;Sydney&#39;,
      &#39;country&#39;: &#39;AU&#39;,
      &#39;state&#39;: &#39;NSW&#39;,
      &#39;type&#39;: &#39;Town&#39;,
      &#39;is_root&#39;: False,
      &#39;expanded_country&#39;: &#39;Australia&#39;,
      &#39;urls&#39;: {&#39;web&#39;: {&#39;discover&#39;: &#39;https://www.kickstarter.com/discover/places/sydney-au&#39;,
        &#39;location&#39;: &#39;https://www.kickstarter.com/locations/sydney-au&#39;},
       &#39;api&#39;: {&#39;nearby_projects&#39;: &#39;https://api.kickstarter.com/v1/discover?signature=1654814982.2fcf49a7b611d4414d14b1dbe41ac53623192e6a&amp;woe_id=1105779&#39;}}},
     &#39;category&#39;: {&#39;id&#39;: 35,
      &#39;name&#39;: &#39;Video Games&#39;,
      &#39;analytics_name&#39;: &#39;Video Games&#39;,
      &#39;slug&#39;: &#39;games/video games&#39;,
      &#39;position&#39;: 7,
      &#39;parent_id&#39;: 12,
      &#39;parent_name&#39;: &#39;Games&#39;,
      &#39;color&#39;: 51627,
      &#39;urls&#39;: {&#39;web&#39;: {&#39;discover&#39;: &#39;http://www.kickstarter.com/discover/categories/games/video%20games&#39;}}},
     &#39;profile&#39;: {&#39;id&#39;: 4007060,
      &#39;project_id&#39;: 4007060,
      &#39;state&#39;: &#39;active&#39;,
      &#39;state_changed_at&#39;: 1594267960,
      &#39;name&#39;: &#39;Paint Rogue&#39;,
      &#39;blurb&#39;: &#39;Roguelike | Platformer | Shooter&#39;,
      &#39;background_color&#39;: &#39;&#39;,
      &#39;text_color&#39;: &#39;ffffff&#39;,
      &#39;link_background_color&#39;: &#39;&#39;,
      &#39;link_text_color&#39;: &#39;&#39;,
      &#39;link_text&#39;: &#39;Follow along!&#39;,
      &#39;link_url&#39;: &#39;https://www.kickstarter.com/projects/1018782761/paint-rogue/&#39;,
      &#39;show_feature_image&#39;: True,
      &#39;background_image_opacity&#39;: 0.5700000000000001,
      &#39;background_image_attributes&#39;: {&#39;id&#39;: 29758105,
       &#39;image_urls&#39;: {&#39;default&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/758/105/971e42c0e19ca75fbae0943aa874c3c2_original.png?ixlib=rb-4.0.2&amp;w=1600&amp;fit=max&amp;v=1594267934&amp;auto=format&amp;frame=1&amp;q=92&amp;s=b91907c9e125e206a11a1bcef322c142&#39;,
        &#39;baseball_card&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/758/105/971e42c0e19ca75fbae0943aa874c3c2_original.png?ixlib=rb-4.0.2&amp;w=460&amp;fit=max&amp;v=1594267934&amp;auto=format&amp;frame=1&amp;q=92&amp;s=e7af2286d1f74a51672fbb6060ad43c8&#39;}},
      &#39;should_show_feature_image_section&#39;: False,
      &#39;feature_image_attributes&#39;: {&#39;image_urls&#39;: {&#39;default&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=1552&amp;h=873&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=f47505da909a374642906e6d418474e7&#39;,
        &#39;baseball_card&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=560&amp;h=315&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=26209d432871ad2e9cca642527c291d9&#39;}}},
     &#39;spotlight&#39;: True,
     &#39;urls&#39;: {&#39;web&#39;: {&#39;project&#39;: &#39;https://www.kickstarter.com/projects/1018782761/paint-rogue?ref=discovery_category_newest&#39;,
       &#39;rewards&#39;: &#39;https://www.kickstarter.com/projects/1018782761/paint-rogue/rewards&#39;}},
     &#39;source_url&#39;: &#39;https://www.kickstarter.com/discover/categories/games/video%20games&#39;}
</code></pre></div><p><br><br></p>
<h3 id="23-查看第一条记录行">2.3 查看第一条记录(行)</h3>
<p>以第一条为例，查看每条众筹项目数据中的字段，</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</code></pre></div><p>Run，运行结果#为后期加入的字段解释</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    dict_keys([
    &#39;id&#39;, &#39;photo&#39;,  #id、图片链接
    &#39;name&#39;, &#39;blurb&#39;,  #项目名
    &#39;goal&#39;,   #项目筹资目标金额
    &#39;pledged&#39;, 
    &#39;state&#39;,  #项目状态
    &#39;slug&#39;,  
    &#39;disable_communication&#39;, 
    &#39;country&#39;, &#39;country_displayable_name&#39;,   #国家
    &#39;currency&#39;, &#39;currency_symbol&#39;, &#39;currency_trailing_code&#39;,  #货币
    &#39;deadline&#39;, &#39;state_changed_at&#39;,  #项目筹资截止时间(时间戳格式)
    &#39;created_at&#39;,  #项目创建时间(时间戳格式)
    &#39;launched_at&#39;,  #项目上架时间(时间戳格式)
    &#39;staff_pick&#39;, &#39;is_starrable&#39;, 
    &#39;backers_count&#39;,  #资助人数
    &#39;static_usd_rate&#39;, &#39;usd_pledged&#39;, &#39;converted_pledged_amount&#39;, &#39;fx_rate&#39;, &#39;usd_exchange_rate&#39;, &#39;current_currency&#39;, &#39;usd_type&#39;, 
    &#39;creator&#39;,  #项目发起人信息
    &#39;location&#39;,  #地址
    &#39;category&#39;,  #项目所属类目信息
    &#39;profile&#39;,  #项目基本信息
    &#39;spotlight&#39;, 
    &#39;urls&#39;,  #项目链接
    &#39;source_url&#39;])
</code></pre></div><br>
<p>以第一条数据为例，依次查看这几个字段的信息</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#众筹项目具名</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;项目名&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;name&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;项目链接</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;urls&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="c1">#众筹项目的目标总金额</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;目标总金额: </span><span class="si">{goal}{currency}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">goal</span><span class="o">=</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;goal&#39;</span><span class="p">],</span> 
                                          <span class="n">currency</span><span class="o">=</span><span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;currency&#39;</span><span class="p">]))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    项目名 Paint Rogue
    
    项目链接
     {&#39;web&#39;: {&#39;project&#39;: &#39;https://www.kickstarter.com/projects/1018782761/paint-rogue?ref=discovery_category_newest&#39;, &#39;rewards&#39;: &#39;https://www.kickstarter.com/projects/1018782761/paint-rogue/rewards&#39;}}
    
    目标总金额: 5000AUD
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#众筹项目发起人信息</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;项目发起人信息</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;creator&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;项目基本信息</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;profile&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="c1">#众筹项目坐标</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;地址: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;location&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="c1">#众筹项目货币</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;货币:&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;currency&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="c1">#众筹项目所在国家</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;所在国家: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;country_displayable_name&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    项目发起人信息
     {&#39;id&#39;: 1018782761, &#39;name&#39;: &#39;Andrew Von Stieglitz&#39;, &#39;is_registered&#39;: None, &#39;is_email_verified&#39;: None, &#39;chosen_currency&#39;: None, &#39;is_superbacker&#39;: None, &#39;avatar&#39;: {&#39;thumb&#39;: &#39;https://ksr-ugc.imgix.net/assets/024/628/691/39e3fdc8db723302f544f7161e32c4b7_original.png?ixlib=rb-4.0.2&amp;w=40&amp;h=40&amp;fit=crop&amp;v=1554207776&amp;auto=format&amp;frame=1&amp;q=92&amp;s=bf4ce960e83b57310b93c40dda68e213&#39;, &#39;small&#39;: &#39;https://ksr-ugc.imgix.net/assets/024/628/691/39e3fdc8db723302f544f7161e32c4b7_original.png?ixlib=rb-4.0.2&amp;w=80&amp;h=80&amp;fit=crop&amp;v=1554207776&amp;auto=format&amp;frame=1&amp;q=92&amp;s=a862ab30490c90cd08186f448884142d&#39;, &#39;medium&#39;: &#39;https://ksr-ugc.imgix.net/assets/024/628/691/39e3fdc8db723302f544f7161e32c4b7_original.png?ixlib=rb-4.0.2&amp;w=160&amp;h=160&amp;fit=crop&amp;v=1554207776&amp;auto=format&amp;frame=1&amp;q=92&amp;s=38923ac11699d68a7aae93ce126b97b6&#39;}, &#39;urls&#39;: {&#39;web&#39;: {&#39;user&#39;: &#39;https://www.kickstarter.com/profile/1018782761&#39;}, &#39;api&#39;: {&#39;user&#39;: &#39;https://api.kickstarter.com/v1/users/1018782761?signature=1654832212.14f9df54b2643f080ad98cacb07314f94757d9c1&#39;}}}
    
    项目基本信息
     {&#39;id&#39;: 4007060, &#39;project_id&#39;: 4007060, &#39;state&#39;: &#39;active&#39;, &#39;state_changed_at&#39;: 1594267960, &#39;name&#39;: &#39;Paint Rogue&#39;, &#39;blurb&#39;: &#39;Roguelike | Platformer | Shooter&#39;, &#39;background_color&#39;: &#39;&#39;, &#39;text_color&#39;: &#39;ffffff&#39;, &#39;link_background_color&#39;: &#39;&#39;, &#39;link_text_color&#39;: &#39;&#39;, &#39;link_text&#39;: &#39;Follow along!&#39;, &#39;link_url&#39;: &#39;https://www.kickstarter.com/projects/1018782761/paint-rogue/&#39;, &#39;show_feature_image&#39;: True, &#39;background_image_opacity&#39;: 0.5700000000000001, &#39;background_image_attributes&#39;: {&#39;id&#39;: 29758105, &#39;image_urls&#39;: {&#39;default&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/758/105/971e42c0e19ca75fbae0943aa874c3c2_original.png?ixlib=rb-4.0.2&amp;w=1600&amp;fit=max&amp;v=1594267934&amp;auto=format&amp;frame=1&amp;q=92&amp;s=b91907c9e125e206a11a1bcef322c142&#39;, &#39;baseball_card&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/758/105/971e42c0e19ca75fbae0943aa874c3c2_original.png?ixlib=rb-4.0.2&amp;w=460&amp;fit=max&amp;v=1594267934&amp;auto=format&amp;frame=1&amp;q=92&amp;s=e7af2286d1f74a51672fbb6060ad43c8&#39;}}, &#39;should_show_feature_image_section&#39;: False, &#39;feature_image_attributes&#39;: {&#39;image_urls&#39;: {&#39;default&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=1552&amp;h=873&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=f47505da909a374642906e6d418474e7&#39;, &#39;baseball_card&#39;: &#39;https://ksr-ugc.imgix.net/assets/029/542/393/098b025d0c25cc15e5b5f673b9ec992a_original.png?ixlib=rb-4.0.2&amp;crop=faces&amp;w=560&amp;h=315&amp;fit=crop&amp;v=1592675400&amp;auto=format&amp;frame=1&amp;q=92&amp;s=26209d432871ad2e9cca642527c291d9&#39;}}}
    
    地址:  {&#39;id&#39;: 1105779, &#39;name&#39;: &#39;Sydney&#39;, &#39;slug&#39;: &#39;sydney-au&#39;, &#39;short_name&#39;: &#39;Sydney, AU&#39;, &#39;displayable_name&#39;: &#39;Sydney, AU&#39;, &#39;localized_name&#39;: &#39;Sydney&#39;, &#39;country&#39;: &#39;AU&#39;, &#39;state&#39;: &#39;NSW&#39;, &#39;type&#39;: &#39;Town&#39;, &#39;is_root&#39;: False, &#39;expanded_country&#39;: &#39;Australia&#39;, &#39;urls&#39;: {&#39;web&#39;: {&#39;discover&#39;: &#39;https://www.kickstarter.com/discover/places/sydney-au&#39;, &#39;location&#39;: &#39;https://www.kickstarter.com/locations/sydney-au&#39;}, &#39;api&#39;: {&#39;nearby_projects&#39;: &#39;https://api.kickstarter.com/v1/discover?signature=1654814982.2fcf49a7b611d4414d14b1dbe41ac53623192e6a&amp;woe_id=1105779&#39;}}}
    
    货币: AUD
    
    所在国家:  Australia
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#众筹项目创建时间</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;项目创建时间: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;created_at&#39;</span><span class="p">])</span>

<span class="c1">#众筹项目上架时间</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;项目上架时间: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;launched_at&#39;</span><span class="p">])</span>

<span class="c1">#众筹项目截止时间</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;项目截止时间: &#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;deadline&#39;</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    项目创建时间:  1591152439
    项目上架时间:  1591655312
    项目截止时间:  1594247312
</code></pre></div><br>
<h3 id="24-时间戳转日期">2.4 时间戳转日期</h3>
<p>1591152439是时间戳，以某时间点距1970之间的秒数作为时间。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#时间戳转日期</span>

<span class="kn">import</span> <span class="nn">datetime</span>

<span class="k">def</span> <span class="nf">timestamp2str</span><span class="p">(</span><span class="n">timestamp</span><span class="p">):</span>
    <span class="n">d</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">fromtimestamp</span><span class="p">(</span><span class="n">timestamp</span><span class="p">)</span>
    <span class="k">return</span> <span class="s1">&#39;</span><span class="si">{year}</span><span class="s1">-</span><span class="si">{month}</span><span class="s1">-</span><span class="si">{day}</span><span class="s1"> </span><span class="si">{hour}</span><span class="s1">:</span><span class="si">{minute}</span><span class="s1">:</span><span class="si">{second}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">year</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="n">year</span><span class="p">,</span>
                                                                 <span class="n">month</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="n">month</span><span class="p">,</span>
                                                                 <span class="n">day</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="n">day</span><span class="p">,</span>
                                                                 <span class="n">hour</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="n">hour</span><span class="p">,</span>
                                                                 <span class="n">minute</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="n">minute</span><span class="p">,</span>
                                                                 <span class="n">second</span><span class="o">=</span><span class="n">d</span><span class="o">.</span><span class="n">second</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;创建时间&#39;</span><span class="p">,</span> <span class="n">timestamp2str</span><span class="p">(</span><span class="mi">1591152439</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;上架时间&#39;</span><span class="p">,</span> <span class="n">timestamp2str</span><span class="p">(</span><span class="mi">1591655312</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;截止时间&#39;</span><span class="p">,</span> <span class="n">timestamp2str</span><span class="p">(</span><span class="mi">1594247312</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">创建时间 2020-6-3 10:47:19
上架时间 2020-6-9 6:28:32
截止时间 2020-7-9 6:28:32
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#众筹项目产品 所属类目信息</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;众筹类目:&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;category&#39;</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\n\n</span><span class="s1">&#39;</span><span class="p">)</span>

<span class="c1"># 众筹类目根链接</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;众筹类目根链接:&#39;</span><span class="p">,</span> <span class="n">df</span><span class="o">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;source_url&#39;</span><span class="p">])</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    众筹类目: {&#39;id&#39;: 35, &#39;name&#39;: &#39;Video Games&#39;, &#39;analytics_name&#39;: &#39;Video Games&#39;, &#39;slug&#39;: &#39;games/video games&#39;, &#39;position&#39;: 7, &#39;parent_id&#39;: 12, &#39;parent_name&#39;: &#39;Games&#39;, &#39;color&#39;: 51627, &#39;urls&#39;: {&#39;web&#39;: {&#39;discover&#39;: &#39;http://www.kickstarter.com/discover/categories/games/video%20games&#39;}}}
    
    众筹类目根链接: https://www.kickstarter.com/discover/categories/games/video%20games
</code></pre></div><p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>JM2022 | 梳理营销领域使用网络爬虫技术的研究</title>
      <link>https://textdata.cn/blog/2022-12-03-scraping-web-data-for-marketing-insights/</link>
      <pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-12-03-scraping-web-data-for-marketing-insights/</guid>
      <description>Journal of Marketing 2022年一篇关于营销领域使用网络爬虫收集数据的文献</description>
      <content:encoded><![CDATA[<p>Boegershausen, Johannes, Hannes Datta, Abhishek Borah, and Andrew Stephen. &ldquo;Fields of gold: Scraping web data for marketing insights.&rdquo; <em>Journal of Marketing</em> (2022).</p>
<p>本文是JM中少有的技术流综述文，阅读起来晦涩难懂，我们就大概知道怎么回事， 查看有没有自己感兴趣的研究(方法)即可。该文作者为该综述专门开发了一个 web-scraping.org 的网站,截图如下</p>
<p><img loading="lazy" src="img/01-web-scraping.png" alt=""  />

<img loading="lazy" src="img/02-web-scraping.png" alt=""  />
</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/KiyFyLEkqNk" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<br>
<h2 id="摘要">摘要</h2>
<p>市场营销学者越来越多使用网络爬虫和API接口，从互联网收集数据。尽管网络数据得到广泛使用，但很少有学者关注收集过程中面临的各种挑战。<strong>研究人员如何确保采集的数据集是有效的？</strong> 虽然现有资源强调提取网络数据的技术细节，<strong>但作者提出了一种新的方法框架，重点是提高其有效性</strong>。特别是，该框架强调解决有效性问题， 需要在数据采集的三个阶段(<strong>选择数据源、设计数据收集和提取数据</strong>)联合考虑技术和法律/伦理问题。作者进一步审查了营销Top5期刊上300 篇使用网络数据的论文，并总结提出了如何使用网络数据促进营销研究。本文最后指出了未来研究的方向，高价值的网络数据源和新方法。</p>
<p><strong>Keywords：</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">- web scraping
- application programming interface, API
- crawling
- validity
- user-generated content
- social media
big data
</code></pre></div><br>
<h2 id="一网络数据的魅力">一、网络数据的魅力</h2>
<p>社会和商业生活的加速数字化创造了数量空前的消费者和企业行为数字痕迹。 每分钟，全球用户在 Google 上进行 570 万次搜索，进行 600 万次商业交易，并在 Instagram 上分享6.5万张照片（Statista 2021）。 由此产生的网络数据——规模庞大、形式多样，而且通常可以在互联网上公开访问——对于那些想要量化消费、深入了解企业行为并跟踪难以或昂贵地观察社会活动的营销学者来说，这是一个潜在的金矿 . 网络数据对营销研究的重要性反映在越来越多的有影响力的出版物中，涵盖消费者文化理论、消费者心理学、实证建模和营销策略等。</p>
<p><img loading="lazy" src="img/fig-1-increased-use-of-web-data-in-marketing.png" alt=""  />
</p>
<p>整理了 <strong>营销领域 top 5 期刊( JM、JMR、JCR、JCP、MS) 的 313 篇论文</strong> ，经过整理绘制图-1（Figure1）， 使用网络数据进行研究的量呈现快速上涨的趋势。使用网络数据的论文占比，从2010年的4%提升到2020年的15%。 者313篇论文，数据的获取方式统计</p>
<ul>
<li><strong>59% 的论文使用了</strong>网络爬虫采集数据</li>
<li>12% 的论文使用API收集数据</li>
<li>9% 的论文同时使用了网络爬虫和API</li>
<li>20% 使用人工从网站手动复制粘贴数据</li>
</ul>
<p><strong>使用 网络数据 的论文，平均被引用次数 7.55， 远高于 非网络数据 的 3.90</strong>。</p>
<br>
<p>使用网络数据做新研究，大致有4种实现路径</p>
<ol>
<li><strong>研究新现象，新场景</strong>
<ul>
<li>网络世界产生的不同于现实世界的情景，可以研究新现象</li>
</ul>
</li>
<li><strong>繁荣生态价值</strong>
<ul>
<li>比如，对亚马逊评论数据进行研究，研究发现可以帮助亚马逊平台进行改善。</li>
</ul>
</li>
<li><strong>促进方法论进步</strong>
<ul>
<li>文本、图片、音频、视频等</li>
</ul>
</li>
<li><strong>提高测量效果(快、准、好、全)</strong>
<ul>
<li>借助一些API，可以对已有的数据集增加新的信息量。</li>
<li>例如，日期数据，结合HolidayAPI，可以查看日期的节假日信息</li>
<li>给定日期和IP地址，使用Weather Underground可以查看天气信息</li>
</ul>
</li>
</ol>
<p><img loading="lazy" src="img/table-1-four-pathway-of-knowledge-creation-using-web-data.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二数据采集的方法框架">二、数据采集的方法框架</h2>
<p>在使用 **网络爬虫 和 API ** 自动收集网络数据时，研究人员通常会在 **研究有效性、技术可行性和法律/伦理风险 **1 三者间权衡利弊得失，研究人员如何解决这些权衡，通过增强或破坏 <strong>统计结论有效性、内部有效性、结构有效性和外部有效性</strong> 来塑造研究结果的可信度（Shadish、Cook 和 Campbell 2002）。</p>
<p><img loading="lazy" src="img/fig-2-methodological-framework-for-collecting-web-data.png" alt=""  />
</p>
<p>本文开发了一个方法框架，为使用 网络爬虫 和 API 自动收集网络数据提供指导。图 2（Figure 2） 涵盖三个关键阶段</p>
<ul>
<li><strong>数据源选择</strong></li>
<li><strong>设计方案</strong>
<ul>
<li>从网站中抽取哪些信息</li>
<li>采集频率，即 每天(周/月)重复运行一次爬虫，得到面板数据</li>
</ul>
</li>
<li><strong>执行数据采集</strong>
<ul>
<li>如何改善爬虫运行效率</li>
<li>如何处理原始信息，完整的保存为原始格式html、json，还是只抽取存储当前想要的字段</li>
</ul>
</li>
</ul>
<p>研究人员通常从一组广泛的潜在数据源开始，并根据三个关键考虑因素（有效性、技术可行性和法律/道德风险）剔除其中一些数据源。这三个考虑因素出现在倒金字塔的角落，底部的有效性强调其重要性。鉴于在收集最终数据集之前难以预测其确切特征，研究人员在设计、原型化和完善数据收集时经常重新考虑这些因素。未能解决技术或法律/伦理问题可能意味着网络数据无法有意义地告知研究问题。</p>
<h3 id="21-数据源面临的挑战解决办法">2.1 数据源面临的挑战(解决办法)</h3>
<ol>
<li>探索潜在网络数据源
<ul>
<li>由于网络资源在质量、稳定性和可检索性方面存在巨大差异，研究人员可能倾向于只考虑主要或熟悉的平台。 对数据世界的彻底探索允许令人信服的理论检验和识别可能难以以其他方式注意到的新颖的、新兴的营销现象。</li>
</ul>
</li>
<li>考虑网络爬虫的替代方案
<ul>
<li>由于网络抓取是最流行的网络数据提取方法，研究人员可能会忽视其他提取数据的方法。 API 提供了一种记录和授权的方式来获取许多来源的 Web 数据。 一些来源还提供现成的数据集。 使用此类替代方案可以节省时间并最大限度地减少法律风险。</li>
</ul>
</li>
<li>将数据与场景结合对应起来
<ul>
<li>Web 数据通常没有大量的文档。 尽早识别潜在相关的背景信息对于研究的相关性和有效性至关重要。
<img loading="lazy" src="img/table-2-chanllenges-and-solutions-in-selecting-web-data-sources.png" alt=""  />
</li>
</ul>
</li>
</ol>
<br>
<h3 id="22-设计数据采集方案">2.2 设计数据采集方案</h3>
<ol>
<li>从页面抽取什么信息，从有效性、合法、技术可行性 三个方面论证。</li>
<li>如何进行数据抽样？</li>
<li>以什么频率(每天、周、月)进行数据采集</li>
</ol>
<p><img loading="lazy" src="img/table-3-1-chanllenges-and-solutions-in-selecting-web-data-sources.png" alt=""  />

<img loading="lazy" src="img/table-3-2-chanllenges-and-solutions-in-selecting-web-data-sources.png" alt=""  />
</p>
<br>
<h3 id="23-执行数据采集">2.3 执行数据采集</h3>
<ol>
<li>如何改善爬虫运行效率</li>
<li>如何监控数据质量</li>
<li>整理数据文档(记录)
<img loading="lazy" src="img/table-4-chanllenges-and-solutions-in-selecting-web-data-sources.png" alt=""  />
</li>
</ol>
<br>
<h2 id="部分参考文献">部分参考文献</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[1]Allard, Thomas, Lea H. Dunn, and Katherine White. &#34;Negative reviews, positive impact: Consumer empathetic responding to unfair word of mouth.&#34; Journal of Marketing 84, no. 4 (2020): 86-108.
[2]Gao, Weihe, Li Ji, Yong Liu, and Qi Sun. &#34;Branding cultural products in international markets: a study of hollywood movies in China.&#34; Journal of Marketing 84, no. 3 (2020): 86-105.
[3]Reich, Taly, and Sam J. Maglio. &#34;Featuring mistakes: The persuasive impact of purchase mistakes in online reviews.&#34; Journal of Marketing 84, no. 1 (2020): 52-65.
[4]Lee, Jeffrey K., and Ann Kronrod. &#34;The strength of weak-tie consensus language.&#34; Journal of Marketing Research 57, no. 2 (2020): 353-374.
[5]Matz, Sandra C., Cristina Segalin, David Stillwell, Sandrine R. Müller, and Maarten W. Bos. &#34;Predicting the personal appeal of marketing images using computational methods.&#34; Journal of Consumer Psychology 29, no. 3 (2019): 370-390.
[6]Dai, Hengchen, and Dennis J. Zhang. &#34;Prosocial goal pursuit in crowdfunding: Evidence from kickstarter.&#34; Journal of Marketing Research 56, no. 3 (2019): 498-517.
[7]Luffarelli, Jonathan, Mudra Mukesh, and Ammara Mahmood. &#34;Let the logo do the talking: The influence of logo descriptiveness on brand equity.&#34; Journal of Marketing Research 56, no. 5 (2019): 862-878.
[8]Bond, Samuel D., Stephen X. He, and Wen Wen. &#34;Speaking for “free”: Word of mouth in free-and paid-product settings.&#34; Journal of Marketing Research 56, no. 2 (2019): 276-290.
[9]Han, Kyuhong, Jihye Jung, Vikas Mittal, Jinyong Daniel Zyung, and Hajo Adam. &#34;Political identity and financial risk taking: Insights from social dominance orientation.&#34; Journal of Marketing Research 56, no. 4 (2019): 581-601.
[10]Netzer, Oded, Alain Lemaire, and Michal Herzenstein. &#34;When words sweat: Identifying signals for loan default in the text of loan applications.&#34; Journal of Marketing Research 56, no. 6 (2019): 960-980.
[11]Toubia, Olivier, Garud Iyengar, Renée Bunnell, and Alain Lemaire. &#34;Extracting features of entertainment products: A guided latent dirichlet allocation approach informed by the psychology of media consumption.&#34; Journal of Marketing Research 56, no. 1 (2019): 18-36.
[12]Van Laer, Tom, Jennifer Edson Escalas, Stephan Ludwig, and Ellis A. Van Den Hende. &#34;What happens in Vegas stays on TripAdvisor? A theory and technique to understand narrativity in consumer reviews.&#34; Journal of Consumer Research 46, no. 2 (2019): 267-285.
[13]Zhong, Ning, and David A. Schweidel. &#34;Capturing changes in social media content: A multiple latent changepoint topic model.&#34; Marketing Science 39, no. 4 (2020): 827-846.
[14]Colicev, Anatoli, Ashwin Malshe, Koen Pauwels, and Peter O&#39;Connor. &#34;Improving consumer mindset metrics and shareholder value through social media: The different roles of owned and earned media.&#34; Journal of Marketing 82, no. 1 (2018): 37-56.
[15]Liu, Xuan, Savannah Wei Shi, Thales Teixeira, and Michel Wedel. &#34;Video content marketing: The making of clips.&#34; Journal of Marketing 82, no. 4 (2018): 86-101.
[16]Liu, Jia, and Olivier Toubia. &#34;A semantic approach for estimating consumer content preferences from online search queries.&#34; Marketing Science 37, no. 6 (2018): 930-952.
[17]Nam, Hyoryung, Yogesh V. Joshi, and P. K. Kannan. &#34;Harvesting brand information from social tags.&#34; Journal of Marketing 81, no. 4 (2017): 88-108.
[18]Packard, Grant, and Jonah Berger. &#34;How language shapes word of mouth&#39;s impact.&#34; Journal of Marketing Research 54, no. 4 (2017): 572-588.
</code></pre></div><br>
]]></content:encoded>
    </item>
    
    <item>
      <title>魔搭 | 中文AI模型开源社区</title>
      <link>https://textdata.cn/blog/2022-11-09-chinese-modelscope-open-source/</link>
      <pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-11-09-chinese-modelscope-open-source/</guid>
      <description>ModelScope社区成立于2022 年6月，是一个模型开源社区及创新平台，由阿里巴巴达摩院，联合CCF开源发展委员会，共同作为项目发起方。社区联合国内AI领域合作伙伴与高校机构，致力于通过开放的社区合作，构建深度学习相关的模型开源，并开源相关模型服务创新技术，推动模型应用生态的繁荣发展。</description>
      <content:encoded><![CDATA[<h2 id="关于modelscope">关于ModelScope</h2>
<p>ModelScope社区成立于 2022 年 6 月，是一个模型开源社区及创新平台，由阿里巴巴达摩院，联合CCF开源发展委员会，共同作为项目发起方。</p>
<blockquote>
<p>社区联合国内AI领域合作伙伴与高校机构，致力于通过开放的社区合作，构建深度学习相关的模型开源，并开源相关模型服务创新技术，推动模型应用生态的繁荣发展。</p>
</blockquote>
<p>期待ModelScope会有不一样的表现。</p>
<p>与ModelScope类似的网站有</p>
<ul>
<li>国际 huggingface是较早将AI模型开源的网站，用户群体庞大，社区内有丰富的数据集、模型，文档详实。</li>
<li>国内 百度飞桨是国内AI模型开源较好的网站，用户群体较大，更新活跃，但是文档质量。。。</li>
</ul>
<p>目前ModelScope刚刚上线不久，模型和数据集都不怎么多</p>
<p><img loading="lazy" src="img/model_scope_homepage.png" alt=""  />
</p>
<br>
<h2 id="heading"></h2>
<h1 id="名词解释"><strong>名词解释</strong></h1>
<p>ModelScope平台是以模型为中心的模型开源社区，与模型的使用相关，您需要先了解如下概念。</p>
<table>
<thead>
<tr>
<th><strong>基础概念</strong></th>
<th><strong>定义</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>任务</td>
<td>任务（Task）指某一领域具体的应用，以用于完成特定场景的任务。例如图像分类、文本生成、语音识别等，您可根据任务的输入输出找到适合您的应用场景的任务类型，通过任务的筛选来查找您所需的模型。</td>
</tr>
<tr>
<td>模型</td>
<td>模型（Model）是指一个具体的模型实例，包括模型网络结构和相应参数。ModelScope平台提供丰富的模型信息供用户体验与使用。</td>
</tr>
<tr>
<td>模型库</td>
<td>模型库（Modelhub）是指对模型进行存储、版本管理和相关操作的模型服务，用户上传和共享的模型将存储至ModelScope的模型库中，同时用户也可在Model hub中创建属于自己的模型存储库，并沿用平台提供的模型库管理功能进行模型管理。</td>
</tr>
<tr>
<td>数据集</td>
<td>数据集（Dataset）是方便共享及访问的数据集合，可用于算法训练、测试、验证，通常以表格形式出现。按照模态可划分为文本、图像、音频、视频、多模态等。</td>
</tr>
<tr>
<td>数据集库</td>
<td>数据集库（Datasethub）用于集中管理数据，支持模型进行训练、预测等，使各类型数据具备易访问、易管理、易共享的特点。</td>
</tr>
<tr>
<td>ModelScope Library</td>
<td>ModelScope Library是ModelScope平台自研的一套Python Library框架，通过调用特定的方法，用户可以只写短短的几行代码，就可以完成模型的推理、训练和评估等任务，也可以在此基础上快速进行二次开发，实现自己的创新想法。</td>
</tr>
</tbody>
</table>
<br>
<h2 id="一模型探索">一、模型探索</h2>
<p>首先访问平台网址https://www.modelscope.cn/models， 您将看见平台上已有的所有公开模型，根据任务筛选或者关键词搜索可查找您感兴趣的模型。</p>
<p><img loading="lazy" src="img/1-model_explore.png" alt=""  />
</p>
<br>
<h2 id="二环境准备">二、环境准备</h2>
<h3 id="21-本地开发环境">2.1 本地开发环境</h3>
<p>如果您需要在本地运行模型，需要进行相应的环境安装准备，包括：</p>
<ul>
<li><strong>安装python环境</strong>。支持python3，不支持python2，建议3.7版本及以上。我们推荐您使用Anaconda进行安装。</li>
<li><strong>安装深度学习框架</strong>。ModelScope Library目前支持Tensorflow，Pytorch两大深度学习框架进行模型训练、推理。您可根据模型所需的框架选择适合的框架进行安装。</li>
<li><strong>安装ModelScope Library</strong>。我们提供两种安装方式，您可选择适合的方式进行安装。
<ul>
<li>pip安装。ModelScope提供了根据不同领域的安装包，您可根据对应的模型选择所需的安装包。</li>
<li>使用源码安装。</li>
<li>更完整的安装信息参考：环境安装指南。</li>
</ul>
</li>
</ul>
<h3 id="22-在线notebook">2.2 在线Notebook</h3>
<p>若您觉得本地安装较为复杂， ModelScope平台也提供在线的运行环境，您可直接在Notebook中运行，Notebook中提供官方镜像无需自主进行环境安装，更加方便快捷，推荐大家使用！</p>
<p>注意：该功能需要您登录后使用，新用户注册ModelScope账号并完成阿里云账号绑定后即可获得免费算力资源，详情请参阅免费额度说明 。</p>
<p><img loading="lazy" src="img/model_scode_free_online_notebook.png" alt=""  />
</p>
<p><img loading="lazy" src="img/model_scode_free_online_notebook-2.png" alt=""  />
</p>
<br>
<h2 id="三2分钟跑通模型推理">三、2分钟跑通模型推理</h2>
<p>若您准备好本地环境或者已经打开一个Notebook的预装环境实例，则根据下述代码可对该模型进行推理。 使用modelscope pipeline接口只需要两步，同样以上述中文分词模型（damo/nlp_structbert_word-segmentation_chinese-base）为例简单说明：</p>
<p>首先根据task实例化一个pipeline对象</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">modelscope.pipelines</span> <span class="kn">import</span> <span class="n">pipeline</span>
<span class="n">word_segmentation</span> <span class="o">=</span> <span class="n">pipeline</span><span class="p">(</span><span class="s1">&#39;word-segmentation&#39;</span><span class="p">,</span><span class="n">model</span><span class="o">=</span><span class="s1">&#39;damo/nlp_structbert_word-segmentation_chinese-base&#39;</span><span class="p">)</span>
</code></pre></div><p>输入数据，拿到结果</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">input_str</span> <span class="o">=</span> <span class="s1">&#39;今天天气不错，适合出去游玩&#39;</span>
<span class="nb">print</span><span class="p">(</span><span class="n">word_segmentation</span><span class="p">(</span><span class="n">input_str</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">{&#39;output&#39;: &#39;今天 天气 不错 ， 适合 出去 游玩&#39;}
</code></pre></div><br>
]]></content:encoded>
    </item>
    
    <item>
      <title>十万级 | 多领域因果事件对数据集对外开源</title>
      <link>https://textdata.cn/blog/2022-11-07-chinese-casual-text-datasets/</link>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-11-07-chinese-casual-text-datasets/</guid>
      <description>description用于SEO优化</description>
      <content:encoded><![CDATA[<h2 id="作者">作者</h2>
<p>刘焕勇，NLP开源爱好者与践行者，主页：https://liuhuanyong.github.io。</p>
<p>就职于360人工智能研究院、曾就职于中国科学院软件研究所。</p>
<p>老刘说NLP，将定期发布语言资源、工程实践、技术总结等内容，欢迎关注。</p>
<br>
<p>开放文本中蕴含着大量的逻辑性知识，以刻画事物之间逻辑传导关系的逻辑类知识库是推动知识推理发展的重要基础。
因果抽取是一个十分有趣的话题，研发大规模逻辑推理知识库有助于支持实体或事件等传导驱动决策任务，而目前尚未有开源的因果事件对出现，为了弥补这一空缺，本文对外开源一个面向多领域的十万级因果事件对数据集，可以自行转成因果关系图谱，展开更多有趣实验，供大家一起参考。
地址：https://github.com/liuhuanyong/CausalDataset</p>
<h2 id="一因果抽取常用方法">一、因果抽取常用方法</h2>
<p>我们在《<strong>事件图谱技术：因果关系事件对抽取常用方法的解析与动手实践</strong>》中讲述了因果抽取的方法，从传统模式规则、语义分析、依存句法、序列标注四种方式进行实践，并配上实现项目进行讲解，这涵盖了当前因果事件抽取的常用方式。</p>
<p>地址： <a href="https://github.com/liuhuanyong/CausalityEventExtraction">https://github.com/liuhuanyong/CausalityEventExtraction</a></p>
<h3 id="11-基于模式匹配的因果事件对提取">1.1 基于模式匹配的因果事件对提取</h3>
<p>基于模式匹配的方式，是进行因果抽取的入门级以及兜底方式，充分利用好语言学知识，具有显式标记的因果关联词、因果表达句式进行归纳，并配以正则表达式实现，可以有效地提取出大量的因果事件对。</p>
<br>
<h3 id="12-基于语义角色的因果事件抽取">1.2 基于语义角色的因果事件抽取</h3>
<p>基于触发词模式匹配的方法无法捕捉因果事件之间的关联关系，因此可以借助依存句法分析以及语义角色标注的方式进行处理。</p>
<p>以因果关系触发词为核心动作，首先从语义角色方面找寻该触发词动作的实施对象和受事对象，将实施对象作为原因事件，将受事对象作为结果事件，并根据词性过滤事件；</p>
<br>
<h3 id="13-基于依存句法的因果事件抽取">1.3 基于依存句法的因果事件抽取</h3>
<p>由于自然语言处理的复杂性，LTP中未能对一些子句中的因果关系触发词进行语义角色标注，或者只标注了一部分，即A0和A1未同时被标注出来，因此利用依存句法分析来抽取此类情况下的因果事件对。</p>
<br> 
<h3 id="14-基于序列标注的因果抽取">1.4 基于序列标注的因果抽取</h3>
<p>针对基于规则的因果抽取模型中的不足，可以使用基于Bert微调的序列标注模型。在序列标签的设计上，模型的序列标签采用BIO标签体系，标签类型主要为cause、triger、effect。
为了能方便地根据标签结果进行因果三元组组合，在设计标签体系时也对单因果、多因果进行了区分，分别设置为multi-cause、multi-effect。</p>
<p><br><br></p>
<h2 id="二基于多领域文本数据集的因果事件对">二、基于多领域文本数据集的因果事件对</h2>
<p>为了得到多领域因果事件对，我们以清华大学开源的文本分类数据集THUnews，<strong>THUCNews是根据新浪新闻RSS订阅频道2005~2011年间的历史数据筛选过滤生成，包含74万篇新闻文档（2.19 GB），均为UTF-8纯文本格式</strong>。</p>
<p>其在原始新浪新闻分类体系的基础上，重新整合划分出14个候选分类类别：财经、彩票、房产、股票、家居、教育、科技、社会、时尚、时政、体育、星座、游戏、娱乐。满足了多领域性的需求。</p>
<p><strong>数据地址：http://thuctc.thunlp.org/#中文文本分类数据集THUCNews</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">训练因果抽取识别模型，最终去重得到了100,688条因果关系对，通过对频次进行统计，可以过滤出质量较高的因果对，下面显示了格式为原因事件@结构事件\t出现频次格式下的数据样例。
投资风险巨大@本金全部亏损 248
用户友好界面@模式帮助用户选择场景 38
政策消息面和技术面所有信息@交易者预期变 37
磨砂表面处理@触感更佳 31
加上F2大光圈和丰富手动功能@机器推出受到消费者广泛关注 26
金属材质设计@整体造型更具品质感 25
商务机型中并常见@上下边框显得厚 23
顶盖采用工程塑料制成配@笔记本外壳防滑耐磨 19
取消传统曲面过度@iPhone4底部扬声器变得硕大 17
准专业机型GRDIGITALII和GX200电子水平仪功能引进@使用R10拍摄高楼山水 16
镜头位移减震功能以及闪光灯控制系统@低光照下拍摄照片时噪 14
像素触摸式液晶屏幕@操控方面人性化 14
采用直线条形式边框风格@整体看上去大气 14
像素摄像头镶嵌屏幕上方@视频聊天方便 14
</code></pre></div><br>
<h3 id="21-关于地震相关的因果事件对">2.1 关于“地震”相关的因果事件对</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">日本东北部海域发生里氏大地震@重大人员伤亡和财产损失 6
日本东北部海域发生里氏地震@重大人员伤亡和财产损失 5
印尼西爪哇省附近印度洋海域发生里氏地震@人死亡人受伤 4
智利中南部城市康塞普西翁附近发生里氏强烈地震@重大人员伤亡 3
智利发生里氏地震@重大人员伤亡和财产损失 3
东部凡省发生强烈地震@死亡人数 3
上周五地震中受损核反应堆发生爆炸@核工业相关公司股票 3
日本大地震@金融市场动 3
最近地震和海啸灾害中复苏@日元汇率下跌 3
日本东北部大地震@全球关注 2
汶川地震期间捐款数目@高度关注 2
</code></pre></div><br>
<h3 id="22-与贬值相关的因果事件对">2.2 与“贬值”相关的因果事件对</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">虚拟道具贬值@广范围用户付费意愿越来越低 3
流动性过剩加剧@贬值趋势 3
日本核泄露事件@外资产贬值 3
全球性经济复苏以及贬值流动性过剩@全球商品价格出现暴涨 3
朝鲜进行货币贬值@市场经济瘫痪 2
欧洲主权债务危机深化和亚洲国家货币贬值@日本有警惕金融资本市场动荡 2
游戏公司滥发虚拟物品@玩家虚拟物品贬值 2
住房价格贬值@全球经济下滑形势演变成 2
中长期内贬值@资金撤离资产 2
持续贬值和人民币升值预期@中国内地成为资金洼地 2
韩元贬值@进口商品价格上升 2
货币大体上呈贬值趋势@国际油价名义价格走高 2
朱广沪时期大面积召人@国家队贬值 1
</code></pre></div><br>
<h3 id="23-与恋爱相关的因果事件对">2.3 与“恋爱”相关的因果事件对</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">恋爱观婚姻观@观众极大兴趣 2
恋爱问题@学生意外伤害事 2
人相知相惜@恋爱温度始终保持合适系数 1
持人大爆钱包@恋爱故事 1
来美丽密令恋爱线人电影@陆毅闪耀大银幕上 1
李成儒和小演员侯角恋爱往事@媒体关注 1
歌曲转换过渡上显得流畅@听起来实在如男女恋爱中不伦恋 1
抓紧时间南京谈恋爱@台上台下哄笑 1
公司安排工作@没时间恋爱 1
强打精神去面对@恋爱没有兴趣 1
</code></pre></div><br>
<br>
<h2 id="总结">总结</h2>
<p>本文以清华大学开源的文本分类数据集THUnews，对外开源了一个面向多领域的十万级因果事件对数据集，并介绍了常用技术方法。当然，数据的质量也有不足之处，规模不大，可以加以改善。</p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>1.5G数据集 | 200万条Indiegogo众筹项目信息</title>
      <link>https://textdata.cn/blog/2022-12-08-indiegogo-dataset/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-12-08-indiegogo-dataset/</guid>
      <description>1.57G indiegogo-dataset.jpeg</description>
      <content:encoded><![CDATA[<h2 id="indiegogo">Indiegogo</h2>
<p>Indiegogo成立于2008年，全球最大的科创新品首发和众筹平台， 是美国最早的众筹平台之一。</p>
<p><br><br></p>
<h2 id="参考论文">参考论文</h2>
<p>该数据集研究价值，可用于研究市场营销、创新创业、信息管理等， 部分使用众筹数据集作为研究对象的论文。</p>
<blockquote>
<p>[1]王伟,陈伟,祝效国,王洪伟. 众筹融资成功率与语言风格的说服性-基于Kickstarter的实证研究.<em>管理世界</em>.2016;5:81-98.
[2]Dai, Hengchen and Dennis J. Zhang. “Prosocial Goal Pursuit in Crowdfunding: Evidence from Kickstarter.” Journal of Marketing Research 56 (2019): 498 - 517.
[3]Gafni, H., Marom, D.M., Robb, A.M., &amp; Sade, O. (2020). Gender Dynamics in Crowdfunding (Kickstarter): Evidence on Entrepreneurs, Backers, and Taste-Based Discrimination*. Review of Finance.
[4]Jensen, Lasse Skovgaard and Ali Gürcan Özkil. “Identifying challenges in crowdfunded product development: a review of Kickstarter projects.” Design Science 4 (2018): n. pag.</p>
</blockquote>
<p><br><br></p>
<h2 id="indiegogo数据">Indiegogo数据</h2>
<p>2016年4月写好的Indiegogo爬虫，每月执行一次, 最新的数据 可以前往https://webrobots.io/indiegogo-dataset/</p>
<p><img loading="lazy" src="img/web_robot.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="原始数据">‘原始’数据</h2>
<p>Web Robot网上公开的的Indiegogo原始数据几十个 csv文件,</p>
<p><img loading="lazy" src="img/zips.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="整理">整理</h2>
<p>将上图的zip全部合并为一个 Indiegogo_dataset.csv , 该文件 1.57G 。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">warnings</span>
<span class="n">warnings</span><span class="o">.</span><span class="n">filterwarnings</span><span class="p">(</span><span class="s1">&#39;ignore&#39;</span><span class="p">)</span>

<span class="n">dff</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;Indiegogo_Dataset/Indiegogo_dataset.csv&#39;</span><span class="p">,</span> <span class="n">on_bad_lines</span><span class="o">=</span><span class="s1">&#39;skip&#39;</span><span class="p">)</span>
<span class="n">dff</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<p><img loading="lazy" src="img/df.png" alt=""  />
</p>
<br>
<p>数据集的字段有</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">df</span><span class="o">.</span><span class="n">columns</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Index([&#39;bullet_point&#39;, 
       &#39;category&#39;, &#39;category_url&#39;,  #项目类目及url
       &#39;clickthrough_url&#39;, #进入当前项目经由的某url
       &#39;close_date&#39;,  #项目截止日期
       &#39;currency&#39;,  #货币
       &#39;funds_raised_amount&#39;,  #当前已筹集的资金
       &#39;funds_raised_percent&#39;, #筹集资金进度(当前筹资/项目目标金额)
       &#39;image_url&#39;,  #图片url
       &#39;is_indemand&#39;, 
       &#39;is_pre_launch&#39;, #是否为预演
       &#39;offered_by&#39;,  #项目发起人
       &#39;open_date&#39;, #项目开始日期
       &#39;perk_goal_percentage&#39;, &#39;perks_claimed&#39;, 
       &#39;price_offered&#39;, #众筹价
       &#39;price_retail&#39;, #零售价
       &#39;product_stage&#39;,  #产品阶段
       &#39;project_id&#39;, #项目id
       &#39;project_type&#39;, #项目类型
       &#39;source_url&#39;, #项目url
       &#39;tagline&#39;, &#39;tags&#39;, #标签
       &#39;title&#39; ], #项目标题
      dtype=&#39;object&#39;)
</code></pre></div><p><br><br></p>
<h2 id="数据获取">数据获取</h2>
<ul>
<li>原始数据
<ul>
<li><a href="https://webrobots.io/indiegogo-dataset/">https://webrobots.io/indiegogo-dataset/</a></li>
</ul>
</li>
<li>整理的1.57G csv,
<ul>
<li>链接: <a href="https://pan.baidu.com/s/1j3PtV4GbFsyhjmr0NLbnKg">https://pan.baidu.com/s/1j3PtV4GbFsyhjmr0NLbnKg</a> 提取码: vfyc</li>
</ul>
</li>
</ul>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 2007-2021年A股上市公司年度报告（txt文件）</title>
      <link>https://textdata.cn/blog/2022-10-21-2007-2021-a-share-reports-dataset/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-10-21-2007-2021-a-share-reports-dataset/</guid>
      <description>2007-2021年A股上市公司年度报告（txt文件）</description>
      <content:encoded><![CDATA[<p>2007-2021年A股上市公司年度报告, 整理不易，请转发分享。</p>
<p><br><br></p>
<h2 id="截图">截图</h2>
<p><img loading="lazy" src="img/07-21.png" alt=""  />

<img loading="lazy" src="img/2007.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="获取">获取</h2>
<blockquote>
<p>链接: <a href="https://pan.baidu.com/s/1jw6VGGAN9cxROoqWN2X4vw">https://pan.baidu.com/s/1jw6VGGAN9cxROoqWN2X4vw</a> 提取码: g3cn</p>
<p>声明:  科研用途；如有问题， 请加微信372335839，备注「姓名-学校-专业」</p>
</blockquote>
<p><br><br></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据集 | 多语言对齐词向量预训练模型</title>
      <link>https://textdata.cn/blog/2022-10-16-aligned-word-vectors/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-10-16-aligned-word-vectors/</guid>
      <description>借助该预训练模型，应该能做可做跨文化对比分析</description>
      <content:encoded><![CDATA[<h2 id="介绍">介绍</h2>
<p>Facebook研究者使用 fastText 算法，对维基百科(44种语言)语料数据进行了训练，最终生成了 44 种语言的对齐词向量。</p>
<br>
<h2 id="用途">用途</h2>
<p>wiki数据集有个优点，即由于众人分享、翻译，将不同语言的百科词条进行了翻译整理。所以facebook使用wiki训练对齐词向量有助于提升翻译准确性。与此同时，因为翻译者处于不同的语言和文化背景下，词条及词条内容必然蕴含着语言所特有的文化信息线索，有可能有助于我们挖掘跨语言的文化差异。例如中文词条<code>护士</code>和 英文词条<code>nurse</code> ，可以借助对齐词向量，比较护士这个群体在性别、种族等语义上的差异。</p>
<p>之前分享过的内容</p>
<ul>
<li><a href="https://textdata.cn/blog/embeddingsandattitude/">词嵌入测量不同群体对某概念的态度(偏见)</a></li>
<li><a href="https://textdata.cn/blog/wordembeddingsinsocialscience/">转载 | 大数据时代下社会科学研究方法的拓展&mdash;&mdash;基于词嵌入技术的文本分析的应用</a></li>
<li><a href="https://textdata.cn/blog/from_sysbol_to_embeddings_in_computational_social_science/">转载 | 从符号到嵌入：计算社会科学的两种文本表示</a></li>
<li><a href="https://textdata.cn/blog/literatureembeddings/">文献汇总 | 词嵌入 与 社会科学中的偏见(态度)</a></li>
</ul>
<p>不过fastText算法认为词语有不同的大小划分层次，从大到小分别是词语、词缀、字符等，使用 Joulin 等人 (2018) 中描述的 RCSLS 方法进行比对。</p>
<table>
<thead>
<tr>
<th><strong>Code</strong></th>
<th><strong>en-es</strong></th>
<th><strong>es-en</strong></th>
<th><strong>en-fr</strong></th>
<th><strong>fr-en</strong></th>
<th><strong>en-de</strong></th>
<th><strong>de-en</strong></th>
<th><strong>en-ru</strong></th>
<th><strong>ru-en</strong></th>
<th><strong>en-zh</strong></th>
<th><strong>zh-en</strong></th>
<th><strong>avg</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Joulin et al. [<a href="https://arxiv.org/abs/1804.07745">1</a>]</td>
<td>84.1</td>
<td>86.3</td>
<td>83.3</td>
<td>84.1</td>
<td><strong>79.1</strong></td>
<td>76.3</td>
<td><strong>57.9</strong></td>
<td><strong>67.2</strong></td>
<td>45.9</td>
<td>46.4</td>
<td>71.1</td>
</tr>
<tr>
<td>This implementation (10 epochs)</td>
<td>84.2</td>
<td><strong>86.6</strong></td>
<td><strong>83.9</strong></td>
<td>84.7</td>
<td>78.3</td>
<td>76.6</td>
<td>57.6</td>
<td>66.7</td>
<td><strong>47.6</strong></td>
<td><strong>47.4</strong></td>
<td>71.4</td>
</tr>
<tr>
<td>This implementation (unsup. model selection)</td>
<td><strong>84.3</strong></td>
<td><strong>86.6</strong></td>
<td><strong>83.9</strong></td>
<td><strong>85.0</strong></td>
<td>78.7</td>
<td><strong>76.7</strong></td>
<td>57.6</td>
<td>67.1</td>
<td><strong>47.6</strong></td>
<td><strong>47.4</strong></td>
<td><strong>71.5</strong></td>
</tr>
</tbody>
</table>
<p>算法得出的词向量在西方，尤其是西欧语言之间进行语义对齐，效果可能更好。而中文、日语等汉字语言，是由偏旁部首组成，与西方字母语言还是存在一定差异。上表也可以看出中英语义对齐准确率47%， 而其他语言之间对齐准确率平均为71%。</p>
<br>
<h2 id="模型资源">模型资源</h2>
<p><a href="https://fasttext.cc/docs/en/aligned-vectors.html">https://fasttext.cc/docs/en/aligned-vectors.html</a></p>
<p>对齐预训练向量模型下载链接</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Afrikaans: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.af.align.vec"><em>text</em></a></td>
<td>Arabic: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.ar.align.vec"><em>text</em></a></td>
<td>Bulgarian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.bg.align.vec"><em>text</em></a></td>
<td>Bengali: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.bn.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Bosnian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.bs.align.vec"><em>text</em></a></td>
<td>Catalan: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.ca.align.vec"><em>text</em></a></td>
<td>Czech: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.cs.align.vec"><em>text</em></a></td>
<td>Danish: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.da.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>German: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.de.align.vec"><em>text</em></a></td>
<td>Greek: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.el.align.vec"><em>text</em></a></td>
<td>English: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.en.align.vec"><em>text</em></a></td>
<td>Spanish: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.es.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Estonian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.et.align.vec"><em>text</em></a></td>
<td>Persian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.fa.align.vec"><em>text</em></a></td>
<td>Finnish: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.fi.align.vec"><em>text</em></a></td>
<td>French: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.fr.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Hebrew: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.he.align.vec"><em>text</em></a></td>
<td>Hindi: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.hi.align.vec"><em>text</em></a></td>
<td>Croatian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.hr.align.vec"><em>text</em></a></td>
<td>Hungarian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.hu.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Indonesian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.id.align.vec"><em>text</em></a></td>
<td>Italian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.it.align.vec"><em>text</em></a></td>
<td>Korean: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.ko.align.vec"><em>text</em></a></td>
<td>Lithuanian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.lt.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Latvian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.lv.align.vec"><em>text</em></a></td>
<td>Macedonian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.mk.align.vec"><em>text</em></a></td>
<td>Malay: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.ms.align.vec"><em>text</em></a></td>
<td>Dutch: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.nl.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Norwegian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.no.align.vec"><em>text</em></a></td>
<td>Polish: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.pl.align.vec"><em>text</em></a></td>
<td>Portuguese: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.pt.align.vec"><em>text</em></a></td>
<td>Romanian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.ro.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Russian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.ru.align.vec"><em>text</em></a></td>
<td>Slovak: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.sk.align.vec"><em>text</em></a></td>
<td>Slovenian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.sl.align.vec"><em>text</em></a></td>
<td>Albanian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.sq.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Swedish: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.sv.align.vec"><em>text</em></a></td>
<td>Tamil: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.ta.align.vec"><em>text</em></a></td>
<td>Thai: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.th.align.vec"><em>text</em></a></td>
<td>Tagalog: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.tl.align.vec"><em>text</em></a></td>
</tr>
<tr>
<td>Turkish: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.tr.align.vec"><em>text</em></a></td>
<td>Ukrainian: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.uk.align.vec"><em>text</em></a></td>
<td>Vietnamese: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.vi.align.vec"><em>text</em></a></td>
<td>Chinese: <a href="https://dl.fbaipublicfiles.com/fasttext/vectors-aligned/wiki.zh.align.vec"><em>text</em></a></td>
</tr>
</tbody>
</table>
<br>
<h2 id="格式">格式</h2>
<p>词向量默认使用的fastText格式</p>
<ul>
<li>第一行给了词向量的维数</li>
<li>从第二行开始，每一行由词语及对应的词向量组成。</li>
<li>数值之间使用空格间隔</li>
</ul>
<br>
<h2 id="代码">代码</h2>
<h3 id="导入模型">导入模型</h3>
<p>使用gensim导入fastText方法训练出的 预训练语言模型</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">gensim.models</span> <span class="kn">import</span> <span class="n">KeyedVectors</span>

<span class="c1">#导入刚刚下载的预训练模型</span>
<span class="c1">#该词向量模型300维</span>
<span class="n">zh_w2v_model</span> <span class="o">=</span> <span class="n">KeyedVectors</span><span class="o">.</span><span class="n">load_word2vec_format</span><span class="p">(</span><span class="s1">&#39;wiki.zh.align.vec&#39;</span><span class="p">,</span> <span class="n">binary</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>

<span class="c1">#英文词向量模型5G，太大了。如果内存小于16G不要使用下面命令</span>
<span class="c1">#en_w2v_model = KeyedVectors.load_word2vec_format(&#39;wiki.en.align.vec&#39;, binary=False)</span>
</code></pre></div><p>一旦导入成功，就可以进行向量计算。这里仅进行简单演示</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#获取某词的词向量</span>
<span class="n">zh_w2v_model</span><span class="o">.</span><span class="n">get_vector</span><span class="p">(</span><span class="s1">&#39;护士&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>array([ 0.0733,  0.0782,  0.0188, -0.0027, -0.0052,...,  0.0586,  0.0166,
       -0.1401, -0.0545, -0.0125,  0.0373, -0.0681,  0.063 ],
      dtype=float32)
</code></pre>
<br>
<p>在中文中， 护士职业的主要从业者为女性，反应在词向量相似度上，如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">zh_w2v_model</span><span class="o">.</span><span class="n">similarity</span><span class="p">(</span><span class="s1">&#39;护士&#39;</span><span class="p">,</span> <span class="s1">&#39;女性&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">zh_w2v_model</span><span class="o">.</span><span class="n">similarity</span><span class="p">(</span><span class="s1">&#39;护士&#39;</span><span class="p">,</span> <span class="s1">&#39;男性&#39;</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<pre><code>0.4417011
0.378651
</code></pre>
<br>
<p>更多w2v_model用法可参考 <a href="https://textdata.cn/blog/douban_w2v/">豆瓣影评 | 探索词向量妙处</a></p>
<br>
<h2 id="文献">文献</h2>
<p>如果使用了facebook的预训练词向量，请引用以下两篇文献。</p>
<ul>
<li>Joulin, Armand, Piotr Bojanowski, Tomas Mikolov, Hervé Jégou, and Edouard Grave. &ldquo;Loss in translation: Learning bilingual word mapping with a retrieval criterion.&rdquo; arXiv preprint arXiv:1804.07745 (2018).</li>
<li>Bojanowski, Piotr, Edouard Grave, Armand Joulin, and Tomas Mikolov. &ldquo;Enriching word vectors with subword information.&rdquo; Transactions of the association for computational linguistics 5 (2017): 135-146.</li>
</ul>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>中文金融领域知识图谱的数据集ChainKnowledgeGraph</title>
      <link>https://textdata.cn/blog/chain_knowledge_graph/</link>
      <pubDate>Mon, 06 Dec 2021 16:42:10 +0600</pubDate>
      
      <guid>/blog/chain_knowledge_graph/</guid>
      <description>本文围绕金融领域，推出面向上市公司的产业链图谱。  </description>
      <content:encoded><![CDATA[<p>领域知识图谱的数据集，当前还比较缺失，而作为构建难度最大的产业链图谱领域更为空白。产业链作为产业经济学中的一个概念，是各个产业部门之间基于一定的技术经济关联，并依据特定的逻辑关系和时空布局关系客观形成的链条式关联关系形态。从本质上来说，产业链的本质是用于描述一个具有某种内在联系的企业群结构，产业链中大量存在着上下游关系和相互价值的交换，上游环节向下游环节输送产品或服务，下游环节向上游环节反馈信息。</p>
<p>作者已经先后发布两大领域的实体图谱数据： <br>
1、情报领域【武器装备知识图谱】，地址：https://github.com/liuhuanyong/QAonMilitaryKG<br>
2、医疗领域【医疗知识图谱】，地址： <a href="https://github.com/liuhuanyong/QASystemOnMedicalKG">https://github.com/liuhuanyong/QASystemOnMedicalKG</a></p>
<p>当前，为了进一步推动产业发展，本文围绕金融领域，推出面向上市公司的产业链图谱。</p>
<p>项目地址：</p>

<figure >
    
        <img src="img/1.png" width="800" />
    
    
</figure>

<br>
<h2 id="一项目构成">一、项目构成</h2>
<p>产业链知识图谱包括A股上市公司、行业和产品共3类实体，包括上市公司所属行业关系、行业上级关系、产品上游原材料关系、产品下游产品关系、公司主营产品、产品小类共6大类。</p>
<p>通过数据处理、抽取，最终建成图谱规模数十万，其中包括上市公司4,654家，行业511个，产品95,559条、上游材料56,824条，上级行业480条，下游产品390条，产品小类52,937条，所属行业3,946条。  <br>

<figure >
    
        <img src="img/2.png" width="800" />
    
    
</figure>
</p>
<br>
<h2 id="二项目构建">二、项目构建</h2>
<p>1、实体构建<br>
1）上市公司<br>
目前上市公司已经达到四千多家，是我国重要的公司代表与行业标杆，本图谱选取上市公司作为基础实体之一。通过交易所公开信息中，可以得到上市公司代码、全称、简称、注册地址、挂牌等多个信息。</p>

<figure >
    
        <img src="img/3.png" width="800" />
    
    
</figure>

<p>2）行业分类<br>
行业是产业链图谱中另一个核心内容，也是承载产业、公司及产品的一个媒介，通过这一领携作用，可以生产出大量的行业指数、热点行业等指标。<br>
目前关于行业，已经陆续出现多个行业规范，代表性的有申万三级行业分类、国民经济行业分类等。中国上市公司所属行业的分类准则是依据营业收入等财务数据为主要分类标准和依据，所采用财务数据为经过会计事务所审计并已公开披露的合并报表数据。<br>
2021年6月，申万发布了2021版的行业分类规范，将1级行业从28个调整至31个、2级行业从104个调整至134个、3级行业从227个调整至346个，新增1级行业美容护理等，新增2级行业，并将上市公司进行了归属。本图谱选用申万行业作为基础数据。<br>

<figure >
    
        <img src="img/4.png" width="800" />
    
    
</figure>
</p>
<p>3）业务产品 <br>
业务产品主要指公司主营范围、经营的产品，用于对一个公司的定位。可以从公司的经营范围、年报等文本中进行提取得到。<br>

<figure >
    
        <img src="img/5.png" width="800" />
    
    
</figure>
</p>
<p>2、关系构建 <br>
1）公司所属行业 <br>
通过公开的上市公司行业分类表，可以得到上市公司所对应的行业分类数据。 <br>

<figure >
    
        <img src="img/6.png" width="800" />
    
    
</figure>
</p>
<p>2）行业上级关系 <br>
通过公开的行业三级分类情况，可以通过组合的形式得到行业之间的上级关系数据。 <br>

<figure >
    
        <img src="img/7.png" width="800" />
    
    
</figure>
</p>
<p>3）公司主营产品关系<br>
上市公司的经营产品数据可以从两个方面来获得，一个是从公司简介中的经营范围中结合制定的规则进行提取，另一个是从公司每年发布的半年报、年报中进行提取。这些报告中会有按经营业务、经营产品、经营地域等几个角度对公司的营收占比进行统计，也可以通过制定规则的方式进行提取。第二种方法中，由于已经有统计数据，所以我们可以根据占比数据大小，对主营产品这一关系进行赋值。<br>

<figure >
    
        <img src="img/8.png" width="800" />
    
    
</figure>
</p>
<p>4）产品之间的上下游关系<br>
产品之间的上下游关系，是展示产品之间传导逻辑关系的一个重要方法，包括上游原材料以及下游产品两大类。我们可以多种来获取：<br>
一种是基于规则模式匹配的方式进行抽取，如抽取上游原材料这一关系可以由诸如&quot;a是b的原料/原材料/主要构件/重要原材料/  上游原料&quot;的模式进行抽取&quot;，而下游产品，则同理可以通过&quot;A是B的下游成品/产品&quot;等模式进行提取。<br>
另一种是基于序列标注的提取。还有一种是基于现有结构化知识图谱的提取，例如已经结构化好的百科知识三元组，可以通过设定谓词及其扩展进行过滤。<br>

<figure >
    
        <img src="img/9.png" width="800" />
    
    
</figure>
</p>
<p>5）产品之间的小类关系<br>
对于一个产品而言，其是有大小层级分类的，在缺少大类产品名称的时候，可以通过计算小类产品来得到相应指标。与产品之间的上下游数据类似，可以通过启发式规则的方式进行提取，如“A是一种B”，也可以通过字符之间的组成成分进行匹配生成，如“螺纹钢”是“精细螺纹钢”的一个大类。<br>

<figure >
    
        <img src="img/10.png" width="800" />
    
    
</figure>
</p>
<br>
<h2 id="三项目运行">三、项目运行</h2>
<p>1、data文件夹下包括了本项目的数据信息：<br>
1)company.json:公司实体数据<br>
2)industry.json:行业实体数据 <br>
3)product.json:产品实体数据 <br>
4)company_industry.json:公司-行业关系数据 <br>
5)industry_industry.json:行业-行业关系数据 <br>
6)product_product.json:产品-产品数据 <br>
7)company_product.json:公司-产品数据</p>
<p>2、项目运行:<br>
python build_graph.py</p>
<br>
<h2 id="四项目总结">四、项目总结</h2>
<p>产业链图谱是众多领域知识图谱中较为棘手的一种，本项目通过现有的数据，借助数据处理、结构化提取方式，设计、构建并形成了一个节点100,718，关系边169,153的十万级别产业链图谱。就产业链图谱的构建而言，我们需要至少从以上三个方面加以考虑：</p>
<ul>
<li>其一，产业链的主观性与标准性。产业链的主观性较强，不同的人对产业链的构建、产业链节点、关系的类型，产业链的颗粒度问题都有不同的理解。不同的设定会直接导致不同的应用结果。正如我们所看到的，目前存在不同的行业标准，不同的网站、机构也将公司归为不同的行业。</li>
<li>其二，产业链的动态性和全面性。产业链需要具备足够大的复用性和扩展性，几千家上市公司实际上是冰山一角。国内有几千万家公司，而且不断会有新增，如何将新增的公司融入到这个额产业链中，也是一个很大挑战。此外，产业本身是动态的， 随着行业的发展，不断会有新的行业出现。如何捕捉这种行业的变化，使得整个图谱变得与时俱进，也是需要考量的点。</li>
<li>其三，产业链的定量推理特性。单纯定性的构建产业链知识图谱，如果没有足够的参数，仅有知识表达是无法进行推理的，推理要求知识图谱Schema具备节点间推理传导的必备参数，以及影响推理传导的其他关键参数。对于必备参数来说，从公司到产品必须有主营占比、市场占比、产能占比等数据，从产品到产品必须有成本占比和消耗占比等数据。</li>
</ul>
<br>
<h2 id="参考数据来源">参考数据来源</h2>
<p>1、申万行业：http://www.swsindex.com<br>
2、深交所: <a href="http://www.szse.cn">http://www.szse.cn</a><br>
3、上交所: <a href="http://www.sse.com.cn">http://www.sse.com.cn</a></p>
<p>If any question about the project or me ,see <a href="https://liuhuanyong.github.io/">https://liuhuanyong.github.io/</a></p>
<p>如有自然语言处理、知识图谱、事理图谱、社会计算、语言资源建设等问题或合作，可联系我： <br>
1、我的github项目介绍：https://liuhuanyong.github.io<br>
2、我的csdn博客：https://blog.csdn.net/lhy2014<br>
3、about me:刘焕勇，lhy_<a href="mailto:in_blcu@126.com">in_blcu@126.com</a>.      <br>
4、我的技术公众号:老刘说NLP</p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>中文语义常用词典ChineseSemanticKB</title>
      <link>https://textdata.cn/blog/chinese_semantic_kb/</link>
      <pubDate>Mon, 06 Dec 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/chinese_semantic_kb/</guid>
      <description>面向中文处理的12类、百万规模的语义常用词典，包括34万抽象语义库、34万反义语义库、43万同义语义库等，可支持句子扩展、转写、事件抽象与泛化等多种应用场景。</description>
      <content:encoded><![CDATA[<h2 id="chinesesemantickb">ChineseSemanticKB</h2>
<p>ChineseSemanticKB,chinese semantic knowledge base, 面向中文处理的12类、百万规模的语义常用词典，包括34万抽象语义库、34万反义语义库、43万同义语义库等，可支持句子扩展、转写、事件抽象与泛化等多种应用场景。</p>
<br>
<h2 id="项目介绍">项目介绍</h2>
<p>语义知识库是自然语言处理中十分重要的一个基础资源，与学术界追求算法模型不同，工业界的自然语言处理对于底层的词汇知识库、语义知识库等多种资源依赖度很高，具体体现在：<br>
1、具有落地场景的自然语言处理任务都是业务高度相关，一个业务需求刚进去，需要解决的是业务的词汇问题，无基础词库，无项目冷启动；<br>
2、规则和正则启动下的工业级应用，规则的扩展、泛化都需要底层的词汇网络做支撑；<br>
3、目前包括搜索、问答、舆情监控、事件分析等应用，与标签体系的运作关系密切，而这与先验的底层词汇库依赖性很强；<br>
4、自然语言场景越来越关注推理层面，即所谓的“认知”层面，认知背后的各种逻辑关系库，是驱动这一决策的根本途径；<br>
5、当前，面向中文开源词库的工作存在少量、分散的状态，无论从规模，还是质量，都需要进一步聚合；<br>
因此，我从过往的开源工作中进一步抽离和整理，形成了中文处理的12类、百万规模的语义常用词典，包括34万抽象语义库、34万反义语义库、43万同义语义库等，用于相关下游任务。</p>
<p>项目放于dict当中，可直接下载，不建议二次建库共享，尊重开源。</p>
<br>
<h2 id="词库的类别">词库的类别</h2>
<table>
<thead>
<tr>
<th style="text-align:left">词库类型</th>
<th style="text-align:center">词库规模</th>
<th style="text-align:center">词库举例</th>
<th style="text-align:center">词库应用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">抽象关系库</td>
<td style="text-align:center">346,048</td>
<td style="text-align:center">座椅,抽象,家具</td>
<td style="text-align:center">事件抽象与泛化，人民币贬值到货币贬值，再到美元贬值，可支持查询扩展、推荐等任务</td>
</tr>
<tr>
<td style="text-align:left">反义关系库</td>
<td style="text-align:center">34,380</td>
<td style="text-align:center">开心@苦恼</td>
<td style="text-align:center">可用于句子改写，开心改苦恼，支持数据增强，句子生成</td>
</tr>
<tr>
<td style="text-align:left">同义关系库</td>
<td style="text-align:center">424,826</td>
<td style="text-align:center">开心@高兴</td>
<td style="text-align:center">可用于查询扩展、数据增强，也可结合抽象关系库完成推荐等任务</td>
</tr>
<tr>
<td style="text-align:left">简称关系库</td>
<td style="text-align:center">136,081</td>
<td style="text-align:center">北京大学@北大</td>
<td style="text-align:center">可用于句子标准化、句子改写、实体消歧等任务</td>
</tr>
<tr>
<td style="text-align:left">程度副词</td>
<td style="text-align:center">222</td>
<td style="text-align:center">极其,2.0</td>
<td style="text-align:center">可用于情感强度计算，带情感色彩的句子生成</td>
</tr>
<tr>
<td style="text-align:left">否定词</td>
<td style="text-align:center">586</td>
<td style="text-align:center">不,无,没有</td>
<td style="text-align:center">可用于情感计算等任务</td>
</tr>
<tr>
<td style="text-align:left">节日时间词</td>
<td style="text-align:center">54</td>
<td style="text-align:center">春节、五四节</td>
<td style="text-align:center">可用于时间词识别等任务</td>
</tr>
<tr>
<td style="text-align:left">量比词</td>
<td style="text-align:center">7</td>
<td style="text-align:center">占比、环比、同比</td>
<td style="text-align:center">可用于金融领域指标类数据提取任务</td>
</tr>
<tr>
<td style="text-align:left">数量介词</td>
<td style="text-align:center">24</td>
<td style="text-align:center">大约、达到、超过</td>
<td style="text-align:center">可用于金融事件抽象或主干化的搭配词处理任务</td>
</tr>
<tr>
<td style="text-align:left">停用词</td>
<td style="text-align:center">3,861</td>
<td style="text-align:center">？、的、着</td>
<td style="text-align:center">常规的文本特征提取等任务</td>
</tr>
<tr>
<td style="text-align:left">修饰副词</td>
<td style="text-align:center">222</td>
<td style="text-align:center">所、有所</td>
<td style="text-align:center">可结合程度副词完成情感强度计算等任务</td>
</tr>
<tr>
<td style="text-align:left">情态词</td>
<td style="text-align:center">77</td>
<td style="text-align:center">肯定、应该、大概</td>
<td style="text-align:center">可用于句子主观性计算、舆情与可信度计算</td>
</tr>
</tbody>
</table>
<br>
<h2 id="总结">总结</h2>
<p>1、本项目开源了一个目前可用于事件处理以及工业舆情的12类语义词库，总规模数目一百余万；<br>
2、本项目开源的34万抽象语义库、34万反义语义库、43万同义语义库，在作者的实际工作中【事件处理、事理抽取、事件推理】等有重要用途;<br>
3、中文常用语义常用词典，均来源于公开文本+人工整理+机器抽取形成，其中若有质量不高之处，可积极批评指正;<br>
4、中文开源事业还是要坚持做下去，尽可能地缩短自然语言处理学术界和工业界之间的鸿沟。</p>
<blockquote>
<p>If any question about the project or me ,see <a href="https://liuhuanyong.github.io/">https://liuhuanyong.github.io/</a>.<br>
如有自然语言处理、知识图谱、事理图谱、社会计算、语言资源建设等问题或合作，可联系我：     <br>
1、我的github项目介绍：https://liuhuanyong.github.io  <br>
2、我的csdn技术博客：https://blog.csdn.net/lhy2014 <br>
3、我的联系方式: 刘焕勇，中国科学院软件研究所，lhy_<a href="mailto:in_blcu@126.com">in_blcu@126.com</a>. <br>
4、我的共享知识库项目：刘焕勇，数据地平线，http://www.openkg.cn/organization/datahorizon.<br>
5、我的工业项目：刘焕勇，数据地平线，大规模实时事理学习系统：https://xueji.datahorizon.cn.  <br>
6、我的工业项目：刘焕勇，数据地平线，面向事件和语义的自然语言处理工具箱：https://nlp.datahorizon.cn</p>
</blockquote>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>70G上交所年报数据集</title>
      <link>https://textdata.cn/blog/70g_china_market_anunal_report_datasets/</link>
      <pubDate>Mon, 22 Nov 2021 20:40:10 +0600</pubDate>
      
      <guid>/blog/70g_china_market_anunal_report_datasets/</guid>
      <description>Python网络爬虫与文本分析， 70g会计年报pdf数据集免费下载</description>
      <content:encoded><![CDATA[<h2 id="一数据集概况">一、数据集概况</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">数据源: 上海证券交易所(使用shreport库进行下载)
公司数: 1486
记录数: 71149

【声明】
科研用途，仅供展示；如有任何问题，加微信372335839，备注「姓名-学校-专业」
</code></pre></div><h3 id="11-截图">1.1 截图</h3>
<p><img loading="lazy" src="img/1.gif" alt=""  />
</p>
<h3 id="12-下载说明">1.2 下载说明</h3>
<p>所有pdf均来自上海证券交易所官网，使用shreport库进行的下载。</p>
<p><img loading="lazy" src="img/2.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="二实验代码">二、实验代码</h2>
<h3 id="21-报告信息汇总文件">2.1 报告信息汇总文件</h3>
<p><img loading="lazy" src="img/3.gif" alt=""  />
</p>
<p>summary.xlsx内字段</p>
<ul>
<li>company 上市公司企业名</li>
<li>code 股票代码</li>
<li>type 报告类型</li>
<li>year 报告年份</li>
<li>date 报告发布日期</li>
<li>pdf 报告pdf文件下载链接</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">from</span> <span class="nn">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>


<span class="c1">#报告汇总文件summary.xlsx</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;summary.xlsx&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><p><img loading="lazy" src="img/4.png" alt=""  />
</p>
<p>一共有报告71126份</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">len(df)
71149
</code></pre></div><p>一共有上市公司1486家</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">len(df[&#39;company&#39;].unique())
1486
</code></pre></div><p><br><br></p>
<h3 id="22--summary文件夹">2.2  summary文件夹</h3>
<p>summary文件夹内是每家公司的报告披露情况</p>
<p><img loading="lazy" src="img/5.gif" alt=""  />
</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">df1 = pd.read_excel(&#39;summary/600000.xlsx&#39;)
df1.head()
</code></pre></div><p><img loading="lazy" src="img/6.png" alt=""  />
</p>
<p>浦发银行一共有75份定期报告</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">len(df1)
75
</code></pre></div><p><br><br></p>
<h3 id="23--reports文件夹">2.3  reports文件夹</h3>
<p>reports文件夹存放着以各各公司股票代码命名的文件夹</p>
<p>文件夹内是该公司所有定期报告</p>
<p><img loading="lazy" src="img/7.gif" alt=""  />
</p>
<p><br><br></p>
<h3 id="24-读取pdf报告">2.4 读取pdf报告</h3>
<p>可使用pdfdocx库读取pdf,</p>
<p>pdfdocx文档链接 <a href="https://github.com/thunderhit/pdfdocx">https://github.com/thunderhit/pdfdocx</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">from pdfdocx import read_pdf

p_text = read_pdf(&#39;reports/600000/600000_2012_1.pdf&#39;)
p_text
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">上海浦东发展银行股份有限公司 \n\n2012 年第一季度报告 \n\n \n\n \n\n§1 重要提示 \n\n1.1 公司董事会、监事会及其董事、监事、高级管理人员保证本报告所载资料不存在任何虚假记载、\n\n误导性陈述或者重大遗漏，并对其内容的真实性、准确性和完整性承担个别及连带责任。\n\n1.2 公司于 2012 年 4 月 26 日以通讯表决的方式召开第四届董事会第二十六次会议审议通过本报告，\n\n1.4 公司董事长、行长吉晓辉、财务总监刘信义及财务机构负责人傅能声明：保证本季度报告中财务\n\n公司全体董事出席董事会会议并行使表决权。\n\n1.3 公司第一季度财务报告未经审计。\n\n报告的真实、完整。\n\n \n§2 公司基本情况 \n\n2.1 主要会计数据及财务指标 \n\n本报告期末 \n\n上年度期末 \n\n币种:人民币 \n\n本报告期末比上年\n度期末增减(%) \n\n总资产(千元) \n\n归属于上市公司股东的所有者权益(千元) \n\n2,804,646,567\n\n157,055,724\n\n2,684,693,689 \n148,891,235 \n\n归属于上市公司股东的每股净资产(元) \n\n8.420\n\n7.982 \n\n4.47 \n5.48 \n5.49 \n\n经营活动产生的现金流量净额(千元) \n\n每股经营活动产生的现金流\n\n \n\n \n \n母公司现金流量表 \n \n2012 年 1—3 月 \n \n编制单位: 上海浦东发展银行股份有限公司....
</code></pre></div><p><br><br></p>
<h2 id="三数据下载">三、数据下载</h2>
<p>链接:https://pan.baidu.com/s/14PI6MbxunFQ3fZOfR33zkw 密码:osoi</p>
<p>科研用途，仅供展示；如有任何问题，加微信372335839，备注「姓名-学校-专业」</p>
<br>
<br>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
