<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>GIS on 大邓和他的PYTHON</title>
    <link>/tags/gis/</link>
    <description>Recent content in GIS on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 19 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/gis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>转载 | 历史GIS的研究现状和发展趋势</title>
      <link>https://hidadeng.github.io/blog/2022-09-19-history-gis/</link>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-09-19-history-gis/</guid>
      <description>d历史地理信息系统（历史GIS）属于地理信息系统（GIS）与历史学相结合的交叉研究领域，它有机地集成了GIS的技术方法、地理学家的空间视角和历史学家的时间视角，量化历史时期的地理过程并构建相应的时空模型，为面向未来的科学预测提供研究基础。</description>
      <content:encoded><![CDATA[<br>
<p>赵耀龙,巢子豪.历史GIS的研究现状和发展趋势[J].地球信息科学学报,2020,22(05):929-944.</p>
<ul>
<li>赵耀龙，华南师范大学地理科学学院教授、博士生导师、副院长。研究方向为地理信息科学与技术、空间综合人文学与社会科学。</li>
<li>巢子豪，华南师范大学地理科学学院GIS专业博士研究生，研究方向为空间藏学。</li>
</ul>
<h2 id="摘要">摘要</h2>
<p>历史地理信息系统（历史GIS）属于地理信息系统（GIS）与历史学相结合的交叉研究领域，它有机地集成了GIS的技术方法、地理学家的空间视角和历史学家的时间视角，量化历史时期的地理过程并构建相应的时空模型，为面向未来的科学预测提供研究基础。历史GIS兴起于20世纪90年代中期，给GIS学科、历史地理学和历史学都带来了新的研究机遇与活力，并表现出强劲的发展势头，但也存在一些尚待解决的问题。近年来，历史GIS向社会提供了日益丰富的历史地理信息服务，并逐渐跨越系统的技术层面，向着科学层面纵深发展。本文通过对国内外相关文献的梳理与分析，回顾了历史GIS产生的背景，从数字化、数据模型、数据库建设与系统开发、空间分析和可视化5个方面综述了国内外历史GIS的研究现状。最后，从历史资料的空间化与数字化、历史地理时空大数据、历史地理空间框架构建及历史地理信息服务、历史地理时空过程及模型构建、历史地理信息科学和技术学科体系的形成等角度展望了历史GIS的发展趋势，以期为历史GIS未来的发展提供新的研究思路。</p>
<p>关键词: 历史GIS 研究现状 发展趋势 空间化 历史地理时空大数据 历史地理空间框架 历史地理信息服务 历史地理信息科学与技术</p>
<br>
<h2 id="1-引言">1. 引言</h2>
<p>地理学与历史学分属于对空间差异、时间分化进行研究的学科，而对历史的研究不可能完全脱离地理空间，通过侧重于对人类生活中有形环境的研究，地理学日益进入到历史学的研究领域，并产生了相应的交叉研究学科。历史地理学即是这样一门研究人类历史时期地理环境变化及其规律的学科。传统历史地理学的研究方法主要集中于历史文献资料的归纳和演绎，缺乏现代科学技术手段的应用，较难对统计计量科学意义上的规律进行探讨。随着信息化、智慧化技术的迅猛发展和地球信息科学的兴起，历史地理学在迎来发展机遇的同时，也面临着诸多挑战。如何推动传统历史地理学中研究方法与科学思维在新时代的发展与创新，便是亟待解决的问题之一。地理信息系统（GIS）应用现代数字化技术手段解决时间和空间问题，在信息化和智慧化浪潮中得到了快速发展，并广泛应用于诸多学科领域，包括历史学和地理学，历史GIS应运而生。历史GIS集合了GIS的技术特点、地理学家的空间视角和历史学家的时间视角，通过GIS的技术方法将空间和时间视角相结合，研究时空尺度上的变化模式。</p>
<p>历史GIS常被应用于历史地理数据的管理、处理、空间分析、可视化表达等方面，为历史学研究提供了更加广泛的地理空间视角，并发挥出越来越重要的研究价值。①为历史学特别是历史地理文献中的描述性信息提供了空间化和定量化处理方法。②用于不同来源、不同类型、不同结构历史地理数据资源的有效整合，如书面文档、古地图、历史地图、现场调查结果、考古文物等。通过建立历史GIS专题数据库，实现不同历史地理数据在同一个时空框架内的综合管理，有助于历史研究的条理性与系统性。③将空间分析的概念引入历史研究，让历史学家们重新审视历史学中空间信息的价值和社会关系中空间要素的重要性，从历史事件的地理空间位置和时间角度出发，了解其时空演化过程和机制。④为传统历史研究提供了空间可视化的表达方法，通过动态地图、三维GIS(3D GIS)等手段生动直观地展现历史数据的空间变化过程。此外，历史GIS还促进了跨学科研究的发展，为来自历史学、地理学、测绘学、计算机科学与技术等领域的学者们提供了合作的空间；GIS与历史学的结合还可以发现传统方法难以发现的历史问题，促进历史学领域潜在信息的挖掘，并帮助检测传统数据的合理性与正确性。</p>
<p>历史GIS的出现无疑为传统的历史地理研究注入了新的活力，也为GIS研究本身提供了广阔的拓展空间。然而，目前历史GIS研究中也存在一些尚待解决的问题。例如，特定历史地理数据的缺失或难以量化，导致GIS功能难以充分发挥；部分GIS的研究方法并不完全适用于历史问题的研究，需要根据具体问题进行修正；历史GIS中大量空间和属性数据的高精度、规范化处理，以及数据库建设的高难度和高成本也是必须面对的实际问题；研究人员的知识结构难以满足历史GIS的多学科知识背景需求，历史学者往往将GIS理解为绘制地图的软件，难以在研究中挖掘出深层的时空信息等。这些问题在一定程度上制约了历史学研究中GIS作用的发挥。另外，随着GIS逐步从信息系统的技术层面走向信息服务的科学层面，历史GIS于历史地理学而言也不再仅仅是技术的实现，有必要构建历史地理信息科学与技术的学科体系，并为社会提供日益丰富的历史地理信息服务。</p>
<p>有学者从不同学科视角讨论了我国历史GIS在不同时期的发展态势。如潘威等于2012年回顾了GIS引入我国历史地理学界的10年发展历程；2018年，潘威提出了“数字人文”背景和大数据理念下我国历史地理信息化的应对策略；张萍回顾了GIS对中国历史研究的贡献和存在的问题。这些成果为历史GIS研究提供了重要参考。为全面借鉴国内外历史GIS的研究经验，本文在回顾历史GIS产生背景的基础上，从数字化、数据模型、数据库与系统开发、空间分析和可视化5个方面梳理了国内外历史GIS的发展历程和研究进展，提出历史GIS未来值得重点关注的发展趋势，以期推动历史GIS 的健康发展。</p>
<br>
<h2 id="2-历史gis产生的背景">2. 历史GIS产生的背景</h2>
<h3 id="21-国际上历史gis-产生的背景">2.1 国际上历史GIS 产生的背景</h3>
<p>历史地理学界提出将研究对象的时间和空间属性相结合始于20世纪初期。英国历史地理学家Darby于1936年提出的“横剖面法”，以时间序列中多个地理空间剖面展示了空间随着时间发生的变化。20世纪50年代，历史地理学界兴起了“定量革命”，不再局限于定性描述的研究方法，而是强调对研究对象的定量分析。20世纪80年代，数据库技术开始与历史学研究相结合。同一时期，GIS技术得到飞速发展，并被引入历史研究领域，开始用以研究历史事件发展进程、区域经济开发、聚落成长变迁、人群地域特征、灾害或疫病的空间演进等。但该类研究更多关注的是地表状况的变迁，忽略了历史地理学关心的历史现象更迭背后所隐藏的原因等问题，并且历史文献在此类研究中并未被使用，因此，该类研究不能算作GIS应用于历史地理学领域的真正开端。</p>
<p>学者们普遍认为历史GIS兴起于20世纪90年代中期，认为该领域的开山之作是1994年Goerke的《Coordinate for Historical Maps》一书，该书整理了1994 年于欧洲大学研究所举办的研讨会展示的文章。当时历史学正处于对GIS的初步了解阶段，历史GIS发展较为缓慢。这一观点在Ogborn的文章中得到了体现，该文综述了1997年历史地理领域的研究进展，但并未提及历史GIS。之后，由于GIS在历史研究领域的潜力，历史GIS经历了一个相对快速发展时期。1998年和1999年社会科学历史协会组织的历史GIS专题会议中提到了学者们热情地参与到GIS等新方法的使用中，参与者们认为新工具的使用同样意味着创新。Holdsworth在其2002年的文章中提及历史GIS，认为其是历史地理学领域一种新兴的发展趋势。Baker将历史GIS描述为历史地理学领域一项“有趣而又富有挑战的发展”。</p>
<p>对历史GIS更多、更全面的研究主要体现在2000年以后，这一时期出现了许多以历史GIS 为研究重点的出版物。Knowles在2000—2008年出版了历史GIS相关专著2部和期刊论文2篇，包括于2002年的《Past Place: GIS for History》和2008年与Hillier一同出版的《Placing history: how maps，spatial data， and GIS are changing historical scho larship》。Gregory在2003年发表了有关历史数据服务的《Guide to Practice in GIS》，并于2007 年和Ell一同出版了《Historical GIS: technolo gies， methodologies and scholarship》一书，进一步普及了历史GIS的理念、技术及相关应用。von Lünen和Travis于2013年出版了著作《GIS and History:Epistemologies，Reflections，and Conside rations》该书汇集了对多个学术领域专家的采访，分享了他们多年的经验和历史学者们为何应该接受GIS的思考。期刊方面，《Social Science History》在2000年的第24卷第3期中首先推出了历史GIS的专刊。《History and Computing》和《Historical Geography》也分别在2003年第13卷第1期和2005年第33卷中推出了历史GIS专刊。诸多刊物与文章的问世标志着历史GIS进入了快速发展时期。历史地理学者Knowles承认历史GIS的巨大进步，但也指出历史GIS距最初的期望值还相距甚远。并且GIS为历史研究带来了哪些东西，其局限又有哪些，这些都没有形成普遍可接受的观点。</p>
<br>
<h3 id="22-国内历史gis-产生的背景">2.2 国内历史GIS 产生的背景</h3>
<p>拥有悠久的历史文明使我国在古代地理学领域长期处于东亚领先地位，但在历史地理学领域日本起步更早，且领先于我国。“历史地理”这一名词于20世纪初由日本传入我国。1935 年“，历史地理”被顾颉刚、谭其骧创办的《禹贡》杂志用作英文刊名，由此扎根于国内学术界。2000年，冯仁国指出了国内历史地理学发展所遇到的问题，即历史地理学领域的技术手段滞后，与地理学主流发展相距甚远，仍停留在利用传统地图学法和事件枚举法来进行研究分析的阶段。同年，针对这一问题，中国历史地理国际研讨会在云南大学召开，会上着重讨论了领域内新兴的GIS技术。葛剑雄于会议中指出，需凭借现代化的高科技手段来提高历史地理学研究的精度。编绘数字历史地图，创建中国历史GIS的工作开始提上日程。相较于其他国家，我国发展历史GIS具有得天独厚的优势，所拥有的不同历史时期的气候、人口、经济、耕地、赋税等连续历史文字记录为发展历史GIS奠定了坚实的数据基础。</p>
<p>有学者认为，我国历史GIS的开拓者为复旦大学历史地理研究中心的满志敏，其在历史自然地理领域尝试将GIS与历史文献相结合。满志敏于2000 年发表的文章《光绪三年北方大旱的气候背景》被视为是国内GIS与历史地理研究相结合的开山之作。该文基于历史文献资料构建专题空间模型，用于模拟历史时期的地理现象，有着较高的研究起点。2001年，复旦大学历史地理研究所与美国哈佛大学等机构合作，在谭其骧主编的《中国历史地图集》基础上，开发了“中国历史地理信息系统”（China Historical Geographic Information System，CHGIS），建立了一套中国历史时期连续变化、开放的基础地理信息数据库。这一项目的启动标志着我国历史地理学信息化时代的到来。2007年，葛全胜等在总结我国现代历史地理学不同的发展阶段时提到了信息技术的引入时期，表达了当时历史地理学界对提高研究成果定量化程度和精确性的迫切需求，并介绍了历史GIS在国内取得的突破性进展。自此，历史GIS的研究在国内逐步展开。然而，仍有学者并没有真正理解历史GIS研究及技术背后的思考与判断，而是将其认为是由计算机操作的绘图工具，可见学界对历史GIS的认知仍不深刻。</p>
<p>与国外期刊相继推出历史GIS专刊相比，国内期刊对历史GIS的重视程度相对较低。截至目前，未有期刊出版过历史GIS专刊，相关文章也相对较少。</p>
<p>近年来，历史GIS的发展日益受到国内学术界的普遍重视。中国地理学会历史地理专业委员会和复旦大学历史地理研究中心于2015年举办了第一届“历史地理信息系统HGIS沙龙”，之后每年举办一次。中国地理信息科学理论与方法学术年会也曾多次组织了历史GIS分会场。</p>
<br>
<p>##3. 历史GIS研究的现状</p>
<h3 id="31-历史地理信息的数字化">3.1 历史地理信息的数字化</h3>
<p>地图是历史地理学的重要组成部分，其载体形式经历了从传统的石质、帛质、纸质等到数字化的转变。GIS具有空间表现力强、信息存储量大的特点，能够实现把历史上传统的地理空间信息描述方法和内容，转移到以地理空间坐标为基础的现代地图上，以数字化的形式再现。历史地理信息的数字化即是对历史地理信息由纸质或其它载体转化为数字形式的技术过程，有助于推动历史地理信息的深度挖掘和利用。</p>
<p>在国外，Spence于2000年在其专著中论述了历史地理信息数字化的潜力。他将伦敦17世纪90年代的行政地理学数据与税收数据相结合进行数字化，使用专题地图来探索这一时期伦敦地理的不同领域，包括营业租金、家庭密度与租金、按性别的家庭分布等，发现了数据中隐藏的空间模式。Baily等致力于将英国20世纪30至40年代开展的首次土地利用测绘图进行数字化，并评价了该半自动化程序的数字化精度。Scholzel 等开发了新的算法和数字化软件，给历史地理信息的数字化技术带来了革新，实现了对投影信息模糊的历史地图进行数字化的功能。被引入历史地理信息的数字化领域后，GIS也被广泛用于数字化历史地图集的制作。GIS技术与传统制图法的结合，既保证了制图质量又节省了时间和人工成本。并且，通过建立以行政边界为典型代表的不同类型数据层，将其与不同主题的属性数据相结合来制作数字化历史地图集已成为历史地理信息数字化的一种新模式。多个国家或地区已对既有的国家历史地图集进行了部分数字化工作。其中，美国的“世界电子图书馆”（WorldDigital Library Map Section）不仅存储有世界各地的历史地图千余件，还以电子地图插件的形式标识出历史地图所在的地理位置，以表格的形式记录了历史地图的属性信息。“欧洲历史地图资料库”(History and Maps of Europe，Euralas)以21幅历史地图表示欧洲和地中海盆地公元1世纪至20世纪的政治景观。“非洲历史动态地图集”(Animated Atlas of African History) 以动态地图的形式展现了非洲大陆1879—2002年的领土变更、政治体系变化、暴力冲突和经济人口等历史信息。“加拿大历史地图集”(Historical Atlas of Canada)在制作第二卷时引入GIS 技术，以地图、文字、图表的形式展现了加拿大19世纪和20世纪不同的历史主题与事件。“南亚电子图书馆”网站将“印度王国地名地图集”中的历史地理信息进行数字化。另外，展示专题信息的历史地图集数字化工作也相继展开。如展示19世纪40年代爱尔兰饥荒对当地劣质住宅影响等信息的“爱尔兰饥荒数据地图集”(The Atlas of Irish Famine Data)、含有德国及其部分周边地区地名信息的“德意志帝国地图集”、描绘有法国与印第安战争战场详情的“法国－印第安人战争地图”(Maps of the French and Indian War)等。</p>
<p>我国历史地理信息的数字化工作起步于复旦大学历史地理研究中心和哈佛大学等机构联合开展的“中国历史地理信息系统”项目，其数字化的阶段性成果已共享于CHGIS数据库网站。北京大历史地理研究中心与北京市测绘设计研究院合作的“北京历史数字地图”是我国第一项城市区域历史地图的数字化成果，应用GIS技术对《北京历史地图集》进行了数字化。自此，历史地图数字化工作在我国多个城市展开《天津城市历史地图集》《广西历史地图集》《沈阳市历史地图》《杭州市历史地图》《上海市历史地图》等的数字化工作相继提上日程，并已顺利完成。近年来，国内诸多学者在大比例尺历史地图数字化领域也进行了探索。上海交通大学对日本科学书院1998 年出版的《中国大陆五万分之一地图集成》一书中共计4088 幅民国历史地图进行了扫描、地理校准等数字化工作，存储于“中国历史地图地理信息系统”。韩昭庆对利用西方测绘方法绘制的康熙《皇舆全览图》进行了数字化，形成一套以1710年代为时间界面的国家基础历史地理数据库和地名数据库。史磊则尝试利用GIS技术，对民国初年河南省1:10万地形图进行数字化保护。在技术领域，谭瑛等探讨了基于数字化技术的历史地图空间解译方法，从历史地图中提取隐含的空间要素和内涵信息，进行了分类提取、类型分层、数字化转译。</p>
<p>我国历史悠久，历史地图或古地图遗存众多，在数字化、信息化的时代潮流中，越来越多的历地理信息数字化工作被提上日程。历史GIS的数字化功能为历史学及相关学科的研究提供了便利。历史地理信息数字化需求的增加也促进了历史GIS数字化技术的革新与进步。</p>
<br>
<h3 id="32-历史地理信息的数据模型">3.2 历史地理信息的数据模型</h3>
<p>GIS的数据模型是根据程式化、概念化的策略将现实世界发生的现象抽象化，可通过地理层面的点线面或离散连续场进行构建。数据模型中应定义数据类型、存取方式、关系、操作和规则，以维持数据库和信息系统的完整。如何设计一个坚固、连续的数据模型是历史GIS数据库及平台建设的关键问题之一，数据模型设计的好坏直接关系到历史GIS数据库及平台建设的成败。目前，国内外历史GIS在构建数据模型时多以时空数据模型为基础。时空数据模型也是实现不同尺度、不同时序空间数据互动与融合的基础，通过依赖于时间的表达方式来组织管理时态地理数据、属性、空间和时间语义更完整的地理数据模型，可重现历史状态，追踪历史变化以及预测未来趋势。基础、通用的历史GIS数据模型是历史GIS的基石，就像矢量数据模型之于GIS一样重要，决定了历史GIS 时空分析和表达能力的强弱。</p>
<p>国外，Langran较早做出了将时间与GIS相结合的研究尝试，他总结了时空立方体、时空复合、基态修正和时空快照模型这4种时空数据模型，并在应用实例中强调了时间分量的重要性。随后，Peuquet和Duan归纳并比较分析了基于事件的时空数据模型为代表的9种主要时空数据模型。Griffiths等针对当时的对象数据模型普遍无法整合时间与空间属性的弊端，提出了名为Tripod的空间—历史数据模型，该模型基于组件的设计使其内部的空间、时间和历史信息三者得到有机整合。在与复旦大学合作的CHGIS项目中，Berman在原有三维空间数据的基础上增加了时间维度，形成四维空间。CHGIS的数据模型满足了在特定时间点搜寻所有地理单元，通过对象特征类型筛选结果，展示某一地点随时间变化等的要求。Euratlas历史地图集网站的数据模型是不同时间点政治景观及其互相关系的集合，按等级划分为不同的政治领域，高等级领域由低等级领域构成，从低到高四级行政实体分别为：省级、一级行政单元、国家、超国家行政实体。</p>
<p>国内学者在历史地理信息数据模型领域的研究颇丰。徐志红等提出了基于事件语义的时态地理信息系统模型，并应用该模型进行了历史数据的查询及历史数据的回溯和再现。顾国民等针对历史GIS平台中时空数据的存储和显示问题进行研究，在已有时空模型的研究基础上，选用并改进了面向对象的数据模型，提出了更加适合历史GIS平台的时空数据模型。Chen等根据代表性数据的属性设计了针对历史地理名称的时空数据模型，建设了研究中国历史与文化的时空框架。于靖提出了基于地名生命周期的城市历史地名时空数据模型，解决了以可视化方式展示并查询时间截面地名等相关问题。史先瑞分析了基础历史地理信息的时空变化特征，改进基态修正数据模型，提出了一种基于对象的基础历史地理信息的数据组织方法。胡迪等认为现有的历史地理信息数据模型主要面向某一专题的历史地理数据库或信息系统，通用性差。他从地理与历史双重视角出发，以时间、地点、人物、事件历史4个要素为基础将历史信息抽象为历史人物、历史事件、历史地物和历史场景，以及关系和经历等要素，提出了一种通用的历史地理信息数据模型。历史地理信息数据模型的研究正随着各式历史地理信息数据库及系统需求的增加而日益深入。</p>
<br>
<h3 id="33-历史地理信息的数据库建设与系统开发">3.3 历史地理信息的数据库建设与系统开发</h3>
<p>历史地理空间数据的采集耗时较长，过程繁琐冗长，且往往是整个历史GIS建设过程中耗资最大的一个环节。历史地理信息数据库的建立不仅要考虑到建设成本，还要顾及到日后的管理与维护。历史地理信息数据库一旦建成，其实际需求常常超越其最初的构想，因此，设计者需考虑到诸如数据记录、元数据和数据的长期保存等问题，以便历史地理信息数据库价值得到充分展现。</p>
<p>世界上多个国家和地区已构建或正在建设本国的国家历史地理信息系统。美国地理家协会(The Association of American Geographers，AAG) 网站提供了世界各国主要的历史GIS目录。其中，由朴次茅斯大学主持的“大英历史地理信息系统”(Great Britain Historical Geographic Information System) 始建于1994年，主要提供了英国历史时期不同尺度的行政区划及区划内的人口统计信息。明尼苏达大学的明尼苏达人口研究中心的“国家历史地理信息系统”(National Historical Geographic Information System)在美国国家科学基金会资助下开发，其创建的最初意图为构建一个基础架构以支持国家范围内不同信息的专题制图。该系统汇集了1790年至今美国全国范围内的人口、住房、农业、经济统计数据和相应的历史边界矢量数据。“比利时历史地理信息系统”(Belgian Historical Geographic Information System，BHGIS)由根特大学于20世纪90年代开始建设，储存了1800—1963 年比利时国内的人口、工业、农业及贸易数据。悉尼大学开展的“时间地图计划”(TimeMap)开始于1996年，可通过网络索引的方式获取分布式资源、交互式地图、时间序列数据以及地图动画，是国际上首个基于时间序列的交互式与分布式相结合的制图系统。国际上著名的国家历史地理信息系统还包括了加拿大渥太华大学开展的“加拿大世纪研究项目”(Canadian Century Research Infrastructure)，韩国高丽大学开发的“南韩历史信息系统”(South Korea Historical GIS)，欧洲史研究所与德国梅茵兹应用技术大学联合开发的“德意志历史地理信息系统”(Historical Geographic Information System Germany)，荷兰拉德堡德大学开发的“荷兰地理信息系统”(Netherlands Geographic  Information System) 等。</p>
<p>相较于国家层面的历史地理信息平台，根据不同专题建设的历史地理信息平台数据来源更广，针对性更强。目前，世界范围内的专题历史地理信息平台较多，如哈佛大学地理分析中心开发的展现非洲历史地图与重要事件的“非洲地图(AfricaMap)”，越南佛教大学开发的可展示越南佛教场所等佛教文化的“越南佛教文化地图集网站”(Cultural Atlas of Vietnam-ese Buddhism)，悉尼大学研发的可视化“柬埔寨吴哥窟文化遗产历史地理信息平台”(Living with Heritage)，爱尔兰梅努斯大学开发的“爱尔兰人口变化地图集平台”(Irish Population Change Atlas)和“爱尔兰饥荒地图集平台”(The Atlas of Irish Famine Data) ，Migliaccio 等组织开发的意大利历史地震数据管理原型系统等。</p>
<p>我国的历史地理信息平台建设起步较晚，但发展迅速。国家层面的历史地理信息平台以“中国历史地理信息系统”和“中华文明之时空基础框架”最为著名。由复旦大学历史地理研究中心与美国哈佛大学等合作的“中国历史地理信息系统”(CHGIS)项目起始于2001年，致力于建设成为一个连续变化的中国历史时期基础地理信息数据库平台，为研究人员提供根据特定时间和地点的GIS数据查询、统计、下载、空间分析、专题制图与建模服务。CHGIS的历史空间数据来源于复旦大学历史地理研究中心的原始资料，目前已有空间数据的时间跨度为公元前221年至公元1911年。“中华文明之时空基础框架”(Chinese Civilization in Time and Space，CCTS)由中国台湾地区的中央研究院于2002 年研发完成。该系统存储了我国大量历史地图及主题化的属性信息。其中，历史地图以谭其骧先生主编的《中华历史地图集》为基础，提供有上古至清代逾两千年的中国历代疆域图等基本历史地图，并辅之持续整理的各类其它历史地图、遥感影像等。</p>
<p>除了国家历史地理信息平台，国内不同专题的历史地理信息平台也层出不穷。台湾中央研究院的“台湾历史文化地图系统”以历史文献、地名资料与古今地图为基础资料，搭建起了数字化的台湾时空基础架构平台。香港中文大学地球信息科学研究所研发的“民国时期北京都市文化历史地理信息数据库”，考察了由民国成立至抗战时期的北京市在多元文化激荡之下所呈现的文化变迁空间模式。首都师范大学历史地理研究中心与陕西师范大学出版社联合开发的“丝绸之路历史地理信息开放平台”，建立了一套自汉代张骞打通西域以来至1949年以前丝绸之路沿线逐年连续变化的基础历史地理数据库。华中科技大学建立了展现汉语方言分布与演化的“中国历史方言地理信息系统”。中国地图出版社与中国科学院遥感与数字地球研究所在中国31个主要城市古地图数字化成果的基础上，建成了可共享的“中国城市历史地理信息平台”。天津大学建筑学院建立了多角度还原明长城军事聚落历史地理原貌的“明长城军事聚落历史地理信息库”。同时，陕西理工大学的“蜀道历史地理信息系统”、华南师范大学与西藏大学联合开发的“藏语方言时空数据共享服务平台”等多个历史地理信息系统平台也处于研发之中。此外，国内诸多城市也有展现地方历史文化的地理信息系统。如，北京市测绘设计研究院开发的“北京历史文化地理信息系统”、上海师范大学主持的“国际化大都市（上海）历史人文地理信息系统”、南京大学开发的“六朝建康地名信息系统”、西安市城市规划设计研究院设计的“大西安区域历史地理信息共享服务平台”等。</p>
<p>目前，历史地理信息平台的建设正日益向着专题化、区域化的方向发展。同时，方兴未艾的历史地理信息平台建设也促进了数据库技术和基于历史地理信息平台的专题研究进步</p>
<br>
<h3 id="34-历史地理信息的空间分析">3.4 历史地理信息的空间分析</h3>
<p><strong>Gatrell将空间分析定义为内部相关的3大主题的研究：空间布局、时空过程和空间预测</strong>。空间位置信息及其随时间的变化是历史地理研究的核心，而空间分析可以定量的方式研究历史地理领域的时空现象和过程。空间分析的方法虽然不仅限于GIS，但GIS中属性数据与地理坐标相关联的数据模型使其非常适合于定量研究。历史研究有其特殊性，并不是所有的GIS空间分析方法都能直接应用于该领域，需要对其做相应调整。</p>
<p><strong>GIS在历史地理学领域的空间分析方法可以分为3大类，即：点模式分析、附有属性数据的点线面数据分析和栅格数据分析</strong>。其中，最基本的点模式分析从研究对象空间特征的角度出发，探寻点群的空间布局，不涉及其属性信息。如Longley等基于点模式使用平均中心与标准距离法研究了1850—1960年加拿大安大略省伦敦市住宅用地、公共用地、商业用地和工业用地4种土地利用类型的变化模式。其它适用于历史GIS点模式研究方法还包括了密度平滑法、距离衰退模型、地理分析机等。探索点线面数据中属性数据的空间模式，有单变量和多变量2类分析方法。局部空间自相关法是单变量分析的典型方法之一。地理加权回归是一种通过空间权重矩阵进行回归分析的多变量分析方法。Gregory 和Ell同时使用了局部空间自相关和地理加权回归分析了19世纪40年代末期爱尔兰大饥荒后的爱尔兰各地的人口减少情况。相较于矢量数据，栅格数据更适合表示连续的表面，处理没有清晰边界的不确定数据。Bartley 和Campbel收集了英格兰14 世纪上半叶的6000 多名土地私有人去世后的财产清单，根据位置信息生成点数据，并插值生成连续的栅格表面，制作了英格兰黑死病前的土地利用专题地图，进行了私有草地分布密度等分析。</p>
<p>近年来，国外学者使用GIS的空间分析功能在宗教、语言、军事、城市、疾病、遗迹、自然景观等历史地理相关研究中做了诸多尝试。Ayhan 等基于GIS 和空间统计学的方法研究了不同年份土耳其伊兹密尔清真寺的空间分布与城市发展的关系，结果表明该市清真寺的时空分布模式与城市发展模式相似。Blaxter基于核密度估计等方法追溯了挪威语言文化的时空扩散过程。Skaloš等基于数字化后的历史军事测量图和正射影像图，改良了已有的方法，研究捷克部分地区土地覆盖的长期变化情况，其方法更适用于时间尺度超过250年的长期景观变化研究。Keti从18世纪现代罗马城历史地图集中获取信息，根据不同的主题信息对不同的城市现象进行分析与解译。Bezymennyi等收集了1913—2012年乌克兰家畜炭疽病爆发位置数据，分析其时空分布模式和爆发的热点区域，并进一步研究一个世纪以来该疾病爆发地的变化趋势。Blanco等从1870—1960年的古地图中提取出5800多个马德里的水利遗产点数据，将其位置信息、时间信息和属性信息存入数据库，使用GIS 分析其多年的分布特征，得出了水利遗产日益受到城市化影响而破坏的结论。Madricardo和Donnici根据城市历史档案中的环境记录重建了意大利威尼斯舄湖从初建到现在的景观变化，并与描绘有舄湖详细信息的历史地图进行对比，揭示出舄湖景观变化对城市的影响。</p>
<p>从现有研究成果来看，历史GIS最早在国内萌芽时，空间分析功能即被应用于历史水文、历史气候、历史土地覆被、历史海岸线等多个自然地理研究领域。如潘威、满志敏等基于GIS技术构建格网体系，对近百年来上海市三角洲河网的复杂形态进行了研究。葛全胜等专注于历史气候变化及其带来的影响，先后研究了历史气候变化对农作物影响的时空分异，以及对红火蚁潜在分布区的影响。何凡能、方修琦等多次提到用GIS中空间格局网络化的方法重建历史耕地、森林等土地覆被，并分析其空间特征。张晓祥、康育龙等利用数字海岸线分析系统分别分析了历史时期江苏和杭州湾海岸线的演化方式及变化速率。GIS空间分析在历史人文地理领域也有着更加广泛的应用。其中，城市和村落空间形态与格局特征的历史演变是近年来最常被关注的领域。诸多学者基于历史文献、古地图等资料中提供的文字、图像信息，以国家级或地方历史文化名城名镇名村、历史时期城池、历史时期城市工农业用地，民国时期北京城内学校等为研究对象，利用GIS的缓冲区分析、叠加分析、统计分类分析、格网方法等GIS空间分析方法定量化研究其时空布局与形态变化过程，并结合史实分析其内在机理。历史文化与GIS的结合同样是研究的热门领域，包含有民族分布、宗教演变、方言发展、文化名人足迹等研究。杨宇亮等以GIS的技术方法对藏彝走廊与汉族走廊的民族格局开展研究，不仅描述了二者与地理空间的关联性，还反映出了民族的迁徙过程。韩冰利用地理编码技术和谷歌卫星影像获取浙江省1269座佛寺的矢量多边形、中心点数据、面积规模以及布局特征，并基于GIS对其进行了全局自相关分析、系统聚类分析等研究。张义将汉语置于一个广阔的时空背景中，直观地考察方言特征历时的演变与分布、相互影响的程度以及各方言间的亲疏度问题，并在此基础上综合考察中国历史时空坐标中的汉语方言演变轨迹。曾莹利用GIS空间化和数字化方法收集整理资料，设计空间数据库，并基于GIS分析方法探索了江西古代书院及文化名人的时空特征。与此同时，得益于GIS强大的空间分析能力和数据建模能力，诸多学者已经将GIS成功地运用于考古学领域。张海在其专著《GIS与考古学空间分析》一书中指出，考古学景观强调地表空间构成的连续性、区域性和综合性，这3大特征使得GIS技术十分适宜于考古学的景观分析。目前，作为考古学研究的一项新兴支撑技术，GIS中的数字地形分析、空间叠置分析、缓冲区分析和空间形态分析等空间分析方法常被用于研究考古遗址的空间分布规律，并用以探究遗址分布的倾向性及其与地理环境的关系。另外，国内学者还尝试将GIS应用于历史文化景观重现、文物保护、历史人口分布研究、古建筑价值评价与保护等历史人文地理领域，如首都师范大学的“丝绸之路历史地理信息系统建设”等。</p>
<p><strong>GIS中的诸多空间分析方法在历史地理领域已得到了较为广泛的应用，挖掘了传统历史地理研究中未曾发现的潜在信息。然而，历史GIS的空间分析不应该仅仅是GIS方法在历史地理领域的常规应用，随着历史GIS在历史学界的日益普及，越来越多的学者改进了GIS方法以适应不同历史研究的需求，不断丰富着历史GIS空间分析方法的理论</strong>。</p>
<br>
<h3 id="35-历史地理信息的可视化">3.5 历史地理信息的可视化</h3>
<p><strong>历史地理信息的可视化将空间、历史与属性等要素结合，在空间可视化的基础上表达时空变化与发展过程，直观反映时空对象在不同历史时间的各个状态与动态演化</strong>。GIS与历史地理空间数据结合可以反映变化的实体与现象，能够描述时空对象的产生、发展、演化与消亡的全过程。历史地理信息的可视化展现不仅仅只有纸质形式的地图，随着计算机技术的发展，越来越多的新技术与GIS相结合，传统的历史地理信息表现形式得到了颠覆性的革新。目前，GIS可视化方法中的3D GIS、动画、多媒体影像等多种技术已在历史地理研究中得到了应用。</p>
<p>3D情景的构造是目前历史地理信息可视化领域的一大热点。国外在3D GIS方面的发展已较为成熟，并与全球导航卫星系统GNSS、遥感、激光雷达等其他相关技术结合，运用于城市历史风貌、历史地形、历史古迹的还原等方面。日本的Sadahiro等使用DragonFly快速三维制图引擎，在其中叠加东京市的数字高程模型(DEM)、高分辨卫星影像和东京市的历史影像数据，实现了从不同角度和位置浏览东京城市历史风貌的功能。Harris基于数字地形模型(DTM)探索西弗吉尼亚芒兹维尔附近的格雷夫克里克土墩的史前地形。在历史考古学领域，越来越多的学者倾向于借助激光雷达和3D GIS技术进行研究，还原历史遗迹的原始面貌。尽管动画的方式生动且高效，但在历史研究领域中有效利用动画技术的实例较少。历史研究中较长的时间尺度决定了要想实现历史地理信息的动态呈现必须减少可视化对象本身的多样性和复杂性。动画、多媒体技术与GIS的结合在历史自然地理和历史人文地理两方面均有涉及。Cunfer与Rastner等分别运用GIS的动画功能探索美国大平原干旱尘暴区和Findelengletscher冰川随时间的变化。Siekierska 和Armenakis则借助多媒体方法展现加拿大历史上领土的演变。虚拟现实地理信息系统(VR-GIS)等其他可视化技术的综合应用同样对历史地理研究做出了重要贡献，其真实感和互动方式使历史地理信息的显示和观察更加生动和方便，但仍处于发展的早期阶段。Howey 和Brouwer认为考古GIS研究必将受到“数字人文”领域数据、方法与技术的影响，并提及了应用无人机影像进行“数字化故事叙述”、数字化重建和VR等技术在该领域的前景。Pérez-Martín等整合了手绘稿、照片、数字正射影像、计算机图形等多媒体图件影像，在数字摄影测量工作站、全球导航卫星系统、计算机辅助设计、和电脑动画等前沿技术的支持下，以一种新的形式展现了西班牙历史时期的风车情况。</p>
<p>在国内，基于历史文献的可视化研究也是学们较多涉及的研究领域。李海萍等以清代历史地图为例，参照国内现有的地图符号标准，研究并设计了基于GIS的清代历史地图符号库。朱锁玲和王明峰应用GIS技术实现了对《方志物产》中物产分布、物产传播等相关数据的管理和可视化制图。王哲梳理了史料中历史空间数据的可视化方法，探讨了未来经济史研究领域利用可视化手段的可能性。多名学者也在历史事件可视化角度展开过研究。王占刚等利用事件时态树结构实现历史事件时空过程可视化，并以Adobe Flex为工具开发实现了历史事件时空过程可视化算法。陈敏颉等探讨了战争历史事件可视化策略，开展了基于历史事件运动轨迹的可视化表达方法的分类研究。王加胜等利用统计图表、社会网络和GIS技术对南沙群岛历史事件演化的时空特征进行了可视化表达。GIS 与VR、多媒体等技术结合对历史古迹的三维重建也是国内历史地理信息可视化研究的热点之一。GIS三维重建的重点主要集中在古代城市、历史名迹、考古遗址等的空间格局与构造的复原上。另外，历史地理信息可视化的研究多与信息系统共生，并成为系统研究和展示的重要部分。如实现家族成员迁徙路线可视化的“族谱地理信息系统”和采用地图动画、序列地图、时间轴地图、三维场景模拟等表达人物、事件、时间、地点等多要素时空信息的“三国历史地理信息系统”。目前，关于历史变化的可视化表达技术仍需进一步深入研究。</p>
<br>
<h2 id="4-历史gis的发展趋势">4. 历史GIS的发展趋势</h2>
<p>GIS被引入历史学和历史地理学以来，解决了一些传统历史和历史地理研究中无法解决的技术和空间分析问题，得出的研究成果不仅可以为部分历史问题作出基于空间视角的解释，也在一定程度上推动着信息化时代历史学和历史地理学研究范式的创新。GIS与历史相关研究的结合日趋紧密，随着数字人文和信息化、智慧化时代的推进，其未来的发展又会呈现出新的趋势。</p>
<p>（1）构建历史资料的空间化和数字化体系，推动历史地理时空大数据的建设。</p>
<p>随着历史GIS的发展，诸多不同历史时期和不同形式的历史文献会越来越多地进入历史GIS学者的视野。历史文献资料与GIS结合程度的加深，必将推动GIS研究中地理空间的时间范围扩展并不断向前延伸。历史GIS研究需要对大量不同领域、不同尺度、不同类型的历史资料进行空间化和数字化，诸如古地图、历史地图、遥感影像、地名志、考古遗址、图版照片、历代史书资料、郡县府志、家谱、游记、诗赋等，构建历史地理时空大数据。但历史地理信息和现代地理信息有着不同的特征，比如在时态、比例尺、精度等方面，历史资料具有不同于现代地理信息的表现手法。历史资料的特殊性和差异性决定了历史资料空间化和数字化工作的困难，诸如投影、误差、接边等突出和常见问题，始终困扰着历史GIS研究者。需要梳理历史学研究对历史资料空间化和数字化的需求特点，总结历史资料的空间化和数字化技术要求，形成一套历史资料空间化和数字化的技术体系，以推动历史地理时空大数据的建设。</p>
<p>（2）建设历史地理空间框架，推动历史地理信息服务的普及。</p>
<p>历史GIS发展过程中产生了大量的历史地理信息数字化产品，不同学者和研究机构也建设了不同专题的历史GIS数据库及系统平台。然而，随着历史GIS的进一步发展，不同来源、不同尺度、不同类型的历史地理信息数字化产品往往缺乏统一基准、无法实现共享等问题逐渐突显出来。建设历史地理空间框架，是解决这一问题的重要途径。历史地理空间框架可为所有与地理位置相关的历史地理信息数据及产品提供一个统一的时空定位基准，为定位、嵌入或配准各类图形、图像、文本、视频、音频信息提供一个时空多维载体，可实现多元数据的无缝连接和整合，保证历史地理空间数据的一致性、兼容性和可转换性，使用户能够按照地理坐标或空间位置集成、检索、展示所关心的历史时期的自然、社会、经济、环境等信息。历史地理空间框架建设的宗旨是向社会公众尤其是科研人员提供易获得且通用的历史地理信息服务。历史地理信息服务的普及不仅便于科研人员研究工作的开展，也有利于社会公众了解历史地理和历史文化信息，有利于增强文化自信，从而进一步实现历史GIS 的社会价值。</p>
<p>（3）加强历史地理过程及模型研究，推动历史地理信息科学与技术学科体系的形成。</p>
<p>目前，国内外历史GIS的研究主要集中于历史地理信息的时空格局，揭示历史地理时空过程及模型构建的研究相对较少。历史地理学是研究历史时期地理环境发展、变化及其规律的科学，主要任务是探明历史时期的地理过程并构建相应的地理过程模型，从而为面向未来的科学预测提供研究基础。历史地理过程模型是抽象地表示不同历史时期地理环境状态或其组成要素特征的实物模型或数学统计模型，是理解和预测不同尺度历史地理系统格局和过程的重要研究方法。但目前的历史GIS研究成果和历史地理学的专业需求之间还存在着较大的差距。因此，充分利用历史地理时空大数据，通过数据挖掘和多源数据融合，进行历史地理过程的模型构建、模拟及重现，是未来历史GIS研究的重要发展方向之一。历史地理过程及其模型构建的研究，将推动历史GIS由信息系统向信息科学的转换，推动历史地理信息科学和技术学科体系的形成。</p>
<br>
<h2 id="5-结语">5. 结语</h2>
<p>和GIS学科本身相比，历史GIS的起步较晚，发展也较为缓慢，但已在历史地理信息的数字化、数据模型、数据库建设和系统开发、空间分析及可视化等方面取得了显著的研究进展。GIS作为一种研究手段和思维方式，越来越多地参与到历史学和历史地理研究中，在继承传统定性描述方法的基础上，以多样化的研究方法将历史学和历史地理学带入了定量化、信息化和智慧化时代。</p>
<p>得益于我国悠久历史长河中留存的大量历史文献古籍，国家层面的重视，以及历史学和历史地理学等学科领域发展的迫切需要，近年来我国的历史GIS研究取得了一定的成就，但也存在着较为明显的差距。怎样解决好历史地理数据不确定性问题？怎样充分发挥我国现存典籍多的优势？怎样促进历史地理学与GIS等新兴学科的融合发展？怎样通过构建历史地理空间框架做好历史地理信息服务的普及？如何通过历史地理过程模型的构建推动历史地理信息科学与技术学科体系的形成？这些问题的解决将成为促进我国历史GIS事业进一步发展的推动力。</p>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用Python计算地图中两点距离及方位角</title>
      <link>https://hidadeng.github.io/blog/how_to_calculate_geo_distance_in_python/</link>
      <pubDate>Thu, 17 Mar 2022 20:43:10 +0600</pubDate>
      
      <guid>/blog/how_to_calculate_geo_distance_in_python/</guid>
      <description>使用Python的geographiclib包可以用来计算地理信息，诸如两城市距离、方位角等信息</description>
      <content:encoded><![CDATA[<p><img loading="lazy" src="img/earth.jpg" alt=""  />
</p>
<br>
<h2 id="下载本文代码使用python计算地图中两点距离及方位角ipynb"><a href="%E4%BD%BF%E7%94%A8Python%E8%AE%A1%E7%AE%97%E5%9C%B0%E5%9B%BE%E4%B8%AD%E4%B8%A4%E7%82%B9%E8%B7%9D%E7%A6%BB%E5%8F%8A%E6%96%B9%E4%BD%8D%E8%A7%92.ipynb">下载本文代码</a></h2>
<br>
<h2 id="如何计算地图中两点距离及角度">如何计算地图中两点距离及角度</h2>
<p>例如北京市北纬40.1，东经116.6； 哈尔滨市北纬45.7567, 东经126.6424</p>
<p>感兴趣的童鞋也可去看问题出处</p>
<blockquote>
<p><a href="https://stackoverflow.com/questions/3932502/calculate-angle-between-two-latitude-longitude-points/51415608">https://stackoverflow.com/questions/3932502/calculate-angle-between-two-latitude-longitude-points/51415608</a></p>
</blockquote>
<p>在回答中，看到有地理信息系统Python包geographiclib，可以计算两点距离和角度。</p>
<br>
<h2 id="安装geographiclib">安装geographiclib</h2>
<p><a href="https://geographiclib.sourceforge.io/1.52/python/">https://geographiclib.sourceforge.io/1.52/python/</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">geographiclib</span><span class="o">==</span><span class="mf">1.52</span>
</code></pre></div><br>
<h2 id="计算距离">计算距离</h2>
<p>注意，在接下来的计算中，将北纬、东经表示为正数。将南纬、西经表示为负数。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">distance</span><span class="p">(</span><span class="n">beiwei1</span><span class="p">,</span> <span class="n">dongjing1</span><span class="p">,</span> <span class="n">beiwei2</span><span class="p">,</span> <span class="n">dongjing2</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    beiwei1: 地点1的纬度数，如果地点在北半球，北纬为正；反之为负。
</span><span class="s2">    dongjing1: 地点2的经度数， 如果位于东半球，东经数为正；反之为负
</span><span class="s2">    beiwei2: 地点2的纬度数
</span><span class="s2">    dongjing2: 地点2的经度数
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="kn">from</span> <span class="nn">geographiclib.geodesic</span> <span class="kn">import</span> <span class="n">Geodesic</span>
    <span class="n">geod</span> <span class="o">=</span> <span class="n">Geodesic</span><span class="o">.</span><span class="n">WGS84</span>
    <span class="n">g</span> <span class="o">=</span> <span class="n">geod</span><span class="o">.</span><span class="n">Inverse</span><span class="p">(</span><span class="n">beiwei1</span><span class="p">,</span> <span class="n">dongjing1</span><span class="p">,</span> <span class="n">beiwei2</span><span class="p">,</span> <span class="n">dongjing2</span><span class="p">)</span>
    <span class="n">distance</span> <span class="o">=</span> <span class="n">g</span><span class="p">[</span><span class="s1">&#39;s12&#39;</span><span class="p">]</span><span class="o">/</span><span class="mi">1000</span>
    <span class="k">return</span> <span class="n">distance</span>
    

<span class="c1">#北京Beijing与哈尔滨harbin</span>
<span class="n">distance</span><span class="p">(</span><span class="mf">40.1</span><span class="p">,</span> <span class="mf">116.6</span><span class="p">,</span> <span class="mf">45.7567</span><span class="p">,</span> <span class="mf">126.6424</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<pre><code>1031.617791888516
</code></pre>
<p><img loading="lazy" src="img/%e8%b7%9d%e7%a6%bb.png" alt=""  />
</p>
<br>
<h2 id="方位角azimuth">方位角azimuth</h2>
<p>两个地点在地图中所处的相对位置，称之为方位角azimuth。方位角最大度数360度，</p>
<ul>
<li>0度表示正北</li>
<li>90度表示正西</li>
<li>180度表示正南</li>
<li>270度表示正西</li>
<li>360度表示正北</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">azimuth</span><span class="p">(</span><span class="n">beiwei1</span><span class="p">,</span> <span class="n">dongjing1</span><span class="p">,</span> <span class="n">beiwei2</span><span class="p">,</span> <span class="n">dongjing2</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    beiwei1: 地点1的纬度数，如果地点在北半球，北纬为正；反之为负。
</span><span class="s2">    dongjing1: 地点2的经度数， 如果位于东半球，东经数为正；反之为负
</span><span class="s2">    beiwei2: 地点2的纬度数
</span><span class="s2">    dongjing2: 地点2的经度数
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="kn">from</span> <span class="nn">geographiclib.geodesic</span> <span class="kn">import</span> <span class="n">Geodesic</span>
    <span class="n">geod</span> <span class="o">=</span> <span class="n">Geodesic</span><span class="o">.</span><span class="n">WGS84</span>
    <span class="n">l</span> <span class="o">=</span> <span class="n">geod</span><span class="o">.</span><span class="n">InverseLine</span><span class="p">(</span><span class="n">beiwei1</span><span class="p">,</span> <span class="n">dongjing1</span><span class="p">,</span> <span class="n">beiwei2</span><span class="p">,</span> <span class="n">dongjing2</span><span class="p">)</span>
    <span class="n">s12</span> <span class="o">=</span> <span class="n">distance</span><span class="p">(</span><span class="n">beiwei1</span><span class="p">,</span> <span class="n">dongjing1</span><span class="p">,</span> <span class="n">beiwei2</span><span class="p">,</span> <span class="n">dongjing2</span><span class="p">)</span>
    <span class="n">g</span> <span class="o">=</span> <span class="n">l</span><span class="o">.</span><span class="n">Position</span><span class="p">(</span><span class="n">s12</span><span class="p">,</span> <span class="n">Geodesic</span><span class="o">.</span><span class="n">STANDARD</span> <span class="o">|</span> <span class="n">Geodesic</span><span class="o">.</span><span class="n">LONG_UNROLL</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">g</span><span class="p">[</span><span class="s1">&#39;azi2&#39;</span><span class="p">]</span>

<span class="c1">#北京 哈尔滨</span>
<span class="n">azimuth</span><span class="p">(</span><span class="mf">40.1</span><span class="p">,</span> <span class="mf">116.6</span><span class="p">,</span> <span class="mf">45.7567</span><span class="p">,</span> <span class="mf">126.6424</span><span class="p">)</span>
</code></pre></div><pre><code>56.03961942267271
</code></pre>
<p>按照azimuth定义，56度的解读为 哈尔滨位于北京的东北方向。</p>
<p>同理可以计算西安与杭州</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#西安， 杭州</span>
<span class="n">azimuth</span><span class="p">(</span><span class="mf">34.2658</span><span class="p">,</span> <span class="mf">108.9541</span><span class="p">,</span> <span class="mf">30.2741</span><span class="p">,</span> <span class="mf">120.1552</span><span class="p">)</span>
</code></pre></div><pre><code>115.1506923699206
</code></pre>
<p>杭州位于西安的115度，即东南方向</p>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>在Python中使用Greppo构建的地理空间仪表板</title>
      <link>https://hidadeng.github.io/blog/geospatial_with_greppo/</link>
      <pubDate>Sat, 12 Mar 2022 20:43:10 +0600</pubDate>
      
      <guid>/blog/geospatial_with_greppo/</guid>
      <description>缺乏前端、后端和网络开发经验可能会限制使用 Python 制作网络应用程序。 在Python中使用 Greppo构建的地理空间仪表板</description>
      <content:encoded><![CDATA[<div style="text-align: center;">
<figure >
    <a href="vector-demo.zip">
        <img src="img/1.gif" width="100%" />
    </a>
    <figcaption><small><i>点击本图下载本文项目代码</i></small></figcaption>
</figure>
</div>
<h2 id="下载项目数据代码vector-demozip"><a href="vector-demo.zip">下载项目数据代码</a></h2>
<p><strong>地理空间数据分析</strong>已成为数据科学中的一个常见领域。对于地理空间数据科学来说也不例外。支持 GeoPandas、Shapely 和 Rasterio 等项目的社区使 Python 成为地理空间分析的首选。</p>
<br>
<h2 id="greppo快速简单的地理空间仪表板构建方法">Greppo：快速简单的地理空间仪表板构建方法</h2>
<p>Greppo 是一个用于构建地理空间网络应用程序的开源 Python 框架。 它提供了可随时使用的前端和后端组件作为函数，充当前端交互组件和绑定的后端变量之间的 API。 要了解有关心智模型的更多信息，<a href="https://docs.greppo.io/mental-model.html">请参阅此页面</a>。</p>
<p>无需太多前端、后端、Web 开发经验，您就可以在 5 分钟内使用 Python 构建和部署功能齐全的 Web 应用程序。</p>
<ul>
<li>GitHub存储库：https://github.com/greppo-io/greppo</li>
<li>文档：https://docs.greppo.io/</li>
<li>网站：https://greppo.io/</li>
</ul>
<blockquote>
<p>在本教程中，我们将使用 Greppo 在 Python 中构建地理空间仪表板。 我们将通过设置环境、安装、导入数据、为我们的仪表板放入组件并为其提供服务来工作。 您将需要了解 Python、GeoPandas 和地理空间分析的基础知识。
入门…</p>
</blockquote>
<p>首先要做的是安装本文需要的 Python 第三方库。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install greppo geopandas
</code></pre></div><p>下载本教程所需的数据集。 本教程的所有数据和代码都可以在这个 GitHub 存储库中找到：greppo-demo/vector-demo（数据源：https://github.com/openpolis/geojson-italy）</p>
<br>
<h2 id="编写仪表板脚本">编写仪表板脚本</h2>
<p>我们首先为项目设置文件夹结构。 我将使用以下项目文件夹结构：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">└── vector-demo
    ├── app.py
    ├── cities.geojson
    ├── regions.geojson
    └── roads.geojson
</code></pre></div><p>该应用程序的主控脚本是 app.py。</p>
<br>
<h2 id="step-0启动服务器">Step 0：启动服务器</h2>
<p>启动服务器，请打开**终端（windows对应的是命令行cmd）**并按照这些说明进行操作。</p>
<p>首先，终端中执行<code>cd vector_demo</code>将工作目录切换为 (cd) 项目文件夹 <strong>vector_demo</strong>。</p>
<p>然后，终端执行<code>greppo serve app.py</code>, 启动服务器。</p>
<div style="text-align: center;">
<figure >
    
        <img src="img/2.png" width="90%" />
    
    <figcaption><small><i>在命令行中启动服务器</i></small></figcaption>
</figure>
</div>
<p>然后，您将看到 Uvicorn 服务器在指定位置（类似于链接）运行。 复制网址链接，并将其粘贴到浏览器中。 然后它将加载应用程序。 如果您对 app.py 进行了任何更改，您将在浏览器页面上看到对您的应用的更新更改。</p>
<br>
<h2 id="step-1构建应用程序的基本脚手架">Step 1：构建应用程序的基本脚手架。</h2>
<p>即导入 greppo 包，并在地图中添加 base_layer。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="kn">from</span> <span class="nn">greppo</span> <span class="kn">import</span> <span class="n">app</span>

<span class="n">app</span><span class="o">.</span><span class="n">base_layer</span><span class="p">(</span>
    <span class="n">name</span><span class="o">=</span><span class="s2">&#34;Open Street Map&#34;</span><span class="p">,</span>
    <span class="n">visible</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
    <span class="n">url</span><span class="o">=</span><span class="s2">&#34;https://</span><span class="si">{s}</span><span class="s2">.tile.openstreetmap.org/</span><span class="si">{z}</span><span class="s2">/</span><span class="si">{x}</span><span class="s2">/</span><span class="si">{y}</span><span class="s2">.png&#34;</span><span class="p">,</span>
    <span class="n">subdomains</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
    <span class="n">attribution</span><span class="o">=</span><span class="s1">&#39;(C) OpenStreetMap contributors&#39;</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">base_layer</span><span class="p">(</span><span class="n">provider</span><span class="o">=</span><span class="s2">&#34;CartoDB Positron&#34;</span><span class="p">)</span>
</code></pre></div><p>您需要先从 greppo 导入应用程序。 此应用程序对象将用作您的应用程序前端的接口，并为前端和后端之间的 2 路通信提供 API。</p>
<div style="text-align: center;">
<figure >
    
        <img src="img/3.png" width="90%" />
    
    
</figure>
</div>
<p>要将 base_layer 添加到您的应用程序地图，只需使用带有所需参数的应用程序 API 方法 app.base_layer()。 请<a href="https://docs.greppo.io/">参阅文档</a>以了解什么是必需的和什么是可选的。 base_layer 方法提供了两种方法来指定基本瓦片层。 一种是使用 name 和 url 属性。 另一种方法是使用提供者的名称。</p>
<br>
<h2 id="step-2导入数据集并将其显示为叠加层">Step 2：导入数据集并将其显示为叠加层。</h2>
<p>使用 geopandas，我们可以将矢量数据集作为 GeoDataFrame 导入。 然后可以使用 app.vector_layer() 方法在 Web 应用程序上的地图上对其进行可视化。
在这里，我要导入三个不同的数据集，每个数据集都有多边形（意大利不同地区的边界）、线（意大利的主要高速公路）和点（意大利的主要城市）。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">geopandas</span> <span class="k">as</span> <span class="nn">gpd</span>
<span class="kn">from</span> <span class="nn">greppo</span> <span class="kn">import</span> <span class="n">app</span>

<span class="n">regions</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./regions.geojson&#34;</span><span class="p">)</span>
<span class="n">roads</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./roads.geojson&#34;</span><span class="p">)</span>
<span class="n">cities</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./cities.geojson&#34;</span><span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">vector_layer</span><span class="p">(</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">regions</span><span class="p">,</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;Regions of Italy&#34;</span><span class="p">,</span>
    <span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;Polygons showing the boundaries of regions of Italy.&#34;</span><span class="p">,</span>
    <span class="n">style</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;fillColor&#34;</span><span class="p">:</span> <span class="s2">&#34;#4daf4a&#34;</span><span class="p">},</span>
<span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">vector_layer</span><span class="p">(</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">roads</span><span class="p">,</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;Highways in Italy&#34;</span><span class="p">,</span>
    <span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;Lines showing the major highways in Italy.&#34;</span><span class="p">,</span>
    <span class="n">style</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;color&#34;</span><span class="p">:</span> <span class="s2">&#34;#377eb8&#34;</span><span class="p">},</span>
<span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">vector_layer</span><span class="p">(</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">cities</span><span class="p">,</span>
    <span class="n">name</span> <span class="o">=</span> <span class="s2">&#34;Cities of Italy&#34;</span><span class="p">,</span>
    <span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;Points showing the cities in Italy.&#34;</span><span class="p">,</span>
    <span class="n">style</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;color&#34;</span><span class="p">:</span> <span class="s2">&#34;#e41a1c&#34;</span><span class="p">},</span>
    <span class="n">visible</span> <span class="o">=</span> <span class="kc">True</span><span class="p">,</span>
<span class="p">)</span>
</code></pre></div><p>使用方法 app.vector_layer() 作为前端的 API，我们可以显示矢量数据。 您需要传入名称，其他参数是可选的。 虽然，将颜色或填充颜色传递给样式是区分和识别每一层的好习惯。 由于前端基于 Leaflet，所有样式都符合 Leaflet 的规范，可以在文档中找到。</p>
<div style="text-align: center;">
<figure >
    
        <img src="img/4.png" width="100%" />
    
    
</figure>
</div>
<p>您可以在此处找到 vector_layer 和样式的所有信息。 注意：您也可以制作 Choropleth 地图。 可以在此处找到其文档。</p>
<br>
<h2 id="step-3显示应用内文本应用标题和应用描述">Step 3：显示应用内文本、应用标题和应用描述</h2>
<p>为了使 Web 应用程序有用，它需要携带一些文本以向其用户提供一些指导和上下文。 这些可以显示在组件旁边的侧边栏上。 使用 app.display() 方法可以在 web-app 上显示降价文本。 使用相同的方法，可以设置应用程序的标题和描述。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">greppo</span> <span class="kn">import</span> <span class="n">app</span>

<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;title&#39;</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="s1">&#39;Vector demo&#39;</span><span class="p">)</span>
<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;description&#39;</span><span class="p">,</span>
            <span class="n">value</span><span class="o">=</span><span class="s1">&#39;A Greppo demo app for vector data using GeoJSON data.&#39;</span><span class="p">)</span>

<span class="n">text_1</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span><span class="s2">## About the web-app
</span><span class="s2">The dashboard shows the boundaries of the regions of Italy as polygons, 
</span><span class="s2">the major arterial higways as lines and the major cities of each region as points.
</span><span class="s2">&#34;&#34;&#34;</span>

<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;text-1&#39;</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="n">text_1</span><span class="p">)</span>
</code></pre></div><p>app.display() 接受两个参数 name 和 value 。 虽然 value 承载要显示的文本，但 name 必须是唯一的，并带有文本的标识符。 如果 name=&lsquo;title&rsquo; 传递的值是应用程序的标题，如果 name=&lsquo;description&rsquo; 传递的值是应用程序的描述。 如果没有这两者中的任何一个，该应用程序将带有其默认标题和描述。 鼓励设置应用程序的标题和描述。</p>
<div style="text-align: center;">
<figure >
    
        <img src="img/5.png" width="100%" />
    
    
</figure>
</div>
<br>
<h2 id="step-4将数据显示为图表">Step 4：将数据显示为图表</h2>
<p>数据应用程序几乎没有将数据显示为图表。 Greppo 还允许您将数据显示为图表。 可以在文档中找到有关图表及其用法的信息。 这里，作为一个例子，展示了一个条形图，app.bar_chart()。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">greppo</span> <span class="kn">import</span> <span class="n">app</span>
<span class="kn">import</span> <span class="nn">geopandas</span> <span class="k">as</span> <span class="nn">gpd</span>

<span class="n">regions</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./regions.geojson&#34;</span><span class="p">)</span>
<span class="n">roads</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./roads.geojson&#34;</span><span class="p">)</span>
<span class="n">cities</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./cities.geojson&#34;</span><span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;text-2&#39;</span><span class="p">,</span>
            <span class="n">value</span><span class="o">=</span><span class="s1">&#39;The following displays the count of polygons, lines and points as a barchart.&#39;</span><span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">bar_chart</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;Geometry count&#39;</span><span class="p">,</span> <span class="n">description</span><span class="o">=</span><span class="s1">&#39;A bar-cart showing the count of each geometry-type in the datasets.&#39;</span><span class="p">,</span>
              <span class="n">x</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;polygons&#39;</span><span class="p">,</span> <span class="s1">&#39;lines&#39;</span><span class="p">,</span> <span class="s1">&#39;points&#39;</span><span class="p">],</span> <span class="n">y</span><span class="o">=</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">regions</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">roads</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">cities</span><span class="p">)],</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;#984ea3&#39;</span><span class="p">)</span>
</code></pre></div><p>图表所需的参数是名称、x 和 y 值。 可以添加描述和颜色来为应用程序用户提供更好的上下文。 名称和描述与图表一起显示。</p>
<div style="text-align: center;">
<figure >
    
        <img src="img/6.png" width="90%" />
    
    
</figure>
</div>
<br>
<h2 id="结论">结论</h2>
<p>让我们全面了解一下我们在这里所做的事情。 我们的目标是使用 Greppo 创建一个地理空间 web 应用程序，以显示一些 GIS 矢量数据，并添加组件以为应用程序的用户提供更好的上下文。 这是该应用程序的完整代码：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">greppo</span> <span class="kn">import</span> <span class="n">app</span>
<span class="kn">import</span> <span class="nn">geopandas</span> <span class="k">as</span> <span class="nn">gpd</span>

<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;title&#39;</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="s1">&#39;Vector demo&#39;</span><span class="p">)</span>
<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;description&#39;</span><span class="p">,</span>
            <span class="n">value</span><span class="o">=</span><span class="s1">&#39;A Greppo demo app for vector data using GeoJSON data.&#39;</span><span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">base_layer</span><span class="p">(</span>
    <span class="n">name</span><span class="o">=</span><span class="s2">&#34;Open Street Map&#34;</span><span class="p">,</span>
    <span class="n">visible</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
    <span class="n">url</span><span class="o">=</span><span class="s2">&#34;https://</span><span class="si">{s}</span><span class="s2">.tile.openstreetmap.org/</span><span class="si">{z}</span><span class="s2">/</span><span class="si">{x}</span><span class="s2">/</span><span class="si">{y}</span><span class="s2">.png&#34;</span><span class="p">,</span>
    <span class="n">subdomains</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span>
    <span class="n">attribution</span><span class="o">=</span><span class="s1">&#39;(C) OpenStreetMap contributors&#39;</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">base_layer</span><span class="p">(</span>
    <span class="n">provider</span><span class="o">=</span><span class="s2">&#34;CartoDB Positron&#34;</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">regions</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./regions.geojson&#34;</span><span class="p">)</span>
<span class="n">roads</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./roads.geojson&#34;</span><span class="p">)</span>
<span class="n">cities</span> <span class="o">=</span> <span class="n">gpd</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="s2">&#34;./cities.geojson&#34;</span><span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">vector_layer</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">regions</span><span class="p">,</span>
    <span class="n">name</span><span class="o">=</span><span class="s2">&#34;Regions of Italy&#34;</span><span class="p">,</span>
    <span class="n">description</span><span class="o">=</span><span class="s2">&#34;Polygons showing the boundaries of regions of Italy.&#34;</span><span class="p">,</span>
    <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;fillColor&#34;</span><span class="p">:</span> <span class="s2">&#34;#4daf4a&#34;</span><span class="p">},</span>
<span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">vector_layer</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">roads</span><span class="p">,</span>
    <span class="n">name</span><span class="o">=</span><span class="s2">&#34;Highways in Italy&#34;</span><span class="p">,</span>
    <span class="n">description</span><span class="o">=</span><span class="s2">&#34;Lines showing the major highways in Italy.&#34;</span><span class="p">,</span>
    <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;color&#34;</span><span class="p">:</span> <span class="s2">&#34;#377eb8&#34;</span><span class="p">},</span>
<span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">vector_layer</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span><span class="n">cities</span><span class="p">,</span>
    <span class="n">name</span><span class="o">=</span><span class="s2">&#34;Cities of Italy&#34;</span><span class="p">,</span>
    <span class="n">description</span><span class="o">=</span><span class="s2">&#34;Points showing the cities in Italy.&#34;</span><span class="p">,</span>
    <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;color&#34;</span><span class="p">:</span> <span class="s2">&#34;#e41a1c&#34;</span><span class="p">},</span>
    <span class="n">visible</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">text_1</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span><span class="s2">## About the web-app
</span><span class="s2">
</span><span class="s2">The dashboard shows the boundaries of the regions of Italy as polygons, the 
</span><span class="s2">major arterial higways as lines and the major cities of each region as points.
</span><span class="s2">&#34;&#34;&#34;</span>

<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;text-1&#39;</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="n">text_1</span><span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">display</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;text-2&#39;</span><span class="p">,</span>
            <span class="n">value</span><span class="o">=</span><span class="s1">&#39;The following displays the count of polygons, lines and points as a barchart.&#39;</span><span class="p">)</span>

<span class="n">app</span><span class="o">.</span><span class="n">bar_chart</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;Geometry count&#39;</span><span class="p">,</span> <span class="n">description</span><span class="o">=</span><span class="s1">&#39;A bar-cart showing the count of each geometry-type in the datasets.&#39;</span><span class="p">,</span>
              <span class="n">x</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;polygons&#39;</span><span class="p">,</span> <span class="s1">&#39;lines&#39;</span><span class="p">,</span> <span class="s1">&#39;points&#39;</span><span class="p">],</span> <span class="n">y</span><span class="o">=</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">regions</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">roads</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">cities</span><span class="p">)],</span> <span class="n">color</span><span class="o">=</span><span class="s1">&#39;#984ea3&#39;</span><span class="p">)</span>
</code></pre></div><p>运行效果如下</p>
<div style="text-align: center;">
<figure >
    <a href="vector-demo.zip">
        <img src="img/1.gif" width="100%" />
    </a>
    <figcaption><small><i>点击本图下载本文项目代码</i></small></figcaption>
</figure>
</div>
<h2 id="下载项目数据代码vector-demozip-1"><a href="vector-demo.zip">下载项目数据代码</a></h2>
<p><br><br></p>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
