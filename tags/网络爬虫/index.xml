<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>网络爬虫 on 大邓和他的PYTHON</title>
    <link>/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</link>
    <description>Recent content in 网络爬虫 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 07 Jan 2022 12:43:10 +0600</lastBuildDate><atom:link href="/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>大邓整理的有用Python项目</title>
      <link>https://hidadeng.github.io/blog/python_tools/</link>
      <pubDate>Fri, 07 Jan 2022 12:43:10 +0600</pubDate>
      
      <guid>/blog/python_tools/</guid>
      <description>涵盖网络爬虫、数据库、数据分析、机器学习、可视化、文本分析</description>
      <content:encoded><![CDATA[<h2 id="tool_kits">Tool_Kits</h2>
<p>工具箱大全,主要是Python项目。</p>
<p>涵盖：</p>
<ol>
<li>网络爬虫</li>
<li>数据库</li>
<li>数据分析</li>
<li>机器学习</li>
<li>可视化</li>
<li>文本分析</li>
<li>GUI</li>
<li>自动化办公</li>
<li>其他</li>
</ol>
<br>
<h2 id="网络爬虫">网络爬虫</h2>
<ul>
<li><a href="https://github.com/psf/requests">requests</a>  最好用的网络爬虫访问库</li>
<li><a href="https://github.com/hidadeng/smartscraper">smartscraper</a>  最简单的网络爬虫访问&amp;解析库</li>
<li><a href="https://github.com/hidadeng/weibo_crawler">weibo_crawler</a> 最简单的微博爬虫</li>
<li><a href="https://mp.weixin.qq.com/s/qL1uEk4j_ks3uhjINe-xyA">崔庆才大神发布的测试站点</a></li>
<li><a href="https://github.com/Gerapy/GerapyAutoExtractor">gerapy-auto-extractor</a> 爬虫页面智能解析库</li>
<li><a href="https://github.com/davidteather/TikTok-Api">TikTok-Api</a> 抖音国际站爬虫库</li>
<li><a href="https://github.com/tebelorg/RPA-Python">rpa</a> Python自动化操纵包</li>
<li><a href="https://github.com/celery/celery/">celery</a> 可以用于制作爬虫访问队列</li>
<li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">BeautifulSoup</a> 最简单的网页解析库</li>
<li><a href="https://github.com/gawel/pyquery">pyquery</a>  最简洁网页解析库</li>
<li><a href="https://github.com/scrapy/scrapy">scrapy</a> 最流行的爬虫框架</li>
<li><a href="https://github.com/binux/pyspider">pyspider</a> 国人开发的爬虫框架</li>
<li><a href="https://github.com/SeleniumHQ/selenium/">selenium</a> 浏览器自动化测试框架，可以用于爬虫反爬</li>
<li><a href="https://github.com/microsoft/playwright">playwright</a> 微软开源的浏览器自动化测试框架</li>
<li><a href="https://github.com/imWildCat/scylla">scylla</a> 智能IP代理池，用于反爬</li>
<li><a href="https://github.com/hidadeng/shreport">shreport</a> 上海证券交易所上市公司定期报告下载</li>
<li><a href="https://github.com/codelucas/newspaper">newspaper</a> 新闻爬虫库，根据提供的url可以抽取出新闻标题、作者、关键词、总结，部分功能支持中文</li>
<li><a href="https://github.com/sml2h3/ddddocr">ddddocr</a>  通用验证码识别OCR pypi版</li>
</ul>
<br>
<h2 id="web">Web</h2>
<ul>
<li><a href="https://github.com/getpelican/pelican">pelican</a> Python静态网站生成库</li>
<li><a href="https://github.com/pallets/flask">flask</a> 可以开发网站、分享rest-api接口;流行度top2的web框架</li>
<li><a href="https://github.com/streamlit/streamlit">streamlit</a>、<a href="https://github.com/wang0618/PyWebIO">PyWebIO</a>对Python小白最友好的的web库</li>
<li><a href="https://github.com/tiangolo/fastapi">fastapi</a>  web框架，高性能，易于学习，快速编写代码；</li>
<li><a href="https://github.com/wang0618/PyWebIO">PyWebIO</a>  不需要编写HTML和JS代码，就可以构建简单的基于浏览器的GUI应用。</li>
<li><a href="https://github.com/mkdocs/mkdocs">mkdocs</a> 制作文档网站
<br></li>
</ul>
<h2 id="数据库">数据库</h2>
<ul>
<li><a href="https://github.com/PyMySQL/PyMySQL">PyMySQL</a></li>
<li><a href="https://docs.python.org/3/library/sqlite3.html">Sqlite3</a>  轻量级sql数据库(python内置库)</li>
<li><a href="https://github.com/mongodb/mongo-python-driver">pymongo</a> 非关系型MongoDB库</li>
<li><a href="https://github.com/redis/redis">redis</a>  Redis数据库</li>
<li><a href="https://github.com/py2neo-org/py2neo">py2neo</a>  对接Neo4J数据库的python库</li>
<li><a href="https://github.com/simonw/datasette">datasette</a> 探索和发布数据的开源多功能工具，主要面向数据记者、博物馆馆长、档案管理员、地方政府、科学家、研究人员以及任何拥有希望与世界分享数据的人。</li>
</ul>
<br>
<h2 id="数据分析">数据分析</h2>
<ul>
<li><a href="https://github.com/pandas-dev/pandas">pandas</a> 必须Python数据分析库，读取文件、预处理数据、分析、存储</li>
<li><a href="https://github.com/garrettj403/SciencePlots">SciencePlots</a>  科学绘图的Python工具包</li>
<li><a href="https://github.com/orchest/orchest">Orchest</a> 创建数据科学工作量的工具。Orchest是一款Web数据科学工具，可在文件系统上运行</li>
<li><a href="https://github.com/statsmodels/statsmodels">statsmodels</a> Python的统计计量统计库</li>
<li><a href="https://github.com/bashtage/linearmodels">linearmodels</a> 添加线性模型，包括statsmodels中缺少的工具变量和面板数据模型。</li>
<li><a href="https://github.com/streamlit/streamlit">streamlit</a> 快速搭建本地数据分析类Web应用</li>
<li><a href="https://github.com/modin-project/modin">modin</a> pandas加速库，接口语法与pandas高度一致</li>
<li><a href="https://github.com/dask/dask">dask</a>  pandas加速库，接口语法与pandas高度一致</li>
<li><a href="https://github.com/has2k1/plydata%5D">plydata</a>  pandas管道语法库</li>
<li><a href="https://github.com/networkx/networkx">networkx</a> 社交网络分析库</li>
</ul>
<br>
<p>​</p>
<h2 id="机器学习">机器学习</h2>
<ul>
<li><a href="https://github.com/VowpalWabbit/vowpal_wabbit">vowpal wabbit</a>  机器学习的前沿库</li>
<li><a href="https://github.com/scikit-learn/scikit-learn">scikit-learn</a> 机器学习必学库，支持有监督、无监督多种算法，含文本分析功能</li>
<li><a href="https://github.com/biolab/orange3">Orange3</a> 点击操作的机器学习分析<strong>软件</strong>， 可文本分析</li>
<li><a href="https://github.com/doccano/doccano">doccano</a> 文本数据标注工具</li>
<li><a href="https://github.com/heartexlabs/label-studio">label-studio</a>  最牛掰的文本数据标注工具</li>
</ul>
<h2 id="可视化">可视化</h2>
<ul>
<li><a href="https://github.com/streamlit/streamlit">streamlit</a> 快速搭建本地数据分析类Web应用</li>
<li><a href="https://github.com/matplotlib/matplotlib">matplotlib</a>  Python中最万能绘图库，很少有ta画不出来的图；但语法较难、静态图</li>
<li><a href="https://github.com/nschloe/matplotx">matplotx</a>  Matplotlib扩展库，可以提供更多样式，简化样式设定</li>
<li><a href="https://github.com/mwaskom/seaborn">seaborn</a> 基于matplotlib开发的简化版可视化库， 一般的图可以用ta绘制； 高度定制仍需要结合matplotlib进行样式定制；静态图</li>
<li><a href="https://github.com/has2k1/plotnine">plotnine</a>  ggplot2语法的Python可视化库， 可与<a href="https://github.com/has2k1/plydata%5D">plydata</a> 库结合使用</li>
<li><a href="https://github.com/pyecharts/pyecharts">pyecharts</a> 国人开发并封装的动态可视化图绘制库; 中文文档</li>
<li><a href="https://github.com/plotly/plotly.py">plotly</a> 动态可视化图绘制库</li>
<li><a href="https://github.com/bokeh/bokeh">bokeh</a> 动态可视化图绘制库</li>
<li><a href="https://github.com/garrettj403/SciencePlots">SciencePlots</a>  科研论文绘图，基于matplotlib</li>
<li><a href="https://github.com/datapane/datapane">datapane</a>  数据分析报告生成</li>
<li><a href="https://github.com/apache/superset">superset</a> 开源商务智能分析可视化库</li>
<li><a href="https://github.com/alfonsosemeraro/pyplutchik">pyplutchik</a> 文本可视化，可将文本情感信息按照plutchik轮样式可视化</li>
</ul>
<br> 
<h2 id="文本分析">文本分析</h2>
<ul>
<li><a href="https://github.com/nltk/nltk">nltk</a> 自然语言分析套件，对中文不友好</li>
<li><a href="https://github.com/shaypal5/skift">skift</a>  使用scikit-learn语法封装了fastText功能的包。</li>
<li><a href="https://github.com/andrewtavis/kwx">kwx</a>  Python 中基于 BERT、LDA 和 TFIDF 的关键字提取</li>
<li><a href="https://github.com/explosion/spaCy">spacy</a> 工业级自然语言模型库，支持中文</li>
<li><a href="https://github.com/fxsjy/jieba">jieba</a>  中文文本分词库</li>
<li><a href="https://github.com/isnowfy/snownlp">snownlp</a> 中文情感分析库</li>
<li><a href="https://github.com/RaRe-Technologies/gensim">gensim</a>  最好用、最全的话题模型</li>
<li><a href="https://github.com/hidadeng/cntext">cntext</a> 中文文本分析库，含词频统计、情感分析、可视化</li>
<li><a href="https://github.com/heartexlabs/label-studio">label-studio</a>  最牛掰的文本数据标注工具</li>
<li><a href="https://github.com/doccano/doccano">doccano</a> 文本数据标注工具</li>
<li><a href="https://github.com/shivam5992/textstat">textstat</a>  文本可读性计算包(算法全，但仅支持英文)</li>
<li><a href="https://github.com/jbesomi/texthero">texthero</a> 文本预处理、展示、可视化库，仅支持英文</li>
<li><a href="https://github.com/textpipe/textpipe">textpipe</a> 文本分析流水线</li>
<li><a href="https://github.com/davidmcclure/textplot">textplot</a> 词语网络图</li>
<li><a href="https://github.com/ryanjgallagher/shifterator">shifterator</a> 通过让您查看单词使用方式的变化，单词移位可以帮助您进行从根本上更可解释的情感，熵和散度分析。量化不同单词对两个文本差异做出的贡献，以及它们如何发挥作用。</li>
<li><a href="https://github.com/vi3k6i5/GuidedLDA">GuidedLDA</a> 半监督LDA主题模型</li>
<li><a href="https://github.com/gregversteeg/corex_topic">corex_topic</a>  层次非监督、半监督话题模型</li>
<li><a href="https://github.com/MaartenGr/BERTopic">BERTopic</a> BERT话题模型</li>
<li><a href="https://github.com/RasaHQ/whatlies">whatlies</a>  词向量可视化</li>
<li><a href="https://github.com/HLasse/TextDescriptives">TextDescriptives</a> 文本描述性统计,不支持中文</li>
<li><a href="https://github.com/hidadeng/pdfdocx">pdfdocx</a> pdf、docx读取库</li>
<li><a href="https://github.com/ocrmypdf/OCRmyPDF">OCRmyPDF</a>    为<strong>扫描的 PDF</strong> 文件添加了 OCR 文本层，允许对其进行搜索</li>
<li><a href="https://github.com/ddangelov/Top2Vec">Top2Vec</a>  主题建模和语义搜索的算法, 自动检测文本中存在的主题并生成联合嵌入的主题、文档和词向量。 适用于短文本;</li>
<li><a href="https://github.com/jboynyc/textnets">TextNet</a>  textnet将文档集表示为文档和单词的网络,为文本分析与可视化提供了新的可能性。</li>
<li><a href="https://github.com/remram44/taguette">taguette</a> 免费开源的定性研究工具</li>
</ul>
<br>
<h2 id="gui窗体软件开发">GUI窗体软件开发</h2>
<ul>
<li><a href="https://wiki.python.org/moin/TkInter">tkinter</a> Python内置的gui库</li>
<li><a href="https://github.com/PySimpleGUI/PySimpleGUI">PySimpleGUI</a> 最简单的gui开发库</li>
<li><a href="https://doc.qt.io/qt.html#qtforpython">pyqt5、pyside</a> 最牛掰的gui软件开发库</li>
<li><a href="https://github.com/hoffstadt/DearPyGui">DearPyGui</a>  易于使用且功能强大的Python GUI框架，它提供了DearImGui的包装。</li>
<li><a href="https://github.com/pywebio/PyWebIO">PyWebIO</a>  快速构建 Web 应用的 Python 工具</li>
<li><a href="https://github.com/kivy/kivy">kivy</a>  star数高达14k的gui库
<br></li>
</ul>
<h2 id="自动化办公">自动化办公</h2>
<ul>
<li><a href="https://github.com/zhangyunhao116/zmail">zmail</a> 自动化收发邮件管理库</li>
<li><a href="https://github.com/pywinauto/pywinauto">pywinauto</a> Windows电脑自动化Python库</li>
<li><a href="https://github.com/Kozea/WeasyPrint">WeasyPrint</a>  自动化生产pdf报告</li>
<li><a href="https://github.com/jorisschellekens/ptext-release"></a> 对PDF文件读取、更改、添加信息</li>
<li><a href="https://github.com/SeleniumHQ/selenium/">selenium</a> 浏览器自动化框架，可以自动化点击浏览器，完成某些工作</li>
<li><a href="https://github.com/mkdocs/mkdocs/">mkdocx</a></li>
<li><a href="https://github.com/python-openxml/python-docx">python-docx</a>  创建、修改docx文件库</li>
<li><a href="https://github.com/scanny/python-pptx">python-ppt</a>  创建、修改ppt文件库</li>
<li><a href="https://openpyxl.readthedocs.io/en/stable/">openpyxl</a> xlsx文件库</li>
<li><a href="https://github.com/wang0618/PyWebIO">PyWebIO</a>  不需要编写HTML和JS代码，就可以构建简单的基于浏览器的GUI应用。</li>
</ul>
<br>
<h2 id="其他">其他</h2>
<ul>
<li><a href="https://github.com/hiresearch/hiresearch.github.io">hiresearch</a> 丢弃繁杂收藏夹，定义简洁办公的浏览器首页</li>
<li><a href="https://github.com/hakimel/reveal.js">reveal.js</a> 最流行的幻灯片</li>
<li><a href="https://github.com/slidevjs/slidev">slidev</a> 编程人员使用的幻灯片</li>
<li><a href="https://github.com/mkdocs/mkdocs">mkdocs</a> 制作文档网站</li>
<li><a href="https://github.com/mockoon/cli">mockoon</a>  帮我们快速搭建 API 服务图形化界面工具</li>
<li><a href="https://www.codepng.app/">codepng</a>  把代码转为美观的截图的website</li>
<li><a href="https://github.com/amphibian-dev/toad">toad</a> 金融风险评分卡；覆盖了建模全流程，从 EDA、特征工程、特征筛选 到 模型验证和评分卡转化</li>
<li><a href="https://github.com/salomonelli/best-resume-ever">best-resume-ever</a> Latex项目， 基于 Web 的简历模板，可以生成网页简历，然后用浏览器打印成 PDF 文件。</li>
<li><a href="https://github.com/vivjay30/pychorus">pychorus</a> 将音频文件中的高潮部分剪辑出来的python包</li>
<li><a href="https://github.com/imageio/imageio">imageio</a>  用于读取和写入图像数据的 Python 库；</li>
<li><a href="https://github.com/Textualize/rich">rich</a> 让命令行输出更美观简洁的Python包</li>
<li><a href="https://github.com/Textualize/textual">textual</a> rich作者开发的<strong>文本用户界面</strong>用户</li>
</ul>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>案例实战 | 企业信息数据采集</title>
      <link>https://hidadeng.github.io/blog/%E7%88%B1%E4%BC%81%E6%9F%A5/</link>
      <pubDate>Wed, 08 Dec 2021 18:42:10 +0600</pubDate>
      
      <guid>/blog/%E7%88%B1%E4%BC%81%E6%9F%A5/</guid>
      <description>手把手教你写爬虫</description>
      <content:encoded><![CDATA[<h2 id="爱企查">爱企查</h2>
<p>想搜集企业信息，可以使用爱企查网站，例如通过该网站，搜”华为“，，可以获得与关键词<strong>华为</strong>相关的很多企业名信息

<figure >
    
        <img src="img/01-%e7%88%b1%e4%bc%81%e6%9f%a5%e9%a6%96%e9%a1%b5.png" width="100%" />
    
    
</figure>
</p>
<p>设计网络爬虫步骤</p>
<ol>
<li>使用开发者工具network面板审查网站的网址规律urls</li>
<li>对单个网址url尝试访问</li>
<li>确定网站是html或json类型</li>
<li>从网页中解析定位需要的数据。</li>
</ol>
<ul>
<li>使用pyquery解析html页面数据；</li>
<li>或使用json解析json页面数据</li>
</ul>
<ol start="5">
<li>存储到csv</li>
<li>重复2-5</li>
</ol>
<br>
<h2 id="尝试访问第一页">尝试访问第一页</h2>

<figure >
    
        <img src="img/02-%e7%bd%91%e5%9d%80%e8%a7%84%e5%be%8b.png" width="100%" />
    
    
</figure>

<p>经过开发者工具network，可以使用requests对其进行访问。</p>
<p>需要注意的是，headers中需要加入Referer参数，该参数作用是告诉服务器</p>
<blockquote>
<p>兄弟，我是经过Referer介绍的，不然我也不可能知道
<a href="https://aiqicha.baidu.com/s/advanceFilterAjax?q=%E5%8D%8E%E4%B8%BA&amp;t=&amp;p=1&amp;s=10&amp;o=0&amp;f=%7B%7D">https://aiqicha.baidu.com/s/advanceFilterAjax?q=%E5%8D%8E%E4%B8%BA&amp;t=&amp;p=1&amp;s=10&amp;o=0&amp;f=%7B%7D</a>
这个网址啊</p>
</blockquote>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">from</span> <span class="nn">urllib.parse</span> <span class="kn">import</span> <span class="n">quote</span>

<span class="n">query</span> <span class="o">=</span> <span class="s1">&#39;华为&#39;</span>

<span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;https://aiqicha.baidu.com/s/advanceFilterAjax?q=</span><span class="si">{q}</span><span class="s1">&amp;t=&amp;p=1&amp;s=10&amp;o=0&amp;f=%7B%7D&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">q</span><span class="o">=</span><span class="n">quote</span><span class="p">(</span><span class="n">query</span><span class="p">))</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="s1">&#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36&#39;</span><span class="p">,</span>
           <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://aiqicha.baidu.com/s?q=</span><span class="si">{q}</span><span class="s1">&amp;t=0&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">q</span><span class="o">=</span><span class="n">quote</span><span class="p">(</span><span class="n">query</span><span class="p">))}</span>

<span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
<span class="n">resp</span>
</code></pre></div><pre><code>&lt;Response [200]&gt;
</code></pre>
<br>
<h2 id="解析网页数据">解析网页数据</h2>
<p>
<figure >
    
        <img src="img/03-%e8%a7%a3%e6%9e%90%e6%95%b0%e6%8d%ae.png" width="100%" />
    
    
</figure>

通过开发者工具可以看到，这个网站采用的json类型网页数据。</p>
<p>
<figure >
    
        <img src="img/04-%e6%95%b0%e6%8d%ae%e5%ad%97%e6%ae%b5.png" width="100%" />
    
    
</figure>

好在这类网页的解析定位比较简单。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">com</span> <span class="ow">in</span> <span class="n">resp</span><span class="o">.</span><span class="n">json</span><span class="p">()[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;resultList&#39;</span><span class="p">][:</span><span class="mi">3</span><span class="p">]:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">com</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">()</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">    {&#39;pid&#39;: &#39;31360200662522&#39;, &#39;entName&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;技术有限公司&#39;, &#39;entType&#39;: &#39;有限责任公司(自然人投资或控股的法人独资)&#39;, &#39;validityFrom&#39;: &#39;1896-08-14&#39;, &#39;domicile&#39;: &#39;深圳市龙岗区坂田&lt;em&gt;华为&lt;/em&gt;总部办公楼&#39;, &#39;entLogo&#39;: &#39;https://zhengxin-pub.cdn.bcebos.com/logopic/67e739bf0e47768f4a1f542daf3f7f42_fullsize.jpg&#39;, &#39;openStatus&#39;: &#39;开业&#39;, &#39;legalPerson&#39;: &#39;赵明路&#39;, &#39;tags&#39;: {&#39;laTaxer&#39;: &#39;&lt;span class=&#34;zx-ent-tag laTaxer&#34;&gt;A级纳税人(2020)&lt;/span&gt;&#39;}, &#39;logoWord&#39;: &#39;华为技术&#39;, &#39;titleName&#39;: &#39;华为技术有限公司&#39;, &#39;titleLegal&#39;: &#39;赵明路&#39;, &#39;titleDomicile&#39;: &#39;深圳市龙岗区坂田华为总部办公楼&#39;, &#39;levelAtaxer&#39;: [2020, 2018, 2019, 2016, 2017, 2014, 2015], &#39;regCap&#39;: &#39;5,035,113.2万&#39;, &#39;scope&#39;: &#39;一般经营项目是:程控交换机、传输设备、数据通信设备、宽带多媒体设备、电源、无线通信设备、微电子产品、软件、系统集成工程、计算机及配套设备、终端设备及相关通信信息产品、数据中心机房基础设施及配套产品(含供配电、空调制冷设备、智能管理监控等)的开发、生产、销售、技术服务、工程安装、维修、咨询、代理、租赁;信息系统设计、集成、运行维护;集成电路设计、研发;统一通信及协作类产品,服务器及配套软硬件产品,存储设备及相关软件的研发、生产、销售;无线数据产品(不含限制项目)的研发、生产、销售;通信站点机房基础设施及通信配套设备(含通信站点、通信机房、通信电源、机柜、天线、通信线缆、配电、智能管理监控、锂电及储能系统等)的研发、生产、销售;能源科学技术研究及能源相关产品的研发、生产、销售;大数据产品、物联网及通信相关领域产品的研发、生产、销售;汽车零部件及智能系统的研发、生产、销售及服务;建筑工程;设计、制作、发布、代理各类广告;通信设备租赁(不含限制项目);培训服务;技术认证服务;信息咨询(不含限制项目);企业管理咨询(不含限制项目);进出口业务;国内商业、物资供销业业务(不含专营、专控、专卖商品);对外经济技术合作业务;房屋租赁业务(持许可经营证);以及其他法律法规不禁止的经营活动(依法须经批准的项目,经相关部门批准后方可开展经营活动)。,许可经营项目是:增值电信业务经营。&#39;, &#39;regNo&#39;: &#39;815503001822039217&#39;, &#39;hitReason&#39;: [{&#39;品牌项目&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;&#39;}, {&#39;商标名称&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;&#39;}, {&#39;企业名称&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;技术有限公司&#39;}, {&#39;网站名称&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;应用平台1&#39;}, {&#39;地址&#39;: &#39;深圳市龙岗区坂田&lt;em&gt;华为&lt;/em&gt;总部办公楼&#39;}], &#39;labels&#39;: {&#39;opening&#39;: {&#39;text&#39;: &#39;开业&#39;, &#39;style&#39;: &#39;blue&#39;, &#39;fontColor&#39;: &#39;#1EA930&#39;, &#39;bgColor&#39;: &#39;#EBF6EC&#39;}}, &#39;personTitle&#39;: &#39;法定代表人&#39;, &#39;personId&#39;: &#39;a9f275934f59110096757b656ba41382&#39;}
    
    {&#39;pid&#39;: &#39;28610144220343&#39;, &#39;entName&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;终端(深圳)有限公司&#39;, &#39;entType&#39;: &#39;有限责任公司(外商投资、非独资)&#39;, &#39;validityFrom&#39;: &#39;2003-12-25&#39;, &#39;domicile&#39;: &#39;深圳市龙岗区坂田&lt;em&gt;华为&lt;/em&gt;基地B区2号楼&#39;, &#39;entLogo&#39;: &#39;https://zhengxin-pub.cdn.bcebos.com/logopic/a638462a7a48ab79f84b7db2c0e64230_fullsize.jpg&#39;, &#39;openStatus&#39;: &#39;开业&#39;, &#39;legalPerson&#39;: &#39;赵明路&#39;, &#39;tags&#39;: {&#39;laTaxer&#39;: &#39;&lt;span class=&#34;zx-ent-tag laTaxer&#34;&gt;A级纳税人(2020)&lt;/span&gt;&#39;}, &#39;logoWord&#39;: &#39;华为终端&#39;, &#39;titleName&#39;: &#39;华为终端(深圳)有限公司&#39;, &#39;titleLegal&#39;: &#39;赵明路&#39;, &#39;titleDomicile&#39;: &#39;深圳市龙岗区坂田华为基地B区2号楼&#39;, &#39;levelAtaxer&#39;: [2020, 2018, 2019, 2016, 2017, 2014, 2015], &#39;regCap&#39;: &#39;1,598,080.8万&#39;, &#39;scope&#39;: &#39;一般经营项目是：开发、生产、销售通信电子产品及配套产品，并提供技术咨询和售后服务。进出口业务（不含分销)。，许可经营项目是：&#39;, &#39;regNo&#39;: &#39;815503006447640305&#39;, &#39;hitReason&#39;: [{&#39;企业名称&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;终端(深圳)有限公司&#39;}, {&#39;网站名称&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;HARMONYOS网站&#39;}, {&#39;地址&#39;: &#39;深圳市龙岗区坂田&lt;em&gt;华为&lt;/em&gt;基地B区2号楼&#39;}], &#39;labels&#39;: {&#39;opening&#39;: {&#39;text&#39;: &#39;开业&#39;, &#39;style&#39;: &#39;blue&#39;, &#39;fontColor&#39;: &#39;#1EA930&#39;, &#39;bgColor&#39;: &#39;#EBF6EC&#39;}}, &#39;personTitle&#39;: &#39;法定代表人&#39;, &#39;personId&#39;: &#39;a9f275934f59110096757b656ba41382&#39;}
    
    {&#39;pid&#39;: &#39;30140456955334&#39;, &#39;entName&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;终端有限公司&#39;, &#39;entType&#39;: &#39;有限责任公司(外商投资企业法人独资)&#39;, &#39;validityFrom&#39;: &#39;2012-11-23&#39;, &#39;domicile&#39;: &#39;广东省东莞市松山湖园区新城路2号&#39;, &#39;entLogo&#39;: &#39;https://zhengxin-pub.cdn.bcebos.com/logopic/cc662a5d573b793e9c5b84031350ced0_fullsize.jpg&#39;, &#39;openStatus&#39;: &#39;开业&#39;, &#39;legalPerson&#39;: &#39;赵明路&#39;, &#39;tags&#39;: {&#39;laTaxer&#39;: &#39;&lt;span class=&#34;zx-ent-tag laTaxer&#34;&gt;A级纳税人(2020)&lt;/span&gt;&#39;}, &#39;logoWord&#39;: &#39;华为终端&#39;, &#39;titleName&#39;: &#39;华为终端有限公司&#39;, &#39;titleLegal&#39;: &#39;赵明路&#39;, &#39;titleDomicile&#39;: &#39;广东省东莞市松山湖园区新城路2号&#39;, &#39;levelAtaxer&#39;: [2020, 2018, 2019, 2016, 2017, 2014, 2015], &#39;regCap&#39;: &#39;70,000.0万&#39;, &#39;scope&#39;: &#39;开发、生产、销售：通信及电子产品、计算机、卫星电视接收天线、高频头、数字卫星电视接收机及前述产品的配套产品，并提供技术咨询和售后服务；开发、生产、销售：医疗器械（第一类、第二类、第三类医疗器械），并提供技术咨询和售后服务；增值电信业务经营；佣金代理；货物或技术进出口（国家禁止或涉及行政审批的货物和技术进出口除外）。(依法须经批准的项目，经相关部门批准后方可开展经营活动)&#39;, &#39;regNo&#39;: &#39;815518000494355853&#39;, &#39;hitReason&#39;: [{&#39;企业名称&#39;: &#39;&lt;em&gt;华为&lt;/em&gt;终端有限公司&#39;}], &#39;labels&#39;: {&#39;opening&#39;: {&#39;text&#39;: &#39;开业&#39;, &#39;style&#39;: &#39;blue&#39;, &#39;fontColor&#39;: &#39;#1EA930&#39;, &#39;bgColor&#39;: &#39;#EBF6EC&#39;}}, &#39;personTitle&#39;: &#39;法定代表人&#39;, &#39;personId&#39;: &#39;a9f275934f59110096757b656ba41382&#39;}
</code></pre></div><br>
<h2 id="完整爬虫">完整爬虫</h2>
<p>经过刚刚的几个步骤，我们现在只需要</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">csv</span>
<span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">import</span> <span class="nn">time</span>

<span class="n">query</span> <span class="o">=</span> <span class="s1">&#39;华为&#39;</span>  
<span class="n">max_pages</span> <span class="o">=</span> <span class="mi">10</span>   <span class="c1">#获取前10页的企业信息数据</span>

<span class="c1">#存储数据</span>
<span class="n">csvf</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;企业信息.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
<span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;titleName&#39;</span><span class="p">,</span> <span class="s1">&#39;titleDomicile&#39;</span><span class="p">,</span> <span class="s1">&#39;titleLegal&#39;</span><span class="p">,</span> <span class="s1">&#39;validityFrom&#39;</span><span class="p">,</span> <span class="s1">&#39;regCap&#39;</span><span class="p">,</span> <span class="s1">&#39;regNo&#39;</span><span class="p">,</span> <span class="s1">&#39;scope&#39;</span><span class="p">]</span>
<span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span><span class="o">=</span><span class="n">fieldnames</span><span class="p">)</span>
<span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>

<span class="c1">#访问</span>
<span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">max_pages</span><span class="p">):</span>
    <span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;https://aiqicha.baidu.com/s/advanceFilterAjax?q=</span><span class="si">{q}</span><span class="s1">&amp;t=&amp;p=</span><span class="si">{p}</span><span class="s1">&amp;s=10&amp;o=0&amp;f=%7B%7D&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">q</span><span class="o">=</span><span class="n">quote</span><span class="p">(</span><span class="n">query</span><span class="p">),</span> <span class="n">p</span><span class="o">=</span><span class="n">page</span><span class="p">)</span>

    <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="s1">&#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36&#39;</span><span class="p">,</span>
           <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://aiqicha.baidu.com/s?q=</span><span class="si">{q}</span><span class="s1">&amp;t=0&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">q</span><span class="o">=</span><span class="n">quote</span><span class="p">(</span><span class="n">query</span><span class="p">))}</span>

    <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
    
    <span class="c1">#解析数据</span>
    <span class="k">for</span> <span class="n">com</span> <span class="ow">in</span> <span class="n">resp</span><span class="o">.</span><span class="n">json</span><span class="p">()[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;resultList&#39;</span><span class="p">]:</span>
        <span class="n">data</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
        <span class="k">for</span> <span class="n">fieldname</span> <span class="ow">in</span> <span class="n">fieldnames</span><span class="p">:</span>
            <span class="n">data</span><span class="p">[</span><span class="n">fieldname</span><span class="p">]</span> <span class="o">=</span> <span class="n">com</span><span class="p">[</span><span class="n">fieldname</span><span class="p">]</span>
        <span class="c1">#写入csv</span>
        <span class="n">writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
        

<span class="n">csvf</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><br>
<h2 id="运行结果">运行结果</h2>
<p>采集10页的爬虫运行结束后，尝试读取 <strong>企业信息.csv</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span><span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;企业信息.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="img/05-data.png" width="100%" />
    
    
</figure>

<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用Python采集多媒体文件数据</title>
      <link>https://hidadeng.github.io/blog/multi_media_examples/</link>
      <pubDate>Fri, 26 Nov 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/multi_media_examples/</guid>
      <description>使用Python对多媒体文件进行下载</description>
      <content:encoded><![CDATA[<p>多媒体文件的下载包括</p>
<ul>
<li>图片</li>
<li>音频</li>
<li>视频</li>
<li>文件</li>
</ul>
<p>代码非常简单，只要准备好多媒体文件链接url和存储路径file即可，代码如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">requests</span>


<span class="k">def</span> <span class="nf">download</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">file</span><span class="p">):</span>
    <span class="s2">&#34;&#34;&#34;
</span><span class="s2">    下载多媒体及文件
</span><span class="s2">    url： 多媒体文件链接（结尾有文件格式名）
</span><span class="s2">    file: 存储文件的路径（结尾有文件格式名）
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="c1">#获取到二进制数据</span>
    <span class="n">binarydata</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="n">content</span>
    <span class="c1">#以二进制形式将数据流存入fname中</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s1">&#39;wb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">binarydata</span><span class="p">)</span>  
</code></pre></div><h2 id="案例数据">案例数据</h2>
<p>视频由于体积太大未能上传至我的博客服务器，我为大家准备了音频、pdf文件、图片文件三种数据类型。其实不论什么类型，只要是文件，均可使用上面的download函数下载。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pics</span>  <span class="o">=</span>  <span class="p">[</span><span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pic/about-page.jpg&#39;</span><span class="p">,</span> 
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pic/about-us.jpg&#39;</span><span class="p">,</span>
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pic/AI_Knowledge_intro.png&#39;</span><span class="p">,</span> 
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pic/banner-1.jpg&#39;</span><span class="p">,</span> 
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pic/blog-post-1.jpg&#39;</span><span class="p">,</span>
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pic/blog-post-2.jpg&#39;</span><span class="p">,</span>
                <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pic/blog-post-3.jpg&#39;</span><span class="p">]</span>

<span class="n">pdfs</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pdf/网络爬虫.pdf&#39;</span><span class="p">,</span>
           <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pdf/相似度.pdf&#39;</span><span class="p">,</span>
           <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pdf/中文可读性.pdf&#39;</span><span class="p">]</span>


<span class="n">musics</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/music/Elastic.mp3&#39;</span><span class="p">,</span> 
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/music/HAPPYBEL.WAV&#39;</span><span class="p">,</span>
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/music/MU14.WAV&#39;</span><span class="p">,</span> 
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/music/typing.wav&#39;</span><span class="p">,</span> 
               <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/music/Water.mp3&#39;</span><span class="p">]</span>
</code></pre></div><br>
<h2 id="批量下载">批量下载</h2>
<p>以pdf为例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">pdfs</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pdf/网络爬虫.pdf&#39;</span><span class="p">,</span>
           <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pdf/相似度.pdf&#39;</span><span class="p">,</span>
           <span class="s1">&#39;https://hidadeng.github.io/blog/multimediaexamples/pdf/中文可读性.pdf&#39;</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">download</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">file</span><span class="p">):</span>
    <span class="n">resp</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="n">binarydata</span> <span class="o">=</span> <span class="n">resp</span><span class="o">.</span><span class="n">content</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="s1">&#39;wb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">binarydata</span><span class="p">)</span> 
        
<span class="k">for</span> <span class="n">link</span> <span class="ow">in</span> <span class="n">pdfs</span><span class="p">:</span>
    <span class="c1">#注意，代码运行前所在文件夹内新建一个data文件夹</span>
    <span class="n">filepath</span><span class="o">=</span><span class="s1">&#39;data/&#39;</span><span class="o">+</span><span class="n">url</span><span class="o">.</span><span class="n">spit</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">download</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">link</span><span class="p">,</span> <span class="n">file</span><span class="o">=</span><span class="n">filepath</span><span class="p">)</span>
</code></pre></div><br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://hidadeng.github.io/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://hidadeng.github.io/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://hidadeng.github.io/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
