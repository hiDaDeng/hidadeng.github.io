<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python入门 on 大邓和他的PYTHON</title>
    <link>/tags/python%E5%85%A5%E9%97%A8/</link>
    <description>Recent content in Python入门 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 31 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/python%E5%85%A5%E9%97%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何用 Poetry 创建并管理 Python 虚拟环境</title>
      <link>https://textdata.cn/blog/2023-03-31-using-poetry-to-manage-your-project-env/</link>
      <pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-03-31-using-poetry-to-manage-your-project-env/</guid>
      <description>当 Python 中的不同包不能正常运行时，这可能会很棘手。 这个问题的解决方案是创建一个隔离的虚拟环境。 在本视频中，我将向您展示如何使用 poetry 设置虚拟环境，poetry 是 Python 的包管理器，可简化依赖项管理和项目打包。It can be tricky when different packages in Python don&amp;#39;t play nice. The solution to this problem is to create an isolated, virtual environment. In this video, I’ll show you how to set up a virtual environment with poetry, a package manager for Python that simplifies dependency management and project packaging.</description>
      <content:encoded><![CDATA[<p>当 Python 中的不同包不能正常运行时，这可能会很棘手。 这个问题的解决方案是创建一个隔离的虚拟环境。 在本视频中，我将向您展示如何使用 poetry 设置虚拟环境，poetry 是 Python 的包管理器，可简化依赖项管理和项目打包。</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/0f3moPe_bhk" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install poetry 
</code></pre></div><br>
<h2 id="使用">使用</h2>
<ol>
<li>
<p>切换至项目工作路径</p>
</li>
<li>
<p>将解释器安装到项目文件夹内, 在cmd中执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">poetry config virtualenvs.in-project true
poetry install
</code></pre></div></li>
<li>
<p>查看env信息</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">poetry env info
</code></pre></div></li>
<li>
<p>进入(激活)虚拟环境，即可运行项目代码</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">poetry shell
</code></pre></div></li>
<li>
<p>在虚拟环境中增加某包，例如requests</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">poetry add requests
</code></pre></div></li>
<li>
<p>在虚拟环境中去掉某包，例如requests</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">poetry remove requests
</code></pre></div></li>
<li>
<p>退出虚拟环境</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">exit
</code></pre></div></li>
<li>
<p>查看虚拟环境列表</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">poetry env list
</code></pre></div></li>
<li>
<p>去激活虚拟环境</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">deactivate
</code></pre></div></li>
<li>
<p>创建自己的库</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">poetry build
</code></pre></div></li>
</ol>
<br>
## 广而告之
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>如何在一行代码中实现if-elif-else三分支语句</title>
      <link>https://textdata.cn/blog/2023-02-18-how-to-use-if-elif-else-in-one-line/</link>
      <pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-18-how-to-use-if-elif-else-in-one-line/</guid>
      <description>如何在一行代码中实现if-elif-else三分支语句</description>
      <content:encoded><![CDATA[<p>判断年龄age，</p>
<ul>
<li>如果小于18为少年</li>
<li>如果大于18，小于35，为青年</li>
<li>其他，为老年</li>
</ul>
<p>这是典型的三分支语句if-elif-else，其实是if-else的变种。</p>
<br>
<h2 id="method1-直接堆代码">Method1-直接堆代码</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">age</span> <span class="o">=</span> <span class="mi">15</span>

<span class="k">if</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">18</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;少年&#39;</span><span class="p">)</span>
<span class="k">elif</span> <span class="mi">18</span> <span class="o">&lt;=</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">35</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;青年&#39;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;老年&#39;</span><span class="p">)</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">少年
</code></pre></div><br>
<h2 id="method2-定义函数">Method2-定义函数</h2>
<p>Method1不具有可扩展性，定义成函数后，可以一次定义，反复调用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">judge</span><span class="p">(</span><span class="n">age</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">18</span><span class="p">:</span>
        <span class="k">return</span> <span class="s1">&#39;少年&#39;</span>
    <span class="k">elif</span> <span class="mi">18</span> <span class="o">&lt;=</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">35</span><span class="p">:</span>
        <span class="k">return</span> <span class="s1">&#39;青年&#39;</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="s1">&#39;老年&#39;</span>
      
<span class="nb">print</span><span class="p">(</span><span class="n">judge</span><span class="p">(</span><span class="n">age</span><span class="o">=</span><span class="mi">15</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">少年
</code></pre></div><br>
<h2 id="method3-lambda行函数">Method3-Lambda行函数</h2>
<p>比函数更简洁的是lambda行函数，如下</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">judge2</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">age</span><span class="p">:</span> <span class="s1">&#39;少年&#39;</span> <span class="k">if</span> <span class="n">age</span> <span class="o">&lt;</span> <span class="mi">18</span> <span class="k">else</span> <span class="p">(</span><span class="s1">&#39;青年&#39;</span> <span class="k">if</span> <span class="mi">18</span><span class="o">&lt;=</span><span class="n">age</span> <span class="o">&lt;</span> <span class="mi">35</span> <span class="k">else</span> <span class="s1">&#39;老年&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">judge2</span><span class="p">(</span><span class="n">age</span><span class="o">=</span><span class="mi">15</span><span class="p">))</span>
</code></pre></div><p>Run</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">少年
</code></pre></div><br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">支持开票 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
