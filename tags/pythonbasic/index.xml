<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>PythonBasic on 大邓和他的PYTHON</title>
    <link>/tags/pythonbasic/</link>
    <description>Recent content in PythonBasic on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/pythonbasic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>置顶推荐 | Python语法入门(含视频)</title>
      <link>https://textdata.cn/blog/dadeng_python_basic_tutorial/</link>
      <pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/dadeng_python_basic_tutorial/</guid>
      <description>在科学研究中，数据的获取及分析是最重要的也是最棘手的三个环节！在前大数据时代，一般使用实验法、调查问卷、访谈或者二手数据等方式，将数据整理为结构化的表格数据，之后再使用各种计量分析方法，对这些表格数据进行分析。但大数据时代，网络数据成为各方学者亟待挖掘的潜在宝藏，大量商业信息、社会信息以文本等非结构化、异构型数据格式存储于海量的网页中。那么对于经管为代表的人文社科类专业科研工作者而言，通过Python可以帮助学者解决使用Web数据进行科研面临的三个问题： </description>
      <content:encoded><![CDATA[<p>在科学研究中，数据的获取及分析是最重要的也是最棘手的三个环节！</p>
<p>在<strong>前大数据时代</strong>，一般使用实验法、调查问卷、访谈或者二手数据等方式，将数据整理为结构化的表格数据，之后再使用各种计量分析方法，对这些表格数据进行分析。但<strong>大数据时代</strong>，网络数据成为各方学者亟待挖掘的潜在宝藏，大量商业信息、社会信息以文本等非结构化、异构型数据格式存储于海量的网页中。那么对于经管为代表的人文社科类专业科研工作者而言，通过Python可以帮助学者解决使用Web数据进行科研面临的三个问题：</p>
<ol>
<li><strong>Python语法</strong> 解决 <strong>如何通过电脑自动化帮我们做事情</strong>？</li>
<li><strong>网络爬虫技术</strong> 解决 如何从网络世界中高效地 <strong>采集数据</strong>？</li>
<li><strong>文本分析技术</strong> 解决 如何从杂乱的文本数据中<strong>抽取文本信息(变量)</strong>？</li>
</ol>
<br>
<h2 id="使用说明">使用说明</h2>
<p>目前<strong>Python语法入门</strong>部分已免费开放，最近将相关教程代码视频整合到大邓的博客中，</p>
<p><font color="blue" weight="bold"><b>博客地址 <a href="https://textdata.cn/">https://textdata.cn/</a></b></font></p>
<p><img loading="lazy" src="img/blog1.png" alt=""  />
</p>
<p>点击<strong>Python语法入门</strong>进入语法学习界面，一共有15篇基础知识。大家按照顺序，从上往下学习即可。</p>
<p><img loading="lazy" src="img/basic.png" alt=""  />
</p>
<p>例如，点击<strong>Python是一种语言</strong>, 可以看到页面中</p>
<ul>
<li>有B站视频</li>
<li>有课件下载地址</li>
<li>还有文档教程</li>
</ul>
<p><img loading="lazy" src="img/download.png" alt=""  />
</p>
<p>此外，为了方便大家学习交流，博客开通了<strong>留言评论</strong>功能(有github账号的童靴才可以留言。)。建议大家注册个github账号(<a href="https://github.com/">https://github.com/</a>)，不止为了留言，更主要的是可以在github中找到自己需要的代码。</p>
<p><img loading="lazy" src="img/comments.png" alt=""  />
</p>
<p><br><br></p>
<h2 id="教程纲要">教程纲要</h2>
<ul>
<li><strong>课程目标：</strong> 掌握Python语法</li>
<li><strong>核心知识点：</strong> 数据类型、逻辑语句、常用内置函数、常用内置库</li>
<li><strong>环境配置:</strong>  安装anaconda，注意安装过程中勾选<strong>Add Anaconda to the system Path environment variable</strong>、<strong>Register Anaconda as the system python 3.x</strong></li>
<li><strong>课件资料：</strong> 本课程全部使用jupyter notebook文件作为课程课件，已全部上传至github中。</li>
</ul>
<p><br><br></p>
<h2 id="python语法入门">Python语法入门</h2>
<ul>
<li><a href="https://textdata.cn/blog/basic-01-python-is-a-language/">Python跟英语一样是一门语言</a></li>
<li>环境配置
<ul>
<li><a href="https://textdata.cn/blog/basic-03-mac-settings/">Mac配置</a></li>
<li><a href="https://textdata.cn/blog/basic-02-win-settings/">Win配置</a></li>
</ul>
</li>
<li><a href="https://textdata.cn/blog/basic-04-string/">数据类型-字符串</a></li>
<li><a href="https://textdata.cn/blog/basic-05-list-tuple-set/">数据类型-列表元组集合</a></li>
<li><a href="https://textdata.cn/blog/basic-06-dict/">数据类型-字典</a></li>
<li><a href="https://textdata.cn/blog/basic-07-boolean-none/">数据类型-布尔值、None</a></li>
<li><a href="https://textdata.cn/blog/basic-08-logical-if-else-try-except/">逻辑语句(if&amp;for&amp;tryexcept)</a></li>
<li><a href="https://textdata.cn/blog/basic-09-list-comprehension/">高级语法-列表推导式</a></li>
<li><a href="https://textdata.cn/blog/basic-10-understand-function/">高级语法-理解函数</a></li>
<li><a href="https://textdata.cn/blog/basic-11-built-function/">常用内置函数</a></li>
<li><a href="https://textdata.cn/blog/basic-12-pathlib/">pathlib路径库</a></li>
<li><a href="https://textdata.cn/blog/basic-13-csv/">内置库csv文件库</a></li>
<li><a href="https://textdata.cn/blog/basic-14-regex/">正则表达式re库</a></li>
<li><a href="https://textdata.cn/blog/basic-15-common-errors/">常见错误汇总</a></li>
</ul>
<br>
<br>
<h2 id="广而告之">广而告之</h2>
<ul>
<li><a href="https://textdata.cn/blog/call_for_paper/">长期征稿</a></li>
<li><a href="https://textdata.cn/blog/we_need_you/">长期招募小伙伴</a></li>
<li><a href="https://textdata.cn/blog/management_python_course/">付费视频课 | Python实证指标构建与文本分析</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Python是一种语言</title>
      <link>https://textdata.cn/blog/basic-01-python-is-a-language/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-01-python-is-a-language/</guid>
      <description>Python号称是最说人话的编程语言，能让我们以最易理解的方式实现想法，构建代码</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=4"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<h3 id="python语法入门-课件下载">Python语法入门-课件下载</h3>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264 </b></font></p>
<br>
<p>学Python一段时间后，都会听到一句“Life is short, so we learn Python! ”，恭喜你选择Python这门强大而有趣的语言。</p>
<br>
<h3 id="输出数字a的绝对数">输出数字a的绝对数</h3>
<p>在学习代码之前，我给大家看一段话</p>
<blockquote>
<p>There is such a number a, if a is greater than or equal to 0, we will print a; if a is less than 0, we will print -a</p>
</blockquote>
<p>相信大家一看就明白了这是求某数的绝对值方法的英文描述。下面我们用精炼的Python语言表示</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="o">-</span><span class="mi">50</span>

<span class="k">if</span> <span class="n">a</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="o">-</span><span class="n">a</span><span class="p">)</span>
</code></pre></div><pre><code>50
</code></pre>
<p><strong>Python号称是最说</strong>人话<strong>的编程语言，以最接近人类理解的方式构建代码。</strong></p>
<br>
<h3 id="python与英语对比">Python与英语对比</h3>
<p>从上面的例子中，我们已经知道了Python和英语一样都是一种语言，学习语言就需要学习基本的知识点，包括背单词和了解语法。</p>
<table>
<thead>
<tr>
<th style="text-align:left">英语</th>
<th style="text-align:left">Python</th>
<th style="text-align:left">例如</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>单词</strong></td>
<td style="text-align:left">数据类型</td>
<td style="text-align:left">列表、字符串、字典等</td>
</tr>
<tr>
<td style="text-align:left"><strong>语法</strong></td>
<td style="text-align:left">逻辑语句</td>
<td style="text-align:left">if条件判读语句、for循环语句等</td>
</tr>
</tbody>
</table>
<br>
<h3 id="每天积累一点点">每天积累一点点</h3>
<p>本部分非必须，仅仅为了展示python也可以作图</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#mac</span>
<span class="c1">#!pip3 install matplotlib</span>


<span class="c1">#win</span>
<span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">matplotlib</span>
</code></pre></div><pre><code>Looking in indexes: https://mirrors.aliyun.com/pypi/simple/
Requirement already satisfied: matplotlib in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (3.2.1)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.1 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (2.4.7)
Requirement already satisfied: cycler&gt;=0.10 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (0.10.0)
Requirement already satisfied: numpy&gt;=1.11 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (1.18.2)
Requirement already satisfied: kiwisolver&gt;=1.0.1 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (1.2.0)
Requirement already satisfied: python-dateutil&gt;=2.1 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (2.8.1)
Requirement already satisfied: six in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from cycler&gt;=0.10-&gt;matplotlib) (1.14.0)
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">math</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>

<span class="n">ability</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">scale</span> <span class="o">=</span> <span class="mf">1.01</span>
<span class="n">records</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">days</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">365</span><span class="p">)</span>
<span class="k">for</span> <span class="n">day</span> <span class="ow">in</span> <span class="n">days</span><span class="p">:</span>
    <span class="n">ability</span> <span class="o">=</span> <span class="n">ability</span><span class="o">*</span><span class="n">scale</span>
    <span class="n">records</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ability</span><span class="p">)</span>
    
<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">days</span><span class="p">,</span> <span class="n">records</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;Be better everyday!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Text(0.5, 1.0, 'Be better everyday!')
</code></pre>

<figure >
    
        <img src="output_8_1.png" />
    
    
</figure>

<br>
<h3 id="python是面向对象的编程语言">Python是面向对象的编程语言</h3>
<p>面向对象是最难理解的部分，这里大家只需要记住</p>
<ol>
<li>类型和对象是紧密绑定的，说对象就是在说类型。</li>
<li>不同的类型有不同的功能，都是为了更高效的实现人类需求或者数据分析需求</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:left">类型</th>
<th style="text-align:left">实例(对象)</th>
<th style="text-align:left">实例(对象)</th>
<th style="text-align:left">方法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">猪</td>
<td style="text-align:left">村东头老王家的猪</td>
<td style="text-align:left">把猪把粮食变成肉</td>
<td style="text-align:left"><code>猪.产肉</code></td>
</tr>
<tr>
<td style="text-align:left">牛</td>
<td style="text-align:left">村东头老张家的耕牛</td>
<td style="text-align:left">把粮食变成畜力</td>
<td style="text-align:left"><code>牛.耕地</code></td>
</tr>
<tr>
<td style="text-align:left">列表</td>
<td style="text-align:left"><code>hobbies = ['跑步',  '乒乓球'， '篮球'，'篮球']</code></td>
<td style="text-align:left">统计某群体爱好的分布, 查看各爱好的人数</td>
<td style="text-align:left"><code>hobbies.count('篮球')</code></td>
</tr>
<tr>
<td style="text-align:left">字符串</td>
<td style="text-align:left"><code>str1 = &quot;Hello，World!&quot;</code></td>
<td style="text-align:left">将文本内容由World更改为Python</td>
<td style="text-align:left"><code>str1.replace('World', 'Python')</code></td>
</tr>
<tr>
<td style="text-align:left">字典</td>
<td style="text-align:left"><code>grade = {'David':98, 'Mary':88,...}</code></td>
<td style="text-align:left">方便数据检索</td>
<td style="text-align:left"><code>grade.get('David')</code></td>
</tr>
<tr>
<td style="text-align:left">&hellip;</td>
<td style="text-align:left">&hellip;</td>
<td style="text-align:left">&hellip;</td>
<td style="text-align:left">&hellip;</td>
</tr>
</tbody>
</table>
<br>
<h3 id="python中的数据类型">Python中的数据类型</h3>
<p>不同的数据类型适合处理不同的数据，有不同的应用场景。</p>
<table>
<thead>
<tr>
<th style="text-align:left">数据类型</th>
<th>例子</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">数字</td>
<td><code>a = 5</code></td>
</tr>
<tr>
<td style="text-align:left">字符串</td>
<td><code>my_str = &quot;abcdefg&quot;</code></td>
</tr>
<tr>
<td style="text-align:left">列表</td>
<td><code>my_list = [1, 2, 3]</code></td>
</tr>
<tr>
<td style="text-align:left">元组</td>
<td><code>my_tuple = (1, 2, 3)</code></td>
</tr>
<tr>
<td style="text-align:left">字典</td>
<td><code>my_dict = {'David': 25, 'Mark':30}</code></td>
</tr>
<tr>
<td style="text-align:left">空值</td>
<td><code>None</code></td>
</tr>
</tbody>
</table>
<br>
<h3 id="了解课程">了解课程</h3>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Mac电脑Python环境配置</title>
      <link>https://textdata.cn/blog/basic-03-mac-settings/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-03-mac-settings/</guid>
      <description>照着视频配置Mac</description>
      <content:encoded><![CDATA[<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<h2 id="mac环境配置">Mac环境配置</h2>
<p><strong>注意：</strong></p>
<ol>
<li>Anaconda和Python都是python。一定要记住二选其一，不要都安装，不然在学习python第三方包安装的时，你会遇到一些麻烦。</li>
<li>如果之前没安装过两个软件，建议从头到尾按照我的视频进行电脑配置。</li>
</ol>
<br>
<h2 id="typora软件下载">Typora软件下载</h2>
<p><font color="blue" weight="bold"><b>链接:https://pan.baidu.com/s/17yNfZbkNbnYsBko4eai0Ig  密码:ceve</b></font></p>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=2"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<h2 id="jupyter使用方法">Jupyter使用方法</h2>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=3"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<br>
<h2 id="一python安装">一、Python安装</h2>
<p>anaconda官网  <a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p>
<p><strong>mac自带python2，为了与python2区别，凡是在命令行中使用pip和python，我们都要加上3。</strong></p>
<p>安装成功的标准是<strong>命令行可以调用python3</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$ python3
</code></pre></div><p><br><br></p>
<h3 id="命令行打开的方法">命令行打开的方法</h3>
<p><strong>command+空格</strong> 启动  <strong>聚焦搜索Spotlight</strong>，再输入terminal</p>
<p><br><br></p>
<h2 id="二pip3设置">二、pip3设置</h2>
<p>pip3是python的命令行安装工具，可以帮我们安装第三方库。</p>
<h3 id="21-更改pip3镜像">2.1 更改pip3镜像</h3>
<p>为了保证安装的速度和成功率，命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 config set global.index-url https://mirrors.aliyun.com/pypi/simple/
</code></pre></div><h3 id="22-使用方法">2.2 使用方法</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install packagename
</code></pre></div><h3 id="23-第三方库安装方法">2.3 第三方库安装方法</h3>
<ol>
<li>
<p>pip安装法</p>
<ul>
<li>单个库的安装，命令行执行
<ul>
<li><code>pip3 install 库的名字</code></li>
</ul>
</li>
<li>多个库的安装， 命令行执行
<ul>
<li><code>pip3 install -r requirements.txt</code></li>
</ul>
</li>
</ul>
</li>
<li>
<p>pypi本地安装</p>
<ol>
<li>
<p>在https://pypi.org/ 搜库，点进去</p>
</li>
<li>
<p>找Download files，下载whl或压缩文件到桌面。例如文件名 xxx.whl</p>
</li>
<li>
<p>命令行依次执行</p>
<ul>
<li>
<p><code> cd desktop</code></p>
</li>
<li>
<p><code>pip3 install xxx.whl</code></p>
</li>
</ul>
</li>
</ol>
</li>
<li>
<p>github本地安装（如github项目中存在setup.py文件，可以安装使用）</p>
</li>
<li>
<p>下载github项目至桌面，解压</p>
</li>
<li>
<p>命令依次执行
- <code>cd desktop</code>
- <code>python3 setup.py install</code></p>
</li>
</ol>
<p><br><br></p>
<h2 id="三jupyter-notebook">三、Jupyter notebook</h2>
<h3 id="31-安装">3.1 安装</h3>
<p>命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install jupyter
</code></pre></div><h3 id="32-调用">3.2 调用</h3>
<p>命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">jupyter notebook
</code></pre></div><h3 id="33-常用快捷键">3.3 常用快捷键</h3>
<table>
<thead>
<tr>
<th>jupyter内快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ESC+A（ESC+B）</td>
<td>当前单元格上(下)新建一个新的Cell</td>
</tr>
<tr>
<td>D+D</td>
<td>删除当前单元格</td>
</tr>
<tr>
<td>Shift+Enter</td>
<td>执行单元格内的Python代码</td>
</tr>
<tr>
<td>ESC+M</td>
<td>单元格由代码模式转为Markdown标记模式</td>
</tr>
</tbody>
</table>
<p><strong>推荐：</strong> Markdown语法特别好用，强烈建议学习，顺便安装一个Typora软件。</p>
<p><br><br></p>
<h2 id="四tips">四、Tips</h2>
<p>环境配置太难，而且有时候电脑还会出现一些视频里出现不了的问题。这时不妨在<strong>淘宝搜python环境配置</strong>，寻找一对一远程协助</p>
<br>
<h1 id="了解课程">了解课程</h1>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Win电脑Python环境配置</title>
      <link>https://textdata.cn/blog/basic-02-win-settings/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-02-win-settings/</guid>
      <description>照着视频配置Windows</description>
      <content:encoded><![CDATA[<h1 id="python语法入门-课件下载">Python语法入门-课件下载</h1>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<h1 id="win环境配置">Win环境配置</h1>
<p><strong>注意：</strong></p>
<ol>
<li>Anaconda和Python都是python。一定要记住二选其一，不要都安装，不然在学习python第三方包安装的时，你会遇到一些麻烦。</li>
<li>如果之前没安装过两个软件，建议从头到尾按照我的视频进行电脑配置。</li>
</ol>
<br>
<h2 id="typora软件下载">Typora软件下载</h2>
<p><font color="blue" weight="bold"><b>链接:https://pan.baidu.com/s/17yNfZbkNbnYsBko4eai0Ig  密码:ceve</b></font></p>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=1"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<h2 id="jupyter使用方法">Jupyter使用方法</h2>
<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=3"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<h2 id="一python安装">一、Python安装</h2>
<p>anaconda官网  <a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p>
<h3 id="注意">注意</h3>
<ul>
<li>慢一点按照视频操作</li>
<li>勾选 <strong>Add Anaconda 3 to the system PATH environment variable</strong></li>
<li>勾选 <strong>Register Anaconda 3 as the system 3.9</strong></li>
</ul>
<p><br><br></p>
<h2 id="二pip配置">二、pip配置</h2>
<p>pip是python的命令行安装工具，可以帮我们安装第三方库。</p>
<h3 id="21-更改pip镜像">2.1 更改pip镜像</h3>
<p>为了保证安装的速度和成功率，命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ 
</code></pre></div><h3 id="22-使用方法">2.2 使用方法</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install packagename
</code></pre></div><h3 id="23-第三方库安装方法">2.3 第三方库安装方法</h3>
<ol>
<li>
<p>pip安装法</p>
<ul>
<li>单个库的安装，命令行执行
<ul>
<li><code>pip3 install 库的名字</code></li>
</ul>
</li>
<li>多个库的安装， 命令行执行
<ul>
<li><code>pip3 install -r requirements.txt</code></li>
</ul>
</li>
</ul>
</li>
<li>
<p>pypi本地安装</p>
<ol>
<li>
<p>在https://pypi.org/ 搜库，点进去</p>
</li>
<li>
<p>找Download files，下载whl或压缩文件到桌面。例如文件名 xxx.whl</p>
</li>
<li>
<p>命令行依次执行</p>
<ul>
<li>
<p><code> cd desktop</code></p>
</li>
<li>
<p><code>pip3 install xxx.whl</code></p>
</li>
</ul>
</li>
</ol>
</li>
<li>
<p>github本地安装（如github项目中存在setup.py文件，可以安装使用）</p>
</li>
<li>
<p>下载github项目至桌面，解压</p>
</li>
<li>
<p>命令依次执行
- <code>cd desktop</code>
- <code>python3 setup.py install</code></p>
</li>
</ol>
<p><br><br></p>
<h2 id="三jupyter-notebook">三、Jupyter notebook</h2>
<h3 id="31-安装">3.1 安装</h3>
<p>命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip install jupyter
</code></pre></div><h3 id="32-调用">3.2 调用</h3>
<p>命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">jupyter notebook
</code></pre></div><h3 id="33-常用快捷键">3.3 常用快捷键</h3>
<table>
<thead>
<tr>
<th>jupyter内快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ESC+A（ESC+B）</td>
<td>当前单元格上(下)新建一个新的Cell</td>
</tr>
<tr>
<td>D+D</td>
<td>删除当前单元格</td>
</tr>
<tr>
<td>Shift+Enter</td>
<td>执行单元格内的Python代码</td>
</tr>
<tr>
<td>ESC+M</td>
<td>单元格由代码模式转为标记模式</td>
</tr>
</tbody>
</table>
<p><strong>个人建议：</strong> Markdown语法特别好用，强烈建议学习，顺便安装一个Typora软件。</p>
<p><br><br></p>
<h2 id="四tips">四、Tips</h2>
<p>环境配置太难，而且有时候电脑还会出现一些视频里出现不了的问题。这时不妨在<strong>淘宝搜python环境配置</strong>，寻找一对一远程协助</p>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="90%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<br>
<h1 id="了解课程">了解课程</h1>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据类型-字符串</title>
      <link>https://textdata.cn/blog/basic-04-string/</link>
      <pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-04-string/</guid>
      <description>网络爬虫与文本分析实际上主要是对字符串做的处理，一定要熟悉字符串哦</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=5"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h1 id="python语法入门-课件下载">Python语法入门-课件下载</h1>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p><strong>网络爬虫与文本分析实际上主要是对字符串做的处理，一定要熟悉字符串哦</strong></p>
<p><br><br></p>
<h1 id="字符串string">字符串string</h1>
<h2 id="定义">定义</h2>
<p>字符串是以  <strong>单引号</strong>  或  <strong>双引号</strong>  或 <strong>三引号</strong> 括起来的任意文本，如</p>
<ul>
<li>&lsquo;abc&rsquo;</li>
<li>&ldquo;abc&rdquo;</li>
<li>&lsquo;&lsquo;&lsquo;abc&rsquo;&rsquo;&rsquo;</li>
<li>&ldquo;&ldquo;&ldquo;abc&rdquo;&rdquo;&rdquo;</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="s1">&#39;abc&#39;</span>
<span class="n">a</span>
</code></pre></div><pre><code>'abc'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s2">&#34;abc&#34;</span>
</code></pre></div><pre><code>'abc'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s1">&#39;&#39;&#39;abc&#39;&#39;&#39;</span>
</code></pre></div><pre><code>'abc'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s2">&#34;&#34;&#34;abc&#34;&#34;&#34;</span>
</code></pre></div><pre><code>'abc'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;abc&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;abc&#34;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;&#39;&#39;abc&#39;&#39;&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s2">&#34;&#34;&#34;abc&#34;&#34;&#34;</span><span class="p">)</span>
</code></pre></div><pre><code>abc
abc
abc
abc
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;abc&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;efg&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>abc
efg
</code></pre>
<br>
<p><strong>注意</strong>:</p>
<ul>
<li>这里所说的引号都是英文引号</li>
<li><code>''</code> 或 <code>&quot;&quot;</code> 本身不是字符串的一部分，因此，字符串 <code>'abc'</code> 只有a，b，c这3个字符。</li>
<li>notebook中只显示最后一个，所以这里用了两个print</li>
</ul>
<blockquote>
<p>**Tips: **这里所说的引号都是英文引号<br></p>
<p><code>''</code> 或 <code>&quot;&quot;</code> 本身不是字符串的一部分，因此，字符串 <code>'abc'</code> 只有a，b，c这3个字符。<br></p>
<p>notebook中只显示最后一个，所以这里用了两个print<br></p>
</blockquote>
<p><br><br></p>
<h2 id="拼接">拼接+</h2>
<p>按顺序拼接</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="s1">&#39;P&#39;</span>
<span class="n">b</span> <span class="o">=</span> <span class="s1">&#39;ython&#39;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">b</span><span class="o">+</span><span class="n">a</span><span class="p">)</span>
</code></pre></div><pre><code>Python
ythonP
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="s1">&#39;P&#39;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">b</span><span class="o">+</span><span class="n">a</span><span class="p">)</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
</code></pre></div><p><br><br></p>
<h2 id="切片">切片</h2>
<p>切片就像切糕，把自己想要的那块切下来</p>

<figure >
    
        <img src="%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%b4%a2%e5%bc%95.png" />
    
    
</figure>

<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;My Name is Mike&#39;</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div><pre><code>'M'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[</span><span class="o">-</span><span class="mi">15</span><span class="p">]</span>
</code></pre></div><pre><code>'M'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[</span><span class="mi">3</span><span class="p">:</span><span class="mi">6</span><span class="p">]</span>
</code></pre></div><pre><code>'Nam'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[</span><span class="o">-</span><span class="mi">12</span><span class="p">:</span><span class="o">-</span><span class="mi">9</span><span class="p">]</span>
</code></pre></div><pre><code>'Nam'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">]</span>
</code></pre></div><pre><code>'My'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span>
</code></pre></div><pre><code>'My'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[</span><span class="mi">5</span><span class="p">:]</span>
</code></pre></div><pre><code>'me is Mike'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">[</span><span class="o">-</span><span class="mi">7</span><span class="p">:]</span>
</code></pre></div><pre><code>'is Mike'
</code></pre>
<p><br><br></p>
<h3 id="切片总结">切片总结</h3>
<table>
<thead>
<tr>
<th style="text-align:left">切片表达式</th>
<th style="text-align:left">解读</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>从左往右</strong></td>
<td style="text-align:left">索引值从0开始，0表示&rsquo;第一个'</td>
</tr>
<tr>
<td style="text-align:left"><strong>从右向左</strong></td>
<td style="text-align:left">-1表示倒数第一个，-2表示倒数第二个</td>
</tr>
<tr>
<td style="text-align:left"><strong>a:b</strong></td>
<td style="text-align:left">选取列表索引位置为<code>a，a+1...b-2, b-1</code>的值</td>
</tr>
<tr>
<td style="text-align:left"><strong>a:</strong></td>
<td style="text-align:left">选取列表中a之后的所有元素(含a)</td>
</tr>
<tr>
<td style="text-align:left"><strong>:b</strong></td>
<td style="text-align:left">选取列表中b之前的所有元素(不含b)</td>
</tr>
</tbody>
</table>
<br>
<h2 id="字符串常用方法">字符串常用方法</h2>
<p><strong>再次强调，数据类(型)与猪牛羊不同的动物类型一样，都有满足人类需要的特殊本领(方法)。方法可以理解为数据类(型)一种特殊的本性、属性、特性</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">字符串常用方法</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">str.lower()</td>
<td style="text-align:left">变小写</td>
</tr>
<tr>
<td style="text-align:left">str.upper()</td>
<td style="text-align:left">变大写</td>
</tr>
<tr>
<td style="text-align:left">str.split(sep)</td>
<td style="text-align:left">使用sep将字符串分割，默认sep为空格</td>
</tr>
<tr>
<td style="text-align:left">str.replace(old, new)</td>
<td style="text-align:left">将str中的old替换为new</td>
</tr>
<tr>
<td style="text-align:left">str.format()</td>
<td style="text-align:left">向str中填充内容</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span> <span class="o">=</span> <span class="s1">&#39;Python is poweful!&#39;</span>
<span class="n">words</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
</code></pre></div><pre><code>'python is poweful!'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
</code></pre></div><pre><code>'PYTHON IS POWEFUL!'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span>
</code></pre></div><pre><code>'Python is poweful!'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</code></pre></div><pre><code>['Python', 'is', 'poweful!']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;Python&#39;</span><span class="p">,</span> <span class="s1">&#39;Python programing language&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>'Python programing language is poweful!'
</code></pre>
<br>
<p>需要发送每个员工的工资组成详情。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">&#34;张三,你这个月的工资是2310元；以下是你的工资详情。。。。&#34;
&#34;李四,你这个月的工资是3456元；以下是你的工资详情。。。。&#34;
&#34;王五,你这个月的工资是2431元；以下是你的工资详情。。。。&#34;
</code></pre></div><p>如何自动化自动化填充?</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">template</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{name}</span><span class="s1">,你这个月的工资是</span><span class="si">{salary}</span><span class="s1">元；以下是你的工资详情&#39;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">template</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;张三&#39;</span><span class="p">,</span> <span class="n">salary</span><span class="o">=</span><span class="s1">&#39;2310&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">template</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;李四&#39;</span><span class="p">,</span> <span class="n">salary</span><span class="o">=</span><span class="s1">&#39;3456&#39;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">template</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;王五&#39;</span><span class="p">,</span> <span class="n">salary</span><span class="o">=</span><span class="s1">&#39;2431&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>张三,你这个月的工资是2310元；以下是你的工资详情
李四,你这个月的工资是3456元；以下是你的工资详情
王五,你这个月的工资是2431元；以下是你的工资详情
</code></pre>
<p><br><br></p>
<h2 id="转义符">转义符\</h2>
<p>如果字符串内部既包含 <strong>单引号</strong> 又包含 <strong>双引号</strong>， 会发生什么？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;I&#39;</span><span class="n">m</span> <span class="s2">&#34;OK&#34;</span><span class="err">!</span><span class="s1">&#39;)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-28-af5dc904b170&gt;&quot;, line 1
    print('I'm &quot;OK&quot;!')
             ^
SyntaxError: invalid syntax
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 可以用 转义字符\ 来标识，比如：</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;I</span><span class="se">\&#39;</span><span class="s1">m </span><span class="se">\&#34;</span><span class="s1">OK</span><span class="se">\&#34;</span><span class="s1">!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>I'm &quot;OK&quot;!
</code></pre>
<p>常见的转义符还有</p>
<ul>
<li><code>\n</code> 换行</li>
<li><code>\t</code> 制表符</li>
<li><code>字符\</code> 本身也要转义，所以 <code>\\</code> 表示的字符就是 <code>\</code></li>
</ul>
<p>可以试着自己运行下面代码，看看下面打印结果是?：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello</span><span class="se">\t</span><span class="s1">World!&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;转义</span><span class="se">\n</span><span class="s1">换行!&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;反斜杠线</span><span class="se">\\</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello</span><span class="se">\t</span><span class="s1">World!&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello World!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Hello	World!
Hello World!
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;转义</span><span class="se">\n</span><span class="s1">换行!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>转义
换行!
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;反斜杠线</span><span class="se">\\</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>反斜杠线\
</code></pre>
<p><br><br></p>
<h3 id="r">r</h3>
<p>如果字符串里面有很多字符都需要转义，就需要加很多<code>\</code>,</p>
<p>为了简化，Python还允许用<code>r''</code>表示<code>''内部</code>的字符串默认不转义,例如</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\\t\\</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">\t</span><span class="se">\\</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello world!&#39;</span><span class="p">)</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\\t\\</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>\	\
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">\t</span><span class="se">\\</span><span class="s1">&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>\\\t\\
</code></pre>
<p><br><br></p>
<h1 id="了解课程">了解课程</h1>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据类型-列表元组集合</title>
      <link>https://textdata.cn/blog/basic-05-list-tuple-set/</link>
      <pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-05-list-tuple-set/</guid>
      <description>当你不知道用什么数据类型的时候，一定要记得list，大多数的脏活累活ta都帮你搞定</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=6"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<blockquote>
<p><strong>当你不知道用什么数据类型的时候，一定要记得list，大多数的脏活累活ta都帮你搞定</strong></p>
</blockquote>
<p><br><br></p>
<h2 id="列表list">列表list</h2>
<h3 id="定义">定义</h3>
<p>list是一种<strong>有序</strong>的集合,内部可以由任何数据类型的组成的</p>
<p>现在有5位员工的汇总信息，</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">姓名</th>
<th style="text-align:left">年龄</th>
<th style="text-align:left">性别</th>
<th style="text-align:left">爱好</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">David</td>
<td style="text-align:left">25</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Basketball, Pingpang, Hiking</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">Mary</td>
<td style="text-align:left">23</td>
<td style="text-align:left">Female</td>
<td style="text-align:left">Reading, Movies</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">Henry</td>
<td style="text-align:left">23</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Diving, Hiking</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">Swift</td>
<td style="text-align:left">21</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Football, Music</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">Lenard</td>
<td style="text-align:left">26</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Stay at Home</td>
</tr>
</tbody>
</table>
<p>现在我们需要用一种格式去组织5位员工的信息，以列表为例</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Swift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lenard&#39;</span><span class="p">]</span>

<span class="n">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">25</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">26</span><span class="p">]</span>

<span class="n">hobbies</span> <span class="o">=</span> <span class="p">[[</span><span class="s1">&#39;Basketball&#39;</span><span class="p">,</span> <span class="s1">&#39;Pingpang&#39;</span><span class="p">,</span> <span class="s1">&#39;Hiking&#39;</span><span class="p">],</span>
          <span class="p">[</span><span class="s1">&#39;Reading&#39;</span><span class="p">,</span> <span class="s1">&#39;Movies&#39;</span><span class="p">],</span>
          <span class="p">[</span><span class="s1">&#39;Diving&#39;</span><span class="p">,</span> <span class="s1">&#39;Hiking&#39;</span><span class="p">],</span>
          <span class="p">[</span><span class="s1">&#39;Football&#39;</span><span class="p">,</span> <span class="s1">&#39;Music&#39;</span><span class="p">],</span>
          <span class="p">[</span><span class="s1">&#39;Stay at Home&#39;</span><span class="p">]]</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">names</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">ages</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">hobbies</span><span class="p">))</span>

<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ages</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">hobbies</span><span class="p">)</span>
</code></pre></div><pre><code>&lt;class 'list'&gt;
&lt;class 'list'&gt;
&lt;class 'list'&gt;
['David', 'Mary', 'Henry', 'Swift', 'Lenard']
[25, 23, 23, 21, 26]
[['Basketball', 'Pingpang', 'Hiking'], ['Reading', 'Movies'], ['Diving', 'Hiking'], ['Football', 'Music'], ['Stay at Home']]
</code></pre>
<p>**多想一下： **组织数据的方式有很多种，list也可以用不同的方式去组织，大家可以自己想一想。</p>
<p><br><br></p>
<h3 id="拼接">拼接</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a1</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Michael&#39;</span><span class="p">,</span> <span class="s1">&#39;Bob&#39;</span><span class="p">]</span>
<span class="n">a2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Lee&#39;</span><span class="p">]</span>

<span class="nb">print</span><span class="p">(</span><span class="n">a1</span> <span class="o">+</span> <span class="n">a2</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a2</span> <span class="o">+</span> <span class="n">a1</span><span class="p">)</span>
</code></pre></div><pre><code>['Michael', 'Bob', 'David', 'Lee']
['David', 'Lee', 'Michael', 'Bob']
</code></pre>
<p><br><br></p>
<h3 id="拆包">拆包</h3>
<p><strong>注意：</strong> 等号两边长度相同</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span><span class="p">,</span> <span class="n">age</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="mi">25</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">age</span><span class="p">)</span>
</code></pre></div><pre><code>David
25
</code></pre>
<p><br><br></p>
<h3 id="切片">切片</h3>
<p>列表的切片与字符串类似</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">姓名</th>
<th style="text-align:left">年龄</th>
<th style="text-align:left">性别</th>
<th style="text-align:left">爱好</th>
<th style="text-align:left">正索引</th>
<th style="text-align:left">倒索引</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">David</td>
<td style="text-align:left">25</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Basketball, Pingpang, Hiking</td>
<td style="text-align:left">0</td>
<td style="text-align:left">-5</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">Mary</td>
<td style="text-align:left">23</td>
<td style="text-align:left">Female</td>
<td style="text-align:left">Reading, Movies</td>
<td style="text-align:left">1</td>
<td style="text-align:left">-4</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">Henry</td>
<td style="text-align:left">23</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Diving, Hiking</td>
<td style="text-align:left">2</td>
<td style="text-align:left">-3</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">Swift</td>
<td style="text-align:left">21</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Football, Music</td>
<td style="text-align:left">3</td>
<td style="text-align:left">-2</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">Lenard</td>
<td style="text-align:left">26</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Stay at Home</td>
<td style="text-align:left">4</td>
<td style="text-align:left">-1</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Swift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lenard&#39;</span><span class="p">]</span>
<span class="n">names</span>
</code></pre></div><pre><code>['David', 'Mary', 'Henry', 'Swift', 'Lenard']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">])</span>
</code></pre></div><pre><code>Henry
Henry
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">:</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
</code></pre></div><pre><code>['David', 'Mary', 'Henry']
['David', 'Mary', 'Henry']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">:])</span>
</code></pre></div><pre><code>['Henry', 'Swift', 'Lenard']
['Henry', 'Swift', 'Lenard']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[:</span><span class="mi">2</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">[:</span><span class="o">-</span><span class="mi">3</span><span class="p">])</span>
</code></pre></div><pre><code>['David', 'Mary']
['David', 'Mary']
</code></pre>
<br>
<h3 id="列表常用方法">列表常用方法</h3>
<table>
<thead>
<tr>
<th style="text-align:left">常用方法</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">list.append(a)</td>
<td style="text-align:left">向list中添加元素a</td>
</tr>
<tr>
<td style="text-align:left">list.extend(lst)</td>
<td style="text-align:left">向list中添加列表lst</td>
</tr>
<tr>
<td style="text-align:left">list.count(a)</td>
<td style="text-align:left">统计list中a的个数</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Swift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lenard&#39;</span><span class="p">]</span>

<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
<span class="n">names</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;Mary&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</code></pre></div><pre><code>['David', 'Mary', 'Henry', 'Swift', 'Lenard']
['David', 'Mary', 'Henry', 'Swift', 'Lenard', 'Mary']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Swift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lenard&#39;</span><span class="p">]</span>

<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>

<span class="n">names</span><span class="o">.</span><span class="n">extend</span><span class="p">([</span><span class="s1">&#39;Mary&#39;</span><span class="p">])</span>

<span class="nb">print</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</code></pre></div><pre><code>['David', 'Mary', 'Henry', 'Swift', 'Lenard']
['David', 'Mary', 'Henry', 'Swift', 'Lenard', 'Mary']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">25</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="mi">26</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="n">ages</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="mi">23</span><span class="p">))</span>
</code></pre></div><pre><code>2
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">one</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="n">one</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">one</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div><pre><code>David
David
</code></pre>
<p><br><br></p>
<h2 id="元组tuple">元组tuple</h2>
<p>形似列表，也有</p>
<ul>
<li>元组拼接</li>
<li>切片</li>
<li>拆包</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name_list</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Swift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lenard&#39;</span><span class="p">]</span>
<span class="n">name_tuple</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Swift&#39;</span><span class="p">,</span> <span class="s1">&#39;Lenard&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">name_list</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">name_tuple</span><span class="p">))</span>

<span class="nb">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">name_tuple</span><span class="p">)</span>
</code></pre></div><pre><code>&lt;class 'list'&gt;
&lt;class 'tuple'&gt;
['David', 'Mary', 'Henry', 'Swift', 'Lenard']
('David', 'Mary', 'Henry', 'Swift', 'Lenard')
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">name_list</span><span class="o">==</span><span class="n">name_tuple</span><span class="p">)</span>
</code></pre></div><pre><code>False
</code></pre>
<p><br><br></p>
<h2 id="集合">集合</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">names2</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Swift&#39;</span><span class="p">,</span> <span class="s1">&#39;David&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">names2</span><span class="p">))</span>
</code></pre></div><pre><code>{'Swift', 'Mary', 'David'}
</code></pre>
<br>
<h3 id="集合的方法">集合的方法</h3>
<ul>
<li>setdata.add(ele)  向setdata中加入ele</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name_set</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">names2</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">name_set</span><span class="p">)</span>

<span class="n">name_set</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="s1">&#39;William&#39;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">name_set</span><span class="p">)</span>
</code></pre></div><pre><code>{'Swift', 'Mary', 'David'}
{'William', 'Swift', 'Mary', 'David'}
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name_set</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-20-98cb669cc173&gt; in &lt;module&gt;
----&gt; 1 name_set[2]


TypeError: 'set' object is not subscriptable
</code></pre>
<br>
<p><strong>注意：</strong> 集合不能切片</p>
<p><br><br></p>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据类型-字典</title>
      <link>https://textdata.cn/blog/basic-06-dict/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-06-dict/</guid>
      <description>最有层次感的数据类型，特别干净整洁。在写爬虫时，我们最希望遇到的数据类型就是ta</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=7"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<blockquote>
<p><strong>最有层次感的数据类型，特别干净整洁。在写爬虫时，我们最希望遇到的数据类型就是ta</strong></p>
</blockquote>
<p>下图就是最简单的字典的样式，<strong>键值对 key-value-pairs</strong></p>

<figure >
    
        <img src="featured.jpg" />
    
    
</figure>

<p><br><br></p>
<h2 id="字典">字典</h2>
<p>字典是有key，有value的 key-value-pair类型数据（键-值对）</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">姓名</th>
<th style="text-align:left">年龄</th>
<th style="text-align:left">性别</th>
<th style="text-align:left">爱好</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">David</td>
<td style="text-align:left">25</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Basketball, Pingpang, Hiking</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">Mary</td>
<td style="text-align:left">23</td>
<td style="text-align:left">Female</td>
<td style="text-align:left">Reading, Movies</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">Henry</td>
<td style="text-align:left">23</td>
<td style="text-align:left">Male</td>
<td style="text-align:left">Diving, Hiking</td>
</tr>
</tbody>
</table>
<p>将上面的员工信息以关键词<code>name、age、hobbies</code> 组织成字典数据</p>
<br>
<h3 id="空字典">空字典</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">david</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
<span class="nb">print</span><span class="p">(</span><span class="n">david</span><span class="p">)</span>
</code></pre></div><pre><code>{}
</code></pre>
<br>
<h3 id="填充">填充</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">david</span><span class="p">[</span><span class="s1">&#39;age&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">23</span>
<span class="nb">print</span><span class="p">(</span><span class="n">david</span><span class="p">)</span>
</code></pre></div><pre><code>{'age': 23}
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">david</span><span class="p">[</span><span class="s1">&#39;hobbies&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Basketball&#39;</span><span class="p">,</span> <span class="s1">&#39;Pingpang&#39;</span><span class="p">,</span> <span class="s1">&#39;Hiking&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="n">david</span><span class="p">)</span>
</code></pre></div><pre><code>{'age': 23, 'hobbies': ['Basketball', 'Pingpang', 'Hiking']}
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">david</span><span class="p">[</span><span class="s1">&#39;gender&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;Male&#39;</span>
<span class="nb">print</span><span class="p">(</span><span class="n">david</span><span class="p">)</span>
</code></pre></div><pre><code>{'age': 23, 'hobbies': ['Basketball', 'Pingpang', 'Hiking'], 'gender': 'Male'}
</code></pre>
<p><br><br></p>
<h3 id="更新">更新</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">david</span><span class="p">[</span><span class="s1">&#39;age&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">25</span>
<span class="nb">print</span><span class="p">(</span><span class="n">david</span><span class="p">)</span>
</code></pre></div><pre><code>{'age': 25, 'hobbies': ['Basketball', 'Pingpang', 'Hiking'], 'gender': 'Male'}
</code></pre>
<br>
<h3 id="完整的信息">完整的信息</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">infos</span> <span class="o">=</span>  <span class="p">{</span><span class="s1">&#39;David&#39;</span><span class="p">:{</span><span class="s1">&#39;age&#39;</span><span class="p">:</span><span class="mi">25</span><span class="p">,</span> 
                   <span class="s1">&#39;gender&#39;</span><span class="p">:</span><span class="s1">&#39;Male&#39;</span><span class="p">,</span>
                   <span class="s1">&#39;hobbies&#39;</span><span class="p">:[</span><span class="s1">&#39;Basketball&#39;</span><span class="p">,</span> <span class="s1">&#39;Pingpang&#39;</span><span class="p">,</span> <span class="s1">&#39;Hiking&#39;</span><span class="p">]},</span>
          <span class="s1">&#39;Mary&#39;</span><span class="p">:{</span><span class="s1">&#39;age&#39;</span><span class="p">:</span><span class="mi">23</span><span class="p">,</span>
                  <span class="s1">&#39;gender&#39;</span><span class="p">:</span> <span class="s1">&#39;Female&#39;</span><span class="p">,</span>
                  <span class="s1">&#39;hobbies&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;Reading&#39;</span><span class="p">,</span> <span class="s1">&#39;Movies&#39;</span><span class="p">]},</span>
          <span class="s1">&#39;Henry&#39;</span><span class="p">:{</span><span class="s1">&#39;age&#39;</span><span class="p">:</span><span class="mi">23</span><span class="p">,</span>
                  <span class="s1">&#39;gender&#39;</span><span class="p">:</span> <span class="s1">&#39;Male&#39;</span><span class="p">,</span>
                  <span class="s1">&#39;hobbies&#39;</span><span class="p">:</span> <span class="p">[</span><span class="s1">&#39;Diving&#39;</span><span class="p">,</span> <span class="s1">&#39;Hiking&#39;</span><span class="p">]}</span>
         <span class="p">}</span>

<span class="nb">print</span><span class="p">(</span><span class="n">infos</span><span class="p">)</span>
</code></pre></div><pre><code>{'David': {'age': 25, 'gender': 'Male', 'hobbies': ['Basketball', 'Pingpang', 'Hiking']}, 'Mary': {'age': 23, 'gender': 'Female', 'hobbies': ['Reading', 'Movies']}, 'Henry': {'age': 23, 'gender': 'Male', 'hobbies': ['Diving', 'Hiking']}}
</code></pre>
<br>
<br>
<h2 id="字典的方法">字典的方法</h2>
<table>
<thead>
<tr>
<th style="text-align:left">方法</th>
<th style="text-align:left">效果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">dictdata.items()</td>
<td style="text-align:left">返回dictdata所有item</td>
</tr>
<tr>
<td style="text-align:left">dictdata.keys()</td>
<td style="text-align:left">返回dictdata的所有关键词</td>
</tr>
<tr>
<td style="text-align:left">dictdata.values()</td>
<td style="text-align:left">返回dictdata的所有值</td>
</tr>
<tr>
<td style="text-align:left"><code>dictdata.get(keystr)</code></td>
<td style="text-align:left">获取关键词keystr对应的值</td>
</tr>
<tr>
<td style="text-align:left"><code>dictdata[keystr]</code></td>
<td style="text-align:left">获取关键词keystr对应的值</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">infos</span><span class="o">.</span><span class="n">items</span><span class="p">()</span>
</code></pre></div><pre><code>dict_items([('David', {'age': 25, 'gender': 'Male', 'hobbies': ['Basketball', 'Pingpang', 'Hiking']}), ('Mary', {'age': 23, 'gender': 'Female', 'hobbies': ['Reading', 'Movies']}), ('Henry', {'age': 23, 'gender': 'Male', 'hobbies': ['Diving', 'Hiking']})])
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#把infos.items()转化为列表</span>
<span class="nb">list</span><span class="p">(</span><span class="n">infos</span><span class="o">.</span><span class="n">items</span><span class="p">())[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div><pre><code>('David',
 {'age': 25,
  'gender': 'Male',
  'hobbies': ['Basketball', 'Pingpang', 'Hiking']})
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">infos</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
</code></pre></div><pre><code>dict_keys(['David', 'Mary', 'Henry'])
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">infos</span><span class="o">.</span><span class="n">values</span><span class="p">()</span>
</code></pre></div><pre><code>dict_values([{'age': 25, 'gender': 'Male', 'hobbies': ['Basketball', 'Pingpang', 'Hiking']}, {'age': 23, 'gender': 'Female', 'hobbies': ['Reading', 'Movies']}, {'age': 23, 'gender': 'Male', 'hobbies': ['Diving', 'Hiking']}])
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">infos</span><span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="n">infos</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;David&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>{'age': 25, 'gender': 'Male', 'hobbies': ['Basketball', 'Pingpang', 'Hiking']}
{'age': 25, 'gender': 'Male', 'hobbies': ['Basketball', 'Pingpang', 'Hiking']}
</code></pre>
<br>
<p><strong>注意：</strong> 两种功能等同，但是get获取方法更加安全稳定。</p>
<p>例如</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">infos</span><span class="p">[</span><span class="s1">&#39;Will&#39;</span><span class="p">])</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

KeyError                                  Traceback (most recent call last)

&lt;ipython-input-16-f7c283c8ad8e&gt; in &lt;module&gt;
----&gt; 1 print(infos['Will'])


KeyError: 'Will'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="n">infos</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;Will&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>None
</code></pre>
<br>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>数据类型-布尔值&amp;None</title>
      <link>https://textdata.cn/blog/basic-07-boolean-none/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-07-boolean-none/</guid>
      <description>Python世界也存在 有与无、真与假</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=8"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<h2 id="布尔值boolean">布尔值Boolean</h2>
<p>用于逻辑判断，一般与if结合使用。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="kc">True</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kc">True</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kc">False</span>
</code></pre></div><pre><code>False
</code></pre>
<br>
<p>其他产生布尔值的方式</p>
<ul>
<li>布尔运算</li>
<li>比较运算</li>
<li>成员运算</li>
</ul>
<br>
<h2 id="布尔运算">布尔运算</h2>
<p>中学数学课里的且或非</p>
<table>
<thead>
<tr>
<th style="text-align:left">运算符号</th>
<th style="text-align:left">功能</th>
<th style="text-align:left">例子</th>
<th style="text-align:left">等于</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">x and y</td>
<td style="text-align:left">且</td>
<td style="text-align:left">True and False</td>
<td style="text-align:left">False</td>
</tr>
<tr>
<td style="text-align:left">x or y</td>
<td style="text-align:left">或</td>
<td style="text-align:left">True or False</td>
<td style="text-align:left">True</td>
</tr>
<tr>
<td style="text-align:left">not x</td>
<td style="text-align:left">非</td>
<td style="text-align:left">not True</td>
<td style="text-align:left">False</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">x</span> <span class="o">=</span> <span class="kc">True</span> <span class="ow">and</span> <span class="kc">False</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div><pre><code>False
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">x</span> <span class="o">=</span> <span class="kc">True</span> <span class="ow">or</span> <span class="kc">False</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">x</span> <span class="o">=</span> <span class="ow">not</span> <span class="kc">True</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div><pre><code>False
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">x</span> <span class="o">=</span> <span class="ow">not</span> <span class="kc">False</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<br>
<h2 id="比较运算">比较运算</h2>
<p><strong>注意：</strong> =和<code>==</code>的区别，=用来把某个值传给某个变量(赋值操作)，<code>==</code>用来判断两个值(变量)是否相等(判断操作)</p>
<table>
<thead>
<tr>
<th style="text-align:left">比较运算符号</th>
<th style="text-align:left">功能</th>
<th style="text-align:left">例子</th>
<th style="text-align:left">等于</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">==</td>
<td style="text-align:left">相等</td>
<td style="text-align:left">5==3</td>
<td style="text-align:left">False</td>
</tr>
<tr>
<td style="text-align:left">!=</td>
<td style="text-align:left">不等于</td>
<td style="text-align:left">5!=3</td>
<td style="text-align:left">True</td>
</tr>
<tr>
<td style="text-align:left"><code>&gt;</code></td>
<td style="text-align:left">大于</td>
<td style="text-align:left"><code>5&gt;3</code></td>
<td style="text-align:left">True</td>
</tr>
<tr>
<td style="text-align:left"><code>&lt;</code></td>
<td style="text-align:left">小于</td>
<td style="text-align:left"><code>5&lt;3</code></td>
<td style="text-align:left">False</td>
</tr>
<tr>
<td style="text-align:left"><code>&lt;=</code></td>
<td style="text-align:left">小于等于</td>
<td style="text-align:left"><code>5&lt;=3</code></td>
<td style="text-align:left">False</td>
</tr>
<tr>
<td style="text-align:left"><code>&gt;=</code></td>
<td style="text-align:left">小于</td>
<td style="text-align:left"><code>5&gt;=3</code></td>
<td style="text-align:left">True</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">3</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">a</span><span class="o">&lt;</span><span class="n">b</span>
<span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
</code></pre></div><pre><code>False
&lt;class 'bool'&gt;
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="mi">5</span><span class="o">==</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="mi">5</span><span class="o">!=</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div><pre><code>False
</code></pre>
<p>**注意:**比较符两侧必须为同样的数据类型</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="s1">&#39;5&#39;</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">5</span>

<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">b</span><span class="p">)</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-15-861d7a553a1d&gt; in &lt;module&gt;
      2 b = 5
      3 
----&gt; 4 print(a&gt;b)
TypeError: '&gt;' not supported between instances of 'str' and 'int'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="s1">&#39;5&#39;</span>
<span class="n">b</span> <span class="o">=</span> <span class="s1">&#39;5&#39;</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">==</span><span class="n">b</span><span class="p">)</span>
</code></pre></div><pre><code>True
</code></pre>
<p><br><br></p>
<h2 id="成员运算符in">成员运算符in</h2>
<p>用来判断某个值是否在集合中（这个集合可以使列表、元组、字符串等)</p>
<table>
<thead>
<tr>
<th style="text-align:left">案例</th>
<th style="text-align:left">结果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>4 in [1,2,4]</code></td>
<td style="text-align:left">True</td>
</tr>
<tr>
<td style="text-align:left"><code>4 not in [1,2,4]</code></td>
<td style="text-align:left">False</td>
</tr>
<tr>
<td style="text-align:left"><code>3 in [1,2,4]</code></td>
<td style="text-align:left">False</td>
</tr>
<tr>
<td style="text-align:left"><code>3 not in [1,2,4]</code></td>
<td style="text-align:left">True</td>
</tr>
</tbody>
</table>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">x</span> <span class="o">=</span> <span class="mi">4</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="n">x</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">y</span> <span class="o">=</span> <span class="mi">4</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="n">y</span>
</code></pre></div><pre><code>False
</code></pre>
<p><br><br></p>
<h2 id="none">None</h2>
<p>特殊的空值，类似于C语言中的Null。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kc">None</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s1">&#39;&#39;</span>
</code></pre></div><br>
<pre><code>''
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="p">[]</span>
</code></pre></div><pre><code>[]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">dict</span><span class="p">()</span>
</code></pre></div><pre><code>{}
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">type</span><span class="p">(</span><span class="kc">None</span><span class="p">)</span>
</code></pre></div><pre><code>NoneType
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
</code></pre></div><br>
<p>##了解课程</p>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>逻辑语句(if&amp;for&amp;tryexcept)</title>
      <link>https://textdata.cn/blog/basic-08-logical-if-else-try-except/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-08-logical-if-else-try-except/</guid>
      <description>记住程序做事，跟人一样，也要考虑的全面，条件是否成熟。如果做不成，做好最坏打算。</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=9"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<h1 id="if条件判断">if条件判断</h1>

<figure >
    
        <img src="if%e5%9b%be.png" width="800" />
    
    
</figure>

<h2 id="condition为布尔值布尔运算成员运算符">condition为布尔值、布尔运算、成员运算符</h2>
<p>通常我们理解的condition为布尔值</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#Tab</span>
<span class="n">condition</span> <span class="o">=</span> <span class="kc">True</span>

<span class="k">if</span> <span class="n">condition</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;condition为True&#39;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;condition为False&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>condition为True
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">age</span> <span class="o">=</span> <span class="mi">17</span>

<span class="k">if</span> <span class="n">age</span><span class="o">&gt;=</span><span class="mi">18</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;你是成年人了&#39;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;你还是个孩子&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>你还是个孩子
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">age</span> <span class="o">=</span> <span class="mi">20</span>

<span class="k">if</span> <span class="n">age</span><span class="o">&gt;=</span><span class="mi">55</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;老年人&#39;</span><span class="p">)</span>
<span class="k">elif</span> <span class="mi">35</span><span class="o">&lt;=</span><span class="n">age</span><span class="o">&lt;</span><span class="mi">55</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;中年&#39;</span><span class="p">)</span>
<span class="k">elif</span> <span class="mi">18</span><span class="o">&lt;=</span><span class="n">age</span><span class="o">&lt;</span><span class="mi">35</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;青年&#39;</span><span class="p">)</span>
<span class="k">elif</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="n">age</span><span class="o">&lt;</span><span class="mi">18</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;儿童&#39;</span><span class="p">)</span>

</code></pre></div><pre><code>青年
</code></pre>
<p><br><br></p>
<h2 id="特殊的conditon">特殊的conditon</h2>
<ul>
<li>各种空值(空字符串、空列表等)作用等同于False</li>
<li>各种非空值，作用等同于True</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="kc">None</span>

<span class="k">if</span> <span class="n">a</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;a是非空数据&#39;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;a是空数据&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>a是空数据
</code></pre>
<p><br><br></p>
<h1 id="for循环">for循环</h1>
<ul>
<li>重复做某件事</li>
<li>迭代出数据中的内容(元素)</li>
</ul>

<figure >
    
        <img src="for%e5%be%aa%e7%8e%af.png" width="800" />
    
    
</figure>

<h3 id="上面这个图可以解读为">上面这个图可以解读为</h3>
<p>我们想对iterable这个集合中的每一个item:</p>
<pre><code>做点事(对item做操作)
</code></pre>
<br>
<h2 id="重复做某事">重复做某事</h2>
<h3 id="问题1">问题1</h3>
<p>计算1+2+3+&hellip;+97+98+99+100=?</p>
<p>1 + 2 = 3
3 + 3 = 6
6 + 4 = 10
10 + 5 = 15</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>

<span class="c1">#int</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">101</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">result</span> <span class="o">+</span> <span class="n">i</span>
    
<span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div><pre><code>5050
</code></pre>
<br>
<h2 id="迭代出数据中的内容">迭代出数据中的内容</h2>
<p>从某种“集合”（这个“集合”可以使list、set、tuple等），只要“集合”内部有多个成员就可以使用for循环迭代出内部的成员</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">names</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
</code></pre></div><pre><code>David
Henry
Mary
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;David&#39;</span>

<span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">name</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</code></pre></div><pre><code>D
a
v
i
d
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">infos</span> <span class="o">=</span>  <span class="p">{</span><span class="s1">&#39;David&#39;</span><span class="p">:{</span><span class="s1">&#39;age&#39;</span><span class="p">:</span><span class="mi">25</span><span class="p">,</span> 
                   <span class="s1">&#39;gender&#39;</span><span class="p">:</span><span class="s1">&#39;Male&#39;</span><span class="p">},</span>
          <span class="s1">&#39;Mary&#39;</span><span class="p">:{</span><span class="s1">&#39;age&#39;</span><span class="p">:</span><span class="mi">23</span><span class="p">,</span>
                  <span class="s1">&#39;gender&#39;</span><span class="p">:</span> <span class="s1">&#39;Female&#39;</span><span class="p">},</span>
          <span class="s1">&#39;Henry&#39;</span><span class="p">:{</span><span class="s1">&#39;age&#39;</span><span class="p">:</span><span class="mi">23</span><span class="p">,</span>
                  <span class="s1">&#39;gender&#39;</span><span class="p">:</span> <span class="s1">&#39;Male&#39;</span><span class="p">}</span>
         <span class="p">}</span>

<span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">infos</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
</code></pre></div><pre><code>('David', {'age': 25, 'gender': 'Male'})
('Mary', {'age': 23, 'gender': 'Female'})
('Henry', {'age': 23, 'gender': 'Male'})
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">info</span> <span class="ow">in</span> <span class="n">infos</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">info</span><span class="p">)</span>
</code></pre></div><pre><code>David
Mary
Henry
</code></pre>
<p><br><br></p>
<h1 id="try-except">try-except</h1>
<p><strong>遇到无关紧要的bug，不会停下来，让程序有一定的容错能力。通俗点就是此处不留爷，自有留爷处，凡事别钻牛角尖。</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">]:</span>
    <span class="nb">print</span><span class="p">(</span><span class="mi">10</span><span class="o">/</span><span class="n">x</span><span class="p">)</span>
</code></pre></div><pre><code>10.0
5.0
---------------------------------------------------------------------------

ZeroDivisionError                         Traceback (most recent call last)

&lt;ipython-input-19-83bea9c92c0e&gt; in &lt;module&gt;
      1 for x in [1,2,0,2,1]:
----&gt; 2     print(10/x)
ZeroDivisionError: division by zero
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">]:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="mi">10</span><span class="o">/</span><span class="n">x</span><span class="p">)</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;0除错误&#39;</span><span class="p">)</span>
        <span class="c1">#pass</span>
</code></pre></div><pre><code>10.0
5.0
0除错误
5.0
10.0
</code></pre>
<p><br><br></p>
<h2 id="练习1">练习1</h2>
<p>假设现在某人的能力为1， 每天比前一天进步0.01， 一年后他的能力是多少？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">ability</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">scale</span> <span class="o">=</span> <span class="mf">1.01</span>

<span class="n">records</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">365</span><span class="p">):</span>
    <span class="n">ability</span> <span class="o">=</span> <span class="n">ability</span> <span class="o">*</span> <span class="mf">1.01</span>
    <span class="n">records</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ability</span><span class="p">)</span>
    
<span class="nb">print</span><span class="p">(</span><span class="n">records</span><span class="p">)</span>
</code></pre></div><pre><code>[1.01, 1.0201, 1.030301, 1.04060401, 1.0510100501, 1.061520150601, 1.0721353521070098, 1.08285670562808, 1.0936852726843609, 1.1046221254112045, 1.1156683466653166, ...................36.30913774096189, 36.672229118371504, 37.03895140955522, 37.40934092365077, 37.783434332887275]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="nn">plt</span>
<span class="kn">import</span> <span class="nn">math</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>

<span class="n">ability</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">scale</span> <span class="o">=</span> <span class="mf">1.02</span>
<span class="n">records</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">days</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">365</span><span class="p">)</span>
<span class="k">for</span> <span class="n">day</span> <span class="ow">in</span> <span class="n">days</span><span class="p">:</span>
    <span class="n">ability</span> <span class="o">=</span> <span class="n">ability</span><span class="o">*</span><span class="n">scale</span>
    <span class="n">records</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ability</span><span class="p">)</span>
 

<span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">days</span><span class="p">,</span> <span class="n">records</span><span class="p">)</span>
<span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s1">&#39;Be better everyday!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Text(0.5, 1.0, 'Be better everyday!')
</code></pre>

<figure >
    
        <img src="output_23_1.png" width="800" />
    
    
</figure>

<p><br><br></p>
<h1 id="安装包的方法">安装包的方法</h1>
<ol>
<li>命令行执行 <code>pip install packagename</code></li>
<li>jupyter notebook的Cell中执行<code>!pip install packagename</code></li>
<li>如果是mac，pip写成pip3</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">matplotlib</span>
</code></pre></div><pre><code>Looking in indexes: https://mirrors.aliyun.com/pypi/simple/
Requirement already satisfied: matplotlib in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (3.2.1)
Requirement already satisfied: kiwisolver&gt;=1.0.1 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (1.2.0)
Requirement already satisfied: python-dateutil&gt;=2.1 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (2.8.1)
Requirement already satisfied: cycler&gt;=0.10 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (0.10.0)
Requirement already satisfied: numpy&gt;=1.11 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (1.18.2)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,&gt;=2.0.1 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from matplotlib) (2.4.7)
Requirement already satisfied: six&gt;=1.5 in c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages (from python-dateutil&gt;=2.1-&gt;matplotlib) (1.14.0)
</code></pre>
<h2 id="练习2">练习2</h2>
<p><strong>打印九九乘法表格</strong></p>

<figure >
    
        <img src="%e4%b9%9d%e4%b9%9d%e4%b9%98%e6%b3%95%e8%a1%a82.png" width="800" />
    
    
</figure>

<p>用到的知识点:</p>
<ul>
<li>for循环</li>
<li>字符串format方法</li>
<li>print函数(涉及到end参数)</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">):</span>
    <span class="c1">#print(row)</span>
    <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">row</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">formula</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{col}</span><span class="s1">*</span><span class="si">{row}</span><span class="s1">=</span><span class="si">{res}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">col</span><span class="o">=</span><span class="n">col</span><span class="p">,</span> <span class="n">row</span><span class="o">=</span><span class="n">row</span><span class="p">,</span> <span class="n">res</span><span class="o">=</span><span class="n">col</span><span class="o">*</span><span class="n">row</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">formula</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>1*1=1	
1*2=2	2*2=4	
1*3=3	2*3=6	3*3=9	
1*4=4	2*4=8	3*4=12	4*4=16	
1*5=5	2*5=10	3*5=15	4*5=20	5*5=25	
1*6=6	2*6=12	3*6=18	4*6=24	5*6=30	6*6=36	
1*7=7	2*7=14	3*7=21	4*7=28	5*7=35	6*7=42	7*7=49	
1*8=8	2*8=16	3*8=24	4*8=32	5*8=40	6*8=48	7*8=56	8*8=64	
1*9=9	2*9=18	3*9=27	4*9=36	5*9=45	6*9=54	7*9=63	8*9=72	9*9=81	
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">help</span><span class="p">(</span><span class="nb">print</span><span class="p">)</span>
</code></pre></div><pre><code>Help on built-in function print in module builtins:

print(...)
    print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
    
    Prints the values to a stream, or to sys.stdout by default.
    Optional keyword arguments:
    file:  a file-like object (stream); defaults to the current sys.stdout.
    sep:   string inserted between values, default a space.
    end:   string appended after the last value, default a newline.
    flush: whether to forcibly flush the stream.
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">row</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">formula</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{col}</span><span class="s1">*</span><span class="si">{row}</span><span class="s1">=</span><span class="si">{res}</span><span class="s1">&#39;</span>
        <span class="n">content</span> <span class="o">=</span> <span class="n">formula</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">col</span><span class="o">=</span><span class="n">col</span><span class="p">,</span> <span class="n">row</span><span class="o">=</span><span class="n">row</span><span class="p">,</span> <span class="n">res</span><span class="o">=</span><span class="n">col</span><span class="o">*</span><span class="n">row</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">()</span>
    
</code></pre></div><pre><code>1*1=1	
1*2=2	2*2=4	
1*3=3	2*3=6	3*3=9	
1*4=4	2*4=8	3*4=12	4*4=16	
1*5=5	2*5=10	3*5=15	4*5=20	5*5=25	
1*6=6	2*6=12	3*6=18	4*6=24	5*6=30	6*6=36	
1*7=7	2*7=14	3*7=21	4*7=28	5*7=35	6*7=42	7*7=49	
1*8=8	2*8=16	3*8=24	4*8=32	5*8=40	6*8=48	7*8=56	8*8=64	
1*9=9	2*9=18	3*9=27	4*9=36	5*9=45	6*9=54	7*9=63	8*9=72	9*9=81	
</code></pre>
<p><br><br></p>
<h1 id="了解课程">了解课程</h1>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>高级语法-列表推导式</title>
      <link>https://textdata.cn/blog/basic-09-list-comprehension/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-09-list-comprehension/</guid>
      <description>5个小问题帮你理解推导式</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=10"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p>列表推导式唯一的用处就是增强代码的可阅读性，初次接触可能比较难理解，但是大家一定要理解，文本分析中经常会用到ta。</p>
<p><br><br></p>
<h2 id="问题1-用列表表示集合x">问题1 用列表表示集合X</h2>
<p>$X= {x| x \in [1,2,3,4,5,6,7,8,9,10]}$</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">X</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">10</span><span class="p">]</span>
<span class="n">X</span>
</code></pre></div><pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">X</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
<span class="n">X</span>
</code></pre></div><pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<p><br><br></p>
<h2 id="问题2-表示集合y">问题2 表示集合Y</h2>
<p>$Y = {x^2| x \in [1,2,3,4,5,6,7,8,9,10]}$</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">Y</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">X</span><span class="p">:</span>
    <span class="n">Y</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="o">*</span><span class="n">x</span><span class="p">)</span>
    
<span class="n">Y</span>
</code></pre></div><pre><code>[1, 4, 9, 16, 25, 36, 49, 64, 81]
</code></pre>
<p><br><br></p>
<h2 id="列表推导式">列表推导式</h2>
<p>实现步骤</p>
<ol>
<li>先复制X</li>
<li>再对X中的元素x进行操作</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#先复制X</span>
<span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">X</span><span class="p">]</span>
</code></pre></div><pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#再对x进行操作</span>
<span class="p">[</span><span class="n">x</span><span class="o">*</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">X</span><span class="p">]</span>
</code></pre></div><pre><code>[1, 4, 9, 16, 25, 36, 49, 64, 81]
</code></pre>
<br>
<h3 id="理解列表推导式">理解列表推导式</h3>

<figure >
    
        <img src="%e5%88%97%e8%a1%a8%e6%8e%a8%e5%af%bc%e5%bc%8f%e7%90%86%e8%a7%a3.JPG" width="800" />
    
    
</figure>

<br>
<h3 id="带条件的列表推导式">带条件的列表推导式</h3>
<p>$C= {x^2 | (x \in X) \cap (x&gt;5)}$</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#复制X</span>
<span class="p">[</span><span class="n">x</span> 
 <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">X</span><span class="p">]</span>
</code></pre></div><pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#X中的要大于5</span>
<span class="c1">#[x for x in X if x&gt;5]</span>


<span class="p">[</span><span class="n">x</span> 
 <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">X</span> 
 <span class="k">if</span> <span class="n">x</span><span class="o">&gt;</span><span class="mi">5</span><span class="p">]</span>


</code></pre></div><pre><code>[6, 7, 8, 9]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#对满足条件的x进行操作</span>
<span class="c1">#[x*x for x in X if x&gt;5]</span>

<span class="p">[</span><span class="n">x</span><span class="o">*</span><span class="n">x</span> 
 <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">X</span> 
 <span class="k">if</span> <span class="n">x</span><span class="o">&gt;</span><span class="mi">5</span><span class="p">]</span>
</code></pre></div><pre><code>[36, 49, 64, 81]
</code></pre>
<p><br><br></p>
<h3 id="问题3-全部小写">问题3 全部小写</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;Life&#39;</span><span class="p">,</span> <span class="s1">&#39;is&#39;</span><span class="p">,</span> <span class="s1">&#39;short&#39;</span><span class="p">,</span> <span class="s1">&#39;so&#39;</span><span class="p">,</span> <span class="s1">&#39;we&#39;</span><span class="p">,</span> <span class="s1">&#39;use&#39;</span><span class="p">,</span> <span class="s1">&#39;Python&#39;</span><span class="p">,</span> <span class="s1">&#39;python&#39;</span><span class="p">,</span> 
         <span class="s1">&#39;is&#39;</span><span class="p">,</span> <span class="s1">&#39;easy&#39;</span><span class="p">,</span> <span class="s1">&#39;to&#39;</span><span class="p">,</span> <span class="s1">&#39;learn&#39;</span><span class="p">,</span> <span class="s1">&#39;and&#39;</span><span class="p">,</span> <span class="s1">&#39;easy&#39;</span><span class="p">,</span> <span class="s1">&#39;to&#39;</span><span class="p">,</span> <span class="s1">&#39;use&#39;</span><span class="p">]</span>
<span class="n">words</span>
</code></pre></div><pre><code>['Life',
 'is',
 'short',
 'so',
 'we',
 'use',
 'Python',
 'python',
 'is',
 'easy',
 'to',
 'learn',
 'and',
 'easy',
 'to',
 'use']
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">lower_words</span> <span class="o">=</span> <span class="p">[</span><span class="n">w</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">words</span><span class="p">]</span>
<span class="n">lower_words</span>
</code></pre></div><pre><code>['life',
 'is',
 'short',
 'so',
 'we',
 'use',
 'python',
 'python',
 'is',
 'easy',
 'to',
 'learn',
 'and',
 'easy',
 'to',
 'use']
</code></pre>
<p><br><br></p>
<h3 id="问题4-计算lower_words列表数据的单词词频">问题4 计算lower_words列表数据的单词词频</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">wordset</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">lower_words</span><span class="p">)</span>
<span class="p">[(</span><span class="n">w</span><span class="p">,</span> <span class="n">lower_words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">w</span><span class="p">))</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">wordset</span><span class="p">]</span>
</code></pre></div><pre><code>[('so', 1),
 ('and', 1),
 ('learn', 1),
 ('use', 2),
 ('to', 2),
 ('we', 1),
 ('easy', 2),
 ('python', 2),
 ('is', 2),
 ('short', 1),
 ('life', 1)]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#1 生产词语集合</span>
<span class="n">wordset</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="n">lower_words</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">wordset</span><span class="p">)</span>
</code></pre></div><pre><code>{'so', 'and', 'learn', 'use', 'to', 'we', 'easy', 'python', 'is', 'short', 'life'}
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#2. wordset复制wordset自己</span>
<span class="p">[</span><span class="n">w</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">wordset</span><span class="p">]</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#3. 对wordset中每个词语w进行一些操作</span>
<span class="p">[</span><span class="n">lower_words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">w</span><span class="p">)</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">wordset</span><span class="p">]</span>
</code></pre></div><pre><code>[1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#3. 词频和词语一起显示</span>
<span class="p">[(</span><span class="n">w</span><span class="p">,</span><span class="n">lower_words</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="n">w</span><span class="p">))</span> <span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="n">wordset</span><span class="p">]</span>
</code></pre></div><pre><code>[('so', 1),
 ('and', 1),
 ('learn', 1),
 ('use', 2),
 ('to', 2),
 ('we', 1),
 ('easy', 2),
 ('python', 2),
 ('is', 2),
 ('short', 1),
 ('life', 1)]
</code></pre>
<p><br><br></p>
<h3 id="问题5">问题5</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;x&#39;</span><span class="p">:</span> <span class="s1">&#39;A&#39;</span><span class="p">,</span> 
     <span class="s1">&#39;y&#39;</span><span class="p">:</span> <span class="s1">&#39;B&#39;</span><span class="p">,</span> 
     <span class="s1">&#39;z&#39;</span><span class="p">:</span> <span class="s1">&#39;C&#39;</span> <span class="p">}</span>
</code></pre></div><p>如何将d中的 键值对 拼接,输出为</p>
<p><code>['xA', 'yB', 'zC]</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;x&#39;</span><span class="p">:</span> <span class="s1">&#39;A&#39;</span><span class="p">,</span> 
     <span class="s1">&#39;y&#39;</span><span class="p">:</span> <span class="s1">&#39;B&#39;</span><span class="p">,</span> 
     <span class="s1">&#39;z&#39;</span><span class="p">:</span> <span class="s1">&#39;C&#39;</span> <span class="p">}</span>

<span class="n">d</span><span class="o">.</span><span class="n">items</span><span class="p">()</span>
</code></pre></div><pre><code>dict_items([('x', 'A'), ('y', 'B'), ('z', 'C')])
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#1 自己复制d.items()自己</span>
<span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">d</span><span class="o">.</span><span class="n">items</span><span class="p">()]</span>
</code></pre></div><pre><code>[('x', 'A'), ('y', 'B'), ('z', 'C')]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#2 对任何一个元素都要进行字符串的拼接操作</span>
<span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">d</span><span class="o">.</span><span class="n">items</span><span class="p">()]</span>
</code></pre></div><pre><code>['xA', 'yB', 'zC']
</code></pre>
<p><br><br></p>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>高级语法-理解函数</title>
      <link>https://textdata.cn/blog/basic-10-understand-function/</link>
      <pubDate>Sat, 10 Apr 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/basic-10-understand-function/</guid>
      <description>编程就是设计流水线，而函数就是流水线上的某个环节</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=11"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<br>
<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p>流水线每个环节都有质量要求，只有符合质量规范，才能流通到下一个环节。这样环环相扣，设计好后经过试运营就可以投产了。Python编程也一样，编程序其实也是设计流水线，而函数就是流水线上的一个个的环节。</p>
<p><br><br></p>
<h2 id="函数">函数</h2>
<p>可重复使用的代码块</p>

<figure >
    
        <img src="%e5%87%bd%e6%95%b0.png" width="800" />
    
    
</figure>

<p>def函数常见参数定义&amp;调用方式</p>
<ul>
<li>位置参数</li>
<li>关键词参数</li>
<li>默认参数</li>
</ul>
<p><br><br></p>
<h3 id="位置参数">位置参数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">hello1</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">):</span>
    <span class="k">return</span> <span class="s1">&#39;我是</span><span class="si">{0}</span><span class="s1">,今年</span><span class="si">{1}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">)</span>
    
<span class="n">hello1</span><span class="p">(</span><span class="s1">&#39;张三&#39;</span><span class="p">,</span> <span class="mi">25</span><span class="p">)</span>
</code></pre></div><pre><code>'我是张三,今年25'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">hello1</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span><span class="s1">&#39;张三&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>'我是25,今年张三'
</code></pre>
<p><br><br></p>
<h3 id="关键词参数">关键词参数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">hello2</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">):</span>
    <span class="k">return</span> <span class="s1">&#39;我是</span><span class="si">{0}</span><span class="s1">,今年</span><span class="si">{1}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">)</span>
    
    
<span class="n">hello2</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s1">&#39;张三&#39;</span><span class="p">,</span> <span class="n">age</span><span class="o">=</span><span class="mi">25</span><span class="p">)</span>
</code></pre></div><pre><code>'我是张三,今年25'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">hello2</span><span class="p">(</span><span class="n">age</span><span class="o">=</span><span class="mi">25</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s1">&#39;张三&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>'我是张三,今年25'
</code></pre>
<p><br><br></p>
<h3 id="默认参数">默认参数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">hello3</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">,</span> <span class="n">gender</span><span class="o">=</span><span class="s1">&#39;男&#39;</span><span class="p">):</span>
    <span class="k">return</span> <span class="s1">&#39;我是</span><span class="si">{0}</span><span class="s1">,今年</span><span class="si">{1}</span><span class="s1">, 性别</span><span class="si">{2}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">,</span> <span class="n">gender</span><span class="p">)</span>

    
<span class="n">hello3</span><span class="p">(</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="mi">25</span><span class="p">)</span>
</code></pre></div><pre><code>'我是David,今年25, 性别男'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">hello3</span><span class="p">(</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="n">gender</span><span class="o">=</span><span class="s1">&#39;male&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>'我是David,今年25, 性别male'
</code></pre>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>常用内置函数</title>
      <link>https://textdata.cn/blog/basic-11-built-function/</link>
      <pubDate>Fri, 09 Apr 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/basic-11-built-function/</guid>
      <description>常用的内置函数，数学相关函数、类型转化函数、功能函数</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=12"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p>有三大类内置函数</p>
<ul>
<li>数学相关函数</li>
<li>类型转化函数</li>
<li>功能函数</li>
</ul>
<p><strong>函数名加粗的是都是重点</strong></p>
<p><br><br></p>
<h3 id="数学相关">数学相关</h3>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
<th>例子</th>
<th>运行结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>abs(a)</td>
<td>对a取绝对值</td>
<td>abs(-1)</td>
<td>1</td>
</tr>
<tr>
<td>max(lst)、min(lst)</td>
<td>寻找lst中的最大、最小值</td>
<td>max([3, 2, 9])</td>
<td>9</td>
</tr>
<tr>
<td>sum(lst)</td>
<td>对lst内所有数字求和</td>
<td>sum([3, 2, 9])</td>
<td>14</td>
</tr>
<tr>
<td><strong>sorted(lst， reverse)</strong></td>
<td>对lst排序； 参数reverse为布尔值控制升降序</td>
<td>sorted([3, 2, 9])</td>
<td>[2, 3, 9]</td>
</tr>
<tr>
<td><strong>range(start, end, step)</strong></td>
<td>生成以步长step，生成从start到end的数列,默认step=1，结果取不到end</td>
<td>list(range(1,5))</td>
<td>[1, 2, 3,4]</td>
</tr>
</tbody>
</table>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#取绝对值</span>
<span class="nb">abs</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div><pre><code>1
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#取最大</span>
<span class="nb">max</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">])</span>
</code></pre></div><pre><code>9
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#取最小</span>
<span class="nb">min</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">])</span>
</code></pre></div><pre><code>2
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#求和</span>
<span class="nb">sum</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">9</span><span class="p">])</span>
</code></pre></div><pre><code>14
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#排序</span>
<span class="nb">sorted</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">])</span>
</code></pre></div><pre><code>[2, 3, 9]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#排序(方向调整)</span>
<span class="nb">sorted</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">],</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</code></pre></div><pre><code>[9, 3, 2]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#生成序列</span>
<span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
</code></pre></div><pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</code></pre></div><pre><code>[1, 3, 5, 7, 9]
</code></pre>
<p><br><br></p>
<h3 id="类型转换">类型转换</h3>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
<th>例子</th>
<th>运行结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>int(string)</td>
<td>将字符串数改为整数型</td>
<td>int(&lsquo;9&rsquo;)</td>
<td>9</td>
</tr>
<tr>
<td>float(int/str)</td>
<td>将int或str改为浮点型</td>
<td>float(9)、float(&lsquo;9&rsquo;)</td>
<td>9.0</td>
</tr>
<tr>
<td>list(iterable)</td>
<td>将可迭代对象为列表。这里的iterable可以为字符串，可以是列表</td>
<td>list(range(1,5))</td>
<td><code>[1,2,3,4] </code></td>
</tr>
<tr>
<td>enumerate(lst)</td>
<td>返回带有索引值的序列seq,<strong>需要list(seq)处理后才能看到seq</strong></td>
<td>list(enumerate([&lsquo;a&rsquo;, &lsquo;b&rsquo;, &lsquo;c&rsquo;]))</td>
<td>[(0,&lsquo;a&rsquo;), (1, &lsquo;b&rsquo;), (2, &lsquo;c&rsquo;)]</td>
</tr>
<tr>
<td>tuple(lst)</td>
<td>将lst变为tuple</td>
<td>tuple([1,2,3])</td>
<td>(1,2,3)</td>
</tr>
<tr>
<td>set(lst)</td>
<td>将lst变为集合</td>
<td>set([1,4,4,4,3])</td>
<td>{1,3,4}</td>
</tr>
</tbody>
</table>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="mi">9</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">9</span>

<span class="n">a</span><span class="o">+</span><span class="n">b</span>
</code></pre></div><pre><code>18
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#变转化为整数</span>
<span class="nb">int</span><span class="p">(</span><span class="s1">&#39;9&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>9
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#转化为小数</span>
<span class="nb">float</span><span class="p">(</span><span class="s1">&#39;9&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>9.0
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">float</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span>
</code></pre></div><pre><code>9.0
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#转化为列表</span>
<span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
</code></pre></div><pre><code>[1, 2, 3, 4]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#给列表中每个元素分配一个索引值</span>
<span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;张三&#39;</span><span class="p">,</span> <span class="s1">&#39;李四&#39;</span><span class="p">,</span> <span class="s1">&#39;王五&#39;</span><span class="p">]</span>

<span class="nb">list</span><span class="p">(</span><span class="nb">enumerate</span><span class="p">(</span><span class="n">names</span><span class="p">))</span>
</code></pre></div><pre><code>[(0, '张三'), (1, '李四'), (2, '王五')]
</code></pre>
<p><br><br></p>
<h3 id="功能函数">功能函数</h3>
<table>
<thead>
<tr>
<th>函数</th>
<th>功能</th>
<th>例子</th>
<th>运行结果</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>eval(expression)</strong></td>
<td>执行一个字符串表达式</td>
<td>eval(&lsquo;1+1&rsquo;)</td>
<td>2</td>
</tr>
<tr>
<td><strong>zip(lst1,lst2&hellip;)</strong></td>
<td>将lst1,lst2&hellip;合并,返回zip对象。<strong>需要list处理一下zip对象</strong></td>
<td>list(zip([1,2,3],[4,5,6]))</td>
<td>[(1, 4), (2, 5), (3, 6)]</td>
</tr>
<tr>
<td><strong>type(x)</strong></td>
<td>查看X的类型</td>
<td>type(&lsquo;2&rsquo;)</td>
<td>&lt;class &lsquo;str&rsquo;&gt;</td>
</tr>
<tr>
<td><strong>help(x)</strong></td>
<td>查看X的相关信息</td>
<td>help([1, 2])</td>
<td>Help on list object..</td>
</tr>
<tr>
<td><strong>map(func, lst)</strong></td>
<td>对lst中的每一个个体都进行func操作</td>
<td>list(map(sum, [[1,1], [1,2]]))</td>
<td>[2, 3]</td>
</tr>
<tr>
<td><strong>print(value, end='\n')</strong></td>
<td>打印value</td>
<td>print(&lsquo;abc&rsquo;)</td>
<td>abc</td>
</tr>
<tr>
<td><strong>open(file， encoding)</strong></td>
<td>打开file文件， encoding是file的文件编码</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h3 id="eval">eval()</h3>
<p>eval(str_expression)</p>
<p>str_expression 是字符串表达式，可以是变量、函数等</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="mi">9</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">9</span>
<span class="n">c</span> <span class="o">=</span> <span class="s1">&#39;a+b&#39;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="n">c</span><span class="p">))</span>
</code></pre></div><pre><code>18
a+b
18
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;a+b&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>18
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">d</span> <span class="o">=</span> <span class="s1">&#39;hello world&#39;</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;d&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>d
hello world
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">hello</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello python&#39;</span><span class="p">)</span>
    
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello()&#39;</span><span class="p">)</span>

</code></pre></div><pre><code>hello()
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;hello()&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>hello python
</code></pre>
<p><br><br></p>
<h3 id="ziplst1-lst2lst3">zip(lst1, lst2,lst3&hellip;)</h3>
<p>将lst1， lst2， lst3按照顺序进行合并</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;Unique&#39;</span><span class="p">]</span>
<span class="n">sexs</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;male&#39;</span><span class="p">,</span> <span class="s1">&#39;femal&#39;</span><span class="p">,</span> <span class="s1">&#39;male&#39;</span><span class="p">,</span> <span class="s1">&#39;male&#39;</span><span class="p">]</span>
<span class="n">ages</span> <span class="o">=</span> <span class="p">[</span><span class="mi">25</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">40</span><span class="p">]</span>

<span class="nb">list</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">names</span><span class="p">,</span> <span class="n">sexs</span><span class="p">,</span> <span class="n">ages</span><span class="p">))</span>
</code></pre></div><pre><code>[('David', 'male', 25),
 ('Mary', 'femal', 22),
 ('Henry', 'male', 30),
 ('Unique', 'male', 40)]
</code></pre>
<p><br><br></p>
<h3 id="typehelp">type/help</h3>
<p>查看数据类型、查看感兴趣对象的介绍</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
<span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div><pre><code>list
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">help</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div><pre><code>Help on list object:

class list(object)
 |  list(iterable=(), /)
 |  
 |  Built-in mutable sequence.
 |  
 |  If no argument is given, the constructor creates a new empty list.
 |  The argument must be an iterable if specified.
 |  
 |  Methods defined here:
 |  
.........
 |  append(self, object, /)
 |      Append object to the end of the list.
 |  
 |  
 |  count(self, value, /)
 |      Return number of occurrences of value.
 |  
 |  extend(self, iterable, /)
 |      Extend list by appending elements from the iterable.
 |  
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">type</span><span class="p">(</span><span class="nb">print</span><span class="p">)</span>
</code></pre></div><pre><code>builtin_function_or_method
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">help</span><span class="p">(</span><span class="nb">print</span><span class="p">)</span>
</code></pre></div><pre><code>Help on built-in function print in module builtins:

print(...)
    print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
    
    Prints the values to a stream, or to sys.stdout by default.
    Optional keyword arguments:
    file:  a file-like object (stream); defaults to the current sys.stdout.
    sep:   string inserted between values, default a space.
    end:   string appended after the last value, default a newline.
    flush: whether to forcibly flush the stream.
</code></pre>
<br>
<h3 id="mapfunc-lst映射运算">map(func, lst)映射运算</h3>
<p>将func运算映射到lst上每个元素</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">lst</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]]</span>

<span class="n">res</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">sum</span><span class="p">,</span> <span class="n">lst</span><span class="p">)</span>
<span class="nb">list</span><span class="p">(</span><span class="n">res</span><span class="p">)</span>
</code></pre></div><pre><code>[2, 3, 3, 3, 3, 3, 3]
</code></pre>
<p><br><br></p>
<h3 id="printvalue-endn">print(value, end='\n')</h3>
<p>打印value，默认使用换行结束</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">help</span><span class="p">(</span><span class="nb">print</span><span class="p">)</span>
</code></pre></div><pre><code>Help on built-in function print in module builtins:

print(...)
    print(value, ..., sep=' ', end='\n', file=sys.stdout, flush=False)
    
    Prints the values to a stream, or to sys.stdout by default.
    Optional keyword arguments:
    file:  a file-like object (stream); defaults to the current sys.stdout.
    sep:   string inserted between values, default a space.
    end:   string appended after the last value, default a newline.
    flush: whether to forcibly flush the stream.
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello world!&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello python!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>hello world!
hello python!
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello world!&#39;</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hello python!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>hello world!	hello python!
</code></pre>
<p><br><br></p>
<p>open(file, mode=&lsquo;r&rsquo;, encoding=None)</p>
<ul>
<li>file 文件路径</li>
<li>mode 操作方式们，最常用的是r和a+。r读取， a+是追加写入</li>
<li>encoding 编码方式 ，常见的文件编码方式主要是utf-8和gbk</li>
</ul>
<p>读取返回io对象</p>
<p>io对象有read()方法</p>
<blockquote>
<p>相对路径</p>
<p>data</p>
</blockquote>
<blockquote>
<p>绝对路径</p>
<p>C:Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data</p>
</blockquote>
<p><strong>建议大家都要用相对路径</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 读取数据</span>
<span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test.txt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</code></pre></div><pre><code>'章节设计\n\n第一部分  环境配置\n第二部分  快速入门python\n第三部分  网络爬虫\n第四部分  简单的文本分析\n第五部分  进阶文本分析'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 新建文件/在已有的文件内插入内容</span>
<span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test2.txt&#39;</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;我在学python，现在是下午五点&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 新建文件/在已有的文件内插入内容</span>
<span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test2.txt&#39;</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">Life is short, so to learn Python&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># 新建文件/在已有的文件内插入内容</span>
<span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test2.txt&#39;</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">Life is short, so to learn Python&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">Life is short, so to learn music&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">Life is short, so to learn english&#39;</span><span class="p">)</span>
<span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><p><br><br></p>
<h3 id="重点函数">重点函数</h3>
<ul>
<li><input checked="" disabled="" type="checkbox"> sorted(lst， ascending)</li>
<li><input checked="" disabled="" type="checkbox"> range(start, end, step)</li>
<li><input checked="" disabled="" type="checkbox"> enumerate(lst)</li>
<li><input checked="" disabled="" type="checkbox"> eval(expression)</li>
<li><input checked="" disabled="" type="checkbox"> zip(lst1, lst2..)</li>
<li><input checked="" disabled="" type="checkbox"> map(func, lst)</li>
<li><input checked="" disabled="" type="checkbox"> print(x)</li>
<li><input checked="" disabled="" type="checkbox"> open(file, mode, encoding)</li>
</ul>
<h3 id="了解课程">了解课程</h3>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>内置库-文件路径pathlib库</title>
      <link>https://textdata.cn/blog/basic-12-pathlib/</link>
      <pubDate>Wed, 07 Apr 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/basic-12-pathlib/</guid>
      <description>多用于批量读取多个文件，做路径管理之用</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=7"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p>路径是可以让程序知道待操作的文件在哪里，python中有os和pathlib两个内置的路径库，我们就讲这个名字一看就懂的路径库pathlib。</p>
<br>
<p><br><br></p>
<p>绝对vs相对</p>
<ul>
<li>相对路径 <code>'img'</code></li>
<li>绝对路径  <code>'C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/img'</code></li>
</ul>
<p>**注意：**当移动文件夹位置或者将代码分享给朋友使用时，你的代码再次运行就会出错。为了避免这个问题，强烈建议用相对路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pathlib</span>

<span class="c1">#当前代码所在的文件夹的相对路径</span>
<span class="n">pathlib</span><span class="o">.</span><span class="n">Path</span><span class="p">()</span>
</code></pre></div><pre><code>WindowsPath('.')
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">pathlib</span> <span class="kn">import</span> <span class="n">Path</span>

<span class="c1">#当前代码所在的文件夹的相对路径</span>
<span class="n">Path</span><span class="p">()</span>
</code></pre></div><pre><code>WindowsPath('.')
</code></pre>
<p><br><br></p>
<h2 id="pathlibpath属性方法">pathlib.Path()属性方法</h2>
<p>**提醒：**下表加粗的都是常用的方法，其他了解即可</p>
<table>
<thead>
<tr>
<th style="text-align:left">方法</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>cwd()</strong></td>
<td style="text-align:left">获取代码所在的当前工作路径</td>
</tr>
<tr>
<td style="text-align:left"><strong>joinpath(&hellip;grandpadir, fatherdir, &hellip;file)</strong></td>
<td style="text-align:left">生成路径</td>
</tr>
<tr>
<td style="text-align:left"><strong>iterdir()</strong></td>
<td style="text-align:left">返回某路径下的文件(夹)目录</td>
</tr>
<tr>
<td style="text-align:left"><strong>glob(pattern)</strong></td>
<td style="text-align:left">返回符合pattern的所有文件的文件路径</td>
</tr>
<tr>
<td style="text-align:left">is_file()</td>
<td style="text-align:left">判断某路径是否为文件，返回布尔值</td>
</tr>
<tr>
<td style="text-align:left">is_dir()</td>
<td style="text-align:left">判断某路径是否为文件夹，返回布尔值</td>
</tr>
<tr>
<td style="text-align:left">exists()</td>
<td style="text-align:left">判断某路径是否存在，返回布尔值</td>
</tr>
<tr>
<td style="text-align:left">mkdir(parents=True, exist_ok=True)</td>
<td style="text-align:left">创建某路径对应的文件夹</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h3 id="cwd">cwd()</h3>
<p><strong>例</strong>：获取当前代码所在文件夹的绝对路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span>
</code></pre></div><pre><code>WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门')
</code></pre>
<p><br><br></p>
<h3 id="joinpathgrandpadir-fatherdir-file">joinpath(&hellip;grandpadir, fatherdir, &hellip;file)</h3>
<p>把&hellip;grandpadir, fatherdir, &hellip;file加入到某路径中</p>
<br>
<p><strong>例</strong>：获得data文件夹的路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data')
</code></pre>
<br>
<p><strong>例</strong>：获得data/test.txt文件的路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;test.txt&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test.txt')
</code></pre>
<p><br><br></p>
<h3 id="iterdir">iterdir()</h3>
<p>返回某路径下的文件(夹)目录</p>
<br>
<p>例：获得<strong>02-Python语法入门</strong>文件夹里的所有文件(夹)路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">list</span><span class="p">(</span><span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">iterdir</span><span class="p">())</span>
</code></pre></div><pre><code>[WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/.ipynb_checkpoints'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/01-Python跟英语一样是一门语言.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/02-数据类型之字符串.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/03-数据类型之列表元组集合.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/04-数据类型之字典.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/05-数据类型之布尔值&amp;None.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/06-逻辑语句(if&amp;for&amp;tryexcept).ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/07-列表推导式.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/08-理解函数.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/09-常用内置函数.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/09-常用函数.md'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/10-内置库之文件路径pathlib库.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/11-内置库之csv文件库.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/12. 内置库之正则表达式re库.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/13-初学python常出错误汇总.ipynb'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/img')]
</code></pre>
<p><br><br></p>
<h3 id="globpattern">glob(pattern)</h3>
<p>查找某路径内满足pattern的所有文件路径 。</p>
<p><code>pattern='*.*'</code> 匹配任意格式任意名字的文件</p>
<p><code>pattern='*.txt'</code> 匹配出所有的txt文件</p>
<br>
<p><strong>例</strong>：获得data文件夹内的所有的文件路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">list</span><span class="p">(</span><span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*.*&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>[WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test.txt'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test2.csv'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test2.txt'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/twitter_sentiment.csv')]
</code></pre>
<br>
<p><strong>例</strong>：获得data文件夹内的所有的txt额路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">list</span><span class="p">(</span><span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*.txt&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>[WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test.txt'),
 WindowsPath('C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test2.txt')]
</code></pre>
<br>
<p><strong>例</strong>：获得data/reports内的pdf路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dirs</span> <span class="o">=</span> <span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;reports&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">iterdir</span><span class="p">()</span>
<span class="n">dirs</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">dirs</span><span class="p">)</span>
<span class="k">for</span> <span class="nb">dir</span> <span class="ow">in</span> <span class="n">dirs</span><span class="p">:</span>
    <span class="n">files</span> <span class="o">=</span> <span class="nb">dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*.*&#39;</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</code></pre></div><pre><code>C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\600000\600000_20010901_1.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\600004\600004_2006_n.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\600004\600004_2006_z.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\600007\600007_2001_n.pdf
.......
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\600007\600007_2002_1.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\603937\603937_2018_z.pdf
......
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\603937\603937_2019_3.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\603937\603937_2019_z.pdf
</code></pre>
<br>
<p>例**：获得data/reports内的 含有&quot;_n&quot; 额pdf路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">dirs</span> <span class="o">=</span> <span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;reports&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">iterdir</span><span class="p">()</span>
<span class="n">dirs</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">dirs</span><span class="p">)</span>
<span class="k">for</span> <span class="nb">dir</span> <span class="ow">in</span> <span class="n">dirs</span><span class="p">:</span>
    <span class="n">files</span> <span class="o">=</span> <span class="nb">dir</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="s1">&#39;*_n.pdf&#39;</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</code></pre></div><pre><code>C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\600000\600000_2006_n.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\600000\600000_2008_n.pdf
........
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\601872\601872_2014_n.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\601872\601872_2015_n.pdf
C:\Users\thunderhit\Desktop\Python数据分析入门\02-Python语法入门\data\reports\601872\601872_2016_n.pdf
</code></pre>
<p><br><br></p>
<h3 id="is_file">is_file()</h3>
<p>判断某路径是否为一个文件。返回布尔值：</p>
<ul>
<li>True 真实存在的文件路径</li>
<li>False 不真实存在或者文件夹路径</li>
</ul>
<p><strong>例</strong> &lsquo;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test.txt&rsquo;是文件路径？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">fpath</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="s1">&#39;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test.txt&#39;</span><span class="p">)</span>
<span class="n">fpath</span><span class="o">.</span><span class="n">is_file</span><span class="p">()</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<p><strong>例</strong> &lsquo;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test222.txt&rsquo;是文件路径？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">fpath</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="s1">&#39;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data/test222.txt&#39;</span><span class="p">)</span>
<span class="n">fpath</span><span class="o">.</span><span class="n">is_file</span><span class="p">()</span>
</code></pre></div><pre><code>False
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">fpath</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="s1">&#39;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data&#39;</span><span class="p">)</span>
<span class="n">fpath</span><span class="o">.</span><span class="n">is_file</span><span class="p">()</span>
</code></pre></div><pre><code>False
</code></pre>
<p><br><br></p>
<h3 id="is_dir">is_dir()</h3>
<p>判断某路径是否为一个文件夹。返回布尔值，True、False</p>
<p><strong>例</strong>： &lsquo;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data&rsquo; 是 文件夹路径？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">fpath</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="s1">&#39;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data&#39;</span><span class="p">)</span>
<span class="n">fpath</span><span class="o">.</span><span class="n">is_dir</span><span class="p">()</span>
</code></pre></div><pre><code>True
</code></pre>
<p><br><br></p>
<h3 id="exists">exists()</h3>
<p>判断某路径是否存在。返回布尔值，True、False</p>
<p>例： &lsquo;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data&rsquo; 是否存在？</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">fpath</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="s1">&#39;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/data&#39;</span><span class="p">)</span>
<span class="n">fpath</span><span class="o">.</span><span class="n">exists</span><span class="p">()</span>
</code></pre></div><pre><code>True
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">fpath</span> <span class="o">=</span> <span class="n">Path</span><span class="p">(</span><span class="s1">&#39;C:/Users/thunderhit/Desktop/Python数据分析入门/02-Python语法入门/datasss&#39;</span><span class="p">)</span>
<span class="n">fpath</span><span class="o">.</span><span class="n">exists</span><span class="p">()</span>
</code></pre></div><pre><code>False
</code></pre>
<br>
<h3 id="mkdirparentstrue-exist_oktrue">mkdir(parents=True, exist_ok=True)</h3>
<p>创建某路径</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">path</span> <span class="o">=</span> <span class="n">Path</span><span class="p">()</span><span class="o">.</span><span class="n">cwd</span><span class="p">()</span><span class="o">.</span><span class="n">joinpath</span><span class="p">(</span><span class="s1">&#39;data&#39;</span><span class="p">,</span> <span class="s1">&#39;stocks&#39;</span><span class="p">,</span> <span class="s1">&#39;800000&#39;</span><span class="p">)</span>
<span class="n">path</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="n">parents</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">exist_ok</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</code></pre></div><br>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>内置库-数据存储csv库</title>
      <link>https://textdata.cn/blog/basic-13-csv/</link>
      <pubDate>Tue, 06 Apr 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/basic-13-csv/</guid>
      <description>网络爬虫采数据、文本分析结束时都需要将数据存储哦！</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=14"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p>在编程中一般不适用excel，而是用一种很像excel的csv来存储数据。而且Excel软件可以打开csv的。</p>
<br>
<br>
<h2 id="一csv存储数据代码步骤">一、csv存储数据代码步骤</h2>
<p>**说明:**代码看不懂没关系，能背过最好。背不过也没关系，能理解代码功能，而且亲自上手调试过，调试正常无误的代码可以加入你的代码笔记本中，然后以后需要的时候复制粘贴修改参数即可</p>
<h3 id="1-1-新建一个csv文件">1. 1 新建一个csv文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">csv</span>
<span class="n">path</span> <span class="o">=</span> <span class="s1">&#39;data/test.csv&#39;</span>
<span class="n">csvf</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</code></pre></div><h3 id="12-定义字段名并初始化csv文件为writer">1.2 定义字段名，并初始化csv文件为writer</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">]</span>
<span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span><span class="o">=</span><span class="n">fieldnames</span><span class="p">)</span>
<span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>
</code></pre></div><h3 id="13-将待存储数据整理为字典格式">1.3 将待存储数据整理为字典格式</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">test_data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="s1">&#39;David&#39;</span><span class="p">,</span>
             <span class="s1">&#39;age&#39;</span><span class="p">:</span> <span class="mi">25</span><span class="p">}</span>
</code></pre></div><h3 id="14-用writer往csv中存储数据">1.4 用writer往csv中存储数据</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">test_data</span><span class="p">)</span>
</code></pre></div><h3 id="15-最后记得关闭csv文件">1.5 最后记得关闭csv文件</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">csvf</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">csv</span>

<span class="n">csvf</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test1.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
<span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">]</span>
<span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span><span class="o">=</span><span class="n">fieldnames</span><span class="p">)</span>
<span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>


<span class="n">csvf</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">csv</span>

<span class="n">csvf</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test2.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
<span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">]</span>
<span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span><span class="o">=</span><span class="n">fieldnames</span><span class="p">)</span>
<span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>

<span class="n">test_data</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="s1">&#39;David&#39;</span><span class="p">,</span>
             <span class="s1">&#39;age&#39;</span><span class="p">:</span> <span class="mi">25</span><span class="p">}</span>
<span class="n">writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">test_data</span><span class="p">)</span>

<span class="n">csvf</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><p><br><br></p>
<h2 id="二很多数据的存储">二、很多数据的存储</h2>
<p>如果很多数据存储时，就可以用之前学到的for循环。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">datas</span> <span class="o">=</span> <span class="p">[{</span><span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="s1">&#39;David&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">:</span> <span class="mi">25</span><span class="p">},</span> 
         <span class="p">{</span><span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="s1">&#39;Mary&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">:</span> <span class="mi">30</span><span class="p">},</span>
         <span class="p">{</span><span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="s1">&#39;Henry&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">:</span> <span class="mi">35</span><span class="p">}]</span>

<span class="n">datas</span>
</code></pre></div><pre><code>[{'name': 'David', 'age': 25},
 {'name': 'Mary', 'age': 30},
 {'name': 'Henry', 'age': 35}]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">csv</span>

<span class="n">csvf</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test2.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">,</span> <span class="n">newline</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
<span class="n">fieldnames</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">]</span>
<span class="n">writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictWriter</span><span class="p">(</span><span class="n">csvf</span><span class="p">,</span> <span class="n">fieldnames</span><span class="o">=</span><span class="n">fieldnames</span><span class="p">)</span>
<span class="n">writer</span><span class="o">.</span><span class="n">writeheader</span><span class="p">()</span>

<span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">datas</span><span class="p">:</span>
    <span class="n">writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="n">csvf</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div><p><br><br></p>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>内置库-正则表达式re库</title>
      <link>https://textdata.cn/blog/basic-14-regex/</link>
      <pubDate>Mon, 05 Apr 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/basic-14-regex/</guid>
      <description>最难的知识点来了！网络爬虫采数据、文本数据清洗都会用到正则表达式，其中文本清洗用到的最多哦</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=15"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="python语法入门-课件下载">Python语法入门-课件下载</h2>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p>正则表达式主要用于数据清洗，比如从脏乱差的文本中抽取出自己需要的信息。常见于爬虫和文本分析。</p>
<br>
<h2 id="一正则表达式中的符号">一、正则表达式中的符号</h2>
<p>按照符号的功能，我将其分为三类，一般情况下表达式都是由这三种符号组成的。</p>
<h3 id="11-正则字符">1.1 正则字符</h3>
<p><strong>预警，听不懂看不懂，都不要紧的。不要绞尽脑汁，本节后面会柳暗花明的。</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">正则符号</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">匹配自己时</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>\</code></td>
<td style="text-align:left">转义字符。例如， &lsquo;n&rsquo; 匹配字符 &lsquo;n&rsquo;。</td>
<td style="text-align:left"><code>'\n'</code></td>
</tr>
<tr>
<td style="text-align:left"><code>( )</code></td>
<td style="text-align:left">标记一个子表达式的开始和结束位置。</td>
<td style="text-align:left"><code>\(   \)</code></td>
</tr>
<tr>
<td style="text-align:left">.</td>
<td style="text-align:left">匹配除换行符 <code>\n</code> 之外的任何单字符。</td>
<td style="text-align:left"><code>\. </code></td>
</tr>
<tr>
<td style="text-align:left">|</td>
<td style="text-align:left">|左右两侧均可参与匹配</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">\d</td>
<td style="text-align:left">匹配字符串中的单个数字</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">a-zA-Z</td>
<td style="text-align:left">匹配全部英文字符</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">0-9</td>
<td style="text-align:left">匹配全部数字</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"><code>\s</code></td>
<td style="text-align:left">匹配字符串中的<code>\n</code>,<code>\t</code>,<code>空格</code></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"><code>[]</code></td>
<td style="text-align:left">中括号内任意正则符号均可参与匹配</td>
<td style="text-align:left"><code>\[   \]</code></td>
</tr>
<tr>
<td style="text-align:left">^</td>
<td style="text-align:left">当在方括号表达式中使用，^对其后的正则表达式进行了反义表达。</td>
<td style="text-align:left"><code>\^</code></td>
</tr>
</tbody>
</table>
<br>
<h3 id="12-限定字符">1.2 限定字符</h3>
<p><strong>提前预警，听不懂不要绞尽脑汁，本节后面会柳暗花明的</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">正则符号</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">匹配自己时</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:left">匹配前面的子表达式零次或多次。</td>
<td style="text-align:left"><code>\*</code></td>
</tr>
<tr>
<td style="text-align:left">?</td>
<td style="text-align:left">匹配前面的子表达式零次或一次</td>
<td style="text-align:left">\?</td>
</tr>
<tr>
<td style="text-align:left">+</td>
<td style="text-align:left">匹配前面的子表达式一次或多次。</td>
<td style="text-align:left"><code>\+</code></td>
</tr>
<tr>
<td style="text-align:left">{m}</td>
<td style="text-align:left">n 是一个非负整数。匹配确定的 m 次。</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">{m,}</td>
<td style="text-align:left">m 是一个非负整数。至少匹配m 次。</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">{m, n}</td>
<td style="text-align:left">m 和 n 均为非负整数，其中m &lt;= n。最少匹配 m 次且最多匹配 n 次。</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
<br>
<h3 id="13-定位字符">1.3 定位字符</h3>
<p><strong>预警，听不懂不要绞尽脑汁，本节后面会柳暗花明的</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">正则符号</th>
<th style="text-align:left">描述</th>
<th style="text-align:left">匹配自己时</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">^</td>
<td style="text-align:left">匹配输入字符串的开始位置。</td>
<td style="text-align:left"><code>\^</code></td>
</tr>
<tr>
<td style="text-align:left">$</td>
<td style="text-align:left">匹配输入字符串的结尾位置</td>
<td style="text-align:left"><code>\$</code></td>
</tr>
<tr>
<td style="text-align:left">\b</td>
<td style="text-align:left">匹配一个单词边界，即字与空格间的位置</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">\B</td>
<td style="text-align:left">非单词边界匹配</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 id="二re库常用方法">二、re库常用方法</h2>
<p><strong>至暗时刻已过，光明即将到来</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">re库常用函数</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>re.findall(pattern, string)</code></td>
<td style="text-align:left">根据pattern返回匹配结果（列表）</td>
</tr>
</tbody>
</table>
<p>|<code>re.split(pattern, string)</code> |使用pattern分割string，返回列表     <br>
|<code>re.sub(pattern, repl, string)</code>|使用repl替换string中的pattern|</p>
<p><br> <br></p>
<h2 id="三只需要掌握">三、只需要掌握</h2>
<p><strong>万能的百度谷歌+你的尝试，比什么都强大</strong></p>
<ul>
<li>搜索引擎检索到自己需要的正则表达式</li>
<li>最简单最好用表达式<code>(.*?)</code></li>
<li>在<a href="http://c.runoob.com/front-end/854">正则表达式测试网站</a>验证自己的正则表达式</li>
</ul>
<h3 id="31-检索找到自己需要的正则表达式">3.1 检索找到自己需要的正则表达式</h3>
<p>比如我只需要中文，其余字符统统不要。</p>
<p>我会在百度搜<strong>中文正则表达式</strong></p>
<p>发现很多网页中网友提到````，于是</p>
<p><code>[\u4e00-\u9fa5]</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>

<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;[</span><span class="se">\u4e00</span><span class="s1">-</span><span class="se">\u9fa5</span><span class="s1">]+&#39;</span>

<span class="n">string</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;Python是一门面向对象的编程语言，诞生于1991年。</span><span class="se">\
</span><span class="se"></span><span class="s2">目前以广泛应用在网站开发、游戏软件开发、数据采集、机器学习等多个领域。</span><span class="se">\
</span><span class="se"></span><span class="s2">一般情况下Python是Java的20%，所以说人生苦短，我用Python。&#34;&#34;&#34;</span>

<span class="n">chinese_words</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">string</span><span class="p">)</span>
<span class="n">chinese_text</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">chinese_words</span><span class="p">)</span>
<span class="n">chinese_text</span>
</code></pre></div><pre><code>'是一门面向对象的编程语言诞生于年目前以广泛应用在网站开发游戏软件开发数据采集机器学习等多个领域一般情况下是的所以说人生苦短我用'
</code></pre>
<br>
<h3 id="32-最简单最好用表达式">3.2 最简单最好用表达式<code>(.*?)</code></h3>
<p><strong><code>(.*?)</code>特别好用，ta的暗号及使用口诀一定要背过</strong></p>
<p><strong>pattern设计步骤：</strong></p>
<p><strong>正则符号</strong>组成<strong>正则表达式</strong>，用于<strong>匹配</strong>需要的字符。</p>
<ol>
<li>找到重复的一致的规律</li>
<li>复制粘贴到pattern中</li>
<li>扣掉<strong>想要的数据</strong></li>
<li>替换为<code>(.*?)</code>  或者<code>相应的正则符号表达式*</code></li>
</ol>
<p>比如现在需要快速挖掘出intros中的姓名、籍贯和年龄</p>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>


<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;我叫(.*?)，来自(.*?)，今年(.*?)岁。&#39;</span>

<span class="n">intros</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;我叫张三，来自山东，今年25岁。&#39;</span><span class="p">,</span>
          <span class="s1">&#39;我叫李四，来自河北，今年28岁。&#39;</span><span class="p">,</span>
          <span class="s1">&#39;我叫王五，来自河南，今年24岁。&#39;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">intro</span> <span class="ow">in</span> <span class="n">intros</span><span class="p">:</span>
    <span class="n">info</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">intro</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">info</span><span class="p">)</span>
</code></pre></div><pre><code>[('张三', '山东', '25')]
[('李四', '河北', '28')]
[('王五', '河南', '24')]
</code></pre>
<br>
<p><strong>特别需要注意的是pattern中的(.*?)左右两侧必须有字符，否则匹配失败。</strong></p>
<hr>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>


<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;(.*?)，来自(.*?)，今年(.*?)&#39;</span>

<span class="n">intros</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;我叫张三，来自山东，今年25岁。&#39;</span><span class="p">,</span>
          <span class="s1">&#39;我叫李四，来自河北，今年28岁。&#39;</span><span class="p">,</span>
          <span class="s1">&#39;我叫王五，来自河南，今年24岁。&#39;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">intro</span> <span class="ow">in</span> <span class="n">intros</span><span class="p">:</span>
    <span class="n">info</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">intro</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">info</span><span class="p">)</span>
</code></pre></div><pre><code>[('我叫张三', '山东', '')]
[('我叫李四', '河北', '')]
[('我叫王五', '河南', '')]
</code></pre>
<p>由于</p>
<p><code>'(.*?)，来自(.*?)，今年(.*?)'</code></p>
<p>中最左侧和最右侧的<code>(.*?)</code>没有被其他字符左右包裹，导致匹配姓名和年龄失败。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>


<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;叫(.*?)，来自(.*?)，今年(.*?)岁&#39;</span>

<span class="n">intros</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;我叫张三，来自山东，今年25岁。&#39;</span><span class="p">,</span>
          <span class="s1">&#39;我叫李四，来自河北，今年28岁。&#39;</span><span class="p">,</span>
          <span class="s1">&#39;我叫王五，来自河南，今年24岁。&#39;</span><span class="p">]</span>

<span class="k">for</span> <span class="n">intro</span> <span class="ow">in</span> <span class="n">intros</span><span class="p">:</span>
    <span class="n">info</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">intro</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">info</span><span class="p">)</span>
</code></pre></div><pre><code>[('张三', '山东', '25')]
[('李四', '河北', '28')]
[('王五', '河南', '24')]
</code></pre>
<p><br><br></p>
<h2 id="四案例">四、案例</h2>
<h3 id="41-找出文本中出现的年份">4.1 找出文本中出现的年份</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>


<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;\d</span><span class="si">{4}</span><span class="s1">&#39;</span>
<span class="n">string</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;Python是一门面向对象的编程语言，诞生于1991年。</span><span class="se">\
</span><span class="se"></span><span class="s2">目前以广泛应用在网站开发、游戏软件开发、数据采集、机器学习等多个领域。</span><span class="se">\
</span><span class="se"></span><span class="s2">一般情况下Python是Java的20%，所以说人生苦短，我用Python。&#34;&#34;&#34;</span>

<span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">string</span><span class="p">)</span>
</code></pre></div><pre><code>['1991']
</code></pre>
<br>
<h3 id="42-resplitpattern-string">4.2 re.split(pattern, string)</h3>
<p>断句</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;；|。&#39;</span>

<span class="n">string</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;Python是一门面向对象的编程语言，诞生于1991年；</span><span class="se">\
</span><span class="se"></span><span class="s2">目前以广泛应用在网站开发、游戏软件开发、数据采集、机器学习等多个领域。</span><span class="se">\
</span><span class="se"></span><span class="s2">一般情况下Python是Java的20%，所以说人生苦短，我用Python。&#34;&#34;&#34;</span>

<span class="n">res</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">string</span><span class="p">)</span>
<span class="n">res</span> <span class="o">=</span> <span class="p">[</span><span class="n">r</span> <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">res</span> <span class="k">if</span> <span class="n">r</span><span class="p">]</span>
<span class="n">res</span>
</code></pre></div><pre><code>['Python是一门面向对象的编程语言，诞生于1991年',
 '目前以广泛应用在网站开发、游戏软件开发、数据采集、机器学习等多个领域',
 '一般情况下Python是Java的20%，所以说人生苦短，我用Python']
</code></pre>
<br>
<h3 id="43-resubpattern-repl-string">4.3 re.sub(pattern, repl, string)</h3>
<p>将数字替换为NUM</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;\d+&#39;</span>

<span class="n">repl</span> <span class="o">=</span> <span class="s1">&#39;NUM&#39;</span>

<span class="n">string</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;Python是一门面向对象的编程语言，诞生于1991年。</span><span class="se">\
</span><span class="se"></span><span class="s2">一般情况下Python是Java的20%，所以说人生苦短，我用Python。&#34;&#34;&#34;</span>

<span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">repl</span><span class="p">,</span> <span class="n">string</span><span class="p">)</span>
</code></pre></div><pre><code>'Python是一门面向对象的编程语言，诞生于NUM年。一般情况下Python是Java的NUM%，所以说人生苦短，我用Python。'
</code></pre>
<br>
<h3 id="44--统一表达">4.4 . 统一表达</h3>
<p>将指代同一个主体的不同表达词语统一为同一个词</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;中国铁路工程集团有限公司成立于1950年3月，总部位于北京。目前中国中铁已经发展成中国和亚洲最大的多功能综合型建设集团。&#39;</span>

<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;中国铁路工程集团有限公司|中国中铁&#39;</span>

<span class="n">repl</span> <span class="o">=</span> <span class="s1">&#39;中铁&#39;</span>

<span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">repl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
</code></pre></div><pre><code>'中铁成立于1950年3月，总部位于北京。目前中铁已经发展成中国和亚洲最大的多功能综合型建设集团。'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;中国铁路工程集团有限公司成立于1950年3月，总部位于北京。目前中国中铁已经发展成中国和亚洲最大的多功能综合型建设集团。&#39;</span>

<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;[中国铁路工程集团有限公司|中国中铁]+&#39;</span>

<span class="n">repl</span> <span class="o">=</span> <span class="s1">&#39;中铁&#39;</span>

<span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">repl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
</code></pre></div><pre><code>'中铁成立于1950年3月，总部位于北京。目前中铁已经发展成中铁和亚洲最大的多功能综合型建设中铁。'
</code></pre>
<br>
<h3 id="45-分割文本数据的章节">4.5 分割文本数据的章节</h3>
<p>一二三四五六七八九十零百</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34; 第一篇 Python简介 第二篇 Python入门语法 第三篇 Python网络爬虫 第四篇 文本数据编码 第五篇 数据分析 第六篇 可视化&#34;&#34;&#34;</span>

<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;第[一二三四五六七八九十零百]+篇&#39;</span>

<span class="n">res</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
<span class="n">res</span> <span class="o">=</span> <span class="p">[</span><span class="n">r</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">res</span> <span class="k">if</span> <span class="s1">&#39; &#39;</span><span class="o">!=</span><span class="n">r</span><span class="p">]</span>
<span class="n">res</span>
</code></pre></div><pre><code>['Python简介', 'Python入门语法', 'Python网络爬虫', '文本数据编码', '数据分析', '可视化']
</code></pre>
<br>
<h3 id="46-抽取出数字">4.6 抽取出数字</h3>
<p>比如日期数据</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">text</span> <span class="o">=</span> <span class="s1">&#39;中国铁路工程集团有限公司成立于1950年3月，总部位于北京。目前中国中铁已经发展成中国和亚洲最大的多功能综合型建设集团。&#39;</span>

<span class="n">pattern</span> <span class="o">=</span> <span class="s1">&#39;\d+&#39;</span>

<span class="s1">&#39;-&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>
</code></pre></div><pre><code>'1950-3'
</code></pre>
<p><br><br></p>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
<br>
]]></content:encoded>
    </item>
    
    <item>
      <title>python常见错误及解决办法</title>
      <link>https://textdata.cn/blog/basic-15-common-errors/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/basic-15-common-errors/</guid>
      <description>人不要在同一个坑跌倒多次！读懂错误提示，轻松学会python</description>
      <content:encoded><![CDATA[<iframe
    src="//player.bilibili.com/player.html?bvid=BV1eb411h7sP&page=16"
    scrolling="no"
    height="500px"
    width="800px"
    frameborder="no"
    framespacing="0"
    allowfullscreen="true"
>
</iframe>

<h2 id="14种常见错误">14种常见错误</h2>
<h3 id="python语法入门-课件下载">Python语法入门-课件下载</h3>
<p><font color="blue" weight="bold"><b>链接: <a href="https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA">https://pan.baidu.com/s/1h1RuWimLicVanK8xCka_xA</a> 提取码: x264</b></font></p>
<br>
<p>学习编程就是在遇到错误、认识错误、解决错误的过程。遇到错误，大家要发挥主观能动性，用自己的英文阅读能力去先读一下英文报错提示，一般情况下错误提示会告诉你是什么类型的错误，错误出在哪一行。</p>
<p>再结合百度谷歌，80%以上的问题都能解决。现在我们了解一下常见的问题都有哪些，如何克服这些问题。</p>
<br>
<h3 id="1-忘记写冒号">1. 忘记写冒号</h3>
<p>在 if、elif、else、for、while、def语句后面忘记添加 <code>:</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">age</span> <span class="o">=</span> <span class="mi">42</span>

<span class="k">if</span> <span class="n">age</span> <span class="o">==</span> <span class="mi">42</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-10-1f5acea116cf&gt;&quot;, line 3
    if age == 42
                ^
SyntaxError: invalid syntax
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">age</span> <span class="o">=</span> <span class="mi">42</span>

<span class="k">if</span> <span class="n">age</span> <span class="o">==</span> <span class="mi">42</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Hello!
</code></pre>
<p><br><br></p>
<h3 id="2-误用-">2. 误用 <code>=</code></h3>
<p><code>=</code> 是赋值操作，而判断两个值是否相等是 <code>==</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">gender</span> <span class="o">=</span> <span class="s1">&#39;男&#39;</span>

<span class="k">if</span> <span class="n">gender</span> <span class="o">=</span> <span class="s1">&#39;男&#39;</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Man&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-12-c3ceea5a9004&gt;&quot;, line 3
    if gender = '男':
              ^
SyntaxError: invalid syntax
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">gender</span> <span class="o">=</span> <span class="s1">&#39;男&#39;</span>

<span class="k">if</span> <span class="n">gender</span> <span class="o">==</span> <span class="s1">&#39;男&#39;</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Man&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Man
</code></pre>
<p><br><br></p>
<h3 id="3-错误的缩进">3. 错误的缩进</h3>
<p>Python用缩进区分代码块，常见的错误用法：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello!&#39;</span><span class="p">)</span>
 <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Howdy!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-14-784bdb6e1df5&gt;&quot;, line 2
    print('Howdy!')
    ^
IndentationError: unexpected indent
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello!&#39;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Howdy!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Hello!
Howdy!
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">num</span> <span class="o">=</span> <span class="mi">25</span>
<span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">25</span><span class="p">:</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-16-8e4debcdf119&gt;&quot;, line 3
    print('Hello!')
        ^
IndentationError: expected an indented block
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">num</span> <span class="o">=</span> <span class="mi">25</span>
<span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">25</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Hello!&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>Hello!
</code></pre>
<p><br><br></p>
<h3 id="4-变量没有定义">4. 变量没有定义</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="n">c</span> <span class="ow">in</span> <span class="p">[</span><span class="s1">&#39;New York&#39;</span><span class="p">,</span> <span class="s1">&#39;Bei Jing&#39;</span><span class="p">,</span> <span class="s1">&#39;Tokyo&#39;</span><span class="p">]:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;This is a mega city&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

NameError                                 Traceback (most recent call last)

&lt;ipython-input-21-d91d0b36da73&gt; in &lt;module&gt;
----&gt; 1 if c in ['New York', 'Bei Jing', 'Tokyo']:
      2     print('This is a mega c')


NameError: name 'c' is not defined
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">city</span> <span class="o">=</span><span class="s1">&#39;New York&#39;</span>
<span class="k">if</span> <span class="n">city</span> <span class="ow">in</span> <span class="p">[</span><span class="s1">&#39;New York&#39;</span><span class="p">,</span> <span class="s1">&#39;Bei Jing&#39;</span><span class="p">,</span> <span class="s1">&#39;Tokyo&#39;</span><span class="p">]:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;This is a mega city&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>This is a mega city
</code></pre>
<p><br><br></p>
<h3 id="5-中英文输入法导致的错误">5. 中英文输入法导致的错误</h3>
<ul>
<li>英文冒号</li>
<li>英文括号</li>
<li>英文逗号</li>
<li>英文单双引号</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="mi">5</span><span class="o">&gt;</span><span class="mi">3</span><span class="err">：</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;5比3大&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-23-47f8b985b82d&gt;&quot;, line 1
    if 5&gt;3：
          ^
SyntaxError: invalid character in identifier
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="mi">5</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;5比3大&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>5比3大
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">spam</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="err">，</span> <span class="mi">3</span><span class="p">]</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-26-a003060d051a&gt;&quot;, line 1
    spam = [1, 2， 3]
                ^
SyntaxError: invalid character in identifier
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">spam</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">spam</span>
</code></pre></div><pre><code>[1, 2, 3]
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="mi">5</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;5比3大’)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-30-ac2e4eb87092&gt;&quot;, line 2
    print('5比3大’)
                 ^
SyntaxError: EOL while scanning string literal
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="mi">5</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;5比3大&#39;</span><span class="p">)</span>
</code></pre></div><pre><code>5比3大
</code></pre>
<p><br><br></p>
<h3 id="6-不同数据类型的拼接">6. 不同数据类型的拼接</h3>
<p>同种数据类型  <strong>字符串/列表/元组</strong>   支持拼接</p>
<p><strong>字典/集合</strong>不支持拼接</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s1">&#39;I have &#39;</span> <span class="o">+</span> <span class="mi">12</span> <span class="o">+</span> <span class="s1">&#39; eggs.&#39;</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-32-20c7c89a2ec6&gt; in &lt;module&gt;
----&gt; 1 'I have ' + 12 + ' eggs.'


TypeError: can only concatenate str (not &quot;int&quot;) to str
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="s1">&#39;I have </span><span class="si">{}</span><span class="s1"> eggs.&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
</code></pre></div><pre><code>'I have 12 eggs.'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;def&#39;</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-35-0e8919333d6b&gt; in &lt;module&gt;
----&gt; 1 ['a', 'b', 'c']+'def'


TypeError: can only concatenate list (not &quot;str&quot;) to list
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">)</span><span class="o">+</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">]</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-36-90742621216d&gt; in &lt;module&gt;
----&gt; 1 ('a', 'b', 'c')+['a', 'b', 'c']


TypeError: can only concatenate tuple (not &quot;list&quot;) to tuple
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">set</span><span class="p">([</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;c&#39;</span><span class="p">])</span><span class="o">+</span><span class="nb">set</span><span class="p">([</span><span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="s1">&#39;e&#39;</span><span class="p">])</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-37-ddf5fb1e6c8c&gt; in &lt;module&gt;
----&gt; 1 set(['a', 'b', 'c'])+set(['d', 'e'])


TypeError: unsupported operand type(s) for +: 'set' and 'set'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">grades1</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;Mary&#39;</span><span class="p">:</span><span class="mi">99</span><span class="p">,</span> <span class="s1">&#39;Henry&#39;</span><span class="p">:</span><span class="mi">77</span><span class="p">}</span>
<span class="n">grades2</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;David&#39;</span><span class="p">:</span><span class="mi">88</span><span class="p">,</span> <span class="s1">&#39;Unique&#39;</span><span class="p">:</span><span class="mi">89</span><span class="p">}</span>

<span class="n">grades1</span><span class="o">+</span><span class="n">grades2</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-38-1b1456844331&gt; in &lt;module&gt;
      2 grades2 = {'David':88, 'Unique':89}
      3 
----&gt; 4 grades1+grades2


TypeError: unsupported operand type(s) for +: 'dict' and 'dict'
</code></pre>
<p><br><br></p>
<h3 id="7-索引位置问题">7. 索引位置问题</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">spam</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;cat&#39;</span><span class="p">,</span> <span class="s1">&#39;dog&#39;</span><span class="p">,</span> <span class="s1">&#39;mouse&#39;</span><span class="p">]</span>
<span class="nb">print</span><span class="p">(</span><span class="n">spam</span><span class="p">[</span><span class="mi">5</span><span class="p">])</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

IndexError                                Traceback (most recent call last)

&lt;ipython-input-41-e0a79346266d&gt; in &lt;module&gt;
      1 spam = ['cat', 'dog', 'mouse']
----&gt; 2 print(spam[5])


IndexError: list index out of range
</code></pre>
<p><br><br></p>
<h3 id="8-使用字典中不存在的键">8. 使用字典中不存在的键</h3>
<p>在字典对象中访问 key 可以使用 <code>[]</code>，</p>
<p>但是如果该 key 不存在，就会导致：KeyError: &lsquo;zebra&rsquo;</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">spam</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;cat&#39;</span><span class="p">:</span> <span class="s1">&#39;Zophie&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;dog&#39;</span><span class="p">:</span> <span class="s1">&#39;Basil&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;mouse&#39;</span><span class="p">:</span> <span class="s1">&#39;Whiskers&#39;</span><span class="p">}</span>

<span class="nb">print</span><span class="p">(</span><span class="n">spam</span><span class="p">[</span><span class="s1">&#39;zebra&#39;</span><span class="p">])</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

KeyError                                  Traceback (most recent call last)

&lt;ipython-input-42-92c9b44ff034&gt; in &lt;module&gt;
      3         'mouse': 'Whiskers'}
      4 
----&gt; 5 print(spam['zebra'])


KeyError: 'zebra'
</code></pre>
<p>为了避免这种情况，可以使用 get 方法</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">spam</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;cat&#39;</span><span class="p">:</span> <span class="s1">&#39;Zophie&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;dog&#39;</span><span class="p">:</span> <span class="s1">&#39;Basil&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;mouse&#39;</span><span class="p">:</span> <span class="s1">&#39;Whiskers&#39;</span><span class="p">}</span>

<span class="nb">print</span><span class="p">(</span><span class="n">spam</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;zebra&#39;</span><span class="p">))</span>
</code></pre></div><pre><code>None
</code></pre>
<p>key 不存在时，get 默认返回 None</p>
<br>
<br>
<h3 id="9-忘了括号">9. 忘了括号</h3>
<p>当函数中传入的是函数或者方法时，容易漏写括号</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">spam</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;cat&#39;</span><span class="p">:</span> <span class="s1">&#39;Zophie&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;dog&#39;</span><span class="p">:</span> <span class="s1">&#39;Basil&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;mouse&#39;</span><span class="p">:</span> <span class="s1">&#39;Whiskers&#39;</span><span class="p">}</span>

<span class="nb">print</span><span class="p">(</span><span class="n">spam</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;zebra&#39;</span><span class="p">)</span>  <span class="c1">#end of funtion</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-44-d105cc86097c&gt;&quot;, line 5
    print(spam.get('zebra')  #end of funtion
                                            ^
SyntaxError: unexpected EOF while parsing
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">spam</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;cat&#39;</span><span class="p">:</span> <span class="s1">&#39;Zophie&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;dog&#39;</span><span class="p">:</span> <span class="s1">&#39;Basil&#39;</span><span class="p">,</span> 
        <span class="s1">&#39;mouse&#39;</span><span class="p">:</span> <span class="s1">&#39;Whiskers&#39;</span><span class="p">}</span>

<span class="nb">print</span><span class="p">(</span><span class="n">spam</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;zebra&#39;</span><span class="p">))</span> 
</code></pre></div><pre><code>None
</code></pre>
<p><br><br></p>
<h3 id="10-漏传参数">10. 漏传参数</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">diyadd</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">+</span><span class="n">z</span>

<span class="n">diyadd</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

TypeError                                 Traceback (most recent call last)

&lt;ipython-input-46-7184f3f906ca&gt; in &lt;module&gt;
      2     return x+y+z
      3 
----&gt; 4 diyadd(1, 2)


TypeError: diyadd() missing 1 required positional argument: 'z'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">diyadd</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
</code></pre></div><pre><code>7
</code></pre>
<p><br><br></p>
<h3 id="11-缺失依赖库">11. 缺失依赖库</h3>
<p>电脑中没有相关的库</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">packagename</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

ModuleNotFoundError                       Traceback (most recent call last)

&lt;ipython-input-48-6d7d6f569116&gt; in &lt;module&gt;
----&gt; 1 import packagename


ModuleNotFoundError: No module named 'packagename'
</code></pre>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="err">!</span><span class="n">pip</span> <span class="n">install</span> <span class="n">packagename</span>
</code></pre></div><p><br><br></p>
<h3 id="12-使用了python中的关键词">12. 使用了python中的关键词</h3>
<p>如try、except、def、class、object、None、True、False等</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">try</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nb">print</span><span class="p">(</span><span class="k">try</span><span class="p">)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-49-508e87fe2ff3&gt;&quot;, line 1
    try = 5
        ^
SyntaxError: invalid syntax
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div><pre><code>5
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="o">=</span> <span class="mi">6</span>
<span class="nb">print</span><span class="p">(</span><span class="n">def</span><span class="p">)</span>
</code></pre></div><pre><code>  File &quot;&lt;ipython-input-51-c797890e9b85&gt;&quot;, line 1
    def = 6
        ^
SyntaxError: invalid syntax
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">d</span> <span class="o">=</span> <span class="mi">6</span>
<span class="nb">print</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</code></pre></div><pre><code>6
</code></pre>
<br>
<br>
<h3 id="13-文件编码问题">13. 文件编码问题</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data/twitter_sentiment.csv&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><pre><code>UnicodeDecodeError: 'utf-8' codec can't decode bytes in position 7-8: invalid continuation byte
UnicodeDecodeError                        Traceback (most recent call last)

&lt;ipython-input-53-f7ee81cff3e5&gt; in &lt;module&gt;
      1 import pandas as pd
      2 
----&gt; 3 df = pd.read_csv('data/twitter_sentiment.csv')
      4 df.head()
pandas\_libs\parsers.pyx in pandas._libs.parsers._string_box_utf8()
UnicodeDecodeError: 'utf-8' codec can't decode bytes in position 7-8: invalid continuation byte
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>

<span class="c1">#gbk/utf-8只能解决大部分编码问题，但不能解决全部问题</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data/twitter_sentiment.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;gbk&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

UnicodeDecodeError                        Traceback (most recent call last)

&lt;ipython-input-55-6aa161f42239&gt; in &lt;module&gt;
      2 
      3 #gbk/utf-8只能解决大部分编码问题，但不能解决全部问题
----&gt; 4 df = pd.read_csv('data/twitter_sentiment.csv', encoding='gbk')
      5 df.head()


c:\users\thunderhit\appdata\local\programs\python\python37-32\lib\site-packages\pandas\io\parsers.py in parser_f(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)
    674         )
    675 
-&gt; 1891         self._reader = parsers.TextReader(src, **kwds)
   1892         self.unnamed_cols = self._reader.unnamed_cols
   1893 
   pandas\_libs\parsers.pyx in pandas._libs.parsers.TextReader.__cinit__()
	pandas\_libs\parsers.pyx in pandas._libs.parsers.TextReader._get_header()
	pandas\_libs\parsers.pyx in pandas._libs.parsers.TextReader._tokenize_rows()
	pandas\_libs\parsers.pyx in pandas._libs.parsers.raise_parser_error()
	UnicodeDecodeError: 'gbk' codec can't decode byte 0xbd in position 10717: 	illegal multibyte sequence
</code></pre>
<p>上面的程序会提示编码错误， 尝试encoding编码参数传入utf-8、gbk，也没有解决问题。</p>
<br>
<h3 id="那怎么找到正确的编码参数呢">那怎么找到正确的编码参数呢？</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">chardet</span>

<span class="c1">#读取为二进制数据</span>
<span class="n">binary_data</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/twitter_sentiment.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

<span class="c1">#传给chardet.detect，稍等片刻</span>
<span class="n">chardet</span><span class="o">.</span><span class="n">detect</span><span class="p">(</span><span class="n">binary_data</span><span class="p">)</span>
</code></pre></div><pre><code>{'encoding': 'Windows-1252', 'confidence': 0.7291192008535122, 'language': ''}
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>


<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s1">&#39;data/twitter_sentiment.csv&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;Windows-1252&#39;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
<pre><code>.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
</code></pre>
<p></style></p>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>ItemID</th>
      <th>Sentiment</th>
      <th>SentimentText</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>0</td>
      <td>is so sad for my APL frie...</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>0</td>
      <td>I missed the New Moon trail...</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>1</td>
      <td>omg its already 7:30 :O</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4</td>
      <td>0</td>
      <td>.. Omgaga. Im sooo  im gunna CRy. I'...</td>
    </tr>
    <tr>
      <th>4</th>
      <td>5</td>
      <td>0</td>
      <td>i think mi bf is cheating on me!!!   ...</td>
    </tr>
  </tbody>
</table>
</div>
<p><br><br></p>
<h3 id="14-路径字符串写法">14. 路径字符串写法</h3>
<ul>
<li>Mac&amp;Win 推荐使用 <code>/</code> 写法</li>
<li>如果使用<code>\</code> 写法，安全起见，请换成<code>\\</code>  （Mac不支持<code>\\</code> ）</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">\n
\t
\d
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data/test.txt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</code></pre></div><pre><code>'章节设计\n\n第一部分  环境配置\n第二部分  快速入门python\n第三部分  网络爬虫\n第四部分  简单的文本分析\n第五部分  进阶文本分析'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data</span><span class="se">\t</span><span class="s1">est.txt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</code></pre></div><pre><code>---------------------------------------------------------------------------

OSError                                   Traceback (most recent call last)

&lt;ipython-input-59-d855ed58b500&gt; in &lt;module&gt;
----&gt; 1 open('data\test.txt', encoding='utf-8').read()


OSError: [Errno 22] Invalid argument: 'data\test.txt'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data</span><span class="se">\\</span><span class="s1">test.txt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</code></pre></div><pre><code>'章节设计\n\n第一部分  环境配置\n第二部分  快速入门python\n第三部分  网络爬虫\n第四部分  简单的文本分析\n第五部分  进阶文本分析'
</code></pre>
<br>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">open</span><span class="p">(</span><span class="s1">&#39;data\Test.txt&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</code></pre></div><pre><code>'章节设计\n\n第一部分  环境配置\n第二部分  快速入门python\n第三部分  网络爬虫\n第四部分  简单的文本分析\n第五部分  进阶文本分析'
</code></pre>
<br>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course2.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://textdata.cn/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
