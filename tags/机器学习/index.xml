<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>机器学习 on 大邓和他的PYTHON</title>
    <link>/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 机器学习 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 14 Oct 2021 16:40:10 +0600</lastBuildDate><atom:link href="/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SHAP机器学习模型解释库</title>
      <link>https://hidadeng.github.io/blog/shap_ml_explanation/</link>
      <pubDate>Thu, 14 Oct 2021 16:40:10 +0600</pubDate>
      
      <guid>/blog/shap_ml_explanation/</guid>
      <description>图文代码理解机器学习模型中各特征对结果的贡献</description>
      <content:encoded><![CDATA[<h2 id="代码下载">代码下载</h2>
<p><a href="SHAP.zip">点击此处下载代码</a></p>
<br>
<blockquote>
<p>原文链接 <a href="https://towardsdatascience.com/shap-explain-any-machine-learning-model-in-python-24207127cad7">https://towardsdatascience.com/shap-explain-any-machine-learning-model-in-python-24207127cad7</a></p>
</blockquote>
<h2 id="heading"></h2>
<p>想象一下，你正试图训练一个机器学习模型来预测广告是否被特定的人点击。在收到关于某人的一些信息后，模型预测某人会不会点击广告。</p>

<figure >
    
        <img src="img/%e5%9b%be1.png" />
    
    
</figure>

<p>但是为什么模型会输出这样的预测结果呢？ 每个特征对预测的贡献有多大？ 如果您能看到一个图表，显示每个特征对预测的贡献程度，如下所示，不是很好吗？</p>

<figure >
    
        <img src="img/%e6%9d%83%e9%87%8d.png" />
    
    
</figure>

<p>Shapley值就能起到特征权重测度的作用。</p>
<h2 id="shapley值是什么">Shapley值是什么？</h2>
<p>Shapley值是博弈论中使用的一种方法，它涉及公平地将收益和成本分配给在联盟中工作的行动者。
由于每个行动者对联盟的贡献是不同的，Shapley值保证每个行动者根据贡献的多少获得公平的份额。</p>

<figure >
    
        <img src="img/%e8%b4%a1%e7%8c%ae.png" />
    
    
</figure>

<h2 id="小案例">小案例</h2>
<p>Shapley值被广泛地应用于求解群体中每个工人(特征)的贡献问题。要理解Shapley值的作用，让我们想象一下贵公司刚刚做了A/B测试，他们在测试广告策略的不同组合。</p>
<p>每个策略在特定月份的收入是：</p>
<ul>
<li>无广告：150美元</li>
<li>社交媒体：300美元</li>
<li>谷歌广告：200美元</li>
<li>电子邮件营销：350美元</li>
<li>社交媒体和谷歌广告：320美元</li>
<li>社交媒体和电子邮件营销：400美元</li>
<li>谷歌广告和电子邮件营销：350美元</li>
<li>电子邮件营销，谷歌广告和社交媒体：450美元</li>
</ul>

<figure >
    
        <img src="img/%e7%ad%96%e7%95%a5%e8%90%a5%e6%94%b6.png" />
    
    
</figure>

<p>使用三则广告与不使用广告的收入相差300美元，每则广告对这一差异有多大的贡献?</p>

<figure >
    
        <img src="img/%e7%ad%96%e7%95%a5%e8%90%a5%e6%94%b6%e8%b4%a1%e7%8c%ae%e5%87%a0%e4%bd%95.png" />
    
    
</figure>

<p>我们可以通过计算每一类广告的Shapley值来计算谷歌广告对公司收入的总贡献入手，通过公式可以计算出Google广告的总贡献：</p>

<figure >
    
        <img src="img/%e5%85%ac%e5%bc%8f.png" />
    
    
</figure>

<p>让我们找到Google广告的边际贡献及其权重。</p>
<h2 id="寻找谷歌广告的边际贡献">寻找谷歌广告的边际贡献</h2>
<p>第一，我们将发现谷歌广告对以下群体的边际贡献：</p>
<ul>
<li>无广告</li>
<li>谷歌广告+社交媒体</li>
<li>谷歌广告+电子邮件营销</li>
<li>谷歌广告+电子邮件营销+社交媒体</li>
</ul>

<figure >
    
        <img src="img/%e8%be%b9%e9%99%85%e8%b4%a1%e7%8c%ae.png" />
    
    
</figure>

<p>Google广告 对 无广告 的边际贡献是：</p>

<figure >
    
        <img src="img/MC1.png" />
    
    
</figure>

<p>谷歌广告 对 谷歌广告&amp;社交媒体组合 的边际贡献是：</p>

<figure >
    
        <img src="img/MC2.png" />
    
    
</figure>

<p>谷歌广告 对 谷歌广告&amp;电子邮件营销组合 的边际贡献是：</p>

<figure >
    
        <img src="img/MC3.png" />
    
    
</figure>

<p>谷歌广告 对 谷歌广告、电子邮件营销和社交媒体组合 的边际贡献是：</p>

<figure >
    
        <img src="img/MC4.png" />
    
    
</figure>

<h2 id="发现权重">发现权重</h2>
<p>为了发现权重，我们将把不同广告策略的组合组织成如下多个层次，每个层次对应于每个组合中广告策略的数量。</p>
<p>然后根据每个层次的边数分配权重，我们看到了这一点：</p>
<ul>
<li>第一级包含3条边，因此每个边的权重为1/3</li>
<li>第二级包含6条边，因此每条边的权重将为1/6</li>
<li>第三级包含3条边，因此每条边的权重将为1/3</li>
</ul>

<figure >
    
        <img src="img/%e5%8f%91%e7%8e%b0%e6%9d%83%e9%87%8d.png" />
    
    
</figure>

<h2 id="发现google广告的总贡献">发现Google广告的总贡献</h2>
<p>根据前面的权重和边际贡献，我们已经可以找到Google广告的总贡献!</p>

<figure >
    
        <img src="img/google%e6%80%bb%e8%b4%a1%e7%8c%ae.png" />
    
    
</figure>


<figure >
    
        <img src="img/google%e5%85%ac%e5%bc%8f.png" />
    
    
</figure>

<p>酷!所以谷歌广告在使用3种广告策略与不使用广告的总收入差异中贡献了36.67美元。36.67是Google广告的Shapey值。</p>

<figure >
    
        <img src="img/otherRevenue.png" />
    
    
</figure>

<p>重复以上步骤，对于另外两种广告策略，我们可以看出：</p>
<ul>
<li>
<p>电子邮件营销贡献151.67美元</p>
</li>
<li>
<p>社交媒体贡献116.67美元</p>
</li>
<li>
<p>谷歌广告贡献36.67美元</p>

<figure >
    
        <img src="img/%e5%90%84%e7%ad%96%e7%95%a5%e8%b4%a1%e7%8c%ae.png" />
    
    
</figure>

</li>
</ul>
<p>他们共同出资300美元，用于使用3种不同类型的广告与不使用广告的区别!挺酷的，不是吗?
既然我们理解了Shapley值，那么让我们看看如何使用它来解释机器学习模型。</p>
<h2 id="shap-在python中解释机器学习模型">SHAP-在Python中解释机器学习模型</h2>
<p>SHAP是一个Python库，它使用Shapley值来解释任何机器学习模型的输出。</p>
<p>安装SHAP</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="err">!</span><span class="n">pip3</span> <span class="n">install</span> <span class="n">shap</span>

</code></pre></div><h2 id="训练模型">训练模型</h2>
<p>为了理解SHAP工作原理，我们使用Kaggle平台内的advertising广告数据集。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span> 

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s2">&#34;advertising.csv&#34;</span><span class="p">)</span>
<span class="n">df</span><span class="o">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div>
<figure >
    
        <img src="img/df.png" />
    
    
</figure>

<p>我们将建立一个机器学习模型, 该模型根据用户个人特质信息来预测其是否点击广告。</p>
<p>我们使用Patsy将DataFrame转换为一组特征和一组目标值：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">patsy</span> <span class="kn">import</span> <span class="n">dmatrices</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="n">y</span><span class="p">,</span> <span class="n">X</span> <span class="o">=</span> <span class="n">dmatrices</span><span class="p">(</span>
    <span class="s2">&#34;clicked_on_ad ~ daily_time_spent_on_site + age + area_income + daily_internet_usage  + male -1&#34;</span><span class="p">,</span>
    <span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span>
<span class="p">)</span>

<span class="n">X_frame</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">X</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="n">X</span><span class="o">.</span><span class="n">design_info</span><span class="o">.</span><span class="n">column_names</span><span class="p">)</span>


</code></pre></div><p>把数据分为测试集和训练接</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">7</span><span class="p">)</span>
</code></pre></div><p>接下来使用XGBoost训练模型，并做预测</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">xgboost</span>
<span class="n">model</span> <span class="o">=</span> <span class="n">xgboost</span><span class="o">.</span><span class="n">XGBClassifier</span><span class="p">()</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
<span class="n">y_predicted</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>
</code></pre></div><p>为了查看模型表现，我们使用F1得分</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">f1_score</span>

<span class="n">f1</span> <span class="o">=</span> <span class="n">f1_score</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_predicted</span><span class="p">)</span>
<span class="n">f1</span>
</code></pre></div><pre><code>0.9619047619047619
</code></pre>
<p>太好了!</p>
<h2 id="解释该模型">解释该模型</h2>
<p>该模型很好地预测了用户是否点击广告。但它是如何得出这样的预测的? <strong>每个特征对最终预测与平均预测的差异贡献了多少?</strong></p>
<p>注意，这个问题与我们在文章开头论述的问题非常相似。</p>
<p>因此，寻找每个特征的Shapley值可以帮助我们确定它们的贡献。得到特征i的重要性的步骤与之前类似，其中i是特征的索引：</p>
<ul>
<li>获取所有不包含特征i的子集</li>
<li>找出特征i对这些子集中每个子集的边际贡献</li>
<li>聚合所有边际贡献来计算特征i的贡献</li>
</ul>
<p>若要使用SHAP查找Shapley值，只需将训练好的模型插入shap.Explainer</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">shap</span>

<span class="n">explainer</span> <span class="o">=</span> <span class="n">shap</span><span class="o">.</span><span class="n">Explainer</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>
<span class="n">shap_values</span> <span class="o">=</span> <span class="n">explainer</span><span class="p">(</span><span class="n">X_frame</span><span class="p">)</span>
</code></pre></div><pre><code>ntree_limit is deprecated, use `iteration_range` or model slicing instead.
</code></pre>
<h2 id="shap瀑布图">SHAP瀑布图</h2>
<p>可视化第一个预测的解释：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#第一条记录是未点击</span>
<span class="n">shap</span><span class="o">.</span><span class="n">plots</span><span class="o">.</span><span class="n">waterfall</span><span class="p">(</span><span class="n">shap_values</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div>
<figure >
    
        <img src="img/output_20_0.png" />
    
    
</figure>

<p>啊哈!现在我们知道每个特征对第一次预测的贡献。对上图的解释：</p>

<figure >
    
        <img src="img/%e7%ac%ac%e4%b8%80%e6%ac%a1%e9%a2%84%e6%b5%8b%e8%b4%a1%e7%8c%ae.png" />
    
    
</figure>

<ul>
<li>蓝色条显示某一特定特征在多大程度上降低了预测的值。</li>
<li>红条显示了一个特定的特征在多大程度上增加了预测值。</li>
<li>负值意味着该人点击广告的概率小于0.5</li>
</ul>
<p>我们应该期望总贡献等于预测与均值预测的差值。我们来验证一下：</p>

<figure >
    
        <img src="img/%e6%80%bb%e8%b4%a1%e7%8c%ae%e7%ad%89%e4%ba%8e%e9%a2%84%e6%b5%8b%e4%b8%8e%e5%9d%87%e5%80%bc%e9%a2%84%e6%b5%8b%e7%9a%84%e5%b7%ae%e5%80%bc.png" />
    
    
</figure>

<p>酷!他们是平等的。</p>
<p>可视化第二个预测的解释：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1">#第二条记录也是未点击</span>
<span class="n">shap</span><span class="o">.</span><span class="n">plots</span><span class="o">.</span><span class="n">waterfall</span><span class="p">(</span><span class="n">shap_values</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</code></pre></div>
<figure >
    
        <img src="img/output_22_0.png" />
    
    
</figure>

<h2 id="shap摘要图">SHAP摘要图</h2>
<p>我们可以使用SHAP摘要图，而不是查看每个单独的实例，来可视化这些特性对多个实例的整体影响：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">shap</span><span class="o">.</span><span class="n">summary_plot</span><span class="p">(</span><span class="n">shap_values</span><span class="p">,</span> <span class="n">X</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_24_0.png" />
    
    
</figure>

<p>SHAP摘要图告诉我们数据集上最重要的特征及其影响范围。</p>
<p>从上面的情节中，我们可以对模型的预测获得一些有趣的见解：</p>
<ul>
<li>用户的 <strong>daily_internet_usage</strong> 对该用户是否点击广告的影响最大。</li>
<li>随着<strong>daily_time_spent_on_site</strong>的增加，用户点击广告的可能性降低。</li>
<li>随着<strong>area_income</strong>的增加，用户点击广告的可能性降低。</li>
<li>随着<strong>age</strong>的增长，用户更容易点击广告。</li>
<li>如果用户是<strong>male</strong>，则该用户点击广告的可能性较小。</li>
</ul>
<h2 id="shap条形图">SHAP条形图</h2>
<p>我们还可以使用SHAP条形图得到全局特征重要性图。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">shap</span><span class="o">.</span><span class="n">plots</span><span class="o">.</span><span class="n">bar</span><span class="p">(</span><span class="n">shap_values</span><span class="p">)</span>
</code></pre></div>
<figure >
    
        <img src="img/output_26_0.png" />
    
    
</figure>

<p>很酷!</p>
<h2 id="结论">结论</h2>
<p>恭喜你!您刚刚了解了Shapey值以及如何使用它来解释一个机器学习模型。希望本文将提供您使用Python来解释自己的机器学习模型的基本知识。</p>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
