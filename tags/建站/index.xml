<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>建站 on 大邓和他的PYTHON</title>
    <link>/tags/%E5%BB%BA%E7%AB%99/</link>
    <description>Recent content in 建站 on 大邓和他的PYTHON</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 29 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E5%BB%BA%E7%AB%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>blogdown包 | 使用R语言维护Hugo静态网站</title>
      <link>https://hidadeng.github.io/blog/blogdown_for_hugo_website/</link>
      <pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/blogdown_for_hugo_website/</guid>
      <description>使用「R语言」 的 blogdown &#43; hugo &#43; &#43; githubPages 搭建静态博客系统，使用用 Rstudio 专注于写作。</description>
      <content:encoded><![CDATA[


<div id="hugo" class="section level2">
<h2>Hugo</h2>
<p>Hugo是一种特别受欢迎的静态站点框架，基于Go语言开发，建站速度和上手难度都很亲民。</p>
<p><img src="img/hugo.png" /></p>
<p><br><br></p>
</div>
<div id="blogdown" class="section level2">
<h2>Blogdown</h2>
<p>而 blogdown 是 R语言的建站包， 可以在Rstudio内一边写文档笔记一边渲染出html文件。下图是Rstudio 截图</p>
<p><img src="img/Rstudio_blogdown_panel.png" /></p>
<ul>
<li><strong>Rstudio左上角</strong> 为博客文档撰写区(代码、文档、图片)</li>
<li><strong>Rstudio左下方</strong> 为命令行区域</li>
<li><strong>Rstudio右下方</strong> 为博客文档渲染效果</li>
</ul>
<p><br></p>
<p>对了， blogdown作者 <a href="https://yihui.org/en/">谢益辉</a> 是一位中国人，他同时也是 <a href="https://bookdown.org/">bookdown</a>、 <a href="https://yihui.org/tinytex/">tinytex</a> 等包的作者。 学习R语言的同学应该很熟悉的。目前很多 R语言 优秀的文档都是使用 bookdown包，比如</p>
<p><img src="img/blogdown_gallery1.png" />
<img src="img/blogdown_gallery2.png" /></p>
<p><br><br></p>
</div>
<div id="工作流程旧" class="section level2">
<h2>工作流程(旧)</h2>
<p>从21年5月起，大邓第一次使用 <a href="https://hidadeng.github.io/blog/hugo_website_test/">Hugo + Gihub Page</a> 建立个人博客站，之后又更换为 <a href="https://hidadeng.github.io/blog/blog_add_comments_function/">hugo-papermod主题；新增留言功能</a>。界面美观，代码复制很方便，适合公众号关注者浏览学习。但对大邓而言，工作流程异常繁琐</p>
<ol style="list-style-type: decimal">
<li><strong>jupyter notebook</strong> 写代码文档，测试代码可运行。</li>
<li>从 <strong>jupyter</strong> 中下载为 <strong>markdown</strong> 文档，编辑用的工具是<strong>Typora</strong>。</li>
<li><strong>Hugo</strong>命令行更新本地(电脑内)的站点仓库。</li>
<li>使用 <strong>Github Desktop</strong> 推送至<strong>Github Page</strong></li>
</ol>
<p>操作步骤中，夹杂着大量的命令行操作，我也记不住这些命令行，是单独存放在一个markdown笔记中，用的时候复制一下。命令行给大家看看</p>
<pre><code>#切换至电脑博客仓库
cd /Users/大邓/Desktop/Blog/Github

#启动本地服务，浏览器测试
hugo server -t PaperMod --buildDrafts

#生成站点，待推送至github
hugo --theme=PaperMod --baseUrl=&#39;/&#39; --buildDrafts</code></pre>
<p><br></p>
<p>总之就是复杂，最近用 R语言 发现有 <strong>blogdown</strong>包 可以将其中的步骤压缩， 主要工作集中在 <strong>Rstudio</strong> 和 <strong>Github Desktop</strong>。</p>
<p><br><br></p>
</div>
<div id="新工作流程" class="section level2">
<h2>新工作流程</h2>
<ol style="list-style-type: decimal">
<li>在 <strong>Rstudio</strong> 内新建 <strong>Rmarkdown</strong> 文档，内部可进行 R语言(或Python) 的代码撰写</li>
<li>编译 <strong>Rmarkdown文档</strong> 为 html， <strong>Github Desktop</strong> 推送至仓库，更新站点。</li>
</ol>
<p>需要用到的命令，仅仅有以下4个</p>
<pre><code>    #新建博客 .Rmd文件
    blogdown::new_post()

    #启动本地服务，一遍写文档，网页渲染效果随时可见
    blogdown::serve_site()

    #停止本地服务
    blogdown::stop_server()

    #将.Rmd文件渲染为html等站点文件
    blogdown::build_site()</code></pre>
<p><br><br></p>
</div>
<div id="本文参考资料" class="section level2">
<h2>本文参考资料</h2>
<ul>
<li><a href="https://bookdown.org/yihui/blogdown/">blogdown Docs</a></li>
<li><a href="https://themes.gohugo.io/themes/hugo-papermod/">Hugo-PaperMod</a></li>
<li><a href="https://cosx.org/2018/01/build-blog-with-blogdown-hugo-netlify-github/">用 R 语言的 blogdown+hugo+netlify+github 建博客</a></li>
</ul>
<p><br></p>
</div>
<div id="长期征稿" class="section level2">
<h2>长期征稿</h2>
<p>{{&lt; figure src=“/images/blog/call_for_paper.png” caption=“点击了解投稿” align=“center” width=“100%” link=“<a href="https://hidadeng.github.io/blog/call_for_paper/" class="uri">https://hidadeng.github.io/blog/call_for_paper/</a>”&gt;}}</p>
<p><br></p>
</div>
<div id="招募小伙伴" class="section level2">
<h2>招募小伙伴</h2>
<p>{{&lt; figure src=“/images/blog/we_need_you.png” caption=“点击加入我们” align=“center” width=“100%” link=“<a href="https://hidadeng.github.io/blog/we_need_you/" class="uri">https://hidadeng.github.io/blog/we_need_you/</a>”&gt;}}</p>
<p><br></p>
</div>
<div id="了解课程" class="section level2">
<h2>了解课程</h2>
<p>{{&lt; figure src=“/images/bg/management_data_mining_with_python_course.png” caption=“点击上方图片购买课程” align=“center” width=“100%” link=“<a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596" class="uri">https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596</a>”&gt;}}</p>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
</div>
]]></content:encoded>
    </item>
    
    <item>
      <title>TechWeekly-18 每周有趣有用的技术分享</title>
      <link>https://hidadeng.github.io/blog/techweekly18/</link>
      <pubDate>Mon, 30 May 2022 10:43:10 +0600</pubDate>
      
      <guid>/blog/techweekly18/</guid>
      <description>&lt;h2 id=&#34;svgartista&#34;&gt;svgartista&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://svgartista.net/&#34;&gt;https://svgartista.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;svg动画制作网站&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/svgartista.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;rawgraphs&#34;&gt;rawgraphs&lt;/h2&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/19-svg-generators.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://app.rawgraphs.io/&#34;&gt;https://app.rawgraphs.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;免费制作炫酷的可视化图表，在底层，该工具使用 D3.js(一个出色的 JavaScript 可视化库)，可数据进行可视化。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/intro-rawgraphs-small.mp4&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;RAWGraphs 团队提供了一系列关于如何使用该工具的视频教程。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;jiffyreader&#34;&gt;jiffyreader&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jiffyreader.com/&#34;&gt;https://www.jiffyreader.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过对单词局部位置加粗，让读者更好更快阅读英文。安装该插件后，理论上能让大脑处理速度加快10+倍。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/jiffyreader1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/jiffyreader2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;了解课程&#34;&gt;了解课程&lt;/h2&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;figure &gt;
    &lt;a href=&#34;https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596&#34;&gt;
        &lt;img src=&#34;/images/bg/management_data_mining_with_python_course.png&#34; width=&#34;100%&#34; /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;&lt;small&gt;&lt;i&gt;点击上方图片购买课程&lt;/i&gt;&lt;/small&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/management_python_course/&#34;&gt;点击进入详情页&lt;/a&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="svgartista">svgartista</h2>
<p><a href="https://svgartista.net/">https://svgartista.net/</a></p>
<p>svg动画制作网站</p>
<p><img loading="lazy" src="img/svgartista.png" alt=""  />
</p>
<br>
<h2 id="rawgraphs">rawgraphs</h2>
<p><img loading="lazy" src="img/19-svg-generators.png" alt=""  />
</p>
<p><a href="https://app.rawgraphs.io/">https://app.rawgraphs.io/</a></p>
<p>免费制作炫酷的可视化图表，在底层，该工具使用 D3.js(一个出色的 JavaScript 可视化库)，可数据进行可视化。</p>
<p><img loading="lazy" src="img/intro-rawgraphs-small.mp4" alt=""  />
</p>
<p>RAWGraphs 团队提供了一系列关于如何使用该工具的视频教程。</p>
<br>
<h2 id="jiffyreader">jiffyreader</h2>
<p><a href="https://www.jiffyreader.com/">https://www.jiffyreader.com/</a></p>
<p>通过对单词局部位置加粗，让读者更好更快阅读英文。安装该插件后，理论上能让大脑处理速度加快10+倍。</p>
<p><img loading="lazy" src="img/jiffyreader1.png" alt=""  />
</p>
<p><img loading="lazy" src="img/jiffyreader2.png" alt=""  />
</p>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>TechWeekly-17 每周有趣有用的技术分享</title>
      <link>https://hidadeng.github.io/blog/techweekly17/</link>
      <pubDate>Wed, 25 May 2022 10:43:10 +0600</pubDate>
      
      <guid>/blog/techweekly17/</guid>
      <description>&lt;h2 id=&#34;朋友圈转发截图生成工具&#34;&gt;朋友圈转发截图生成工具&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://akarin.dev/WechatMomentScreenshot/&#34;&gt;点击这里使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本工具仅可用于个人应付各类强制要求转发朋友圈的情形，请不要用于以下用途：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将生成的截图用于造谣诽谤、微商宣传等非法或令人反感的用途&lt;/li&gt;
&lt;li&gt;使用各种方式大量批量生成截图&lt;/li&gt;
&lt;li&gt;将源代码或生成的截图有偿售卖&lt;/li&gt;
&lt;li&gt;以 “关注○○，发送○○获取工具地址” 等方式为自己的公众号引流（想要推荐的话，在正文里留下地址或二维码之类的就没问题～）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/wechat.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;这个小工具是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个因为不喜欢也不想往朋友圈发某些不得不发的废文而做出来的摸鱼产物。&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;生成的截图中，文字部分能否出现表情符号？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微信中除 Emoji 之外的其它表情符号实际上是特定的文本，复制后粘贴到别处时就可以看到，在微信中则显示为表情符号。&lt;/p&gt;
&lt;p&gt;比如这个表情，从简体中文版微信中发送的实际上是[再见]，繁体中文是[再見]，英文是[Bye]。即使不选择表情符号而是手动输入[再见]、[再見]或[Bye]（任选一个输入即可，和微信的语言设置无关），发送后它们都会显示为。&lt;/p&gt;
&lt;p&gt;在这个小工具的“正文”处输入表情符号对应的文本，生成截图时也会被替换成对应的表情符号～&lt;/p&gt;
&lt;p&gt;目前仅支持简体中文、繁体中文、英文版微信的表情文本。从使用其他语言的微信发送一条带有表情的消息然后复制到这里，生成的截图中不一定会出现对应的表情符号。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;cleanmywechat&#34;&gt;CleanMyWechat&lt;/h2&gt;
&lt;p&gt;自动删除 PC 端微信自动下载的大量文件、视频、图片等数据内容，解放一年几十 G 的空间占用。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/%e7%8e%b0%e7%8a%b6.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;该工具不会删除文字的聊天记录，请放心使用。请给个 &lt;strong&gt;Star&lt;/strong&gt; 吧，非常感谢！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;现已经支持 Windows 系统中的所有微信版本。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/blackboxo/CleanMyWechat&#34;&gt;https://github.com/blackboxo/CleanMyWechat&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/run_clean_my_wechat.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;清理Mac中的微信数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同时按下command+shift+G三个键， 输入&amp;amp;回车&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/%e7%8e%b0%e7%8a%b62.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;在我的mac中，微信软件的缓存也达到7.42G。Mac的空间十分珍贵，直接删掉，怕以后数据比较难恢复，我采取的办法是转移至移动硬盘。&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;正则表达式解析&#34;&gt;正则表达式解析&lt;/h2&gt;
&lt;p&gt;可以测试正则表达式匹配效果，而且将表达式匹配功能以流程图的方式展示出来，对初学regex的小白非常友好。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://devtoolcafe.com/tools/regex#!flags=img&amp;amp;re=&#34;&gt;https://devtoolcafe.com/tools/regex#!flags=img&amp;amp;re=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/devtoolcafe.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;b站视频下载&#34;&gt;B站视频下载&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/leiurayer/downkyi&#34;&gt;https://github.com/leiurayer/downkyi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;哔哩下载姬（DownKyi）是一个简单易用的哔哩哔哩视频下载工具，具有简洁的界面，流畅的操作逻辑。哔哩下载姬可以下载几乎所有的B站视频，并输出mp4格式的文件；采用Aria下载器多线程下载，采用FFmpeg对视频进行混流、提取音视频等操作。目前&lt;strong&gt;仅支持Win&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持二维码登录&lt;/li&gt;
&lt;li&gt;支持视频、番剧、剧集、电影、课程下载&lt;/li&gt;
&lt;li&gt;支持8K、4K、HDR、杜比视界、杜比全景声下载&lt;/li&gt;
&lt;li&gt;支持用户收藏夹、订阅、稍后再看、历史记录下载&lt;/li&gt;
&lt;li&gt;支持弹幕下载、样式设置&lt;/li&gt;
&lt;li&gt;支持字幕下载&lt;/li&gt;
&lt;li&gt;支持封面下载&lt;/li&gt;
&lt;li&gt;支持自定义文件命名&lt;/li&gt;
&lt;li&gt;支持断点续传&lt;/li&gt;
&lt;li&gt;支持Aria2c&lt;/li&gt;
&lt;li&gt;支持下载历史记录保存&lt;/li&gt;
&lt;li&gt;支持av、BV互转&lt;/li&gt;
&lt;li&gt;支持弹幕发送者查询&lt;/li&gt;
&lt;li&gt;支持音视频分离&lt;/li&gt;
&lt;li&gt;支持去水印&lt;/li&gt;
&lt;li&gt;支持检查更新&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;musicn&#34;&gt;Musicn&lt;/h2&gt;
&lt;p&gt;🎵 一个下载高品质音乐的命令行工具&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zonemeen/musicn&#34;&gt;https://github.com/zonemeen/musicn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/musicn.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;exping&#34;&gt;exping&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://exping.world/&#34;&gt;https://exping.world/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;标记你的品味地图
让你的地图更有价&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;bookmark&#34;&gt;bookmark&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bookmark.style/&#34;&gt;https://www.bookmark.style/&lt;/a&gt;
将任意链接转为美观的、带二维码样式的分享卡片&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/bookmark.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;orion-浏览器httpsbrowserkagicom&#34;&gt;&lt;a href=&#34;https://browser.kagi.com/&#34;&gt;Orion 浏览器&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一种基于 Webkit 的新浏览器，只能用于 MacOS 和 iOS，但是能安装 Chrome 的插件，目前还是测试版。据说体验非常好，胜过 Safari。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;img/orion.png&#34; alt=&#34;&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;了解课程&#34;&gt;了解课程&lt;/h2&gt;
&lt;div style=&#34;text-align: center;&#34;&gt;
&lt;figure &gt;
    &lt;a href=&#34;https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596&#34;&gt;
        &lt;img src=&#34;/images/bg/management_data_mining_with_python_course.png&#34; width=&#34;100%&#34; /&gt;
    &lt;/a&gt;
    &lt;figcaption&gt;&lt;small&gt;&lt;i&gt;点击上方图片购买课程&lt;/i&gt;&lt;/small&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://hidadeng.github.io/blog/management_python_course/&#34;&gt;点击进入详情页&lt;/a&gt;&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<h2 id="朋友圈转发截图生成工具">朋友圈转发截图生成工具</h2>
<p><a href="https://akarin.dev/WechatMomentScreenshot/">点击这里使用</a></p>
<p>本工具仅可用于个人应付各类强制要求转发朋友圈的情形，请不要用于以下用途：</p>
<ul>
<li>将生成的截图用于造谣诽谤、微商宣传等非法或令人反感的用途</li>
<li>使用各种方式大量批量生成截图</li>
<li>将源代码或生成的截图有偿售卖</li>
<li>以 “关注○○，发送○○获取工具地址” 等方式为自己的公众号引流（想要推荐的话，在正文里留下地址或二维码之类的就没问题～）</li>
</ul>
<p><img loading="lazy" src="img/wechat.png" alt=""  />
</p>
<br>
<p><strong>这个小工具是什么？</strong></p>
<p>一个因为不喜欢也不想往朋友圈发某些不得不发的废文而做出来的摸鱼产物。</p>
<br>
<p><strong>生成的截图中，文字部分能否出现表情符号？</strong></p>
<p>微信中除 Emoji 之外的其它表情符号实际上是特定的文本，复制后粘贴到别处时就可以看到，在微信中则显示为表情符号。</p>
<p>比如这个表情，从简体中文版微信中发送的实际上是[再见]，繁体中文是[再見]，英文是[Bye]。即使不选择表情符号而是手动输入[再见]、[再見]或[Bye]（任选一个输入即可，和微信的语言设置无关），发送后它们都会显示为。</p>
<p>在这个小工具的“正文”处输入表情符号对应的文本，生成截图时也会被替换成对应的表情符号～</p>
<p>目前仅支持简体中文、繁体中文、英文版微信的表情文本。从使用其他语言的微信发送一条带有表情的消息然后复制到这里，生成的截图中不一定会出现对应的表情符号。</p>
<br>
<h2 id="cleanmywechat">CleanMyWechat</h2>
<p>自动删除 PC 端微信自动下载的大量文件、视频、图片等数据内容，解放一年几十 G 的空间占用。</p>
<p><img loading="lazy" src="img/%e7%8e%b0%e7%8a%b6.png" alt=""  />
</p>
<p>该工具不会删除文字的聊天记录，请放心使用。请给个 <strong>Star</strong> 吧，非常感谢！</p>
<p><strong>现已经支持 Windows 系统中的所有微信版本。</strong></p>
<p><a href="https://github.com/blackboxo/CleanMyWechat">https://github.com/blackboxo/CleanMyWechat</a></p>
<p><img loading="lazy" src="img/run_clean_my_wechat.png" alt=""  />
</p>
<br>
<p><strong>清理Mac中的微信数据</strong></p>
<p>同时按下command+shift+G三个键， 输入&amp;回车</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat
</code></pre></div><p><img loading="lazy" src="img/%e7%8e%b0%e7%8a%b62.png" alt=""  />
</p>
<p>在我的mac中，微信软件的缓存也达到7.42G。Mac的空间十分珍贵，直接删掉，怕以后数据比较难恢复，我采取的办法是转移至移动硬盘。</p>
<br>
<h2 id="正则表达式解析">正则表达式解析</h2>
<p>可以测试正则表达式匹配效果，而且将表达式匹配功能以流程图的方式展示出来，对初学regex的小白非常友好。</p>
<p><a href="https://devtoolcafe.com/tools/regex#!flags=img&amp;re=">https://devtoolcafe.com/tools/regex#!flags=img&amp;re=</a></p>
<p><img loading="lazy" src="img/devtoolcafe.png" alt=""  />
</p>
<br>
<h2 id="b站视频下载">B站视频下载</h2>
<p><a href="https://github.com/leiurayer/downkyi">https://github.com/leiurayer/downkyi</a></p>
<p>哔哩下载姬（DownKyi）是一个简单易用的哔哩哔哩视频下载工具，具有简洁的界面，流畅的操作逻辑。哔哩下载姬可以下载几乎所有的B站视频，并输出mp4格式的文件；采用Aria下载器多线程下载，采用FFmpeg对视频进行混流、提取音视频等操作。目前<strong>仅支持Win</strong></p>
<ul>
<li>支持二维码登录</li>
<li>支持视频、番剧、剧集、电影、课程下载</li>
<li>支持8K、4K、HDR、杜比视界、杜比全景声下载</li>
<li>支持用户收藏夹、订阅、稍后再看、历史记录下载</li>
<li>支持弹幕下载、样式设置</li>
<li>支持字幕下载</li>
<li>支持封面下载</li>
<li>支持自定义文件命名</li>
<li>支持断点续传</li>
<li>支持Aria2c</li>
<li>支持下载历史记录保存</li>
<li>支持av、BV互转</li>
<li>支持弹幕发送者查询</li>
<li>支持音视频分离</li>
<li>支持去水印</li>
<li>支持检查更新</li>
</ul>
<br>
<h2 id="musicn">Musicn</h2>
<p>🎵 一个下载高品质音乐的命令行工具</p>
<p><a href="https://github.com/zonemeen/musicn">https://github.com/zonemeen/musicn</a></p>
<p><img loading="lazy" src="img/musicn.gif" alt=""  />
</p>
<h2 id="exping">exping</h2>
<p><a href="https://exping.world/">https://exping.world/</a></p>
<p>标记你的品味地图
让你的地图更有价</p>
<br>
<h2 id="bookmark">bookmark</h2>
<p><a href="https://www.bookmark.style/">https://www.bookmark.style/</a>
将任意链接转为美观的、带二维码样式的分享卡片</p>
<p><img loading="lazy" src="img/bookmark.png" alt=""  />
</p>
<br>
<h2 id="orion-浏览器httpsbrowserkagicom"><a href="https://browser.kagi.com/">Orion 浏览器</a></h2>
<p>一种基于 Webkit 的新浏览器，只能用于 MacOS 和 iOS，但是能安装 Chrome 的插件，目前还是测试版。据说体验非常好，胜过 Safari。</p>
<p><img loading="lazy" src="img/orion.png" alt=""  />
</p>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>TechWeekly-16 每周有趣有用的技术分享</title>
      <link>https://hidadeng.github.io/blog/techweekly16/</link>
      <pubDate>Fri, 01 Apr 2022 10:43:10 +0600</pubDate>
      
      <guid>/blog/techweekly16/</guid>
      <description>本期TechWeekly主要是一些css、js类项目，可以起到点缀网站的效果。</description>
      <content:encoded><![CDATA[<p>本期TechWeekly主要是一些css、js类项目，可以起到点缀网站的效果。</p>
<p>建议大家如果有时间，可以了解下html/css，很简单的。如果使用Hugo这类建站框架，可以自己修改下字体颜色，以符合自己的审美。以后会考虑在这个博客站点中用到，于是整理出来本期TechWeekly。</p>
<br>
<h2 id="animatecss">Animate.css</h2>
<p><a href="https://animate.style/">https://animate.style/</a></p>
<p>CSS网页动画库</p>
<div style="text-align: center;">
<figure >
    <a href="https://animate.style/">
        <img src="img/animate.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问Animate网站</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="tabler">Tabler</h2>
<p><a href="https://github.com/tabler/tabler">https://github.com/tabler/tabler</a></p>
<p>Tabler 是基于 Bootstrap 构建的免费开源 HTML Dashboard UI Kit</p>
<div style="text-align: center;">
<figure >
    <a href="https://preview.tabler.io/">
        <img src="img/tabler.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问tabler网站</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="flowbite">Flowbite</h2>
<p><a href="https://github.com/themesberg/flowbite">https://github.com/themesberg/flowbite</a></p>
<p>使用 Tailwind CSS 构建的最受欢迎的交互式 UI 组件库</p>
<div style="text-align: center;">
<figure >
    <a href="https://flowbite.com/">
        <img src="img/flowbite.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问flowbite网站</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="sheetjs">SheetJs</h2>
<p><a href="https://github.com/SheetJS/sheetjs">https://github.com/SheetJS/sheetjs</a></p>
<ul>
<li>
<p>简化的电子表格</p>
</li>
<li>
<p>阅读、编辑和导出电子表格</p>
</li>
<li>
<p>适用于网络浏览器和服务器，</p>
</li>
<li>
<p>在 Office 365 中受 Microsoft 信任</p>
</li>
</ul>
<div style="text-align: center;">
<figure >
    <a href="https://sheetjs.com/">
        <img src="img/sheetjs.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问网站</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="d3">D3</h2>
<p><a href="https://github.com/d3/d3">https://github.com/d3/d3</a></p>
<p>D3.js 是一个 JavaScript 可视化库。 D3 能使 HTML、SVG 和 CSS 等文件将数据可视化变为现实。</p>
<div style="text-align: center;">
<figure >
    <a href="https://d3js.org/">
        <img src="img/d3.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问网站</i></small></figcaption>
</figure>
</div>
<p>下面是D3制作的样例</p>
<div style="text-align: center;">
<figure >
    <a href="https://observablehq.com/@d3/gallery">
        <img src="img/d31.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问D3的Gallery</i></small></figcaption>
</figure>
</div>
<div style="text-align: center;">
<figure >
    <a href="https://observablehq.com/@d3/gallery">
        <img src="img/d32.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问D3的Gallery</i></small></figcaption>
</figure>
</div>
<div style="text-align: center;">
<figure >
    <a href="https://observablehq.com/@d3/gallery">
        <img src="img/d33.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问D3的Gallery</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="budibase">budibase</h2>
<p><a href="https://github.com/Budibase/budibase">https://github.com/Budibase/budibase</a></p>
<p>在几分钟内构建组织内网的应用程序，支持Supports PostgreSQL, MySQL, MSSQL, MongoDB, Rest API, Docker, K8s</p>
<div style="text-align: center;">
<figure >
    <a href="https://budibase.com/">
        <img src="img/budibase.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问budibase网站</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="vitae">vitae</h2>
<p><a href="https://pkg.mitchelloharawild.com/vitae/">https://pkg.mitchelloharawild.com/vitae/</a></p>
<p>使用Rmarkdown制作个人简历</p>
<div style="text-align: center;">
<figure >
    <a href="https://pkg.mitchelloharawild.com/vitae/">
        <img src="img/vitae.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问budibase网站</i></small></figcaption>
</figure>
</div>
<br>
<h2 id="nextra">nextra</h2>
<p><a href="https://github.com/shuding/nextra">https://github.com/shuding/nextra</a></p>
<p>Nextra 是一个 Next.js 和 MDX 驱动的无代码站点生成器。1分钟即可制作出下图的静态网站。</p>
<div style="text-align: center;">
<figure >
    <a href="https://nextra.vercel.app/">
        <img src="img/nextra.png" width="100%" />
    </a>
    <figcaption><small><i>点击图片访问nextra网站</i></small></figcaption>
</figure>
</div>
<br>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>博客已更新，现支持留言功能</title>
      <link>https://hidadeng.github.io/blog/blog_add_comments_function/</link>
      <pubDate>Sat, 15 Jan 2022 13:50:10 +0600</pubDate>
      
      <guid>/blog/blog_add_comments_function/</guid>
      <description>使用utterances让hugo博客添加免费的评论功能</description>
      <content:encoded><![CDATA[<p>目前博客有以下几个功能特色</p>
<ul>
<li><a href="https://github.com/gohugoio/hugo">Hugo</a> 框架建站</li>
<li><a href="https://github.com/adityatelange/hugo-PaperMod">PaperMod</a>网站主题风格</li>
<li><a href="https://github.com/mkdocs/mkdocs">MkDocs</a> 生成技术文档</li>
<li><a href="https://github.com/utterance/utterances">utterances</a> 留言功能</li>
<li><a href="https://hidadeng.github.io/mkdocs/home/">浏览器首页</a> 学术浏览器首页</li>
</ul>
<br>
<h2 id="网站仓库">网站仓库</h2>
<p>博客的所有代码文件存储于<a href="https://github.com/hiDaDeng/hidadeng.github.io">hiDaDeng/hidadeng.github.io</a>。大家如果想爬大邓的博客，速度还是太慢，可以直接从这里下载项目。
<img loading="lazy" src="img/github.png" alt=""  />
</p>
<br>
<h2 id="主题风格">主题风格</h2>
<p>博客之前换过很多种主题，有商务风、极客风，最后发现还是简单最好。而PaperMod不止简洁，还支持标签、搜索等功能。
<img loading="lazy" src="img/%e6%a0%87%e7%ad%be.png" alt=""  />

<img loading="lazy" src="img/%e6%90%9c%e7%b4%a2.png" alt=""  />

<br></p>
<h2 id="技术文档">技术文档</h2>
<p>大邓课程培训<a href="https://hidadeng.github.io/mkdocs/python_tutorial/">Python快速入门</a>基础教程，使用MkDocs框架生成技术文档，界面如图
<img loading="lazy" src="img/python_tutorial.png" alt=""  />
</p>
<br>
<h2 id="留言功能">留言功能</h2>
<p>博客使用<a href="https://github.com/utterance/utterances">utterances</a>调用github仓库资源，用于存储评论数据。评论系统有点慢，需要先有github账户才可以使用。日常大家如果对Python感兴趣，有什么好的想法、资料，欢迎在博客中留言。
<img loading="lazy" src="img/%e7%95%99%e8%a8%80.png" alt=""  />
</p>
<br>
<h2 id="学术浏览器首页">学术浏览器首页</h2>
<p>如果你也是经管背景，对Python感兴趣，可以点击收藏该<a href="https://hidadeng.github.io/mkdocs/home/">学术首页</a></p>
<p>如果想生成自己学科的学术首页，可以点击<a href="https://hidadeng.github.io/blog/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A6%96%E9%A1%B5/">制作方法</a>查看diy详情</p>
<p><img loading="lazy" src="img/%e5%ad%a6%e6%9c%af%e6%b5%8f%e8%a7%88%e5%99%a8%e9%a6%96%e9%a1%b5.png" alt=""  />
</p>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>changedetection|自动追踪网站更新</title>
      <link>https://hidadeng.github.io/blog/changedetection/</link>
      <pubDate>Sat, 18 Dec 2021 10:43:10 +0600</pubDate>
      
      <guid>/blog/changedetection/</guid>
      <description>想知道什么时候网站有新的变动(新消息)</description>
      <content:encoded><![CDATA[<p>想知道什么时候网站有新的变动(新消息)&hellip;</p>
<ul>
<li>政府部门更新（更改通常只在他们的网站上）</li>
<li>地方政府有新闻了（变化往往只在他们的网站上）</li>
<li>当您不在他们的邮件列表中时，新软件发布、安全建议。</li>
<li>有变化的节日</li>
<li>房地产上市变化</li>
<li>来自政府网站的 COVID 相关新闻</li>
<li>检测和监控 JSON API 响应的变化</li>
<li>API 监控和警报</li>
</ul>
<p><strong>其实超级简单，一个命令即可！</strong></p>
<br>
<h2 id="安装">安装</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pip3 install changedetection.io
</code></pre></div><p>假设项目文件夹存放于桌面，在桌面新建一个<strong>monitordetection</strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#mac
changedetection.io -d desktop/monitordetection -p 5000

#win
changedetection.io -d Desktop/monitordetection -p 5000
</code></pre></div><p>然后访问 http://127.0.0.1:5000 ，您现在应该可以访问 UI。</p>

<figure >
    
        <img src="img/screen.png" width="100%" />
    
    
</figure>

<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>使用Hugo框架建立个人网站</title>
      <link>https://hidadeng.github.io/blog/hugo_website_test/</link>
      <pubDate>Thu, 13 May 2021 11:07:10 +0600</pubDate>
      
      <guid>/blog/hugo_website_test/</guid>
      <description>十几分钟建成自己的博客</description>
      <content:encoded><![CDATA[<p>在B站看到一位博主用Hugo制作个人博客的视频，感觉挺简单的，真的十几分钟就能看到云端出现自己的博客，当然了想让自己的博客更美观更炫酷，精雕细琢会花很多功夫。现在大家看到的效果，大邓用了一整天的时间，一点点修饰改动出来的。</p>

<figure >
    
        <img src="featured.jpg" width="800" />
    
    
</figure>

<br>
<br>
<h2 id="1-安装hugo">1. 安装Hugo</h2>
<p>这里以<strong>Mac</strong>为例，安装Hugo，命令行输入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">brew</span> <span class="n">install</span> <span class="n">hugo</span>

</code></pre></div><p><br><br></p>
<h2 id="2-新建hugo项目">2. 新建Hugo项目</h2>
<p>切换到桌面(我喜欢把项目放到桌面), 命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">cd</span> <span class="n">desktop</span>

</code></pre></div><p>新建一个叫做<strong>MyBlog</strong>的hugo项目文件夹，命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">hugo</span> <span class="n">new</span> <span class="n">site</span> <span class="n">MyBlog</span>

</code></pre></div><p>现在可以在桌面看到一个MyBlog文件夹，接下来切换工作目录到MyBlog</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">cd</span> <span class="n">MyBlog</span>

</code></pre></div><p>记者目前我们的命令行处于MyBlog的根目录 , 接下来下载网站主题</p>
<p><br><br></p>
<h2 id="3-academic主题下载">3. Academic主题下载</h2>
<p>Hugo有很多主题，我选择的 <a href="https://themes.gohugo.io/academic/">https://themes.gohugo.io/academic/</a>，</p>
<p>在命令行逐行执行下方命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">cd</span> <span class="n">themes</span>

<span class="n">git</span> <span class="n">clone</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">gcushen</span><span class="o">/</span><span class="n">hugo</span><span class="o">-</span><span class="n">academic</span><span class="o">.</span><span class="n">git</span>

</code></pre></div><p>我们可以在 <strong>MyBlog/themes</strong> 看到多了一个 <strong>hugo-academic文件夹，把hugo-academic改为academic</strong> ，现在网站已经建立好了</p>
<p>这里切换回项目根目录MyBlog</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">cd</span> <span class="o">..</span>

</code></pre></div><p>命令行执行pwd，检查一下目录</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">pwd</span>

</code></pre></div><p>得到</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">电脑用户名</span><span class="o">/</span><span class="n">desktop</span><span class="o">/</span><span class="n">MyBlog</span>

</code></pre></div><br>
<br>
<h2 id="4-启动本地博客">4. 启动本地博客</h2>
<p>现在我们以academic主题为例，启动博客</p>
<p>命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">hugo</span> <span class="n">server</span> <span class="o">-</span><span class="n">t</span> <span class="n">academic</span> <span class="o">--</span><span class="n">buildDrafts</span>

</code></pre></div><p>补充: t的意思是主题</p>
<p>执行后，在命令行中会提示我们</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">localhost</span><span class="p">:</span><span class="mi">1313</span><span class="o">/</span>

</code></pre></div><p>在浏览器中复制粘贴上方的链接，我们的Blog毛坯房搭建好了~</p>
<br>
<br>
<h2 id="5-在本地新建一篇文章">5. 在本地新建一篇文章</h2>
<p>依旧是MyBlog根目录，命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">hugo</span> <span class="n">new</span> <span class="n">post</span><span class="o">/</span><span class="n">first</span><span class="o">-</span><span class="n">article</span><span class="o">.</span><span class="n">md</span>

</code></pre></div><p>在MyBlog/content内新生成了一个post文件夹，并且post内有了一个first-article.md文件。</p>
<p>接下来就是在first-article.md内用markdown方式写内容即可。</p>
<p>我们测试一下现在的网站,继续回到MyBlog根目录，命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">hugo</span> <span class="n">server</span> <span class="o">-</span><span class="n">t</span> <span class="n">academic</span> <span class="o">--</span><span class="n">buildDrafts</span>

</code></pre></div><p>在浏览器中我们可以看到有First Ariticle的文章。</p>
<br>
<br>
<h2 id="6-将本地博客部署到服务器">6. 将本地博客部署到服务器</h2>
<p>在github新建一个仓库，仓库名命名方式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="o">&lt;</span><span class="n">你的github用户名</span><span class="o">&gt;.</span><span class="n">github</span><span class="o">.</span><span class="n">io</span>

</code></pre></div><p>比如我的github账号名是thunderhit，那么仓库名为</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">thunderhit</span><span class="o">.</span><span class="n">github</span><span class="o">.</span><span class="n">io</span>

</code></pre></div><p>在MyBlog根目录，命令行执行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">hugo</span> <span class="o">--</span><span class="n">theme</span><span class="o">=</span><span class="n">academic</span> <span class="o">--</span><span class="n">baseUrl</span><span class="o">=</span><span class="s1">&#39;/&#39;</span> <span class="o">--</span><span class="n">buildDrafts</span>

</code></pre></div><p><strong>注意:</strong> 主题academic, 网站地址 <code>https://hidadeng.github.io/ </code>，你们根据自己需要改成自己的仓库名</p>
<p>现在我们在MyBlog中多了一个public文件夹，其中有我们新建的文章内容。</p>
<p><strong>绑定public与github仓库</strong></p>
<p>命令行切换到public目录，初始化git</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">cd</span> <span class="n">public</span> 
<span class="n">git</span> <span class="n">init</span>
<span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
<span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s1">&#39;我的hugo博客第一次提交&#39;</span>

</code></pre></div><p><strong>把public与远程github仓库关联</strong></p>
<p>依次执行（大家的github地址略微不同，需要改动一下)</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python">
<span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">origin</span> <span class="n">git</span><span class="nd">@github</span><span class="o">.</span><span class="n">com</span><span class="p">:</span><span class="n">hidadeng</span><span class="o">/</span><span class="n">hidadeng</span><span class="o">.</span><span class="n">github</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">git</span>

<span class="n">git</span> <span class="n">push</span> <span class="o">-</span><span class="n">u</span> <span class="n">origin</span> <span class="n">master</span>

</code></pre></div><p>命令行上传完毕后，在浏览器网址栏打开链接 <a href="https://hidadeng.github.io/">https://hidadeng.github.io/</a></p>
<p>就可以看到我们自己的博客了~</p>
<p><br><br></p>
<h2 id="更多">更多</h2>
<p>如果大家想学仔细学Hugo，推荐大家看B站<strong>Up主：ianianying</strong>的视频</p>
<br>
<h2 id="了解课程">了解课程</h2>
<div style="text-align: center;">
<figure >
    <a href="https://m.qlchat.com/wechat/page/channel-intro?channelId=2000015158133596">
        <img src="/images/bg/management_data_mining_with_python_course.png" width="100%" />
    </a>
    <figcaption><small><i>点击上方图片购买课程</i></small></figcaption>
</figure>
</div>
<p><a href="https://hidadeng.github.io/blog/management_python_course/">点击进入详情页</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
